cset: moving following pidspec: 25183
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.163521893 seconds)
loading group "string"... done (took 0.447555881 seconds)
loading group "linalg"... done (took 10.021713251 seconds)
loading group "parallel"... done (took 0.298680535 seconds)
loading group "find"... done (took 1.869316568 seconds)
loading group "tuple"... done (took 1.957664044 seconds)
loading group "dates"... done (took 1.324786289 seconds)
loading group "micro"... done (took 0.453343669 seconds)
loading group "io"... done (took 0.434099816 seconds)
loading group "scalar"... done (took 45.141444669 seconds)
loading group "sparse"... done (took 12.378476895 seconds)
loading group "broadcast"... done (took 1.052786896 seconds)
loading group "union"... done (took 8.302484799 seconds)
loading group "simd"... done (took 2.043100238 seconds)
loading group "random"... done (took 8.09876383 seconds)
loading group "problem"... done (took 1.945838887 seconds)
loading group "array"... done (took 22.601682037 seconds)
loading group "misc"... done (took 0.876319627 seconds)
loading group "sort"... done (took 3.043604107 seconds)
loading group "collection"... done (took 13.932056572 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.612612914 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.112723695 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.176938207 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.173748457 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242230461 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138904175 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140496992 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099341216 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.705545352 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179393524 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.126412947 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.359080883 seconds)
done (took 6.141389763 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.23688468 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.084599136 seconds)
    (2/2) benchmarking "String"...
    done (took 0.14560538 seconds)
  done (took 1.283441858 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.090062666 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080148336 seconds)
  done (took 1.223461279 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.08165324 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.341166917 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081999646 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.479072813 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.140632553 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082767863 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.085073804 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.081382166 seconds)
  done (took 2.34509893 seconds)
done (took 6.223811563 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.378987733 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.834313616 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.47045204 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.138897272 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.278590244 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.231232527 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.203404208 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.198366376 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.103095424 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084658442 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.168220596 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.401251225 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.285856887 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.758740786 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.083629046 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.098642977 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.131251315 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.782222231 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084332334 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.132734906 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.361485564 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.11805306 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.104803405 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.144087379 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.188540629 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105511389 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161222046 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.08280531 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.685537873 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.121506637 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.204999209 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.088554413 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.155807041 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.126783004 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.176899655 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.114721042 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679947149 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.191054349 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.141378517 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.085342733 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.697796012 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.105009036 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.166908566 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.095743518 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.084993477 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.168301485 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.121523062 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.083057179 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.106673166 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082281547 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.169188224 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.481295539 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.11176932 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.181230507 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.098016891 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.702894331 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.103998784 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.257645848 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131489249 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.109994298 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.081893418 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.082239082 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154512869 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.088681334 seconds)
  done (took 19.440275304 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145467145 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136878903 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.084725329 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130528923 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101150526 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.082995317 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082916784 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084293946 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089082315 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127523715 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.103737749 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.148848504 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08157783 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081379834 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.145745719 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20131965 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.089662932 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.094786523 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085744459 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085898473 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.114512096 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08829812 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.101177695 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083502395 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.140468221 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.215758769 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115676777 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.116866722 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.082659207 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083116495 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.150266521 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132010802 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.083531966 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082280109 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122169548 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126769596 seconds)
  done (took 5.098661158 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.202120975 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105706062 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165232845 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.136146339 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115959095 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.15159916 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138335373 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.227088583 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.669458679 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.160848891 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.168585267 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.148967476 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098293296 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081823046 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086998183 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.183134799 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080932607 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.5741381 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.139352913 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112290754 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.133962065 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08403487 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.119826865 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.384649853 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085809393 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08212997 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082279607 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084833172 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.18226973 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084819344 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.584656815 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08453977 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083720692 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129179048 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213656691 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08808337 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120833305 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086101963 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083260782 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.08404122 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08359717 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081757862 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107847744 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117270743 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123251951 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.081830637 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095791063 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171209629 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081126239 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090898186 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.821617126 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.173054394 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.131155038 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094640496 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.163019517 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101877973 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085311115 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082056136 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.168919399 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.092248509 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08431954 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083462169 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082481126 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081903351 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082750229 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081976158 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.198480224 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085926416 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.101072317 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083802746 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083083998 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.363940814 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090566577 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08675367 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101924893 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081341751 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081667323 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083504745 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083258901 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082781109 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102171921 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086285697 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099404823 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144667278 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083988185 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102325768 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110054387 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083704044 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084046342 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127904942 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082107652 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081529836 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.153660935 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083407374 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081929427 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101893041 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099668751 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.132062864 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085825244 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081231818 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.171737011 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081303133 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102362642 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.087643867 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127504267 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082887131 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082641606 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087004153 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082230198 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.0838197 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144711253 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082889531 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083617706 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082459315 seconds)
  done (took 21.281278775 seconds)
done (took 46.877401751 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.346537891 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081191389 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081410406 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081477381 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.0814302 seconds)
  done (took 1.799851879 seconds)
done (took 2.899884411 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.187140614 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099364012 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095086467 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 0.096790631 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.104527796 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.097419531 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081827135 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095452299 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099424183 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111090753 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097793089 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 0.084242666 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095176815 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.097828341 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.096366179 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.079884081 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099304735 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.09656595 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093752617 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 0.080324288 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080811642 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.11400428 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082253777 seconds)
  done (took 3.393677568 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094432634 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100350794 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092515735 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093869551 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08279093 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092588818 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092754147 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099871117 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092597674 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089049424 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081031445 seconds)
  done (took 2.120369214 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094951495 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097778374 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084425642 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.092449973 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082118696 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092930113 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092232899 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095846321 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091975655 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089096733 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079638965 seconds)
  done (took 2.10085029 seconds)
done (took 8.721370139 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.436031887 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.646409192 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.147966579 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.199622674 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.25057641 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.177001235 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275825322 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.162587069 seconds)
  done (took 4.514707866 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.178881367 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086225314 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086168707 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083654796 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085758511 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082767932 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082542521 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086661695 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086121948 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090245928 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083563107 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.082826328 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082101056 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100787661 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084722116 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08450369 seconds)
  done (took 2.623855637 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.13627093 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118633622 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.085638657 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.086480311 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087327288 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.088171422 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.089614979 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.085646479 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083469257 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.084872409 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089602954 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.085166396 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.084989918 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.101630369 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.086618397 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105922331 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084157139 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.086742397 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104288496 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.087324316 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.086312122 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.084002826 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085214175 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.085432164 seconds)
  done (took 3.403461561 seconds)
done (took 11.652826884 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.100329813 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082513583 seconds)
  done (took 1.291419871 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.158901562 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.15115916 seconds)
  done (took 1.426537478 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.088611669 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081007458 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.085678637 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.083678154 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081025911 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080572527 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084826129 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081232393 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081739547 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081228897 seconds)
  done (took 1.952154492 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086734987 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.084178866 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.084761245 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.144128545 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.083194536 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080574008 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081869491 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.081209211 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081373639 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080498635 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.081609793 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.090557394 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.081030923 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.1046661 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.081697008 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083044374 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.082869967 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.082116123 seconds)
  done (took 2.698210191 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083477044 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.081833424 seconds)
  done (took 1.288271424 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081919837 seconds)
    (2/7) benchmarking "second"...
    done (took 0.081433251 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082439516 seconds)
    (4/7) benchmarking "year"...
    done (took 0.08129209 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080607155 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08016578 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079859427 seconds)
  done (took 1.689689097 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.436401127 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.197719621 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.285873974 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.082160043 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.09804659 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.299389559 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.081315479 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.081601546 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086682998 seconds)
  done (took 2.806247801 seconds)
done (took 14.273714204 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094217801 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.160905102 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.470472816 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.102933884 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.08134085 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.147605804 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.183492668 seconds)
done (took 2.374125143 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.248404767 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.135861427 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.106378689 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082127104 seconds)
  done (took 1.691456356 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.085285553 seconds)
    (2/2) benchmarking "read"...
    done (took 0.08919518 seconds)
  done (took 1.30419317 seconds)
done (took 4.128526124 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083403543 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.114812936 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081481192 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080579107 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.080573414 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081551025 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.080911553 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081102681 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081066084 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080877492 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082962976 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081136667 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.080599274 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080318949 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080558811 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09876446 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080946961 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080509665 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080857248 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080344937 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081291858 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083837248 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080439058 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080928683 seconds)
  done (took 3.164522921 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082988596 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.081911306 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.08172739 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.081289263 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082201063 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.081723975 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081456289 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081042168 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.0839996 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081171198 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081155946 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08204362 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08175692 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.080969967 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080474336 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.080322395 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096343681 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081096811 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080204448 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082972844 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.080207737 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080934682 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.081134188 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080191637 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.080550886 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081044596 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.080351106 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.080674928 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080759196 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.081578428 seconds)
  done (took 3.592397565 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090043733 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.079390254 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081254108 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083526923 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081150962 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080645323 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078556808 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081450379 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082494235 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.081681267 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08220466 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.084304897 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.081868478 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08123206 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081372368 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08171625 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.099373527 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.082433594 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081659303 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08238208 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.08205956 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080949858 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.0848782 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081986364 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080397956 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078620892 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08101249 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081353836 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081231591 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081009394 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.081878515 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081704088 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098491414 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086264958 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082350011 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.083248462 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082204995 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078582215 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082854707 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078977533 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078588515 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.080962878 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081498482 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.082613035 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08278083 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081380448 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081077638 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081370859 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081552563 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09960185 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080790433 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.081196459 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081892909 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082134074 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082328958 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081231811 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081018192 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078823324 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08134264 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081920489 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.081168729 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07875197 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.081141557 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081564557 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085328971 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.099549828 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.084259371 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081492456 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081426794 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082674974 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.083011068 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08501585 seconds)
  done (took 7.096461905 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08337225 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08173191 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081789844 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.080655193 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081004498 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082905856 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081894109 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080960803 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081306898 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08134933 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080731636 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080783522 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081155453 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08120841 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0811099 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082382919 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099356912 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081463847 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080870065 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081348548 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081042405 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081466767 seconds)
  done (took 2.946152775 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084144683 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086362308 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.08231908 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083688991 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085768672 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085366765 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.081936991 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084257676 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081878649 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081985743 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08172793 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08176097 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083518476 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083304649 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081626809 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083473811 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100850957 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083743537 seconds)
  done (took 2.654787858 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.084124024 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.082448586 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.081916567 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.081719008 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081494911 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081255495 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081117824 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081419997 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.080959513 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.083587687 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.080941757 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080495133 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.081511414 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081214544 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081425845 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081329406 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096988175 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081601588 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081160519 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081290023 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081324993 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084172203 seconds)
  done (took 2.951798759 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083778475 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.081944128 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082201681 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082326806 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081968284 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082043636 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.081845365 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082512884 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085481551 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081454699 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083895368 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081705847 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085452664 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081606084 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.081627181 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081578715 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097291323 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082284246 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081991887 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082402369 seconds)
  done (took 2.805849386 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.140688322 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085353756 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084792327 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083244935 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083768524 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083665897 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083119093 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083326051 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08366219 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083188034 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08352539 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0835648 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085840714 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083562685 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101559088 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08386309 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083290816 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083168143 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083818566 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083603175 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084474737 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083323532 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083114014 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085616369 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084305364 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083296256 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083251239 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083254205 seconds)
  done (took 3.564239188 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082894348 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081821902 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081875426 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.081475641 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08112858 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081680235 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083520088 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.081631048 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081034996 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081182399 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081161096 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.080954339 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081047072 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.080932086 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080824698 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.080640825 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098036926 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083983771 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081961581 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081352466 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081757553 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080869291 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081096857 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082153139 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081559847 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081155822 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081555285 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081269277 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083115803 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083814406 seconds)
  done (took 3.61456819 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087784337 seconds)
    (2/2) benchmarking "in"...
    done (took 0.085123921 seconds)
  done (took 1.320237913 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.084958526 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082646918 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082281008 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083301241 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082417736 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081811569 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081607252 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084033632 seconds)
  done (took 1.80841601 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.14527536 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.155518514 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083222199 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.088736322 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.155607359 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.150499254 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116097566 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083726834 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086573324 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084470066 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.14899383 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083885341 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.087144821 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086235362 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.086979761 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089107972 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081944474 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087304043 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101761851 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083324364 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084435472 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090993437 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087861265 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.085964538 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084819656 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10142846 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08809309 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086452167 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08604652 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.087457386 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085921514 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.083925709 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.086731292 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083251202 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101889953 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.156823632 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090766296 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087042293 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096839916 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083880666 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087918545 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082211159 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087441934 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089073349 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088288689 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083602176 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083364412 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.101373887 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084287525 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085920416 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.082721611 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085010324 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.082229381 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088764224 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090551045 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089547394 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083534801 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086189161 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084645517 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089003367 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086189501 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085724873 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088188149 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102817515 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088863216 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089791805 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087000288 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.082383248 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.084023616 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082229455 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091688201 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110087255 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089664489 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083482927 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083621863 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082603058 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089266194 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083684104 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103942938 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.085162611 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083974047 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085730462 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088132249 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085283651 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086346961 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.08526699 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082932383 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08543234 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084238226 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091446724 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083012712 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081769135 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083997744 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.086622527 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.101361043 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084392194 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083647794 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086446257 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.08403202 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084067552 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083437214 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08713679 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.089906932 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08434748 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084313534 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.087144538 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.148133806 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086497974 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109848124 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.087955691 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084027761 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087168427 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088197144 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.082230527 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08604452 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083496378 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083716972 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.085525769 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083354136 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084485233 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088747705 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090102652 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084325569 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081980397 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105730942 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084274248 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084476767 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.085656501 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083873017 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.082964057 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.0825188 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089021561 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085774164 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088221154 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084998808 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086657706 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.082688906 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082976166 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084994234 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.088584077 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104673588 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08701948 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089246 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087481079 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084319739 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086856921 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085468358 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084362617 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086054068 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083467561 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.082270689 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08510803 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086711238 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083636138 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087657364 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08413331 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086579021 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10182922 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084493352 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08527876 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084746653 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084757464 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083643226 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084628885 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.087782357 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085336332 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082340783 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082806171 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.084451099 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.084337099 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083369924 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08485035 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086211122 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101956301 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082552709 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083963128 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08975394 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091785837 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088138786 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084320257 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.085884366 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.087395801 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08387313 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088245031 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083656177 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084563384 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085268325 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089071963 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086607536 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102555994 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086205724 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.084911209 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088433982 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08797033 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084232448 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083133391 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084792545 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085005024 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090191059 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085078854 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083574863 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084005427 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087440742 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084815141 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086730702 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101762805 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084107776 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084518032 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.087127327 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.086912345 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084365653 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.088106689 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086949006 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082371389 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085760837 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083354764 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.08699006 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082741277 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084511684 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085787474 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086679249 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102099525 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.092334057 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082695999 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08908133 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089486982 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.0875184 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084405191 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083463299 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085997126 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086319619 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088973767 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085019347 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08716341 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08743974 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084404947 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085055692 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.105701796 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.084272534 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.082891473 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.086339917 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083994302 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.090220629 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084176532 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08499532 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087986029 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085042526 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088097636 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.082842034 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086539929 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083871771 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083519703 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083484026 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088277605 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105857899 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085756612 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.086226797 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084570752 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.084694443 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087516312 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084183296 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.08412532 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084450234 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086828826 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086397214 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08843721 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084642454 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.083991238 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084741247 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082767068 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104837852 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08522446 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087172806 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086091662 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084648202 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086363769 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086848996 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084703876 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084556202 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084148399 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084745872 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087534891 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087153544 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08623362 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08721141 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083451527 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108393307 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084620976 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089720174 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086436206 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082798839 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.085106903 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086894645 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.084983803 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086144912 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084397328 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086172098 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086471359 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087033717 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085568932 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084437815 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.087842598 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086668494 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106868993 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087909443 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088151477 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086492974 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084829094 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086884057 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08458713 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087272019 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084795278 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086827066 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087130381 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086647304 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088433756 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08451001 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086916416 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085215468 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.102940081 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085141418 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085241264 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083662889 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087074526 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084510257 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088109992 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084763052 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08461077 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084901608 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082590537 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.086460128 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087958624 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084987056 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.086708793 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085619693 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106633463 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086865469 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083582537 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084969633 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083586534 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084781596 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089922397 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087093533 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.088031223 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084532089 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084785906 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083309657 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084455001 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084777683 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.086757883 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082800011 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105272985 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088393309 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087272072 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085219886 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088706841 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084967818 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086901173 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08481587 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084093248 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085350417 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083962478 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085089433 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085208857 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089951239 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084464263 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085289661 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.10508944 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084929473 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08446721 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086000106 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085600626 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086388038 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089542032 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085232566 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088432261 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085388127 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083392561 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085893615 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084939531 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085015256 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085240233 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08623429 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10576374 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085566708 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.087902412 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087668149 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087837146 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085821315 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083637951 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08458229 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084299071 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083956546 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084842137 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084828151 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090047904 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085188836 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086905134 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08497428 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084340954 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107918614 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085567989 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084937688 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08635428 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088118159 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087774701 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.088937973 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086255943 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090501452 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084885312 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086813562 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086536665 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085269948 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.085698041 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087822844 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085132245 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105641053 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085437952 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08639604 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087632003 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084880365 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090504632 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085222698 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08536431 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08525319 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083387293 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084435556 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085638136 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086213785 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087521794 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08975983 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083483112 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102688455 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085885806 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085985353 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087384536 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088961211 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085888519 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087785568 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084225651 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084711779 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090507803 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08653052 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087673205 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.085847588 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088190851 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08588613 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088370707 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084899073 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104990179 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087767094 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089059472 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089567645 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085822413 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08687868 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088525406 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085164485 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087278288 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087620036 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.087127997 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08425098 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085691305 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085589723 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090857334 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085364148 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104597824 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086623403 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08742535 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086695574 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086078295 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085193327 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087055996 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084453228 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088290093 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087734636 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085712671 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083433811 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086032321 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085583084 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08785194 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086267739 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102277644 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086888348 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.088647962 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085105901 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088353041 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085227555 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.083995856 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.084158315 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086144659 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085619077 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088411103 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.087670622 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085090624 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085361361 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08467351 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089174184 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088336871 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10547182 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084494867 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.084356446 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085547885 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08612688 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.08724651 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084864733 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085676978 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088376451 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087220667 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084468193 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08606057 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083830927 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087560613 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086777336 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085547981 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107353009 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088833774 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090247891 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085482128 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.086207157 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085304314 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085085897 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08844236 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08531176 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086352386 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089457418 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088532504 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085355524 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085752639 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087307935 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088028484 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.104716257 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086186608 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086014041 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088525686 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089884835 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086272947 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089833846 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087790401 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.084847125 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085442968 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085856673 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089456453 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085191826 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084477118 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085847856 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085400154 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085217926 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.106247421 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085546833 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086982411 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.088656726 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088884932 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086209669 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086472408 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086569137 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08394679 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085923281 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.088234771 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085278167 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085474117 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086173775 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088877255 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087875083 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106173656 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086548203 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.086552053 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.08453223 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086854203 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088615312 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089026197 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.083906217 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085776503 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085473031 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088891905 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08848703 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086120765 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088575454 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087971052 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088784902 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103783554 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088789028 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086571166 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090296972 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086240679 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088524044 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088856636 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09013847 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086811204 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085366932 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089424396 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.090026541 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086177918 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.088142791 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.08472147 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.08763517 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084749746 seconds)
  done (took 53.662376814 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10391504 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086607932 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084841136 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084310801 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08487983 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085259053 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084241163 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08464098 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084323973 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084341928 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084647209 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086792327 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084804375 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084825533 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085764235 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084942471 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104026163 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.086271634 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085338245 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084607894 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085103315 seconds)
  done (took 3.035501065 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.086375935 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.086631834 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085381964 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084605926 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084881094 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.084738426 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0848607 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084391173 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084623757 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084043528 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084379138 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084006459 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087657778 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.08477381 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084376088 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08399977 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10320665 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085020336 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.084753167 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.085258357 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084547411 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084224026 seconds)
  done (took 3.094174241 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088254773 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.088027978 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086340196 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.085020374 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086254134 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.08459606 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086003804 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.084833084 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086618898 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.086698639 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.086436444 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.086325124 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088089394 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.084989988 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.085674253 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.08431528 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105815921 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086412167 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08689694 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.084687799 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086079862 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.085015475 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.084647009 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.089485284 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086108987 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086458743 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.084689525 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086120221 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.086556824 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086381328 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.084521634 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.087047334 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104206775 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086677455 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089173923 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086184793 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086038018 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.085058009 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.085520611 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086090528 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.08571467 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086282812 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.087169137 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.084694492 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.084651651 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088726701 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086564604 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.085202921 seconds)
  done (took 5.383534403 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087782694 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.120381678 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084991511 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.11939246 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085680424 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.085370668 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.084445543 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.118490537 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086565408 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084693928 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084995142 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.084631673 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085303984 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.084221716 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104192965 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085826205 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085073339 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086739421 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.084889735 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087827786 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.085890682 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.08474404 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.085220817 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08483848 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.084622145 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084661528 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084812076 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.08529877 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084820958 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.086427643 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.087490378 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105252512 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08506816 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.085272466 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084776236 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.084577636 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084569508 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084690514 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.084317207 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084732843 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085269126 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087976133 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.085553653 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085156003 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085558901 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.084662033 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085017702 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085702311 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.105657521 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08520488 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.08489551 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08649872 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08726991 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085648877 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.085206005 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.085480599 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085853816 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085490749 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.085088445 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.085220624 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.085072396 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086222001 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085045068 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.084824613 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.105705001 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085627897 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.085391165 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08484928 seconds)
  done (took 7.307694974 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087452481 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085078991 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.0852532 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084890472 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08500913 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084991608 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084882147 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086646189 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085772643 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.084788961 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085023045 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085149948 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085735325 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086014259 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084970659 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084882361 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104079682 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08548216 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087485554 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086013161 seconds)
  done (took 2.948773957 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088989861 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087783413 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.113513141 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085453781 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085731996 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.085644716 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085781984 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085304824 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086192035 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087461547 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08555774 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085592434 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085705817 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085986196 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084877632 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086130805 seconds)
  done (took 2.626011297 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.089643494 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.08720668 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.163123242 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086346925 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.087629286 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.088235824 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.084858488 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.085407182 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085109791 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.092645416 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08489938 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.084960238 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.096008457 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.106903342 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.085577407 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087749031 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.086135465 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085950122 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085746892 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.164766065 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.086437088 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086056364 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085201182 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088854443 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086281607 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.085354089 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088238832 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107106186 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.089531872 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.08605949 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087455432 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.085690366 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085963628 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085263482 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086626582 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085370166 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.085581336 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087035509 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.0853189 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085101763 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085250806 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.085209964 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085444542 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106247997 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.086209521 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.08621139 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.085931292 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.085857404 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.090577899 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08650892 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.086555728 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087245435 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085535809 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.085506147 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.085577333 seconds)
  done (took 6.207695684 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089718379 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.086006434 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086889531 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.086341304 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088181381 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.085994421 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08676352 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08987471 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085811551 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086564121 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085825934 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089178954 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086274099 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085411467 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086375807 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087880224 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.105092978 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086482741 seconds)
  done (took 2.814592904 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088590592 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.086035167 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.086162319 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08582107 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085948854 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085832359 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085993627 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085750449 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087904975 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085920946 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086533492 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.084963561 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085158631 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085362821 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085131686 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086005337 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.104322904 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0853291 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0862385 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088485164 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085844398 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085982437 seconds)
  done (took 3.14249166 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.098983998 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.151940254 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.096583827 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.160975888 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.087879981 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.08795711 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.094730761 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.088918649 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.102456926 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.108521362 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.088437512 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.087816031 seconds)
  done (took 2.485965159 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088530828 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085840283 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086651243 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085938314 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0856304 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086157945 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086400038 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088424478 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08651387 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086485404 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08575786 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086299399 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086681179 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085793615 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086460491 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086034342 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106866237 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086544137 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089265298 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086660894 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087401844 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085630288 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086693587 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086411025 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086575414 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086632586 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085874022 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086724823 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086255398 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088620902 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086075911 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086654381 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08599506 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106344134 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086149904 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086390968 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08652716 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086525448 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086566197 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086756212 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089533288 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086506117 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086392871 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085955683 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086213902 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086469152 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086173728 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087564905 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086597183 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106506665 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087130859 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089678562 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086292647 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0867682 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08732774 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08642998 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087373201 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088529484 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086827164 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087452249 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087248635 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086929575 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086496603 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089909178 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086853694 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086574546 seconds)
  done (took 7.025273351 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09000994 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087184904 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086648824 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087433779 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08739497 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086672226 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08738479 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086803074 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088908486 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08695053 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086556633 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087019724 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086903797 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086368275 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086761975 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08690433 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105931742 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086909876 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087151452 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088787057 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086573103 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086772131 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087631251 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087611555 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086948856 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087007224 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087245769 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086999143 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086892718 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087466128 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090293953 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088210637 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08743394 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107075872 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087362939 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087272122 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086661641 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086840278 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086612631 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087727074 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087694266 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089359734 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087613384 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086981177 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087275268 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087280032 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087760624 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086974656 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087884424 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107837571 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087726426 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087468626 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090233654 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088007783 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087579811 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087263646 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087182055 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08783042 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087477404 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087028 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08712959 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088773492 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086616248 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089944582 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086592953 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087594459 seconds)
  done (took 7.074180162 seconds)
done (took 143.456741141 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.159068115 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.183407108 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.237140996 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.148052282 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.136101449 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118600022 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088246062 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.088300594 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.09066577 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.106600567 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087970069 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.088556758 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.139786676 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.187778485 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.088409858 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.121058822 seconds)
  done (took 3.298820586 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.179296224 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.259141 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101828485 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.089909999 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093224628 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.087389237 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087991651 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116551476 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.111923821 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.088629853 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106048633 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088624705 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.089227495 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087574594 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.090628191 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087674691 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.08894624 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087558486 seconds)
  done (took 3.185977433 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108116854 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.129193361 seconds)
  done (took 1.484214098 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.114388491 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.121632459 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.259909807 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116462084 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.103061357 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096555441 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118515674 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.098256784 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.182926951 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.088666281 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.089016378 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.089287758 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105405444 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.08826185 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095891002 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.089338289 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108872341 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.088513011 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.087835049 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088646518 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10768154 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088920539 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.087358335 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.10766002 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.154448979 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.088379305 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088575675 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090189251 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.088353489 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.087576004 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.088549091 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088152859 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.088691913 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.088086168 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.089669564 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.088982005 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.089075229 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.087936706 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11092452 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089089406 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.088533634 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.088356189 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.091575771 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.090288709 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088656663 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.089581805 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089133424 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088311516 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.088123521 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.092359022 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.087699343 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.088231933 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.088402266 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.090096392 seconds)
  done (took 6.621320424 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.495666284 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.124248625 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089509879 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.542877481 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091435436 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091507936 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.4735821 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111882627 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.196165328 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.509338059 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104054189 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.088875904 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102609806 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.196140016 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.14240744 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.221080138 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.385202938 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11319134 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113572389 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101800975 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0884129 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091536 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091666248 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.68841715 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.088175132 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090243073 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.088186446 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.088547621 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.100347306 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092115599 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090181079 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.104179347 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.205918128 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.118953927 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088452286 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089220168 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089485688 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.098787512 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.173886341 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.101182192 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.16602704 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088655526 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089219818 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.088962015 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090617974 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088808904 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.090156064 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.103914355 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.101251614 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109058495 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.091803025 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088622253 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.089450817 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090706117 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09087073 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.222582223 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.22494217 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090231561 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.089558335 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.090766525 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.172303269 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096594201 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101418041 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.105121202 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.098524611 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109916358 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.041106534 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100894442 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090066793 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.088659286 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.088581695 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0884699 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.090917923 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.148885108 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.667411555 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.089304821 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.089077 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089653899 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.164659662 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091136259 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091123383 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.118540749 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089436108 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092212717 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089621588 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088653265 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.101454986 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.185334442 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.08867431 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088468777 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.088647578 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.098474991 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.088145557 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.184953963 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.092982596 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.090337926 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.175625855 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108232017 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.092152236 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100737732 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.089327104 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.101330481 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089807079 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093181241 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.088559186 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.093196637 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.097570475 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.094806895 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088558348 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.088574465 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.100396509 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094974446 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.088340964 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.123055265 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.689151688 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.099679372 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091467415 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.09556778 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08904464 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.100003618 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088898215 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.174484215 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091184395 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099291313 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090609414 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090324591 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.089590157 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.091429362 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094114505 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110351782 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.088898519 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092381011 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.195509263 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.098447325 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.088448293 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.170439039 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.170559778 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.089027558 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.10476131 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.090951257 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.105095276 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093205807 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.08867293 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090532721 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.039818202 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111787643 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090450019 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088657087 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17213016 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089488656 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097415627 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08957555 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088548893 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.041325726 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.092886312 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.090320781 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.096810888 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091478289 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.088812676 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089009256 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.088438147 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.113400421 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.102871983 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088850586 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088807046 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08995398 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.097985905 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.088506784 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.089875891 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.089549319 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090282064 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.090615334 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090569844 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095913396 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.10213654 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.090494549 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.091033032 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.866873871 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109687759 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.090127501 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.102768653 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089855413 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.19013325 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09117008 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.099866334 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.097639196 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089356875 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.223326491 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.098532771 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.171501232 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.092953254 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10268207 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088328373 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.088394062 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.112110831 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090158977 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.08834076 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.090733021 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.089620619 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.088340278 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.143177365 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089572495 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.195887917 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088617631 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.102084667 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090606408 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088733851 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.190886321 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089685999 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092359763 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.110479088 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090010754 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090821909 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.858228229 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090694009 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.091543275 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090675939 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.090958241 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.09861548 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088742779 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.088502009 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088284536 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.09146734 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.175553093 seconds)
  done (took 39.878879274 seconds)
done (took 55.71241194 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.165795973 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.143127275 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180200292 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110915172 seconds)
  done (took 1.939963058 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176913578 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106674276 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.166315019 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087908874 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.16743443 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088032917 seconds)
  done (took 2.067108898 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.123209929 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.107443994 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.105228769 seconds)
  done (took 1.614139876 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.159364871 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.151404372 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.411416191 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.330715619 seconds)
  done (took 2.42237912 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209666268 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090300995 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.090016359 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.166782093 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.172187298 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.125732909 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092563197 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.098797736 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.095922839 seconds)
  done (took 2.45825374 seconds)
done (took 11.772817572 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.17799942 seconds)
    (2/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.127635829 seconds)
    (3/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.160445949 seconds)
    (4/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.510600096 seconds)
    (5/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.139010546 seconds)
    (6/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.141921061 seconds)
    (7/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.107859808 seconds)
    (8/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.254290266 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.18514682 seconds)
    (10/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.158461912 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.092977888 seconds)
    (12/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.16149859 seconds)
    (13/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.109136302 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.297221652 seconds)
    (15/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.212940582 seconds)
    (16/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.133923335 seconds)
    (17/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.229898017 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.10836342 seconds)
    (19/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.24742195 seconds)
    (20/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.144339762 seconds)
    (21/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088026653 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.170222068 seconds)
    (23/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.212914516 seconds)
    (24/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.250046735 seconds)
    (25/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.165248876 seconds)
    (26/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.20061193 seconds)
    (27/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.163941852 seconds)
    (28/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.164595349 seconds)
    (29/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.190566232 seconds)
    (30/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.150701716 seconds)
    (31/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.149338403 seconds)
    (32/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.091672445 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.100352351 seconds)
    (34/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.215072536 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087792607 seconds)
    (36/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.089895146 seconds)
    (37/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093100709 seconds)
    (38/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.216067543 seconds)
    (39/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.150964716 seconds)
    (40/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.157605577 seconds)
    (41/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104253427 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.192952295 seconds)
    (43/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.177272997 seconds)
    (44/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.19361119 seconds)
    (45/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.08968196 seconds)
    (46/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092827239 seconds)
    (47/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.114829418 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090504912 seconds)
    (49/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088598951 seconds)
    (50/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.197164242 seconds)
    (51/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.194037321 seconds)
    (52/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.115591001 seconds)
    (53/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.133177113 seconds)
    (54/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.102157882 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.09141956 seconds)
    (56/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.102499851 seconds)
    (57/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.129350467 seconds)
    (58/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.089299697 seconds)
    (59/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091974843 seconds)
    (60/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.114636497 seconds)
    (61/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.096935587 seconds)
    (62/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089035422 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089344268 seconds)
    (64/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.137200956 seconds)
    (65/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.089012112 seconds)
    (66/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091517673 seconds)
    (67/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.090857186 seconds)
    (68/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.168420748 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.102994481 seconds)
    (70/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.088971981 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.104527152 seconds)
    (72/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091383535 seconds)
    (73/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.150905912 seconds)
    (74/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094197668 seconds)
    (75/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.162174929 seconds)
    (76/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091595011 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.100692786 seconds)
    (78/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.135909612 seconds)
    (79/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091586892 seconds)
    (80/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088483972 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.170231643 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11989778 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10729261 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.0981712 seconds)
    (85/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.107329944 seconds)
    (86/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.156823682 seconds)
    (87/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093732386 seconds)
    (88/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.148047229 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09558448 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.098763161 seconds)
    (91/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.090514247 seconds)
    (92/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.099160977 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.242755222 seconds)
    (94/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.155033705 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.1439979 seconds)
    (96/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.089399954 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08933959 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09525167 seconds)
    (99/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.090055439 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.088845017 seconds)
    (101/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.08989224 seconds)
    (102/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.155226111 seconds)
    (103/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.125295378 seconds)
    (104/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.089627958 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.108320979 seconds)
    (106/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.176298597 seconds)
    (107/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.109735659 seconds)
    (108/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.089904628 seconds)
    (109/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.142238071 seconds)
    (110/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.193605027 seconds)
    (111/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.089590322 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103019542 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111504783 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.118322916 seconds)
    (115/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.130579551 seconds)
    (116/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089716875 seconds)
    (117/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104985561 seconds)
    (118/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.091406499 seconds)
    (119/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093357973 seconds)
    (120/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.101364983 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.092869197 seconds)
    (122/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.091281366 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.08833505 seconds)
    (124/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.091414559 seconds)
    (125/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.142511834 seconds)
    (126/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.223537928 seconds)
    (127/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.088408051 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089966721 seconds)
    (129/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.088319346 seconds)
    (130/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091158018 seconds)
    (131/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.104134832 seconds)
    (132/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.134943542 seconds)
    (133/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.130368636 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.092045854 seconds)
    (135/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.088212293 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089269877 seconds)
    (137/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.091656873 seconds)
    (138/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.107061036 seconds)
    (139/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110965651 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090335509 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090231688 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099983182 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097938523 seconds)
    (144/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.147093065 seconds)
    (145/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.08881409 seconds)
    (146/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.090599125 seconds)
    (147/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.111036288 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.088332049 seconds)
    (149/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.088079375 seconds)
    (150/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.102096522 seconds)
    (151/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.090290648 seconds)
    (152/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.090930864 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089652085 seconds)
    (154/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.135821246 seconds)
    (155/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.102750477 seconds)
    (156/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.092783089 seconds)
    (157/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090396707 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091494227 seconds)
    (159/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.144393178 seconds)
    (160/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.089205397 seconds)
    (161/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090114293 seconds)
    (162/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.090668896 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089651703 seconds)
    (164/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.092609967 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08929199 seconds)
    (166/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.092120222 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091285421 seconds)
    (168/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.169362269 seconds)
    (169/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.091859973 seconds)
    (170/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.09219972 seconds)
    (171/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.099766869 seconds)
    (172/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.088373432 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099965874 seconds)
    (174/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.09162632 seconds)
    (175/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089224757 seconds)
    (176/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.092278054 seconds)
    (177/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.106132845 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089624913 seconds)
    (179/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.108374272 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098759165 seconds)
    (181/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.088875989 seconds)
    (182/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090923689 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112599561 seconds)
    (184/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.091211004 seconds)
    (185/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.100616428 seconds)
    (186/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.092076662 seconds)
    (187/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.092518889 seconds)
    (188/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.092641949 seconds)
    (189/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.092000218 seconds)
    (190/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.103099809 seconds)
    (191/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.092530116 seconds)
    (192/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091311778 seconds)
  done (took 24.843560451 seconds)
done (took 26.122786455 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1694083 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.117822899 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098011826 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.098193143 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.162394014 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116371686 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.107378248 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.098996497 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122004615 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090036041 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090403803 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.102067891 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098466356 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.166903087 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.101029874 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.092698364 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.090112272 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.101335236 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.103172725 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103759525 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.185882656 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093764422 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.098616543 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.089884135 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.163063171 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093816556 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.096937741 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106604118 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.104636145 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.089682045 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.129570529 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.089823361 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.104593343 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.103513606 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091882803 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.089065319 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091736861 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.094393071 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08920315 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091907813 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101639942 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.089586829 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.097545291 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.090079409 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089390408 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112180734 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092572375 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.101920922 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089702476 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.109005073 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096368159 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.103482385 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089761162 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089876374 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08936914 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090071458 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.098621617 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092907532 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102333039 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091988979 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.114797145 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093915073 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.090271701 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092187966 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08894188 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.0901954 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.089464961 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.089560042 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089002804 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094294802 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091887023 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088537185 seconds)
done (took 8.678548135 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.096575914 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.107063675 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090136439 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.163498321 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.148495136 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.090726558 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.089977872 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089884155 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.096670304 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.088937692 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.11289585 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094503009 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.089927103 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.090504738 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.089850155 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094751735 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088449694 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091580358 seconds)
  done (took 3.114649822 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.102963632 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.110122582 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100887643 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.101075854 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.093737164 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08936438 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089529433 seconds)
  done (took 2.006504097 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092517353 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.175099768 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.161249458 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.159964191 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.189272494 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.164315233 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090690743 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.101027518 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.092135743 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.172760839 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.19986001 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090307638 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.094360348 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.162632187 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091035851 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.155035699 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090404178 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090309966 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.182030094 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093741827 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.103078247 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.098253277 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.09034876 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.168847104 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090191129 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092294117 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091555012 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09234495 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.116563312 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.195095824 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.096692526 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090605122 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.166110201 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092095941 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.166014918 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09225069 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.19050626 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.094065252 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.094507648 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090354626 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.092532535 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.152950437 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089913812 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093957775 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091935655 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.199875287 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090264784 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.169912264 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090858077 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.090070499 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.093801355 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090540612 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.093718161 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090189532 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.199577468 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092682132 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.157397695 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.156034729 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.168485138 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.180040079 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092072106 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.170488928 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.160212309 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.093758319 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090521819 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.090049322 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.180692663 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08929147 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.094236178 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.152120012 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089988906 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.16015842 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.187705819 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.094646156 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.091248106 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.094417384 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090929236 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.161220567 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090174855 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091783027 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156887693 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.08916454 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.115376417 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09027575 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.089951788 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.094249213 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092627363 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089387813 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.158235679 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.157561297 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090676666 seconds)
  done (took 12.355342147 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094449702 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090209688 seconds)
  done (took 1.534037436 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100497744 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.089737361 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.099508955 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.090282722 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.098366023 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.171476526 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.171820634 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090095355 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.094549417 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.119727519 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.172269623 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.173938466 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.171705537 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.090899578 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.196320928 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.092409494 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.173758594 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.089689459 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.096782475 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090818892 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.094909026 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.090412544 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.091004906 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.178374844 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.090429581 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.090319352 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093956009 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.096541902 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.097303213 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.09097386 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.091016399 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.090676078 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.091218203 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.090607408 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.172458454 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.115545091 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090388974 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.093216296 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090279578 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.09112993 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.174947876 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090654456 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.090633887 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.090261282 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.090553873 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.090945023 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.090307944 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.090953021 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.199978185 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09126801 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.090882554 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.090540167 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.090712649 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.090905153 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.09088043 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091400013 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.091439731 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.174395047 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.091943465 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.117633835 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090616568 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09081152 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09084148 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.091524768 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.091046142 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.091234027 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.091937427 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.091775824 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091313913 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.090457556 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.093135908 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.090785344 seconds)
  done (took 9.067125678 seconds)
done (took 29.396350878 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.08940781 seconds)
  done (took 2.426039674 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.633826384 seconds)
  done (took 1.972334061 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.712578798 seconds)
  done (took 9.082637043 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.36086113 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.281066859 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.853071094 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.127972567 seconds)
  done (took 2.962146657 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.131901388 seconds)
  done (took 2.493274511 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.229538023 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.18809783 seconds)
  done (took 1.761967243 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.779071949 seconds)
  done (took 2.140523261 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.297540551 seconds)
  done (took 2.640659864 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.191366706 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155179153 seconds)
  done (took 1.709405413 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.52114684 seconds)
  done (took 1.886827774 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.734355247 seconds)
  done (took 9.104234478 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226348536 seconds)
  done (took 1.587978882 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.256888673 seconds)
  done (took 1.6247988 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.116787008 seconds)
  done (took 3.485862928 seconds)
done (took 46.236204687 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101789987 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.104374003 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101995434 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.099187508 seconds)
  done (took 1.758354113 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10168041 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.096178807 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.096760858 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.095251816 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.097358735 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095751964 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.093937699 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.095250038 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098881438 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095581457 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.095092514 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095373537 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.095891022 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.094381268 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.090615555 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.118825717 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.0970795 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095217021 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.094187553 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097883556 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.091005378 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09539689 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.095673131 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096447489 seconds)
  done (took 3.692006389 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101907773 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.097000558 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095963187 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.095521862 seconds)
  done (took 1.764686016 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10491687 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.102555734 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.103771015 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.09886216 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.101448225 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.100498399 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.094230126 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091129346 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093378827 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.098994838 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.102654949 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096704016 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.101616739 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.101400131 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.124186629 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.090836513 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09892083 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.101434136 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099071479 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.09943846 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096937966 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099916323 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091281202 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094107939 seconds)
  done (took 3.760741075 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.164593725 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.102882911 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.114705601 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.117920516 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.09146201 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.116877028 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.113700427 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.090880092 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.098151664 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.090742453 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.09122766 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.093255696 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.140065919 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.100278952 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.091130025 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.090680798 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.090867459 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.098601275 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.144194369 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.090904658 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.09988072 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.103323261 seconds)
  done (took 3.717177328 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105066865 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.095961564 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091237311 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.0915427 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.102790955 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09805144 seconds)
  done (took 1.968241724 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09886771 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.093809831 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093697699 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.091751082 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095076356 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094858029 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091304463 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.093018145 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093062023 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.092057547 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091289111 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090987944 seconds)
  done (took 2.501104277 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205979662 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.111139926 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.115178452 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091597195 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097310668 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091522078 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103531771 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093709993 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092437003 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.091421326 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091890818 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093264756 seconds)
  done (took 2.662927409 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144584624 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096760087 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17442539 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.446507504 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107745537 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148612882 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.378748319 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139198977 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.125261605 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105832723 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125396924 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107757359 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140060499 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133959637 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106315358 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.363950417 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144784575 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13978012 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109191262 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137422415 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120392831 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156735841 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129978763 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110101076 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132506315 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10903024 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095092809 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099213729 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115250924 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117291248 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114399951 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136792876 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103152208 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129283857 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108299167 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114749393 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175513739 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126543431 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.225247952 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.126727738 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139295815 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104667323 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122664958 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13720493 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101639932 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133988887 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105013609 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122203194 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103564144 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108247473 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123365712 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118301889 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137563581 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106369259 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393170058 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099726077 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108688613 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159285307 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133232806 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130899476 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124875606 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09671505 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135706532 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151330415 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121452713 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105495565 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.110150756 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091120135 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150900499 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134129193 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119226135 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149591424 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.13309577 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104031103 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144823588 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116152123 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13960668 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121515684 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119502431 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095777687 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113986185 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123810616 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101696176 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.1623308 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09667037 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136572843 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100956323 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.295387152 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12732581 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138089856 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111620343 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116115273 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123735545 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138125549 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110706491 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109940243 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.109226127 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141549594 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0969708 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111684018 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133589988 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.095246915 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137188159 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100141537 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119562083 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.126407972 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113202228 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123881709 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.106218716 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153406691 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108481156 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.119324574 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119169517 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127264273 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099739965 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102054462 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12801015 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123740014 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.127916691 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119924086 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127226595 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.135397803 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101124306 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101370192 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173329498 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128281393 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128672254 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102090631 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10001344 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.122129629 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125636009 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110856472 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119045665 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099831124 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114556504 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149608832 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097883414 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105811633 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128409218 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120599502 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100304233 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130025524 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101308338 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110186971 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.116625569 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103554166 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13697768 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122101418 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121681066 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104301289 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103620487 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131090635 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100855045 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12431232 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113930867 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094360844 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.143329749 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127003645 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099240126 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167352858 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115105088 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166297437 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120155718 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100051803 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167295454 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098075649 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.097874013 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100304467 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116292339 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136586842 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.123431406 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138919089 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.111069351 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115370986 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135461595 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113616036 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.124988783 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111034684 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.102139658 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124046408 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143051523 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096836408 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092337162 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.097480852 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107251666 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09724902 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103910903 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116380498 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114519603 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161831364 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123080173 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103388213 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127348401 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.095434028 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112917065 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120237188 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105817703 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.120011362 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152685205 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128146667 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100387187 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104861886 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09682626 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096515917 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.098109508 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114585675 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103810104 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100159034 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101164075 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154575603 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117922828 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109539317 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163864509 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114910183 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135004601 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098057627 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.137405403 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110870864 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12524077 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.171098607 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100158829 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.111632693 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125559698 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103600037 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133020012 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144529213 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122433353 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124800168 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.126370219 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098939935 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104913676 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149810964 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100124417 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108515409 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102301095 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101253872 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103624704 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.127669805 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094767889 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121001518 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109120739 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109197222 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.131679208 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10863723 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099566079 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100796316 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125548953 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132005207 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.116308158 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11776746 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111994115 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107336546 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107444546 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136352377 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097709579 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.41505878 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121750538 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118186184 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099688738 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100507504 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128030109 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13316275 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10837864 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167365042 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101830693 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121609697 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123876577 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.101064675 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100192393 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135777336 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110034173 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122283641 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.09225195 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114737545 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.133449606 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121022402 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13261859 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124008101 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11993575 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117005983 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116157222 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103616094 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131808207 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118137703 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139840694 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.122226474 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.106401177 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167652403 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100467461 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097477238 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.092576533 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191338591 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100602446 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119580615 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.138930938 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165287322 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124218708 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150227271 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108964186 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097269537 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143730937 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108917009 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162955315 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100949869 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101249318 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124654074 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.157039963 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099485399 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148979757 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.424980653 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11242417 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11247955 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.137218849 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.396225172 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099875099 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099854461 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107749184 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13756289 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.097069244 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.14566002 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124226018 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10301818 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10801028 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099600369 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160148756 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129179449 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101731431 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114859573 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.100850092 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111582257 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106943143 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137619858 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109914677 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111607577 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108248679 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126078377 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.116140114 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.096726663 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119451022 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119477978 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121495784 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132793217 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104763944 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167712849 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098843032 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107311541 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098736406 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091789301 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141747556 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.139924831 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1256169 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113661874 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118475347 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101462894 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092734905 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103554922 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120339514 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102591098 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099624647 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119814937 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101002352 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146209296 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122776212 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100478013 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121109872 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101149062 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092077749 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100753429 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103615973 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100757508 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164033762 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114718179 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.093733787 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113789933 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102451228 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112929818 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106226024 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101524101 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 15.511675863 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12318202 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1282709 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115810078 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134580039 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108650299 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146273503 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121395392 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111434034 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100468277 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102631344 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.225216415 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107540775 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116610317 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099485239 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103337864 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133698776 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09320991 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109750799 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12004148 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13118187 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.100635218 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120226604 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106486309 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.101159516 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132494669 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127532733 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116676234 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145850254 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169171279 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10147292 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121234595 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110779504 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098075339 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.111109145 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113778905 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135421625 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103155015 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.12610748 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103666094 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122783297 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099432286 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118018784 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121214097 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120316326 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118813038 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.093293078 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119311718 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100175745 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14560286 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093722784 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.10391414 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124315625 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101912697 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.097548869 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122581004 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104525098 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.119706376 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093504935 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.161707217 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128704674 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097021055 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099292093 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395656206 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119075312 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195508595 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.125029039 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102013988 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132140208 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109588286 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.118313694 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124113265 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.093173637 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100272019 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.092535449 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.230110266 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119333202 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123926721 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137412714 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106504559 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171835154 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.104806533 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.265322744 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108927562 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122816222 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.141814452 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.097044538 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104422988 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099598628 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10373921 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162898676 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125497405 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.121438289 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.102301112 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093479411 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.100113544 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100591417 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109243335 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105334066 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122553318 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129362187 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.113304748 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102475233 seconds)
  done (took 76.70488297 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.147265002 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129339322 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.143711302 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.213859523 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160052484 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.275186735 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231701412 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243500405 seconds)
  done (took 3.014840571 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.101844849 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.116848551 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.114739041 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.095068689 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.118027968 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.296123932 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.135274521 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.094696285 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.136781606 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.0964826 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.123397919 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.35690529 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.094375896 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.120074232 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.096753255 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.094704564 seconds)
  done (took 3.650042101 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.574107774 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.348910591 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.801774213 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.240783982 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.407459784 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.116932033 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.54593766 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095617802 seconds)
  done (took 10.60291816 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.13340008 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122181314 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.208742143 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.222187085 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.130101958 seconds)
  done (took 2.288034157 seconds)
done (took 119.439589736 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102889125 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.100562695 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103360642 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.100704414 seconds)
  done (took 1.862700679 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.152444103 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.094450212 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096709039 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.100484034 seconds)
  done (took 1.920333673 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.389527972 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.122936137 seconds)
  done (took 2.026184463 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.130207043 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.117390354 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.121107593 seconds)
  done (took 1.851313327 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111457082 seconds)
  done (took 1.594165201 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.104663281 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.10006999 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.167944616 seconds)
  done (took 1.854481159 seconds)
done (took 12.587761362 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.20233959 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.945943531 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.404948438 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143809155 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.695253385 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384271478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.369041468 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120859086 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.105439124 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095274267 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.095457732 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677409186 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.345280604 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.869431068 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.377034249 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.872417598 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674381628 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095455064 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094905614 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12048534 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.341023107 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095146315 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094659817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098195763 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675914209 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.394580389 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095428539 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.866967523 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095959117 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095061963 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381077567 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096056209 seconds)
  done (took 20.482972792 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131773626 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117742095 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.102276017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096186788 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.095281572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097304395 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098624894 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095761821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111009702 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096367384 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.096821553 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095111887 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123229966 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098806067 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11072574 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095858572 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095756478 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095557722 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095714792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095979767 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.098674525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095481716 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096326061 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095292827 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097697606 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130700661 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095884087 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096268999 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096213657 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095423428 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097291657 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095634591 seconds)
  done (took 4.726136103 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141516651 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131914849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.100520889 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128835688 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123007112 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098127536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150677428 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096142772 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112863061 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120649478 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09654784 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096021164 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112188121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096955088 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114227306 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096504948 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095948016 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095717778 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096194057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095748269 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.099893494 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121807825 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09579665 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095730377 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09682771 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108319785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095830462 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096618888 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095940438 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095406937 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098005855 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09618701 seconds)
  done (took 4.887098614 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099578154 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.10500591 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.128435806 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.129214291 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097398712 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.095336158 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.095274608 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095039047 seconds)
  done (took 2.337189697 seconds)
done (took 33.918899788 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.111253143 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10639579 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115434558 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.105621952 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.160980056 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.094828216 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.105708861 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.097198865 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102605677 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.107685948 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.122484406 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.096535836 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.106558366 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098804523 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.161784886 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.104390117 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.162521284 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189777483 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.098812533 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104121896 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.095341363 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.162385397 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09810113 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096355036 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.15766893 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126736182 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.098968385 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.098325176 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098156511 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.100311933 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.162208032 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098320202 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.096044346 seconds)
  done (took 5.313750542 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.168772833 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.094442524 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.095656079 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.094924164 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.094470939 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 0.094418731 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.167023467 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.096502187 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.094573751 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120807127 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.094571467 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 0.180106257 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 0.095307847 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.095449969 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 0.097207721 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.091566459 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.094407129 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.096839008 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.168122503 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 0.124202148 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 0.09641714 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096312547 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 0.090988009 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.094653332 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.185768803 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.090853401 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 0.094732018 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 0.094693985 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 0.09512746 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.094083431 seconds)
  done (took 4.796432241 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105678872 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.114736723 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113377724 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 0.117323803 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.095906047 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095429494 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 0.109837875 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105165933 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 0.096082668 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13353219 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.096264698 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102081064 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.097875197 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.096357753 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 0.133111223 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 0.106829185 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.110094074 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094925544 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.105982788 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.146250918 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.103887613 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.103737341 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 0.105752697 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 0.100590368 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.101782568 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 0.108295767 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116117559 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 0.096277042 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 0.095689484 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 0.131309199 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 0.095577705 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097347443 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 0.119842608 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.110546308 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.096241994 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.100000547 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.105735168 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.096878571 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104033444 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 0.107325883 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 0.099000594 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 0.096303488 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.116655809 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 0.096903716 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.125592622 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 0.095937189 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.108197714 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 0.106812597 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 0.107209532 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 0.097301845 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 0.118047582 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096627769 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 0.096621663 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.100672327 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 0.096826565 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099020052 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 0.117196283 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.105693574 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127094834 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 0.09699613 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 0.097048513 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.097183897 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 0.117014224 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 0.107291586 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.097245007 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.111270017 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 0.098315477 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 0.095302638 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.099030831 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096821448 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110701899 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.09681214 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.102837366 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 0.124982838 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 0.117191629 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 0.095008572 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 0.096964909 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.098255597 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.095020711 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 0.102416519 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103673373 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103151013 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 0.097098797 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097189164 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 0.096699206 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.096785717 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 0.094608768 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 0.097791474 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 0.096950292 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 0.123508496 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 0.096737055 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095910159 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.095278262 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.097344762 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.097002243 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.09494228 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.100606519 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.096539491 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 0.096804512 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 0.098559007 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.104558148 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 0.119166583 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 0.097671195 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.102059459 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 0.10151106 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.124027574 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.116861697 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.095465397 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.096626959 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 0.108604911 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 0.098869654 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 0.097774118 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.104688307 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097001941 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 0.096411762 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.09647416 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123481015 seconds)
  done (took 13.70660722 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 0.172058938 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.225275725 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 0.273009504 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.237411687 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 0.181351104 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.128242562 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.274968837 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.105716824 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.225806714 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.103157494 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 0.116566405 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.25360968 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 0.109456598 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.250229372 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 0.09985294 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15157135 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.118741594 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 0.096283488 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.1063692 seconds)
  done (took 4.748136921 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.1002722 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.111498476 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 0.09698499 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096183558 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.096913845 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.097174766 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.104283542 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 0.100183487 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095745223 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 0.098565718 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.109382865 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.10474189 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 0.100372466 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.112653956 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101302182 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122368863 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.095453089 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.103850429 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 0.100049277 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114007623 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105721538 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.101087463 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097247984 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09628595 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 0.094926283 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.094966586 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 0.095789242 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096192942 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.095883508 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103436484 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.100942704 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 0.122811024 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101781435 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.100510724 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098691475 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.10218012 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.096247892 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101145059 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 0.175503306 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.095945218 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.099059373 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.095380504 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.09923722 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095977131 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.123599247 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.10542224 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 0.095302003 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096259312 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.10474073 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095937513 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096359531 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099109947 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 0.097924421 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096354073 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098058024 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 0.095844168 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.095505042 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 0.107781499 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.096589131 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096025212 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 0.126290721 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 0.104218617 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 0.097690885 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.098310724 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098073498 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 0.100485276 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098235758 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.105948241 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.095511631 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09633292 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 0.094758601 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.102228936 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 0.095611044 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096406448 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.098504721 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102018434 seconds)
  done (took 9.289163716 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100847646 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 0.10653829 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 0.109210389 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 0.09982638 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105485203 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095999224 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 0.107204338 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.110359773 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.108587001 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099326859 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108435088 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 0.098641136 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 0.109559533 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 0.103414686 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 0.131794501 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 0.105649359 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 0.106536674 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 0.099551892 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 0.102424827 seconds)
  done (took 3.566277953 seconds)
done (took 42.912418567 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.558727441 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.733311919 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.529599551 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.530926768 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.535900872 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.534413827 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.527650685 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.529287352 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.001762239 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.533171473 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.528368205 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.527556397 seconds)
done (took 32.596146304 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.783812171 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.533032899 seconds)
    (2/2) benchmarking "String"...
    done (took 1.533097358 seconds)
  done (took 4.879174043 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.531725848 seconds)
    (2/2) benchmarking "String"...
    done (took 1.53367095 seconds)
  done (took 4.590348312 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.528042229 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.533476458 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.534215732 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.700787518 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.562266007 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.528380993 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.532517452 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.541972599 seconds)
  done (took 19.458659119 seconds)
done (took 35.768759727 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.583235199 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.714421749 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.79450367 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.534330573 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.53301094 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.528166442 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.528610391 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.550347351 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.534113016 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.528194028 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.903633225 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.796206703 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.535982512 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.92764291 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.527844793 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.545804865 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.529193982 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.764706404 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.529838716 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.579462482 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.531552134 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.536087689 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.546775206 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.55106869 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.531741148 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.539697286 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.544742 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.528504484 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.712388781 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.537557426 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.577745064 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.53074285 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.553667585 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.532544519 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.531117105 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.533218122 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.720298429 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.52923875 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.539303089 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.539248242 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.719872704 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.531319394 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.527971332 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.534218903 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.52804574 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.588168201 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.561353485 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.91410752 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.530580867 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.530256192 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.60662176 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.916591441 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.530711795 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.541381264 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.539758238 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.751143571 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.545789845 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.568278515 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.551407843 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.54531168 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.528761946 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.528087699 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.572181072 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.535861463 seconds)
  done (took 165.369983621 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.52761187 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.527817312 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.527678244 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.530350559 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.527605517 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.531509763 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.528570147 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.527203096 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.528581401 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.554248648 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.529503672 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.530886666 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.52749571 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.494694866 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.528221602 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.550044172 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.528209107 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.528504553 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.531479882 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.52766838 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.536410024 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.530793229 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.531443389 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.529467937 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.561563501 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.602419841 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.537497227 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.538627818 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.528257208 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.528428412 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.558903171 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.53185385 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.058615376 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.386824392 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.533134179 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.552432118 seconds)
  done (took 92.159582051 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.529109424 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.527276454 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.528406089 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.555510517 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.527887812 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.027577308 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.030109719 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.496796509 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.640148422 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.951078501 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.679341088 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.679422484 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.529218611 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.615036937 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.542740459 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.527724271 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.5281046 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.57653205 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.553827485 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.528280059 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.527764673 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.019498023 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.542288471 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.631515274 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.689652544 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.528497781 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.558476594 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.961675023 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.528971004 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.556265414 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.916686346 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.556927718 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.530619565 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.780266466 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.599037207 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.637379184 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.52999694 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.556006442 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.528015256 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.8011138 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.528189265 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.529467725 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.530886979 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.104520302 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.528100578 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.027726648 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.528488095 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.431181896 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.528648563 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.528586574 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.407791574 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.073908435 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.52713224 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.527128266 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.53042733 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.527359924 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.52776519 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.555399091 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.591778537 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.6858776 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.526424205 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.529920643 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.532054804 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.555881449 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.527320092 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.526555445 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.548554203 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.59068755 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.287638121 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.014853077 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.528958351 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 22.124264578 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.620638009 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.643398075 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.529840369 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.527543716 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.527032926 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.526660882 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.633376282 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.52896285 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.896323713 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.691638771 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.531764002 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.678522433 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.620149917 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.528730796 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.793852027 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.527823468 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.527476398 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.155974916 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.620153277 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.529621034 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.529863887 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.527383416 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.527174195 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.897585912 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.030081019 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.703970283 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.527108339 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.527061185 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.502003622 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.537498612 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.892755831 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.029211455 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.088355897 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.529066721 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.634641293 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.691593181 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.530884169 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.526548277 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.675595932 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.527949076 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.587683039 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.530118758 seconds)
  done (took 406.791745287 seconds)
done (took 665.844433904 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.527547541 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.534664468 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.532072386 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.539774467 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.538829422 seconds)
  done (took 14.196300364 seconds)
done (took 15.718221575 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.756760621 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.758591933 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.593970022 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 1.56073999 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.653849883 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.705199655 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.568365504 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.757894101 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.759496541 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.707747607 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.55546746 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 1.576660897 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.654738706 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.652544385 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.755037274 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.601272725 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.758201858 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.75698941 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.653288088 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 1.6032549 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.572113835 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.760167273 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.554643624 seconds)
  done (took 39.810110261 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.892291559 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.898733779 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.5847016 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.890202899 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.570997241 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.890991509 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.754681613 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.759081764 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.751808705 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.593974561 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.547394147 seconds)
  done (took 20.670827542 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.841276526 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.853224265 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.587036522 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.841276942 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.566074776 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.875674981 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.728258604 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.734255565 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.724014594 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.55620536 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.54810849 seconds)
  done (took 20.389157087 seconds)
done (took 82.403755867 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.563493926 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.613837138 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.545718302 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.54682115 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.543899517 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.546205836 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.546870392 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.544413496 seconds)
  done (took 13.984650164 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.541485823 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.543410279 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.545454685 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.542189254 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.543417362 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.540755548 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.544367572 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.543770527 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.54347902 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.544204476 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.542393766 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.54328109 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.544339257 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.541825733 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.543861164 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.542572733 seconds)
  done (took 26.225501888 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.545029409 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.540552074 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.541261379 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.541535652 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.541825489 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.542086298 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.543167537 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.542924649 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.54403611 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.544100772 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.543512584 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.5427643 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.543834722 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.542498919 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.543444093 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.549941623 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.54457071 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.542535963 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.548514018 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.542605147 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.541986466 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.545516421 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.542424789 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.543517175 seconds)
  done (took 38.578786359 seconds)
done (took 80.320875706 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.537060837 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.548392217 seconds)
  done (took 6.619348571 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.942638822 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.993691933 seconds)
  done (took 5.470915838 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.545059653 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.54252336 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.54637383 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.543352258 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.543608867 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.541926691 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.544326982 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.543839378 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.54283067 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.544185697 seconds)
  done (took 16.973465962 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.540318501 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.543518854 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.54517322 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.544740427 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.544893047 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.54293862 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.54301169 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.542297006 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.544602888 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.542104374 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.543451845 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.543597096 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.543494415 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.541603325 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.542070005 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.54388033 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.5432076 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.545811973 seconds)
  done (took 29.316138694 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.561043582 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.568072166 seconds)
  done (took 4.662021233 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.675904388 seconds)
    (2/7) benchmarking "second"...
    done (took 1.586354197 seconds)
    (3/7) benchmarking "month"...
    done (took 1.652266824 seconds)
    (4/7) benchmarking "year"...
    done (took 1.643862488 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.588720829 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.574891786 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.587481584 seconds)
  done (took 12.843265425 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.544239066 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.789895886 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.930049129 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.2970017 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.5440837 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.548874753 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.289680171 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.546797071 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.550299824 seconds)
  done (took 17.576273202 seconds)
done (took 94.994266402 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.53863986 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.538550506 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.549484329 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.542431313 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.946617511 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.57787204 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.542689954 seconds)
done (took 18.771543009 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.542802934 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.549842934 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.5461635 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.540482821 seconds)
  done (took 11.712131941 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.485293536 seconds)
    (2/2) benchmarking "read"...
    done (took 1.799774798 seconds)
  done (took 5.816308703 seconds)
done (took 19.06204693 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.546404438 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.546119819 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.544977222 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.542853673 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.543550651 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.544170974 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.54464462 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.542922615 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.546716385 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.545220602 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.546258851 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.544809953 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.544641719 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.542798917 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.544134317 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.544806829 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.542702469 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.543745551 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.542863267 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.542941012 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.542814765 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.543111894 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.542305132 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.54477186 seconds)
  done (took 38.595472285 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.546444398 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.543885416 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.544865702 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.542677284 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.544467327 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.543787475 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.545477347 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.542549596 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.544764376 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.54628811 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.544523691 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.543623869 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.542630873 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.544273001 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.543837755 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.544288415 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.54612776 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.544054012 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.543958173 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.543666608 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.544665547 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.543856115 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.543674636 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.544417412 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.543116375 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.542223752 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.544755599 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.544936748 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.5433009 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.543273841 seconds)
  done (took 47.858846255 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.547949364 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.550306355 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.542896385 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.544258993 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.543807129 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.542472066 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.541028109 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.544793621 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.54386638 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.542965335 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.542820976 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.541128601 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.54450385 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.541290358 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.542284125 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.544517817 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.542125979 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.544148498 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.54210559 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.544514748 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.546073443 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.543218154 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.542711953 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.544133099 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.544583189 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.541608709 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.542892604 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.544010417 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.542496652 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.543897937 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.542865091 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.544627323 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.542967171 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.545455198 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.544215536 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.543303612 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.547400338 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.550677232 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.542129363 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.543707429 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.544872056 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.543201823 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.543179453 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.542804173 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.545363281 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.543139588 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.545047773 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.541787959 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.544358656 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.542673015 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.543174233 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.54467156 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.542228777 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.544973288 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.543665073 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.543516693 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.543265125 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.544637611 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.545158697 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.543101299 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.543926461 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.542979146 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.542442583 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.54676961 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.545091036 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.54422402 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.544435073 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.542802502 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.545772399 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.542285248 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.542951193 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.543358071 seconds)
  done (took 112.696013152 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.543104171 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.544144429 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.544012445 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.543079344 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.544285011 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.544962291 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.543595489 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.543698541 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.543022722 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.544299703 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.546255928 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.54299222 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.543660718 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.544256465 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.543425942 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.543323663 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.543366157 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.543960117 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.544947315 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.545021496 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.543410196 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.546195276 seconds)
  done (took 35.504435811 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.544118132 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.546644654 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.543258882 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.545179318 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.54799003 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.546390428 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.54415413 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.545553416 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.542214704 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.54382148 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.542418684 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.54330015 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.54447013 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.543105127 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.544437605 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.546047604 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.544509186 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.547057987 seconds)
  done (took 29.338847163 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.542981144 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.545743904 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.546699955 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.543082883 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.544210821 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.544310021 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.544799198 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.545143556 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.544290191 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.543167404 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.54397199 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.545234483 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.54502216 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.545290049 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.544144094 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.544777908 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.545300542 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.54550406 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.544778177 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.543617781 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.544202407 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.544992987 seconds)
  done (took 35.517081014 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.545338565 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.546204147 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.544290785 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.545312673 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.544420132 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.54592401 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.545790693 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.547316217 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.551071477 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.550122103 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.546924116 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.544914512 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.545890163 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.544860009 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.543022352 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.544328543 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.543876303 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.542767773 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.544053497 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.5438793 seconds)
  done (took 32.44565029 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.544055109 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.546186317 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.546951591 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.546388193 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.543438212 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.547168983 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.546641405 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.544991719 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.544542713 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.54696813 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.545614034 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.544849556 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.544408671 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.543140532 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.54444523 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.546102417 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.544924194 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.545269275 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.54420649 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.544809532 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.545716414 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.544950851 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.544906345 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.546029719 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.546309768 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.545807613 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.544188636 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.544305733 seconds)
  done (took 44.803516325 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.545180628 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.544895327 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.543923335 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.544927382 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.543792023 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.544356082 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.543711907 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.545384222 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.548918488 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.544631451 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.54640366 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.542239113 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.543956493 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.543576638 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.543306214 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.543659221 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.544036159 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.543351918 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.544938435 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.544313172 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.545250914 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.543521049 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.545024849 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.543104811 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.544765175 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.545459039 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.545640948 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.543262204 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.54434662 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.543958437 seconds)
  done (took 47.868387794 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.601587666 seconds)
    (2/2) benchmarking "in"...
    done (took 1.613644252 seconds)
  done (took 4.750406047 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.542424936 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.546781118 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.545458774 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.543986654 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.544529778 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.544096742 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.54587254 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.542980238 seconds)
  done (took 13.890562819 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.547378561 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.544333628 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.545497415 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.543463147 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.545661757 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.546885144 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.556029409 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.548901595 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.546788009 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.546442529 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.54738935 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.549993807 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.548396998 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.546790931 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.546135028 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.551804225 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.54558869 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.545276136 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.544995239 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.542683327 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.544992023 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.546746458 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.551257029 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.547840313 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.544840213 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.555499966 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.554084067 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.547633441 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.545277521 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.553162341 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.547476698 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.544887239 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.54400939 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.543285568 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.544240562 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.545363857 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.554433895 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.551851865 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.554282252 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.54768427 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.545741664 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.546118384 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.548189174 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.550098164 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.549158215 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.546912675 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.546763882 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.543873323 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.546158181 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.547488686 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.547788069 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.544012373 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.544237466 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.552012412 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.550208808 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.556406012 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.551688051 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.548771905 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.549978403 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.552760448 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.567172798 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.558142721 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.549926405 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.547969899 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.554283861 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.558733727 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.555118709 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.551142682 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.545084637 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.545822486 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.555026233 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.571221701 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.56766575 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.547577323 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.546636203 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.548639543 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.547486658 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.549024413 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.556094695 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.55911505 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.550659059 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.547187845 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.557331322 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.561154305 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.547615718 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.548012893 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.546785915 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.545129487 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.544799212 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.556069234 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.552627418 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.543868885 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.543189349 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.546576935 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.547446015 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.544539474 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.545867117 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.548273889 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.547031314 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.545092068 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.545534042 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.546677863 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.549985665 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.547305171 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.54399435 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.555715822 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.55006508 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.548008024 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.553820424 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.548494522 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.544189043 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.546380749 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.551790599 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.544430179 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.549430567 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.55094914 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.548380564 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.548002313 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.547566486 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.544743931 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.554496041 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.562591984 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.546247213 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.545365528 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.551263444 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.551103135 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.545308767 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.548478829 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.546514732 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.544781881 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.54315737 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.547969779 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.545742271 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.54807117 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.547444378 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.548636316 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.546998877 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.544340959 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.544928134 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.547821808 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.550982045 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.549604047 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.549623849 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.549680008 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.549249087 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.546694955 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.557684569 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.548230176 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.548262835 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.548271815 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.545407186 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.54671669 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.548229433 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.546256593 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.547082389 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.5453741 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.544299222 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.545597246 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.545192986 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.543462687 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.544629522 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.545933373 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.550313747 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.543931632 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.549390312 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.549162651 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.544230509 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.546395768 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.543564589 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.547301506 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.547345077 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.545667145 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.550962446 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.547306683 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.547258788 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.544267185 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.548317118 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.544587855 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.545906915 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.546118025 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.548414146 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.55088911 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.547706542 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.551855164 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.549915018 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.544440875 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.544439747 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.544653713 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.548376156 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.544821292 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.549275798 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.55099821 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.563482362 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.568673234 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.547135765 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.54484044 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.545883227 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.544786258 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.551374797 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.549484039 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.54600785 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.546131552 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.545782601 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.546917414 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.547858121 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.546601983 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.54672133 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.547014506 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.545362189 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.547408628 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.544554577 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.544966395 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.549760171 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.545819987 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.545076958 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.544781047 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.546588624 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.546421512 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.543779813 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.548197255 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.546935464 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.54609765 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.552043118 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.548381256 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.547525211 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.552038596 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.54789414 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.546048054 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.547795185 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.549376761 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.548594129 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.556033556 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.552781861 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.548736372 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.555777154 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.550386548 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.545814394 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.549799096 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.54855144 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.547487899 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.548363227 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.551846374 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.544580772 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.546454828 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.544864019 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.546921633 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.54603494 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.552687486 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.549239935 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.545183581 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.548232379 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.548077105 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.547868862 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.547496682 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.548146287 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.548967777 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.55231776 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.547599153 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.545205878 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.547554466 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.547297958 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.543993705 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.544963495 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.547891086 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.552258605 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.553494981 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.550644234 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.552213812 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.550988266 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.545659033 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.547962389 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.547105709 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.548050985 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.56774582 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.565436968 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.559430162 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.562458281 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.545578972 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.553973395 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.55089155 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.549577168 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.547718902 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.548461739 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.548690857 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.547438089 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.545887295 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.548394548 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.549002149 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.549799346 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.548817142 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.547143353 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.545020202 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.546408021 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.547229508 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.544538039 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.54485564 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.547157137 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.546529501 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.547202166 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.550164112 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.549104069 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.546511475 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.55442817 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.552185324 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.550525391 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.552670818 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.548697146 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.544740006 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.549900935 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.54697435 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.548884441 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.547169784 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.548216558 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.552223182 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.54763426 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.554415705 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.547278856 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.548867896 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.548207332 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.543185194 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.545446976 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.547296974 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.546647472 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.557258252 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.551893999 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.548266792 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.548201956 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.544286078 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.545341348 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.544023 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.545854896 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.545486256 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.546567669 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.555356152 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.5574884 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.546471338 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.551824874 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.54750475 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.545357246 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.544195839 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.546704682 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.552103424 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.549766227 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.549310635 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.549637253 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.54803743 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.544968633 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.545748156 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.546451124 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.544683094 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.544890523 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.553526023 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.55311331 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.545956901 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.546102456 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.554796333 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.549679757 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.555541879 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.552954513 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.546657515 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.546442725 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.545120489 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.550202342 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.547649675 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.548731924 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.548610268 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.547197353 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.546508119 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.54445835 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.54833891 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.547876053 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.546627069 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.545748927 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.557048111 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.558919748 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.54479177 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.546255525 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.54476286 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.545904213 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.546079132 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.545878199 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.545863842 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.550112442 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.555261232 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.548429415 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.547534052 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.545839226 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.547141265 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.545968462 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.547143155 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.545650958 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.545082497 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.545470671 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.546164036 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.546929381 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.553959376 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.548858588 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.54735799 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.550862112 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.547735609 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.553892462 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.551923175 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.547498242 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.549619309 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.545521264 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.547832766 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.548842723 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.547466434 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.547713659 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.548458005 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.547540879 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.550030356 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.550377385 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.55259333 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.55053256 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.54665633 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.54684231 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.547158354 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.548402408 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.545537349 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.544077908 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.548974251 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.54825785 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.546376278 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.548428125 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.546772104 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.547445624 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.548342076 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.550581262 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.55438366 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.548228909 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.548072275 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.54525015 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.546008178 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.546015975 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.549491189 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.556307983 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.551658737 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.553558291 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.549521926 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.545784279 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.547134431 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.551284638 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.553054334 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.549190989 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.548534926 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.545306036 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.548839013 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.548200319 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.549200153 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.54609062 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.554690424 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.549847328 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.548776396 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.558365272 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.554781454 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.551628354 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.546259117 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.550283102 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.549812201 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.54717899 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.545559585 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.54735313 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.557560882 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.554069332 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.547350657 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.551039649 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.551902151 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.545663595 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.547648238 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.545221863 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.548407241 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.548603184 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.547867278 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.548628343 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.546226438 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.547357444 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.547159483 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.548402247 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.550998861 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.54951795 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.545748127 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.548864483 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.54951693 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.551316888 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.547545105 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.545495817 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.548972323 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.545519672 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.547157874 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.548395781 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.548368238 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.551990156 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.550067081 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.547091326 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.544421372 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.544897994 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.550057316 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.552786085 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.55288176 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.543094524 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.546117998 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.549562062 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.551777026 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.550105715 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.545493791 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.548305294 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.55176112 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.546596193 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.545786795 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.544395931 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.548894308 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.560046225 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.551211515 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.547675927 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.549553122 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.553163771 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.550221099 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.546236876 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.546154488 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.548757805 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.552281598 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.550033479 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.546506363 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.555628397 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.554723436 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.550284586 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.545539149 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.550375709 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.552500969 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.551370792 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.548327419 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.546287856 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.550416884 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.561673614 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.550804666 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.55642039 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.567917593 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.554155316 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.550161185 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.54787076 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.546713868 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.547130507 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.549774565 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.5481706 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.546320113 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.54590426 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.546243462 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.549000841 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.551504944 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.552119166 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.555985017 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.550236308 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.546646473 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.549201724 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.547310125 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.545326078 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.547041154 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.546156786 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.547242561 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.548402587 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.547123685 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.566415805 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.569324702 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.546258197 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.546296226 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.546577229 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.550325128 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.552343605 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.555678803 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.550233915 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.543558873 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.545658555 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.55021096 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.549194034 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.547545463 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.548961091 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.548495723 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.547145969 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.54990246 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.55889926 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.557008644 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.552929415 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.551128991 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.545930726 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.544949221 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.548210414 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.546710872 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.545896112 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.549904652 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.552350368 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.549978168 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.546370275 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.545851935 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.549949029 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.549219249 seconds)
  done (took 924.684039724 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.547167639 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.545225894 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.546694023 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.546060648 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.547080373 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.546877889 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.546186472 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.547663865 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.546482867 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.549383806 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.545842482 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.546478029 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.549036507 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.551223534 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.548109879 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.549272862 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.54703491 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.546098574 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.544517063 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.544741024 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.546995293 seconds)
  done (took 34.025988221 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.547918856 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.54579648 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.545187257 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.545527118 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.545316955 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.545393653 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.546863986 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.544868262 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.547669473 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.547422293 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.547630158 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.545189205 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.546095734 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.545139859 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.546182882 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.549295013 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.547304468 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.546550633 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.544803269 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.546541377 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.549943999 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.545552717 seconds)
  done (took 35.560038122 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.544778229 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.547069253 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.548177369 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.54495744 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.545616431 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.545935435 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.546230989 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.545433921 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.54786182 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.549716951 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.548348135 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.54759083 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.549449923 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.55193258 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.549728199 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.548766674 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.547310793 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.547519923 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.545789163 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.544857826 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.556528594 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.54898756 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.547250908 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.547035281 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.547330303 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.546962343 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.547286028 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.54669534 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.546895579 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.546997958 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.546315271 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.550171315 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.550148886 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.550014528 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.548244581 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.546234448 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.544361266 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.545964134 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.545975614 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.555145613 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.558013211 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.545988448 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.565913128 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.558702922 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.546318097 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.550375032 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.550583013 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.548138291 seconds)
  done (took 75.874911828 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.543341548 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.546971735 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.547196826 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.546562892 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.54638204 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.546333649 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.545995451 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.547889982 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.546104976 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.548379321 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.548094154 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.547792111 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.545949273 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.54677832 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.549350137 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.545690578 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.547081835 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.54777567 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.548011697 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.546845353 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.547523307 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.546578519 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.546312358 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.545943307 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.547487177 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.54570414 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.545188144 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.547203847 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.549276204 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.54590835 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.546805839 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.546660525 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.548366695 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.548278069 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.547396319 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.546374859 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.546742208 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.547162082 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.548201095 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.546674445 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.546152423 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.547895826 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.548499299 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.546332699 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.547746969 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.546683239 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.545329683 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.549191591 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.545076508 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.547476673 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.548248734 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.546040999 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.545435786 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.545288427 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.54799178 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.546917533 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.545760203 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.548065987 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.544989902 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.548212391 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.549238807 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.547315121 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.546479418 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.54643469 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.546073868 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.545576245 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.54662388 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.54561131 seconds)
  done (took 106.728102195 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.547811691 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.54665397 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.548045825 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.546742352 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.54776369 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.54638523 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.546862343 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.548462996 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.548496484 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.547109113 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.546529356 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.546597901 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.548582342 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.548930371 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.548355889 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.546447356 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.54718585 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.548936969 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.547256409 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.54856634 seconds)
  done (took 32.489799075 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.545543421 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.549801217 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.547277451 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.546400295 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.548869945 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.547990591 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.547469819 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.547975399 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.547682936 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.548926597 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.5503251 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.550352126 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.546177655 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.548020635 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.545880347 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.549112407 seconds)
  done (took 26.305411727 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.545387333 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.5488796 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.546178287 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.548867153 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.54925383 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.549610706 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.548509048 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.545000268 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.548500271 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.546533058 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.547824084 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.547343982 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.548431911 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.547939136 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.54533194 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.547772915 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.546550455 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.545513621 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.547225202 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.547071081 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.547514077 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.547211024 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.548580399 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.546664345 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.546001108 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.54700356 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.546996601 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.546128696 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.545784431 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.546651479 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.54592925 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.547514221 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.547761867 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.546407874 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.545830638 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.545491901 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.546165911 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.545647459 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.547244642 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.545963111 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.546435399 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.54706204 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.545412857 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.547967957 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.547480975 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.546896686 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.547734045 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.546100447 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.547204015 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.547906278 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.548501612 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.54799294 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.548207335 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.547291412 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.547340674 seconds)
  done (took 86.629922782 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.546958238 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.547910997 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.546341905 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.546938252 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.548037147 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.547232657 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.545979805 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.550456923 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.545737415 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.547432782 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.546991034 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.548705812 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.546597518 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.548194885 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.547214295 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.548947718 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.547852426 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.547391985 seconds)
  done (took 29.393730813 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.546727951 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.548479222 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.547189472 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.545082751 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.547502769 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.546689346 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.54618228 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.547625391 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.547501554 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.545132224 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.544601115 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.548741781 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.546599232 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.546094265 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.548359984 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.546284513 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.548289197 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.547738777 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.547667233 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.546390013 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.551105022 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.546635795 seconds)
  done (took 35.572999086 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.545961715 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.546202796 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.547369596 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.55657557 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.550482871 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.546358306 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.546170199 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.547868823 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.559217096 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.565189282 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.560255148 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.550995664 seconds)
  done (took 20.158863752 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.547507422 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.547044495 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.545523009 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.547576156 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.548100168 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.54748682 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.545971166 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.54737916 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.546823951 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.547422677 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547105477 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.548107594 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.546930736 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.546065771 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.54666536 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.547441672 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.548218515 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.54785873 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.546851432 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.546878523 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.549382322 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.547258656 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.548426248 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.547398684 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.54714699 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547025865 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.548361986 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.548236523 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.545840845 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.548231101 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.547322135 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.547145577 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.546601813 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.54927471 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.546225769 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.547286882 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.547209925 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.547331708 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.548199049 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547020763 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.546876718 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.548403951 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.547537711 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.546657567 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.547868129 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.548154391 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.54684833 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.548984171 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.54680322 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.550394765 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.545816565 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.54735403 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.547375181 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.545744991 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.547370122 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.5498178 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.549594163 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.548099781 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.545708292 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.54954428 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.54667786 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.545973133 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.54776277 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.548560341 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.546752551 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.548624706 seconds)
  done (took 103.673359452 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.547983376 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.547978056 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.546950644 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.546747714 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.546724974 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.547270646 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.546848581 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.548472939 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.547201619 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.547799731 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.549092456 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.549876821 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.545963659 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.547661022 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.54551938 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.546866351 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.549043393 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.549860743 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.547423327 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.549043275 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.546882777 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.548292275 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.548937393 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.548326839 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.54968009 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.549361958 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.54797002 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.549644502 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.548096598 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.547002593 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.548029091 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.54981793 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.546672486 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.549217021 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.548932783 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.548050556 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.546887208 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.548340257 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.5490459 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.547881261 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.548326111 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.549806771 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.549795046 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.546943847 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.549154145 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.547219783 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.546451053 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.549236775 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.548067693 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.548476442 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.54727883 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.549591386 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.549478337 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.547117118 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.54729083 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.546846242 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.546097756 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.545999587 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.548257069 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.548722231 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.548093673 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.547652255 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.547454252 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.546555151 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.549599324 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.547511352 seconds)
  done (took 103.708320401 seconds)
done (took 2059.610125602 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.709877805 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.588486286 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.895388332 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.566424242 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.57533509 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.561561896 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 2.086482164 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.742089157 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 2.063362104 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 2.26151107 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.913313323 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.663457146 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.547528031 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.699067801 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.939026633 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.552631498 seconds)
  done (took 37.903023638 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.58060993 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.552875592 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.651969109 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.551177592 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.573736557 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.717649102 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.599137732 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.556490299 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.543903114 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.5750423 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.544330848 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.570862915 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.548728151 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.549657578 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.894953123 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.714771568 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.78457895 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.545060363 seconds)
  done (took 34.594708636 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.937097036 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.59335738 seconds)
  done (took 6.06718298 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.563797119 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.55254153 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.552335659 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.548390158 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.541894886 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.545176109 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.549449458 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.56372996 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.54747243 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.659899252 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.551302771 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.558111477 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.548996251 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.552246459 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.549086919 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.591231864 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.688270182 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.549484483 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.547880117 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.554664269 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.549341262 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.65098218 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.58633703 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.548140898 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.661627636 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.547686252 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.551415244 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.558602892 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.680764544 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.548884491 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.549908221 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.552332376 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.552887028 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.359405491 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.03758004 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.542639108 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.560103186 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.559423504 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.545430688 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.714868561 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.550565519 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.55754364 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.548474197 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.002699301 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.697434245 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.662600155 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.543101725 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.550973364 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.549609448 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.615763907 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.548507948 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.549917009 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.586078108 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.372290053 seconds)
  done (took 97.35319961 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.614010099 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.54224908 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.739497005 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.548242185 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.540573775 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.541438505 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.540909422 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.795199856 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.60475403 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.54206418 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.826339489 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.052270666 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.54951566 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.610926193 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.595264631 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.597721671 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.543905075 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.541796611 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.543242654 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.549228686 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.038494483 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.542262375 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.541224502 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.741735569 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.578796361 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.082099538 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.540840479 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.542578759 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.545612798 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.543353973 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.035584813 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.554098512 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.600099903 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.546981842 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.807509532 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.912688206 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887999108 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.551531739 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.545839163 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.549855346 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.545761963 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.071925464 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.907912125 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.542578985 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.543829621 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075283769 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.542777721 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.54702148 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.542550864 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.808020931 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.541107103 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.543379663 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.541704256 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.544545294 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.543247221 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.613210872 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.628618514 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.084517204 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.54409897 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.545127952 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.624518199 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.544797465 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.548799975 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.550910849 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.545583966 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.911858024 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.443276407 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.548241008 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.911644168 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.027518056 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.541784525 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.092867364 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.543580086 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.557831999 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.698834622 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.553292281 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.542676656 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083879234 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.575661535 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.544685458 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886771027 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.547518526 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.830628564 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.543767081 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.542594973 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.056706099 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.545770304 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.602506644 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.547235239 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.543249823 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.544203469 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.547279282 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.806645903 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.589211787 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.541644854 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.543256444 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.577134529 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.541815385 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.542568268 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.548018006 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095116365 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.552013964 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.541519167 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.544836051 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.554113515 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.542716251 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.543127368 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.547653604 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.824781963 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.541499223 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.554229371 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.544673743 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.54146721 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.547243678 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.743183208 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.542505917 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.82674636 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.543361118 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.54417103 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.54742431 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.542983895 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.554786252 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.54593257 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.550832495 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.542007347 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.864169797 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.543294075 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.543231495 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.544924163 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.543885905 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.544979611 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.542438783 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.598564237 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.547442436 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.248223352 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.596486892 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.600506538 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.540824458 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.546641963 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.543009473 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.552174122 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.545355695 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.911733752 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.807498311 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.472007726 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.548249723 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.544425527 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.325952197 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.616338137 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.744065768 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.544078034 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.542164173 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.850866495 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.446592169 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.545157753 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.541337083 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.548699287 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.819522393 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.544702317 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.913430484 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.049448666 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.54589521 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.544046298 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.314157199 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.541979076 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.542337151 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.542056391 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.82116085 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.542608037 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.543134023 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.544857116 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.544254881 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.540718139 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.544432709 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.550491867 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.544136528 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.544600763 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 3.099459747 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.751796508 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.541763584 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.544152979 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07186205 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.550505881 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.544227001 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.550153771 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.545781233 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.540120179 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.603114938 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.549356869 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.61683018 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.544039342 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.545726536 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.0897711 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.543013619 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.544232833 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.750044794 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.171400046 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.542838426 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.545057539 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.541406885 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.598262097 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.106828778 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.606206369 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.815601629 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.546455361 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.578588778 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.542211601 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.559098123 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.104327511 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.545722416 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.542600344 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.249372739 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.543497165 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.30970319 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.542296923 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.543260113 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.165525224 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.541358029 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.548211035 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.544022729 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.543796071 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.849650056 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.544695499 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.573971575 seconds)
  done (took 550.57913776 seconds)
done (took 728.034170499 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.540578139 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.543242526 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.543954653 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.545576247 seconds)
  done (took 11.709309158 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.547910271 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.548963883 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.548239473 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.546566706 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.54980913 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.551559867 seconds)
  done (took 10.833466453 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.541247859 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.542329619 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.543631371 seconds)
  done (took 9.16671674 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.735521521 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.555475593 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.868007707 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.5519502 seconds)
  done (took 10.249728842 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.546852476 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.546832607 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.548689191 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.547908008 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.549880037 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.548061899 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.548432036 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.549648125 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.547408 seconds)
  done (took 15.471144923 seconds)
done (took 58.967495298 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.828430381 seconds)
    (2/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.555939752 seconds)
    (3/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.784085224 seconds)
    (4/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.557110301 seconds)
    (5/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.832941552 seconds)
    (6/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.89234274 seconds)
    (7/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.555166229 seconds)
    (8/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.541783259 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.787947547 seconds)
    (10/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.792306449 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.557945874 seconds)
    (12/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.904056686 seconds)
    (13/192) benchmarking ("perf_sum", Float64, true)...
    done (took 2.391140265 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.027113974 seconds)
    (15/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.566232549 seconds)
    (16/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.824000307 seconds)
    (17/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.043073324 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.766430251 seconds)
    (19/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.545047351 seconds)
    (20/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.549820743 seconds)
    (21/192) benchmarking ("perf_sum", Float64, false)...
    done (took 2.40764485 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.296267376 seconds)
    (23/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.543926148 seconds)
    (24/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.542938109 seconds)
    (25/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.544312049 seconds)
    (26/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.549370335 seconds)
    (27/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.942468773 seconds)
    (28/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.283482274 seconds)
    (29/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.559697517 seconds)
    (30/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.278071759 seconds)
    (31/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.544054173 seconds)
    (32/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.556271768 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.63324875 seconds)
    (34/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.552126879 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.746398908 seconds)
    (36/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.558818573 seconds)
    (37/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.55751272 seconds)
    (38/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.652542016 seconds)
    (39/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.984956075 seconds)
    (40/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.54304489 seconds)
    (41/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.566801091 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.89087281 seconds)
    (43/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.162255818 seconds)
    (44/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.543667949 seconds)
    (45/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.543272326 seconds)
    (46/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.554554834 seconds)
    (47/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.134952709 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.890666769 seconds)
    (49/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.579641541 seconds)
    (50/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.765767455 seconds)
    (51/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.543112029 seconds)
    (52/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.283222945 seconds)
    (53/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.692849623 seconds)
    (54/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.935960264 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.55947083 seconds)
    (56/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.543616113 seconds)
    (57/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.532422801 seconds)
    (58/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.563838662 seconds)
    (59/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.543320515 seconds)
    (60/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.54423667 seconds)
    (61/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.79146097 seconds)
    (62/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.790018732 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.361073059 seconds)
    (64/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.026849425 seconds)
    (65/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.750997392 seconds)
    (66/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.543808001 seconds)
    (67/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.49417686 seconds)
    (68/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.954272248 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.255456972 seconds)
    (70/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.658148949 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.551874232 seconds)
    (72/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.544885287 seconds)
    (73/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.489497437 seconds)
    (74/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.559876715 seconds)
    (75/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.067949281 seconds)
    (76/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.543410248 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.641246241 seconds)
    (78/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.832117106 seconds)
    (79/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.554908228 seconds)
    (80/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.558288694 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.318644972 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.920023956 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.559158824 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.629524844 seconds)
    (85/192) benchmarking ("perf_sum", Float32, false)...
    done (took 2.475269404 seconds)
    (86/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.543773765 seconds)
    (87/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.558709492 seconds)
    (88/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.555474652 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.930175063 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.631342964 seconds)
    (91/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.53777296 seconds)
    (92/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.977572309 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.556291356 seconds)
    (94/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.54332397 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.54560293 seconds)
    (96/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.828426216 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.92176815 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.557947411 seconds)
    (99/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.543966279 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.800836474 seconds)
    (101/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.559588499 seconds)
    (102/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.542579402 seconds)
    (103/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.289183455 seconds)
    (104/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.83485851 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 2.428558855 seconds)
    (106/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.171769038 seconds)
    (107/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.092551571 seconds)
    (108/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.546181059 seconds)
    (109/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.544158351 seconds)
    (110/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.116264702 seconds)
    (111/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.545440672 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.854555232 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.375474313 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.544532111 seconds)
    (115/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.547662276 seconds)
    (116/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.928987359 seconds)
    (117/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.557246603 seconds)
    (118/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.540777233 seconds)
    (119/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.55736775 seconds)
    (120/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.313878317 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.886152399 seconds)
    (122/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.989079306 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.557915814 seconds)
    (124/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.543335134 seconds)
    (125/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.548153321 seconds)
    (126/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.021688141 seconds)
    (127/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.558348027 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.320983116 seconds)
    (129/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.559799229 seconds)
    (130/192) benchmarking ("perf_sum", Float32, true)...
    done (took 2.459185016 seconds)
    (131/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.544466844 seconds)
    (132/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.659600162 seconds)
    (133/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.685632338 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.550307363 seconds)
    (135/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.557520888 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.543350066 seconds)
    (137/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.541796323 seconds)
    (138/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.108655491 seconds)
    (139/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.772079907 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.2753748 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.868657785 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.686337332 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.636546389 seconds)
    (144/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.022473162 seconds)
    (145/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.913066516 seconds)
    (146/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.542976013 seconds)
    (147/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.545019299 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 2.46866706 seconds)
    (149/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.560528276 seconds)
    (150/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.945132025 seconds)
    (151/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.545378593 seconds)
    (152/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.94863049 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.317739698 seconds)
    (154/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.551675377 seconds)
    (155/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.390304777 seconds)
    (156/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.553868799 seconds)
    (157/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.545823665 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.874120557 seconds)
    (159/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.110108152 seconds)
    (160/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.562752685 seconds)
    (161/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.036990421 seconds)
    (162/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.544939966 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.555720917 seconds)
    (164/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.543543961 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.556423924 seconds)
    (166/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.54364632 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.773211123 seconds)
    (168/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.545444395 seconds)
    (169/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.988232489 seconds)
    (170/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.558040516 seconds)
    (171/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.544290883 seconds)
    (172/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.560023119 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.64797402 seconds)
    (174/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.952564405 seconds)
    (175/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.544557512 seconds)
    (176/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.544804147 seconds)
    (177/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.543338272 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.291462834 seconds)
    (179/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.554234402 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.740379934 seconds)
    (181/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.55892175 seconds)
    (182/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.542546913 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.542739341 seconds)
    (184/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.550464381 seconds)
    (185/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.964215778 seconds)
    (186/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.55173575 seconds)
    (187/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.052787348 seconds)
    (188/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.662189365 seconds)
    (189/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.54519939 seconds)
    (190/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.321231325 seconds)
    (191/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.136845469 seconds)
    (192/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.543676111 seconds)
  done (took 422.117605865 seconds)
done (took 423.657094037 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.572666083 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.185042939 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.554463754 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.552773259 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.554860302 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.545642372 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.565854666 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.550691502 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.557121609 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.555243864 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.54098817 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.553390807 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.567761623 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.55312062 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.568449888 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.554552883 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.553484882 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.553102859 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.555604568 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.562696154 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.55490835 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.55234398 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.569823821 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.551870328 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.563168916 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.56234698 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.557681473 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.553699515 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.550192862 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.55658758 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.552230295 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.559450255 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.559647274 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.552831932 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.554654031 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.553184255 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.552321306 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.182796988 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.561659417 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.553104301 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.553354944 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.558683122 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.556042925 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.557578408 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.552425561 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.570672603 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.560479011 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.567703761 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.549031168 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.557857675 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.573008429 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.554624021 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.549891053 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.55587665 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.544956386 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.569524468 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.55314703 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.572852562 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.550734384 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.554773226 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.568758956 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.572494727 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.55709261 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.561383979 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.55004872 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.566759494 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.551066217 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.563239342 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.550496523 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.555643042 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.555385214 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.549933358 seconds)
done (took 122.919600522 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.548345075 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.549248469 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.68455477 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.550087508 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.700051895 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.548374385 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.54903624 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.557277803 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.552283132 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.548229409 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.681199348 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.551428224 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.686953131 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.690839633 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.678552533 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.552851142 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.549856595 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.551544998 seconds)
  done (took 33.270843364 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.623479489 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.623857285 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.662333503 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.549284295 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.60060976 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.662717737 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.550530603 seconds)
  done (took 12.811620016 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.55395255 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.551036486 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.62273602 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.621013636 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.548597365 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.76363697 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.561488711 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.549584265 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.613625409 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.55044651 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.549329236 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.55733509 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.544523819 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.621494571 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.560430918 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.670958643 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.551553795 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.550081951 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.730789573 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.551132543 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.557667733 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.609089278 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.563028 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.549144799 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.556460337 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.547090756 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.551234765 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.549913083 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.626645782 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.550290711 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.545337522 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.546368308 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.548674356 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.549273292 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.547447826 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.551454266 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.54750072 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.551247045 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.549089088 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.549002325 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.548170835 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.573385269 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.547473563 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.547844965 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.549682491 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.548295682 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.613497944 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.548540112 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.548981115 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.549851264 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.612048506 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.557342006 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.548322557 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.549436166 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.547809527 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.548284424 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.728518554 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.621278439 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.548034796 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.619718711 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.548641801 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.54799277 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.549338319 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.548022261 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.627549977 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.548980247 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.62065199 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.550003322 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.7707468 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.573446386 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.549585117 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.55337231 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.55478292 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.550971994 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.554558525 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.548721874 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.552214679 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.556749149 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.548065565 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.549807679 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.744900508 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.547593056 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.567801164 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.557462846 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.549502303 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.610697299 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.550463014 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.548592341 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.644867097 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.670705453 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.615914098 seconds)
  done (took 148.982781172 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.569416956 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.552799337 seconds)
  done (took 4.661430271 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.553161877 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.550601446 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.54751944 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.549162077 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.5498244 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.549664242 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.548249367 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.55094105 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.550969901 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.551226359 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.547330145 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.550212235 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.550381821 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.547694861 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.547787213 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.549511468 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.549069013 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.552452989 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.548819952 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.549493129 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.160095269 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.548964572 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.548792746 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.548748098 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.549866987 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.548969102 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.575811287 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.54842425 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.547386517 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.557125568 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.551635293 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.547876679 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.551088267 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.551596751 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.548930242 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.551677487 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.549009659 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.551249968 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.548461631 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.549087426 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.550284039 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.548177691 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.547761268 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.550327491 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.550630817 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.549374873 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.550927599 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.576898094 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.550162383 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.551643806 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.551078156 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.549245539 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.546992262 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.549992822 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.552699193 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.554410306 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.554273911 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.549081112 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.551892297 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.549987303 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.549146589 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.549108211 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.553000778 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.548866766 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.549288869 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.551858478 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.550807025 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.549347875 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.551702887 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.549614767 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.55189749 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.549401124 seconds)
  done (took 113.811203354 seconds)
done (took 315.077366903 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.365851478 seconds)
  done (took 4.905103294 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.957226003 seconds)
  done (took 4.497458555 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 9.890084385 seconds)
  done (took 11.435474062 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.570625493 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.544459385 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.555386331 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.551123646 seconds)
  done (took 11.761201781 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.267603875 seconds)
  done (took 4.809906889 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.541834663 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.545322174 seconds)
  done (took 6.628027659 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.897333392 seconds)
  done (took 4.438527849 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.771417467 seconds)
  done (took 4.316928026 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.561670436 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.547810272 seconds)
  done (took 6.657111702 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.542648181 seconds)
  done (took 4.081924199 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.328109508 seconds)
  done (took 9.867594513 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.565360552 seconds)
  done (took 4.108524802 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.577501857 seconds)
  done (took 4.118481137 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.443513729 seconds)
  done (took 4.983223159 seconds)
done (took 88.149097537 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.542888704 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.544454774 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.546580782 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.543279754 seconds)
  done (took 11.716096077 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.61588537 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.608349956 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.626064797 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.60176506 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.607009919 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.608790127 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.574823635 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.574051364 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.609526185 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.604635535 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.611164826 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.598830388 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.61868399 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.575503831 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.606297832 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.61892058 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.605536504 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.613811034 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.573704407 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.601037526 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.549407457 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.607965101 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.601275068 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.549226663 seconds)
  done (took 39.904806936 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.967684422 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.624095323 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.731511118 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.603095205 seconds)
  done (took 8.465879172 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.639936025 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.652041158 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.65396559 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.696827858 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.721669414 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.653076696 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.57189653 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.569888829 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.556808799 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.652424001 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.717916544 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.551771536 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.825634106 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.549955659 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.840892125 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.547264693 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.551722432 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.643441903 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.69441317 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.708358148 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.552148293 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.640383017 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.648061331 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.551625523 seconds)
  done (took 40.933394006 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.558617654 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.566578258 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.552228665 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.551918734 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.551442012 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.552118389 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.56507429 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.554047876 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.557353257 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.549876806 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.548820999 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.552508639 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.564076555 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.551277712 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.551011145 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.558812309 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.55511083 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.556509695 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.562267677 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.551832729 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.551007883 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.55700463 seconds)
  done (took 35.759869185 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.544135982 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.545398985 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.894029678 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.801918711 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.547432684 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.544234147 seconds)
  done (took 15.417932276 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.608211687 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.630085375 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.55082971 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.848449113 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.911387771 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.552331032 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.553123717 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.663143891 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.910701428 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.005967132 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.585805487 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.596356572 seconds)
  done (took 21.956354375 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.554171001 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.546161452 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.548019529 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.560177793 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.595680329 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.554041545 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.557543271 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.547289543 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.596153215 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.59901262 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.552862585 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.598080594 seconds)
  done (took 24.351712739 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341746004 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.433770698 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.561700735 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.692564443 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545089951 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.547276126 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.697101751 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986211645 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.550916557 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.821902836 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.557444969 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227250677 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.543749237 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544794867 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.546237124 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.543147049 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.556104146 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.265922811 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544305048 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544699757 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.546497512 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.55053952 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.543085086 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.737584953 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.54815533 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.543739095 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.807008703 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.542131386 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820528224 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793634684 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795869887 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.546308066 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82032421 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912664873 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684582938 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737322029 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548912119 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.547158076 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.613315678 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.550338567 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.554139901 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.546699901 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795795267 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547065813 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.544574442 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.555189105 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988165801 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.552393088 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.543428712 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.542753806 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.803642439 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226061622 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.549353466 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.545198762 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729677 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544482544 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.550592171 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741738394 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.551909297 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543276508 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554473283 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.543926322 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.567110866 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552372982 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180941069 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.554078188 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.550726712 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550487841 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549435435 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.554063317 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568770138 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565035901 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.562567019 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543469766 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254553312 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.547795819 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.561149944 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241931359 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544963826 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.544341809 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545768631 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544034116 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544554501 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.546235762 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.543660224 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.314033864 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553653362 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.54341237 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559750558 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.986195712 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.736489151 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.468503225 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.557485788 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.54865257 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.543979824 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546496518 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.555104192 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55645736 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564748774 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.987951102 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549752092 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.549548739 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558168673 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.753389469 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544255744 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.557230147 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98918671 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553992886 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.568517672 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.55577371 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.73074198 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.092489632 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799664188 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556986079 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573248296 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.547342163 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.367567005 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.555481601 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.549021416 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.557050735 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.809948311 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.545607064 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546053349 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668141514 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.56588241 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.545153162 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549162352 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547394084 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.544831732 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.801808842 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.546643974 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.798680649 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.547228053 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544269183 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.547495012 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545363881 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.545232008 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.554045319 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557401343 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.81936227 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545538556 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.563122864 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544039535 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.557283299 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.546903892 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.551477531 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.55746656 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543691913 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.545079197 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798608643 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573362284 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686341658 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572463558 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.544860787 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.544966079 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.549203298 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.548847488 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.555484588 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.54542435 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546386464 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.552474339 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.561302558 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104758104 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523800284 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.561141315 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43343238 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.560678074 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66423826 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552094582 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.731664056 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.546574584 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.562083923 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.551304656 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.545450983 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547129207 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796618945 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.555086007 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717922473 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.987553977 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101194382 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047073104 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.546044294 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.54601848 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.544858056 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544425793 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546230001 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.545699458 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735028451 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800498663 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.554086232 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109148124 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548670885 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.553697721 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.55008877 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79761954 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.554049165 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546056247 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.555014197 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554639748 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.546293038 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.796381199 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825158875 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.561184729 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.546418607 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.062097628 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551032704 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.546128444 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.546833667 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577248182 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.550529855 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046285694 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.556446542 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.564936949 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800032502 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.545435999 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.566315149 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.543963832 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548413335 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546141144 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.574450716 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553335244 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.734380659 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.555158369 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548855988 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.54610963 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257387921 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057469553 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.548116314 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.54507107 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.546058271 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.987558466 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557307019 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.544873135 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757802553 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.987276401 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546901099 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986342057 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.54742151 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225723622 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798765721 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547533617 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.544503302 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.544591764 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.801451913 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.754236267 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577182746 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.545312453 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549291621 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.562922729 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049785096 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.553968687 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721896972 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985032868 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545265102 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.548385727 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.638861813 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.550192796 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881216446 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.544971478 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545829369 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.555374712 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.545564361 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051595169 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.564368796 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.544613909 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182590323 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.554159991 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.986466725 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544743563 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.732636869 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.797353505 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.865461423 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.546827833 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.552358906 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.558533491 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802185482 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558512391 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.553580242 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056601738 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.389065776 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.551731921 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545021617 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368665209 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546387766 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821380629 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.544435787 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.550682117 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.562334375 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.545623345 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546159746 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.543573554 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.576015284 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519711114 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151486248 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.562358842 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553814328 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.546073091 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556042453 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.545432103 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.560371049 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104680171 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.553835372 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549168894 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574464447 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.549297039 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54683085 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.56851501 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.547999366 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.548387863 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.743102788 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.554007922 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.546992851 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.548065154 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.696972869 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.75562328 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.546699695 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.546287164 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772745241 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.545044529 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.567843567 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277229085 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.561148189 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.555501306 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546331108 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.555548573 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562513604 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669194952 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.733197448 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.800531475 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.801598945 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878590938 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544132533 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.546738923 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.434908844 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343763297 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545064181 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.547657102 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.549359518 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115316874 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256357047 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.106724369 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.80596854 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.544589118 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554893605 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544292754 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861692718 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.546440857 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.822946276 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.558235145 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.552076958 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566788669 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546890568 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547527451 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75554267 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.819180989 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.544048949 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546204205 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546336946 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.543794386 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798758591 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.756597717 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.265283684 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245880567 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544847066 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.546051159 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.987411231 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820504958 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54381168 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.546207654 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545742444 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.560906696 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.557778134 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.552954066 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549290609 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821304599 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795065981 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915478268 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.795741483 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 16.939324202 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.424739559 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554660488 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.556561361 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.552338405 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.729950326 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096730893 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.217969075 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552262552 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669622405 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736637198 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.545697128 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85879387 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.549642759 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.544434259 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.543510978 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556313412 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.544629644 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.79721561 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104338213 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.562942682 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.55154896 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.551432917 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.546533103 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.732303731 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.544400269 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.317666811 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.552675378 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79413741 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.570382377 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.545013566 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100421241 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.804074401 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545326566 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.551200284 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.765163278 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.547245735 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580077094 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.426021189 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.546525342 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377151905 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.754360364 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.475450751 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557664853 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.21608298 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107296613 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.547728262 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156568446 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.543659242 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555187683 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.821611477 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.553239346 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.543907964 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.833200342 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.549887953 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.546998733 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.737159625 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.096665606 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220223233 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.565558065 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54528628 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.548056292 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545002937 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.691936625 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549615386 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.565938496 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.962464836 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.544709993 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544954837 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.217157107 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.552034834 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54652051 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.545044383 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544483315 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.553113505 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.61415351 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.548776178 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.546919207 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743195531 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044521723 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.563598832 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.172076602 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.881442297 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.54956978 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.545096035 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.558249918 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.551893521 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545783732 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544604301 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545789734 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.548733586 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37755248 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.54522177 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.798306774 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55020592 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.755246947 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75509479 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.55877673 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733232103 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546104942 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564036648 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.548434762 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546870682 seconds)
  done (took 1104.727960378 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.550140054 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.583731847 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.582632889 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.564199218 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.566474955 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.721880138 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.657834768 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.585268952 seconds)
  done (took 22.354970609 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.545468371 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.556239519 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.559359537 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.556160849 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.547565973 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.803934328 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.552892261 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.556216425 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.561321196 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.558312293 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.553905025 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.940013611 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.554993402 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.546739561 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.550507199 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.559185834 seconds)
  done (took 35.053898711 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.488624478 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.74141098 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.162993302 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.595547018 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.553226435 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.557366016 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.884931983 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.550359303 seconds)
  done (took 26.075463043 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.561223325 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.564114606 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.56258864 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.561918452 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.563415722 seconds)
  done (took 9.355750504 seconds)
done (took 1397.615148698 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.549682417 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.550868449 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.553250252 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.553818498 seconds)
  done (took 7.749688585 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.550239471 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.547129666 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.548377329 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.968207219 seconds)
  done (took 11.156350288 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.894703186 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.0306699 seconds)
  done (took 5.466628756 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.942891546 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.601632541 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.758455972 seconds)
  done (took 6.845934493 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.962788902 seconds)
  done (took 3.506893635 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.027650119 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.987117628 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.705072246 seconds)
  done (took 7.262146586 seconds)
done (took 43.528705763 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.556122327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.32649653 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.704281376 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.543880984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.709244848 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.703014933 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.792555953 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.553379458 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.552043291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.549187538 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.54619844 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.712403079 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.782033422 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.325293731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.778718915 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.322244471 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.706647423 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.54875305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.550147607 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.546696607 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.792311961 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.549811048 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.545730462 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.556343655 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.709192699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.692738633 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.543810734 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.324751113 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.551051242 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.55345882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.693546752 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.545492766 seconds)
  done (took 88.410121565 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.544789397 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.548308723 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.54960104 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.54539019 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.546115544 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.547800694 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.547153636 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.555781483 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.551554755 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.545389614 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.551436724 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.546236042 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.547754947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.545639678 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.548146053 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.548956284 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.550004528 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.551141918 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.548225268 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.546299308 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.550005795 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.548187758 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.546596441 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.555380032 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.546704443 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.546966458 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.552570191 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.557787468 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.548416906 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.556904892 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.54887155 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.547253957 seconds)
  done (took 83.115827369 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.545253329 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.546906458 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.547951495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.546344418 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.548034948 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.548316964 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.549490117 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.5499714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.548227639 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.546400915 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.54888309 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.559251042 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.549347674 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.547338962 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.549247973 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.548831193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.546581752 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.551751561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.548161291 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.547502753 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.549204236 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.551953576 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.547206146 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.556989279 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.548651445 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.55109911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.558361768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.547866718 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.550051148 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.548069282 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.547460081 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.545987545 seconds)
  done (took 83.12135046 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.77967003 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.550207609 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.552790307 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.54656338 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.554605654 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.55246163 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.547051832 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.781062614 seconds)
  done (took 16.408997061 seconds)
done (took 272.60049775 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.544762132 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.080670931 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.572674866 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.548194876 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.574710934 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.574619574 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.725558872 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.574863804 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.710111707 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.547083048 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.574563418 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.545694553 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.354146761 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.66577544 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.431813541 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.548592927 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.43755479 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.547701587 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.142621102 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.737148179 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.574249289 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.546926286 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.438733607 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.436191528 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.546055058 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.557712375 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.557127323 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.671963539 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.641379045 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.561946351 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.078778329 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.546039442 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.546497851 seconds)
  done (took 69.68617046 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.550790289 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.550503189 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.549832948 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.552068876 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.551983844 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 1.551499626 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.551255909 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.551304388 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.555283191 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.552861198 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.551760871 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 1.550421624 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 1.552400503 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.552298117 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 1.552208768 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.55133539 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.550542331 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.555580329 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.550406917 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 1.552469446 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 1.553689581 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 1.557189034 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 1.549670929 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.550433942 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.550034857 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.552068561 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 1.550120804 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 1.551802777 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 1.549586094 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.54989119 seconds)
  done (took 48.099264403 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.549640478 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.294894134 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.54995152 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 1.557964553 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.92948798 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.89221154 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 2.468483158 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.778342179 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 1.557248069 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.634517635 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.55533674 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.552243411 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.552596482 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.272913073 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 1.58472657 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 2.229295023 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.62418183 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.95182799 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.713308633 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.549346931 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.693653276 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.678315249 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 1.555704794 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 1.560430037 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.584638955 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 1.559167733 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.009443918 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 1.559606683 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 1.559984979 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 1.559957623 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 1.557648177 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.883706373 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 2.547884409 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.55594567 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.023432696 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.551709182 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.208236139 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.554932358 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.76302133 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 1.558921604 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 1.553805796 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 1.557916388 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.549133003 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 1.560009842 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.01080809 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 1.553973383 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.585374089 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 1.892513858 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 1.557294045 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 2.551728103 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 2.5460453 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.011076319 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 1.557125799 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.55674335 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 1.555513656 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.011044693 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 1.558035429 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.472263414 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.889608776 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 1.557200604 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 1.557371348 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.548531827 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 2.548970104 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 1.622132206 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.560892739 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.547374198 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 2.547572036 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 1.557583008 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 1.566167354 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.01052836 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.547214859 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.547601348 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.746108037 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 1.551866792 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 2.548614203 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 1.552596787 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 1.559163047 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.560281239 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.551179272 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 1.551346474 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 1.65079419 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.676859382 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 1.893650179 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.895598637 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 1.559279595 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.683523042 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 1.556854069 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 1.881673393 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 1.550663518 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 1.559114497 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 1.555855877 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.552056783 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.431409332 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.559062005 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.551187771 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.553227494 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.70395438 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.023840571 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 1.560849252 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 1.559075359 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.713211849 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 2.547631286 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 2.548225457 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.892476616 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 1.551944802 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.546901535 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.548412559 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.684778922 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.551574178 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 1.562685852 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 1.556667123 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 1.558022173 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.772018045 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.888109976 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 1.558337649 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.548489024 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.928647352 seconds)
  done (took 221.658608233 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 1.555859329 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.546777308 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 2.552433256 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.555057311 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 2.548406195 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.554353171 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.546039593 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.545473052 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.551200957 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.545778254 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 2.544875738 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.547791542 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 2.54789426 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.547847419 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 2.546732239 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.548325364 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.547209842 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 1.553352489 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.546640526 seconds)
  done (took 47.974798128 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.553474918 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.990582554 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 1.553818084 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.552291842 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.600426525 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.555148782 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.547477466 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 1.693451911 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 1.554254065 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 1.551580928 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.55314218 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.547886416 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 1.556189825 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.015616924 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.555705166 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.014750273 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.553407554 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.550916316 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 1.55242529 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.016955881 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.547337429 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.882334447 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.599926043 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.019347768 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 1.553190005 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.551372537 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 1.55192758 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.013202922 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.553975707 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.023683231 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.553643463 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 1.55229345 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.599767646 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.600838257 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.548220061 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.885779444 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.571991915 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.663712483 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 1.552728833 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.554501633 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.015796771 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.555492832 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.556114094 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.557245658 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.995112549 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.994323637 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 1.55393732 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.551726484 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.016097244 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.993135475 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.994533124 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 1.694488337 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 1.551265925 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 1.55089856 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.882432696 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 1.552735187 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.017716507 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 1.556909804 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.552379315 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 1.55051964 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 1.552800961 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 1.555318855 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 1.693018872 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.015675633 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.887288494 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 1.555907932 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.547332069 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.546916357 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.553856288 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.599407353 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 1.552147556 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.546767087 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 1.556476627 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.600594134 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.88303436 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.549507743 seconds)
  done (took 136.883634908 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 1.648344907 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 1.997128398 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 2.547378714 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 2.54813042 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 1.66206212 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.655789632 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 1.763940588 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.616515202 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.609385135 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.648076934 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 1.667802772 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 2.001015128 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 2.546463055 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 1.628330436 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 2.146927603 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 1.787944918 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 2.370020927 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 2.54616913 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 1.68647238 seconds)
  done (took 38.622737556 seconds)
done (took 564.466562983 seconds)
SAVING RESULT...
DONE!
