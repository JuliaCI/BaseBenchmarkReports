cset: moving following pidspec: 28579
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.234857874 seconds)
loading group "string"... done (took 0.547783042 seconds)
loading group "linalg"... done (took 7.155864886 seconds)
loading group "parallel"... done (took 0.15506174 seconds)
loading group "find"... done (took 1.118424669 seconds)
loading group "tuple"... done (took 1.805902046 seconds)
loading group "dates"... done (took 1.189518245 seconds)
loading group "micro"... done (took 0.216019982 seconds)
loading group "io"... done (took 0.946144693 seconds)
loading group "scalar"... done (took 36.237938146 seconds)
loading group "sparse"... done (took 11.134633087 seconds)
loading group "broadcast"... done (took 0.898247757 seconds)
loading group "union"... done (took 11.56600374 seconds)
loading group "simd"... done (took 4.073719792 seconds)
loading group "random"... done (took 8.679143387 seconds)
loading group "problem"... done (took 1.866817341 seconds)
loading group "array"... done (took 19.815633849 seconds)
loading group "misc"... done (took 1.632080231 seconds)
loading group "sort"... done (took 3.201311611 seconds)
loading group "collection"... done (took 16.301067122 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485174734 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122757502 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114448633 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117813612 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14566885 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114185852 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122187727 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08337654 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.837699902 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148127542 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118056421 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414637743 seconds)
done (took 5.157845812 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173499988 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082490475 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081512522 seconds)
  done (took 1.33197983 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064966565 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119857631 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065815809 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067065555 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067001223 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065855952 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065744613 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065592863 seconds)
  done (took 1.68456955 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073112232 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068841376 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069193065 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068092082 seconds)
  done (took 1.447590738 seconds)
done (took 5.882783032 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.764573774 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201108253 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18243558 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397848185 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132073788 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.1564485 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.650498111 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.310846334 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183531272 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081341451 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104703595 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317223801 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107070864 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.617453541 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073926646 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090974119 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140223452 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.421887365 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06720148 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081808136 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088919286 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127840433 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085273523 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074318627 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143308843 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071087128 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134473252 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081084553 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066203054 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207270357 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172424062 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.647697033 seconds)
  done (took 10.189278984 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.0959501 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097465144 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068431977 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136716315 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096071328 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069670725 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070787473 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.0667674 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087177286 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127878816 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088709953 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101376365 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065532429 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068745626 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084450316 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204478661 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082075689 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083681505 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070798452 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074956372 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119046703 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078298584 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078050187 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077619099 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128479763 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17977535 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.0957318 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096739612 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066676876 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080551597 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114749874 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125474722 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064979937 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065821374 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124321314 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094538093 seconds)
  done (took 4.638693908 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.294384378 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139910431 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090652832 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131748141 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109414514 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064612538 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10672374 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064892296 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080315496 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199517531 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.362705705 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.574192122 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111083472 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103958385 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067565527 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068328217 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064081147 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066366743 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.350262064 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108722682 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104797115 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081410734 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070214725 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069122679 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341754688 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06797547 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064278677 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067997628 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057670132 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124446603 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068065849 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.923231539 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12408814 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066198016 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100516843 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161400563 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.220881158 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142685707 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067535717 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064093535 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148940712 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069978781 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065395896 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083276966 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102778249 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112431765 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065351748 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066613655 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160969305 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06466749 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07880768 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.990249813 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153949217 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078941712 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066621545 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245884008 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085564867 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068919154 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064601061 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.184044983 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13790281 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06499904 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066957181 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066260321 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068312789 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068936948 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.373799461 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065711863 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.793761484 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070324845 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076549314 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068862679 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069116584 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06603041 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072467 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072286983 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084730919 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066083554 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075189376 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065834852 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065346032 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066711491 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084366793 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.35096585 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066392988 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067936004 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064511126 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085715251 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096031188 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066000522 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065041674 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.202510902 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068811628 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066847123 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106026232 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0669974 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08450179 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068876526 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112863836 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066078021 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093531168 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07168263 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096522169 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069989889 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099137041 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080595891 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068173386 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.394645742 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065075033 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064762148 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068396597 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064980088 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067148492 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06640139 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07873125 seconds)
  done (took 21.02648567 seconds)
done (took 38.317071163 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234544727 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07882986 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075416636 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07528312 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075542444 seconds)
  done (took 1.801260975 seconds)
done (took 3.046008305 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11936599 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098624216 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064016145 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094309843 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063810437 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099762059 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098809443 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080839569 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098666381 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064052492 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095848375 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063842403 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063804027 seconds)
  done (took 2.367354851 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082943969 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083467517 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070890883 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082943548 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064586838 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084328123 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082261409 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090388968 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0820159 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073964309 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065257666 seconds)
  done (took 2.09732935 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08096755 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083754655 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069135956 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081094733 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065361818 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080792915 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080193968 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085184834 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080572151 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072907067 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063764267 seconds)
  done (took 2.075796106 seconds)
done (took 7.770956762 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076619663 seconds)
  done (took 1.300642839 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.590768315 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.181090666 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081300683 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112092406 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183393267 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119437928 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.281925725 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086877449 seconds)
  done (took 9.041545889 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102628831 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068614439 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070233148 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067983421 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071898846 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070952936 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068954445 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071472951 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071981096 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069320357 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07125758 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0684214 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070515273 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070660352 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068902575 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068020785 seconds)
  done (took 2.447336093 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091759235 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089594181 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073779571 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074627017 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071913285 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071959816 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073955603 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073275838 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070560444 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071913529 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074464878 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07367699 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071469933 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064964491 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074364537 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075254172 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070620452 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074187792 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075078874 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074311259 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074468749 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064590671 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071285013 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073643063 seconds)
  done (took 3.105859687 seconds)
done (took 17.127993308 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115381091 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071513661 seconds)
  done (took 1.419551235 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081691899 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082574123 seconds)
  done (took 1.404101147 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083851211 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066134319 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09227039 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078977899 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066434987 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066100444 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089857538 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066291413 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065825772 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066274858 seconds)
  done (took 1.983781233 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068913572 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078419153 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071036677 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081199538 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073923793 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064206898 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072751726 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067901752 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078701515 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06279801 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071641137 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082418483 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071423865 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084357525 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072593011 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068772144 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071556484 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06805044 seconds)
  done (took 2.55390148 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065803448 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066781238 seconds)
  done (took 1.378959943 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066998807 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063599166 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067239592 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067464501 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063886748 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062621733 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063630017 seconds)
  done (took 1.697750634 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.379773125 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109307194 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.295987886 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070125963 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081015618 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247653931 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064729929 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069820895 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069806749 seconds)
  done (took 2.673728676 seconds)
done (took 14.359030904 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078047424 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084486309 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094060879 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.362056859 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091857877 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065533725 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113706499 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188925633 seconds)
done (took 2.335836013 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211090287 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613094832 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.385288992 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196069937 seconds)
  done (took 2.441800503 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327210275 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085976625 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05899911 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066938079 seconds)
  done (took 1.794716373 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065544357 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068498134 seconds)
  done (took 1.387508449 seconds)
done (took 7.092620599 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0664835 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064911541 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.062842383 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065822892 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063939501 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063979946 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065634641 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082049863 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065141653 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.06592276 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.067992493 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065457807 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063383456 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063558407 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063424257 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065439307 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065967091 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063310703 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062919154 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065373761 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062955636 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065470998 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063075059 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063380348 seconds)
  done (took 2.856960752 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08303063 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066478952 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071270099 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071125177 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069673788 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07393738 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07079413 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065998965 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07066003 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067813638 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069422216 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070351737 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067548905 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069921423 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067845519 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069951623 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070875458 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066189343 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067670013 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069768184 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070781398 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06639957 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069682695 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070403054 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069404661 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071268668 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067982104 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066304441 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070931432 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069458105 seconds)
  done (took 3.355215462 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069896464 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063219882 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063938807 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070433084 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064058032 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064130393 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063003876 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063573626 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064085566 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06340143 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064899871 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063161037 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063419262 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06453992 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06419477 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066989824 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078587731 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063627741 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063667843 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063673432 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066723019 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063211426 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063322892 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062942921 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063382656 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063121286 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063987573 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063178356 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06387429 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.175020379 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066071415 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066828882 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063042735 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069696672 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066373728 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063049021 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067350626 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062727624 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063636197 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062747012 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06279744 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063012743 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063555795 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069589839 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063056037 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064530145 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063139769 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064218079 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063656648 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065906189 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062521648 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063261903 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065130171 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064093939 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066827922 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062397122 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063744474 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062665643 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064073811 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063180473 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062875902 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062925034 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065484378 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063749517 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077403433 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069660994 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063128287 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065104949 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063766649 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065304692 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064680074 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075913699 seconds)
  done (took 6.053203285 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090319181 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086974625 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065391957 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064931202 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061585628 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063818279 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067100964 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063756614 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065433615 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069362052 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064020513 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064945175 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065501946 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076511197 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063877051 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065300914 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070010755 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06220339 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063808326 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06672311 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063920676 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067386779 seconds)
  done (took 2.768108367 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154730902 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069285557 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105125895 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073166728 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067494288 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072934913 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069780426 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069684234 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070041856 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068114965 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068019184 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069599917 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067703989 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067602661 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068362007 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068092811 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069483372 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068218302 seconds)
  done (took 2.635938691 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076038872 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065633094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086322356 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065672664 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065647431 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068199272 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070254385 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07379844 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067926974 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065953574 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074364809 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067864541 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067702032 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065790413 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067669877 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065512528 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06837281 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065593159 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0735384 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070447685 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070113657 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073641037 seconds)
  done (took 2.805853389 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078747681 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067428495 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082088899 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068998161 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061972305 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064192182 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069993801 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06584987 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069951614 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067472144 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065368403 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063958786 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069158787 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065874688 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069070177 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065623787 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067279562 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06563543 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067189206 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061562249 seconds)
  done (took 2.628865073 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086641748 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067196993 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067000873 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075968352 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06697043 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066967678 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075106435 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067223815 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067013814 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086789391 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067326736 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066705114 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074815332 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071734323 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06687004 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074600012 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074680929 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074886694 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066963442 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067128611 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087001472 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067120025 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074597273 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067173094 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066837673 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066665311 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066792998 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072076898 seconds)
  done (took 3.273276277 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066138436 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066595689 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06338986 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062899176 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063373924 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063347964 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062926131 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063041484 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065575944 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06374453 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065594714 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065517049 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065726017 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065410515 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065575966 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065529152 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065411042 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063444859 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063042812 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063459278 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065411795 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065255718 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065696508 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063563462 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063141792 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065476672 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063323807 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063231833 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065331411 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062992588 seconds)
  done (took 3.209713603 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075037412 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072304134 seconds)
  done (took 1.424432553 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063152036 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07976843 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063131516 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069602232 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0700022 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066145875 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073283743 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069688345 seconds)
  done (took 1.828505962 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081857415 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077237639 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067556543 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080327377 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076192463 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082752618 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131435247 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067091601 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072233035 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063711661 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079132108 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065097603 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07177189 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066127056 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071057892 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072784445 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063697115 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071844896 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068060341 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064255014 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066884288 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074574871 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06816973 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061317495 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067027404 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087688892 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076919844 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065697145 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06867676 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073211127 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07199992 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060272314 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065814399 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066441156 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063888333 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075772006 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08111041 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068916888 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07425688 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066733689 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076609939 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061320359 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070201295 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072174946 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076140971 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066085813 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06657685 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061180419 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063729906 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068065367 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061140534 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065794849 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06061199 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075175843 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069100331 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076395759 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064330582 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067106749 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068648339 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068850229 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07293715 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067697648 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068179174 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065560806 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075203561 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070705172 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074965457 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061660262 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060411102 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064203546 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077078125 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088277892 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072693758 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066670826 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067011385 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064382901 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069224917 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067160169 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071482282 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072015319 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066317823 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071675503 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073140045 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066431472 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068201526 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07443588 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064215325 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068832081 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063777457 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082181875 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064877663 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063981234 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063810919 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075875156 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068998707 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065827875 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063935434 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073046615 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060271473 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066504478 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067086815 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066723721 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076205456 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07082512 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071150701 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074284428 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072794868 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065696188 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067872942 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062635817 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0658206 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063756777 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071512414 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059066561 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067189915 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06565165 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065462847 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.203492553 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064749398 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066773986 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074060864 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071949224 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065094057 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063110669 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070003885 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066851851 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070067324 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074809097 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064538724 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06239312 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061335774 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070228664 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067025634 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070261989 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070987534 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069118792 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061686771 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064824666 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07197882 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075587724 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068143503 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067713158 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073259758 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068005929 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065601745 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072275393 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068916636 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066350166 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072520552 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067263743 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061711449 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069840859 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068900405 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065391668 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069940205 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069554784 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069226361 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066970283 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065457181 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074819913 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067381064 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065629655 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066437962 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064819069 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076878705 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068030096 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06200182 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062833125 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075962921 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063869181 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065239139 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065877859 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068138273 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067717424 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064825586 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065923271 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068117652 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07640804 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070586277 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067714683 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071852446 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076639738 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06599243 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068535511 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06602745 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067435421 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066520407 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074669955 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070915469 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070554834 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06807557 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062929587 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071833961 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072842182 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065330725 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063894852 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065280594 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070689698 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071709367 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070363579 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066864056 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06427055 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066945761 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069550887 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068362768 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065411054 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065204434 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072832291 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06417992 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073474694 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066995322 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075728073 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069322608 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061320424 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06920781 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063993832 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072058088 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06153614 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064005022 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065294793 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066962512 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064922919 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068570294 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.0601455 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0725844 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073107447 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066100005 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065162611 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065440125 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071484646 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066346203 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068800645 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068184982 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071043851 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07542331 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064308403 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068343848 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.208163145 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067141496 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060452241 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071396834 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065204024 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065342878 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.0655946 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064798395 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070028322 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076488094 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073713752 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060558839 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069429743 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065209241 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065764675 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062537295 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070433758 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069550971 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067883195 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07282544 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067276624 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067597283 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070003584 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066074841 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067780977 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068564944 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070290287 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067745496 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068739326 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065966088 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069458491 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06561339 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064455751 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06821319 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066349747 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066990969 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072601707 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066744727 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066960456 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069129359 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066749244 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066842419 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06740301 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.0658489 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070004383 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066683791 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066803212 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068944354 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061650808 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073486145 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065615759 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074415852 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066583762 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062905162 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073655924 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06870171 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072924063 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066995207 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067392657 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06736527 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066327587 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069831366 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072646808 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064610254 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077316973 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07431526 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066893115 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069072973 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066494363 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068034268 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065365763 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067140316 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067172949 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066423288 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066280571 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070707534 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068827401 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066713284 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067740575 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066996026 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066799306 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067284103 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061045633 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06547134 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065985228 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066070094 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075944332 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066918449 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066046655 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065221335 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067354524 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06528807 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063538333 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074737831 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075787891 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067121558 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074052701 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065690628 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067631279 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076763394 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060760553 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064834388 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064307046 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064359855 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073772424 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06704813 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075565035 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066320191 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065813697 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06367861 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067431256 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06533719 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061183319 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064501666 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070093581 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06511228 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064869713 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065939659 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068718848 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065956917 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075891698 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065418859 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066337207 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065734348 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.200149285 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066742222 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066755353 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069937381 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067756415 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06482401 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064380816 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066538548 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067715809 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067778758 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067516391 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06797121 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075942096 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067067006 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069289344 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070102252 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062025713 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070736404 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067575235 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066534509 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065964165 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07054185 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070422277 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068013333 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074895641 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066467525 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0675862 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066659457 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064859118 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067219052 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066607297 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067626856 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065460854 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068322713 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074382089 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064174458 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070001042 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066591929 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066836776 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073117244 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067294606 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069417299 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073431562 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067338634 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067981535 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074136042 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070831469 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070507575 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067878875 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068972214 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07254889 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066226032 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073128029 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067377513 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068355578 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067997836 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064205195 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065977896 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066696165 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06642449 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073034118 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067074697 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06669167 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066008758 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064424124 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067594531 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069892279 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073701031 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068940695 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069305049 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061697459 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063200477 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067971322 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064210182 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067726061 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068746578 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071783878 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068387062 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066928489 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064862388 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074781957 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071554229 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069869593 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06442201 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069737227 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066713953 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068166521 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06725674 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066169793 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067779856 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069819525 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067595152 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065199778 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072830979 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06956269 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066914279 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067702633 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067113804 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066236275 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061396607 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066831584 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068133871 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071039335 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068630831 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066096799 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076534527 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063865907 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066603769 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069326276 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065434388 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070790595 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061566577 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067581554 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067226009 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067316037 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061033358 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064817782 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063548372 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06751065 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064124879 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060833069 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074800058 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073301974 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067788118 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.199473118 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066701945 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061636082 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062117708 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065143628 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067573092 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068575133 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076817425 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065102196 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065096775 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062109969 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067595855 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069504802 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070147355 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064370071 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061752451 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065864619 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069694596 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072573161 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065679808 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066026032 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069733674 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068568161 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064140821 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071309988 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063814467 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070864219 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079568029 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068242843 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067452097 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07320575 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074579292 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067148638 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061805602 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.0672795 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069500769 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.0672364 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068130671 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067700179 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081557204 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069108984 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064796558 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065334407 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068916592 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066040033 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074131992 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068265497 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068166526 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070700808 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068869699 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075625208 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069449065 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074128584 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069586041 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069578115 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06563163 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067339106 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066034667 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065391777 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06798085 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067738322 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072304223 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074714116 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065559288 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077660197 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076024955 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068437978 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062962586 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066152729 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065708337 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062029478 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06679646 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06439477 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063928837 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064505636 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06541452 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067181541 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0711297 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067234277 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066621881 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065874284 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06022009 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067851848 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068148494 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066974859 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062667158 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065836601 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067051832 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069731933 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069137709 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063773247 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067492144 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067539557 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066948129 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061422189 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072305947 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065240974 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067737146 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065785835 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066009462 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067089509 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069517396 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070755754 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067095478 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068756152 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069711757 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068361777 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063512643 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064013558 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071251642 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064407168 seconds)
  done (took 42.548026618 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099070442 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062520538 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06144775 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061955786 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07427305 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062818279 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061817018 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062629152 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062741969 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06537833 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061955554 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062172751 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070763261 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078297475 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073740564 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066700489 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062063782 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063350828 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061843996 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062832012 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070791029 seconds)
  done (took 2.779458077 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074353077 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070638953 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073197591 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076127476 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067355441 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070609755 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072524235 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070404214 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076440726 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066940333 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076276403 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070756658 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066771553 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066842994 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066785814 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070734285 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075783399 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067211048 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070925463 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072984573 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07074391 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072362082 seconds)
  done (took 2.912563808 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06681996 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06543377 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067459476 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060859037 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065345879 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061188896 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07780157 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063854764 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069161084 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064751608 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064905823 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064423306 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067766726 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060963245 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065451751 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063669654 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108049361 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06865379 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065860624 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066159214 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061231853 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067377983 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061386142 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061697788 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064693451 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069019167 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066633692 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064052188 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065590772 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064511606 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06604028 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063949881 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067323917 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066047553 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064998906 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064489548 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065762705 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065353484 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061423388 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063901908 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066120486 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061871498 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065879924 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066863229 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06402956 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063542535 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067148824 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065189126 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060784021 seconds)
  done (took 4.584067729 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080459441 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108755502 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067585352 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088031407 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080166266 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075139412 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069055115 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088729979 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063368133 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063969865 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081065101 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079877989 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065740762 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070148404 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072375161 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065498507 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066854169 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064588452 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069716554 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064774366 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069625275 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071669177 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079826107 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.0787301 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069189281 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064237016 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065055104 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06962118 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077983464 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.0701071 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070125959 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071013559 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080032125 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07044552 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064564315 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06736292 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081149689 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065482086 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067938572 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063153618 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067569422 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069498335 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071705219 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081557127 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065688575 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070462659 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065344261 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062518221 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077820321 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067356304 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073011092 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079492324 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068841319 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065305278 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069650872 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079956114 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065313303 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06358107 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06824163 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077565374 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063000162 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068832713 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079394495 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067637142 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072432811 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079549877 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070362702 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068841111 seconds)
  done (took 6.366344249 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074931673 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071410244 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080619009 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08027011 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071947883 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072137989 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072101043 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071995631 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071676677 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076690538 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071980581 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09261532 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067342051 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075095241 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072258371 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072185487 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072216613 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071973385 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072225631 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071753135 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072179432 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079682013 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071908924 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079755086 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097694074 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067335546 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071891942 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07197158 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079919615 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072040645 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07907603 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072167355 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07197989 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080403943 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079190697 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071683286 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064657225 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071827912 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071919003 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071865794 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0675556 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079937048 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071592042 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067156388 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072340038 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071360002 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079713164 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078946675 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074757648 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07663479 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071967897 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07988306 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071629617 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07189633 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0797859 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104709943 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080095215 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080064189 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071839173 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079963097 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07945363 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086202461 seconds)
  done (took 6.048437007 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084554629 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075430402 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076298753 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061543025 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063714191 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069819061 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0637663 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063780101 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07412763 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.0743052 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076787475 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069774589 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072532414 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076631763 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069476918 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072715554 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069658286 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069506868 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074172257 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069467831 seconds)
  done (took 2.797105323 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073834541 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083316561 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066834077 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072606087 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068540234 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071833033 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.0681443 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068545079 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066603054 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068646646 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075686202 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075712666 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066524876 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071384602 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07546317 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071064286 seconds)
  done (took 2.506366906 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074985332 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071928313 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079023913 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065994601 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064373899 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062445108 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065766283 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061249299 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062087178 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077847676 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065574822 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068121534 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06572692 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064073793 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062528754 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068487652 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062282997 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06323967 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065511757 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077834204 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076077188 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064120131 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06632873 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065512947 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065605782 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070677263 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065102528 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063416387 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063233016 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066049245 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066637184 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069587387 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063147163 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063753309 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064299468 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063730231 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065520686 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066436793 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068551306 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065341813 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063616673 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065598534 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065782399 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06692623 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061969422 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065802437 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061955027 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067536275 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063506674 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066014798 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065162174 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067726663 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065917256 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072241061 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068633083 seconds)
  done (took 5.022918432 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078686772 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069114057 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061791587 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063393967 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068484419 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067602206 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069136535 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067245802 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067393264 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063899524 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067634068 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06905802 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067451881 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069442885 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067354094 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069507187 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061754347 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067265999 seconds)
  done (took 2.591206576 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070355267 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065490502 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072687655 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065559957 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065860433 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067989236 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061749148 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064329418 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064388347 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065939961 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066113557 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067967475 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064133984 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067881503 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065753276 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06591878 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067773368 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064650038 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065465775 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061748657 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067769375 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064268185 seconds)
  done (took 2.820855329 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091886779 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081462689 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137539354 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07804696 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08298115 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071768983 seconds)
  done (took 1.912631719 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089766238 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078785056 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066761354 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087925871 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073411173 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067292129 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067025722 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067532998 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076501972 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076441418 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067276405 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076100324 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075944594 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075988686 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073421777 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073661139 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067836644 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06777887 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066344627 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084391339 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067771913 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076187794 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067225152 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067011568 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06712318 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075357005 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076001569 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076043367 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067318655 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075787968 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073273812 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067255349 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075670247 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075965883 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069734182 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075591201 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067884659 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084893611 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072682639 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075047719 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068180776 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073254968 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075788217 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071881016 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075632596 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067978774 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07241022 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067386443 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067737797 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086105888 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073185305 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075458857 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073664522 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076588047 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076768375 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086589765 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076195601 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075497708 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07339299 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078437539 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075478584 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072866837 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074851028 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075905678 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073501711 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075899739 seconds)
  done (took 6.250381833 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08192871 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086150375 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067623242 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076016783 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075367449 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067388567 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067554692 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067233983 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067489294 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067138554 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107720629 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067948523 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075687786 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07600788 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067979078 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067538207 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067687374 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075433981 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067275824 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085899363 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067310713 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075596188 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076716104 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075757954 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076205144 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073595539 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067752931 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067560721 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067348391 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068139312 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072328292 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068058104 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075647392 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067001421 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075497532 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067614465 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067319347 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072645113 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067632234 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072918247 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075532034 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084135933 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067390931 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067083794 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07608725 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067450062 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067224413 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066808619 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067553773 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066955519 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076349801 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076129897 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076260001 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075412989 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068262295 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067644695 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067595276 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068011 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067925117 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073225821 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076042489 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067394396 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08671209 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068016903 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068377786 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075868628 seconds)
  done (took 6.162944076 seconds)
done (took 129.394572069 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182321385 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165457305 seconds)
  done (took 1.717271064 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069199526 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097059933 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076729692 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12827491 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065917413 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10019998 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099043247 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077612737 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066062105 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065951594 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06602963 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068220596 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130769601 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066679052 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065991264 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068545712 seconds)
  done (took 2.695349073 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09709592 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157988895 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09904734 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064175273 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096861736 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072850402 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064613958 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075056674 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070888704 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064983111 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072644377 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070327725 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064686407 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070349933 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071032169 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072629338 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064723691 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072481036 seconds)
  done (took 2.806738068 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100736313 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091418253 seconds)
  done (took 1.579379021 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155449982 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.109957892 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150524969 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345727767 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167699393 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229816498 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126995201 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127159948 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117413867 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123714128 seconds)
  done (took 3.03789563 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097847034 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152441162 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253818763 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114916415 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072744561 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095380868 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115635045 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077657731 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080461736 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080372281 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080483671 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076116825 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098829348 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073460858 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073138724 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075821323 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102449716 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072257809 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074018619 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076530739 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099675853 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06552061 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073500165 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072188661 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077579888 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077527188 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065427637 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065504835 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076914647 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074268869 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077139864 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094361224 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077445207 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107629469 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070206728 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108261414 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076317743 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073732833 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074010127 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073731319 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078898592 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078679226 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072112766 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076425423 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065358331 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076113217 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065288298 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065310636 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07799204 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066592151 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077805454 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076527849 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107066743 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066749958 seconds)
  done (took 5.985878961 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102018856 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103718843 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071543255 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110864208 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100239617 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072348557 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101660214 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093133033 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102866086 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06984384 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068425714 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070563998 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082811473 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083082719 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113140801 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104489312 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074016936 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071063953 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104252681 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102658684 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068383147 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094385755 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.08955934 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101852736 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067576011 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070203954 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068008784 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070273601 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076757734 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078978892 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06986361 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080888215 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084726184 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079121462 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067309866 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068478737 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068254782 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080447341 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079603552 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078823987 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077958625 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068149342 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068091248 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069479993 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070280476 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068051179 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079530083 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081051037 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079332656 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069772819 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069817789 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068267071 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069343679 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082315039 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078260721 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081755815 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080766301 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068512689 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068514303 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072996993 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081021601 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079930808 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079458097 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069636518 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079135244 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068445064 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080477273 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085262282 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068550887 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070175151 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068548997 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069639617 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069571011 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078003063 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07832282 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069477725 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069573997 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068450349 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080566903 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079228514 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068445959 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077421058 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067191761 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06840395 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0695975 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06974656 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07780666 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080528509 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069496734 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067871898 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06969101 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068325553 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067035419 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077078254 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080345175 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079025649 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078823289 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068303712 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078004758 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077443699 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068862322 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078701202 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067651638 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.202136547 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070292549 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079420325 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077939926 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080974568 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069535214 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067951514 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079011965 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081354616 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068691101 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080267921 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081389897 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080637595 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069048747 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081866625 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069462571 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080079301 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070690697 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080875611 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069142179 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080566967 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0694439 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068710213 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068493459 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07978118 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070407127 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068665648 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070524955 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069863392 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080410523 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083281422 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071689366 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081468019 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079134403 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070974747 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079764823 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069262952 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080304296 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069359038 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069689729 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067654799 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082374659 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068721798 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068466547 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070775925 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080272558 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067913406 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081128788 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078992018 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068364906 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082195122 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08111063 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078353716 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081392563 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070879204 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069271054 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069424632 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069089551 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078323872 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080464429 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070520422 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068873942 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078404006 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080519916 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067498356 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079417144 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078373722 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078563445 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068480287 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070037542 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080235193 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080861628 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078458924 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078255854 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078507787 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068479199 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077930428 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078168636 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068234497 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084681305 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068311192 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082918723 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078958814 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076853894 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079051566 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080703672 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080623632 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080626919 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083723025 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067783607 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067883195 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080255498 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068022972 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068967243 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078417088 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069580477 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069203864 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083301648 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068183266 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078842059 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066773738 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077470962 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065835915 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069243463 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08219399 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.20255061 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071538727 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081173785 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069517259 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078983178 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081689057 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079407599 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068318533 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070609983 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080524649 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079439488 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069282459 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068073649 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070470022 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079349133 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07746426 seconds)
  done (took 18.731095787 seconds)
done (took 37.9474788 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209215639 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152534795 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198033564 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118190927 seconds)
  done (took 2.162747886 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121757507 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101465722 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095064287 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064711946 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102191128 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065016312 seconds)
  done (took 1.971789387 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31344082 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211522625 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183193081 seconds)
  done (took 2.12308155 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.19910359 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187173176 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392734371 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252759086 seconds)
  done (took 2.56075315 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143853058 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08931909 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066682126 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082992582 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135253627 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161970528 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101533205 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126941889 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077589724 seconds)
  done (took 2.458526609 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147801141 seconds)
done (took 12.844890102 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.259026105 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.217976668 seconds)
    (3/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112827461 seconds)
    (4/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.221846796 seconds)
    (5/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.192558499 seconds)
    (6/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091162096 seconds)
    (7/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.158064613 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107304901 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081457157 seconds)
    (10/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.196707503 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07730631 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.130901928 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073359342 seconds)
    (14/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.155529129 seconds)
    (15/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07478409 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.185064164 seconds)
    (17/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064889574 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091872425 seconds)
    (19/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.18375457 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.107257587 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116204488 seconds)
    (22/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07992273 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132783292 seconds)
    (24/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.106225455 seconds)
    (25/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.156263714 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090741802 seconds)
    (27/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.061716313 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.204502967 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071621922 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194140222 seconds)
    (31/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.155375011 seconds)
    (32/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077369309 seconds)
    (33/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.170448613 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.202730179 seconds)
    (35/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.073905341 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087403642 seconds)
    (37/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076413055 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071311753 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07144566 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.194423167 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.0524431 seconds)
    (42/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074031904 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065275159 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.09042245 seconds)
    (45/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064778545 seconds)
    (46/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168645296 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065945349 seconds)
    (48/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074858703 seconds)
    (49/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.184439136 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072803996 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090701426 seconds)
    (52/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066102402 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087851292 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085905102 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088681154 seconds)
    (56/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087200009 seconds)
    (57/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071627634 seconds)
    (58/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07598861 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067305367 seconds)
    (60/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076910515 seconds)
    (61/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073712405 seconds)
    (62/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.196772031 seconds)
    (63/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.062345313 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066786471 seconds)
    (65/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065195719 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089187329 seconds)
    (67/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.158144615 seconds)
    (68/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104561936 seconds)
    (69/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051786379 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.188910472 seconds)
    (71/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154046134 seconds)
    (72/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068163319 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.155995193 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091234853 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.149270499 seconds)
    (76/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.10915842 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087864669 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064463585 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089823225 seconds)
    (80/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099190237 seconds)
    (81/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070189557 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070598209 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.065501421 seconds)
    (84/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080921859 seconds)
    (85/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068463053 seconds)
    (86/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.243516958 seconds)
    (87/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099868412 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065253446 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078366553 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092085649 seconds)
    (91/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.073851099 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089589402 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.39534878 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066950231 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070999079 seconds)
    (96/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076149549 seconds)
    (97/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066495391 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072996885 seconds)
    (99/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074079491 seconds)
    (100/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112967543 seconds)
    (101/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081550968 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.10827023 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.167112186 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080753582 seconds)
    (105/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.158770249 seconds)
    (106/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072690268 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065571508 seconds)
    (108/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.0722053 seconds)
    (109/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146864841 seconds)
    (110/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098107883 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.085758663 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053486182 seconds)
    (113/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.10621885 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073289651 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079577352 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.175740527 seconds)
    (117/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150559486 seconds)
    (118/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051388468 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073093818 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136758377 seconds)
    (121/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060270366 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117722198 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065438897 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.07552785 seconds)
    (125/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.149629335 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.075560879 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.173517645 seconds)
    (128/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080933675 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065050175 seconds)
    (130/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074364353 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.133353964 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07283496 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064990473 seconds)
    (134/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078481858 seconds)
    (135/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061758912 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071421048 seconds)
    (137/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072224345 seconds)
    (138/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053266609 seconds)
    (139/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172025866 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070538802 seconds)
    (141/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.173881508 seconds)
    (142/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061662912 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071377906 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091871898 seconds)
    (145/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052393351 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051066545 seconds)
    (147/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.178318662 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052216409 seconds)
    (149/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.193824227 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119565593 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052147391 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071686824 seconds)
    (153/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060591051 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.161996499 seconds)
    (155/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113683599 seconds)
    (156/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084632274 seconds)
    (157/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182169021 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.0647113 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071566789 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072000192 seconds)
    (161/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085465587 seconds)
    (162/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072309034 seconds)
    (163/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051456433 seconds)
    (164/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170716106 seconds)
    (165/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052311998 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071222935 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073097699 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090726331 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072002858 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050931193 seconds)
    (171/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051040614 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070824274 seconds)
    (173/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070246544 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071211301 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051363272 seconds)
    (176/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066705942 seconds)
    (177/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071771501 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.09359876 seconds)
    (179/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067507311 seconds)
    (180/309) benchmarking ("sort", Float64, false)...
    done (took 0.124397538 seconds)
    (181/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052099872 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167232724 seconds)
    (183/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051895832 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07473689 seconds)
    (185/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.157608836 seconds)
    (186/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072948566 seconds)
    (187/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051261779 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050842241 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064707599 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.124864183 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.104561564 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107092163 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.23547343 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088702605 seconds)
    (195/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053473164 seconds)
    (196/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05150995 seconds)
    (197/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06631555 seconds)
    (198/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073466212 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074162578 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066096275 seconds)
    (201/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099634599 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065913237 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139168815 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137743031 seconds)
    (205/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052819629 seconds)
    (206/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064874863 seconds)
    (207/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051585723 seconds)
    (208/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069591888 seconds)
    (209/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051971338 seconds)
    (210/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072685707 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06453379 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111828401 seconds)
    (213/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098921835 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094218405 seconds)
    (215/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070928184 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139277031 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067227003 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075060848 seconds)
    (219/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051182225 seconds)
    (220/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068689668 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074104785 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065276505 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07283825 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092684375 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150191958 seconds)
    (226/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079865214 seconds)
    (227/309) benchmarking ("sort", Int8, false)...
    done (took 0.139148577 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06561749 seconds)
    (229/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05164712 seconds)
    (230/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05243866 seconds)
    (231/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051430656 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070941844 seconds)
    (233/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053009572 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.132121835 seconds)
    (235/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065621994 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079135365 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064281492 seconds)
    (238/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051895631 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135127619 seconds)
    (240/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051203759 seconds)
    (241/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066315418 seconds)
    (242/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066946524 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065182883 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065681333 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05223256 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131772276 seconds)
    (247/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061199281 seconds)
    (248/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088661927 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051458998 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065633277 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068049037 seconds)
    (252/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062174463 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.148731961 seconds)
    (254/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07291196 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051683219 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051478006 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052440275 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051254487 seconds)
    (259/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052855643 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065178634 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064678147 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092149419 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098183813 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071269097 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086004848 seconds)
    (266/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070559759 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089085171 seconds)
    (268/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052050328 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072596129 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052135676 seconds)
    (271/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064429782 seconds)
    (272/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052421899 seconds)
    (273/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071271346 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065512005 seconds)
    (275/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051412503 seconds)
    (276/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071495738 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.086924653 seconds)
    (278/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067817081 seconds)
    (279/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051020786 seconds)
    (280/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06516921 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051001685 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053137868 seconds)
    (283/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066704951 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072946146 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087412646 seconds)
    (286/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051675761 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089587043 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063906619 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051341752 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063674716 seconds)
    (291/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051579452 seconds)
    (292/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051254858 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071858515 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064539576 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17164955 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134169595 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070723547 seconds)
    (298/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064147403 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094067719 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129728117 seconds)
    (301/309) benchmarking ("sort", Float32, false)...
    done (took 0.126025663 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065879093 seconds)
    (303/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052385333 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070280413 seconds)
    (305/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052383489 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052644606 seconds)
    (307/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067332125 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136801078 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050813007 seconds)
  done (took 30.346907256 seconds)
done (took 31.779930271 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083732819 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091362058 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074069332 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092651967 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080217282 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075716238 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072041485 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077620792 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079444286 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081088995 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078199193 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054333567 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073354142 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073887742 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073900179 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090150266 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076969596 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072166984 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072413801 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06409211 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072460979 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064850249 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066762552 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054093192 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076963096 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07114182 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072338957 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073844221 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065206009 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065722742 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068592279 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072701331 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065001485 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077210131 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.0718286 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07255271 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07438222 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075552329 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067225814 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065294508 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07370377 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065307166 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071949139 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072648396 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071151271 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070594663 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072447197 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077479913 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090597113 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067517876 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073676398 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075144503 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075651689 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072151076 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069115984 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072576691 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070243099 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090865723 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07261432 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067466746 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073146358 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073299726 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070637724 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072400256 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072387387 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074973739 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074624467 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070316429 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073885741 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070322857 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06519978 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072402273 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068247228 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065162822 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07464687 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075808724 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063852375 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070355059 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072409184 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070527121 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064394054 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066698355 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066552672 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070695978 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066626533 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05413548 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068511914 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07095516 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064355273 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072886787 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071107237 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071244843 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06639159 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074903476 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064343553 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070221124 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065242712 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065261406 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066781845 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068858694 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064691277 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067244429 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073720637 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066437875 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07061735 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078376492 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064822771 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071276332 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064116924 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064341642 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07845305 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073869672 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064939258 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06720441 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064172583 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072218065 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064281228 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064583662 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064595305 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064416071 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070280638 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064340783 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066331772 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071349598 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075766874 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06369206 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06704421 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066189706 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064184147 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069877116 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064115436 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.202778594 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067342717 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061615955 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067062917 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065730915 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07251415 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067701446 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072014874 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06736686 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073096157 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070161741 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071164994 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070982613 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06423772 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058241571 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068508827 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067865006 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066820317 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065855812 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066965435 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065593358 seconds)
done (took 12.39228299 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066679447 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144076082 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098843579 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094468805 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08566649 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065930551 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075977036 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101936816 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067322037 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101772361 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087329905 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084547545 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111689201 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064488987 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06553337 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069466263 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066830586 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081371545 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100347059 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086057582 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116046794 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065032142 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094046754 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089511713 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086963991 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091672591 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066257182 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06960524 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068993038 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100142215 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085612249 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069641332 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066353731 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100302401 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092182763 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083248106 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065913879 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081952686 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066308961 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065340469 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067371226 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098003043 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080236742 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080183528 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06963818 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068716585 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066949087 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083241873 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088497457 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078566033 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08644295 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102781418 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068625102 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065886047 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064893589 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085188043 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065228264 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068607975 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066170945 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067896744 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066027351 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068642397 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080679296 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081934809 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069141601 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080366981 seconds)
  done (took 6.805691143 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083874399 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090224726 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083205912 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083298288 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065066865 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065918015 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066100191 seconds)
  done (took 2.061539052 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066376152 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087859014 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087841688 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088165165 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083494121 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087254729 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075541859 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066403558 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080178104 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067629145 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086780758 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101528316 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06702618 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072289015 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090039881 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066127836 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090307312 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066182941 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069039165 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089144366 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067933879 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081250754 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069605042 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066369122 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080504735 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066623219 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11261828 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070638602 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067715285 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069215489 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064652353 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106342689 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080214817 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07540179 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066407181 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080070262 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080637435 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065057363 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082588262 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071436807 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080095282 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066825712 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067562979 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064442749 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07072259 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076874796 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067411901 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066949657 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068790964 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085820265 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066787141 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079696813 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069227941 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069001759 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06761476 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069713322 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075792632 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067251671 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085548821 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067309348 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082394427 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081817326 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080151025 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082280976 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069373717 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079723757 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08101403 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068689775 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067822143 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069379675 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082330347 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064932508 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067609868 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076404487 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067813441 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088999051 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088813079 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067414893 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075652759 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066891278 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066482643 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066789527 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089018064 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068817248 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066258497 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070070245 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069054562 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064926008 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065162471 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069639541 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06437052 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067283765 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068643128 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069285623 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068893638 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082287928 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068309977 seconds)
  done (took 8.753704379 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068001691 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068109765 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069212682 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067855599 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06778442 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067927747 seconds)
  done (took 1.950847722 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092908903 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069332513 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081506849 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071901641 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104491228 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086376082 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087041291 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079285389 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08355747 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079020682 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086177186 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088477848 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092881538 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07236241 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086075991 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072057402 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087058851 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075821357 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078397637 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07289286 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086354272 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072399846 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073111257 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081489989 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075348282 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072189917 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066731716 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078399456 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078160864 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078847455 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072230833 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075674794 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070896205 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078741267 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086687274 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070834633 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071747597 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077028087 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072455699 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075299953 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087613395 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072480241 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074751744 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077842829 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07815399 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070423606 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076926242 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076098844 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085810771 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076751163 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076723673 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071390057 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074883814 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076764388 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070619307 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078558735 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07695438 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086655308 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072365849 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070460844 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069103943 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07516734 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077981427 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074967071 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078798956 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076766535 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070297756 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072567024 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072388766 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071493376 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076502433 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069087211 seconds)
  done (took 7.098716203 seconds)
done (took 28.181399869 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542767148 seconds)
  done (took 2.054370999 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.598079605 seconds)
  done (took 2.133980967 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.53328298 seconds)
  done (took 8.062794563 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400567032 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.484760657 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.693208621 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131319865 seconds)
  done (took 3.286014441 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.677984296 seconds)
  done (took 2.219041211 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208739431 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197871568 seconds)
  done (took 1.959188952 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376116069 seconds)
  done (took 1.911682384 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.114233986 seconds)
  done (took 2.651480784 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263228366 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163554841 seconds)
  done (took 1.970023177 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457862897 seconds)
  done (took 1.997225565 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.83286841 seconds)
  done (took 6.375556626 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212508357 seconds)
  done (took 1.792613249 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239141649 seconds)
  done (took 1.776964824 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.699225666 seconds)
  done (took 3.238450137 seconds)
done (took 42.968603863 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080315434 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080397043 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080951344 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077618376 seconds)
  done (took 1.847280471 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075796159 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073286744 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075728162 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07146905 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075693341 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072626628 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073731178 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076497749 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072061231 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072458884 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071742218 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071995879 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.0743452 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074067707 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070607095 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074111114 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07582527 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072459297 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075019697 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072253358 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070723961 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073960948 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074705247 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071133416 seconds)
  done (took 3.309516613 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077258347 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072277348 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073895972 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071018536 seconds)
  done (took 1.846271734 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076444372 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091447142 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088333564 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076829509 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09116484 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085757532 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068767191 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068784499 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072707669 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076356979 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06754707 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095337935 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087490753 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076600265 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078435953 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065500997 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067907714 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086071821 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076541251 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077056271 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069451438 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076696301 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067401198 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087375627 seconds)
  done (took 3.424513236 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077266492 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103347939 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077856555 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087363138 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088762718 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065106868 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073874251 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089273799 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122472186 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065224134 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070061913 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064962746 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072039456 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065151837 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075618091 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103860045 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106985518 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067986285 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095396311 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065165064 seconds)
  done (took 3.192477274 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072473491 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069867043 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065166161 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068739773 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076815702 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072626491 seconds)
  done (took 1.980219737 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068384757 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066971606 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067483603 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066212159 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071236325 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066705015 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065168579 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066861085 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067059541 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066242802 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066334749 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065443397 seconds)
  done (took 2.354069676 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.177866224 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068764197 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068885534 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065110087 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070034489 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066251211 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079542835 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067383686 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089880204 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066095271 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066189759 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067804982 seconds)
  done (took 2.505721507 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207458584 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07563483 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237240884 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136250164 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111369691 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115064719 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102953402 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113505107 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143566826 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101964055 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167956986 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165272771 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106810794 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137039487 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088547925 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096792098 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155865454 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161828008 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103085536 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165821248 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143789462 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124005695 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146636567 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100691984 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105597863 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122079286 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070317842 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079651285 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170463001 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132435623 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145828883 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11005862 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093535981 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176402918 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170939334 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142496372 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13447874 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083347989 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10127182 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132432539 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197732789 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087897399 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161595975 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106260739 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078709999 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130042538 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116029102 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116486718 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10243128 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087354498 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141484461 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175700118 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.133752128 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08397615 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108505264 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111042982 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.111602619 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099844758 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175679198 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155861298 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12299643 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069159933 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095765382 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144948435 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123539225 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103073793 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.118456793 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08784918 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125506951 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145244998 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110498008 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133769098 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.121005884 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084417037 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112608065 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131479149 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120050021 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15825237 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117676107 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.069603158 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116784688 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097041877 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077207378 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.135878984 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071829136 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163304625 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093975796 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10041489 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108186266 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10316057 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103171848 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150715626 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.386881745 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106008042 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066178405 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105703827 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121740559 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149413853 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087793905 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109951568 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117413891 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078379007 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140643591 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075512317 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125286973 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075313585 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126163249 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133138476 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075702478 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121697373 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10134856 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10103712 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133379327 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160872809 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089500547 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083168259 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167667895 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123313833 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104583526 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14330504 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155754013 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098160696 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102840758 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15063025 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181867513 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089696819 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163759783 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107469424 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083418274 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086363366 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124318588 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112281539 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12249575 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082173258 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118105108 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16815959 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074636765 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094600166 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13291424 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078385213 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080069945 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103352833 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100941433 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094305351 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099156293 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103460633 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136775938 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123272103 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.250153422 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125320369 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098510546 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170155894 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08781619 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100608027 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103120604 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069707865 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138422535 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157694521 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078713823 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164592674 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123129954 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104979713 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118207206 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08295013 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140525074 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078395141 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069867909 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143638171 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110449156 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109161243 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151090814 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10391473 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127365284 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119650755 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13473323 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131515439 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128346664 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104687681 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08723912 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110686937 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125644831 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072711533 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091359884 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08013129 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103565279 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095230476 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082496557 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142353869 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124681898 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099775019 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111526649 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096351341 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146282802 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076152367 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129284859 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118947077 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093717139 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151717879 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151498757 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130570252 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099018627 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144603952 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070090278 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073318868 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088740566 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122818778 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08201264 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08264793 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116704972 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145680257 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128192691 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134640954 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109555723 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117767732 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150564555 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.067838029 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.112695909 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14289217 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117385684 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102029155 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087299074 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.096408166 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138488051 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104680998 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176323795 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110771401 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123085082 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148406893 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096522677 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078241945 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099942384 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131521521 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101931897 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140068443 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097025987 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086044307 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106906434 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072512287 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096985273 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123290221 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11635734 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135978649 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111395477 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128366295 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075152516 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113254754 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116579075 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11919794 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062602256 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11649183 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156539206 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091802076 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115482281 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148898079 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077582942 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.379355219 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1790063 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14700031 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086012255 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110334084 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119424386 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128529014 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121419229 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141730313 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108618413 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136358085 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109922752 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086127478 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087902962 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098507409 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104510279 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094997386 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109108987 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115786177 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095425708 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132951957 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103409488 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109662679 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118060855 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096214679 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088905964 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097252007 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174243785 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119436775 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171203821 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098668089 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14532944 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164433913 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074931784 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079152808 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077877954 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139239239 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083378092 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130710502 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09688723 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105537891 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123993542 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142598933 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094440469 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068082577 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108086416 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134550001 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112139421 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098156577 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104375323 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164195671 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099443174 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078897624 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112946886 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104254051 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101996333 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321634532 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061200931 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097683301 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075581918 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080404861 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127316596 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153484363 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080506585 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102593566 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118859735 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110266731 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127703717 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101444136 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098855184 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114096443 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150046789 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12852515 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089994769 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112071692 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128937686 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155854964 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104665347 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096126299 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171457682 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152129966 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159590939 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088277853 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113658806 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114101395 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107519082 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139138625 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082527419 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164513311 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081576354 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136026758 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103841974 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089965487 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13011504 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.115285599 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087680954 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14839279 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117261078 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082206022 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078117463 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117835961 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120135191 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106526727 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075051534 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13986455 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072651357 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132128714 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168028351 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226461738 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1051129 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0953623 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080234356 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108510288 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10201053 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089230374 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098042563 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173737249 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087952634 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149947266 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141751268 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113355821 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137595227 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099194249 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634732026 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077551041 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151436182 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116035256 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174204537 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097396821 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117434689 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109056087 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123120176 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143411443 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104453269 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.172309406 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131878917 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115574263 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082186285 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102339807 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102505229 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088631652 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104779077 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113337929 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115900152 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093401855 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115248995 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123497755 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081265382 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094759082 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15648726 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116720344 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144471787 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140420646 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084635977 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117972567 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139539473 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079048962 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122114644 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151959944 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.249852376 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097483442 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080432345 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102385477 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17006804 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072082668 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163860664 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121360061 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109368951 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112693018 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116116002 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132314405 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107017082 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1213162 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09332815 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110851437 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111831133 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081335862 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076401423 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103703023 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112138774 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097886536 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09847068 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098214271 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151797049 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07050026 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095030487 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102801803 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145067559 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17411241 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087366179 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081857752 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118909821 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112356048 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113007287 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12049262 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078677172 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082155549 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081802487 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076438488 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107901868 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111468128 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10457832 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110563761 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163968619 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082206251 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220369108 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094802555 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104312961 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069114965 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078494139 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095820206 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097357046 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108220758 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100369207 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170459008 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094499946 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089308721 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236207883 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074067405 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082085828 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127677307 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111111864 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118900482 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09758644 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062095201 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109758257 seconds)
  done (took 58.35363009 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107366824 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081450374 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095749109 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149404121 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122280612 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212692106 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157415965 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19850943 seconds)
  done (took 2.837170963 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067390784 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093255681 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098432685 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082202235 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066538902 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068145338 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223540508 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080129732 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066716485 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087681351 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078822028 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068423063 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.417820115 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065496035 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067233984 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062071515 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06681027 seconds)
  done (took 3.465288982 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.361497758 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.600221305 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370326381 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072472051 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.856763491 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091025422 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.04968715 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128991492 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072891535 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538438539 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.698069848 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.122995348 seconds)
  done (took 18.681138956 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074743521 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069413032 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082368527 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082386035 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071050357 seconds)
  done (took 2.095382766 seconds)
done (took 107.474441212 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078811613 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401314815 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053323463 seconds)
  done (took 2.199286562 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082372832 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083328382 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082883864 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082590211 seconds)
  done (took 2.058445362 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07309885 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075479207 seconds)
  done (took 1.869556039 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223948224 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.156442168 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085611417 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081500714 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077225221 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077961879 seconds)
  done (took 1.961162887 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071617555 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073645389 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072542744 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076012494 seconds)
  done (took 2.013754064 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074973132 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051793748 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05508616 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055049157 seconds)
  done (took 1.957385437 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084622253 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078240324 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077475591 seconds)
  done (took 1.9617867 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100586436 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083876845 seconds)
  done (took 1.905768771 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080424155 seconds)
  done (took 1.803022707 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097601978 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112701719 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130201925 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108992559 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137177638 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108270282 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08554587 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086609763 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076895128 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087287623 seconds)
  done (took 2.753400451 seconds)
done (took 22.743667181 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077710353 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369265766 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359301637 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088099773 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668441885 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355833631 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.983701934 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091468017 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112530561 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068569917 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084246387 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648644563 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.018815871 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323454028 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.006080323 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322821429 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64945846 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068244627 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067075077 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067409432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.978344505 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067021135 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067244401 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067951299 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648450616 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37091567 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067525235 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318282499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067351748 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069174556 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354100206 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06766183 seconds)
  done (took 16.284509769 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069566315 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11641051 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073652075 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082995846 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069963719 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069100136 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07097585 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068576156 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118476593 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067367082 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083906935 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067332604 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071133801 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068600496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086559032 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067667935 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068239044 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068159749 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067756646 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067775758 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086265625 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067185695 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067891314 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067742744 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067990198 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079030977 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068071813 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067770743 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067990228 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069554141 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070732206 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068328623 seconds)
  done (took 4.108435834 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113592906 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124481977 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073469069 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102044855 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111789678 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069687482 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141407567 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091992572 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127110324 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070106635 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085309709 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067366828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100254739 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069355158 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08745837 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068041615 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069153312 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068177831 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067779215 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068030904 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086473667 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06751701 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068321983 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068806475 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068308578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081096095 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068111783 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068169948 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068310442 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06992691 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071308325 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068923915 seconds)
  done (took 4.369238958 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071068469 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074528479 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082813206 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083064542 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068516685 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070581535 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072119861 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069951465 seconds)
  done (took 2.332199985 seconds)
done (took 28.822819678 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077710854 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068448065 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072314617 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079898699 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072765832 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07820666 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066471415 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074013041 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071296562 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072540009 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074073853 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066964859 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07066332 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067381172 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073170444 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067448572 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078703009 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071203726 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07842954 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078888342 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069367226 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072838508 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073681471 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078695174 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079274102 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078685922 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076935651 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072826743 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069390593 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070230458 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075891377 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083580101 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068244237 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078710854 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067481921 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067640228 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071039616 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067442619 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079469422 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076388112 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069421657 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076248556 seconds)
  done (took 4.803144222 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086305702 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089886923 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083937023 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.0616993 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066294402 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064208722 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087421941 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060022563 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058867083 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086866059 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055472834 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058879977 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062499849 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053757087 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.05928437 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056363549 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061094943 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055516782 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059052754 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058939492 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088204097 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053930309 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076897734 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062217731 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058720487 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061330685 seconds)
  done (took 3.478152118 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074131513 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08324276 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086918201 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126029568 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101781038 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076353305 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078802225 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091381177 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084043736 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066640421 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069950494 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092427933 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086861517 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072962546 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067484927 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084113525 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081277122 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069033012 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073218367 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091350668 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.0843401 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084022951 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091537926 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080256741 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066614096 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068812895 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070597481 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080711299 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071292116 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075514454 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070678001 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.06995801 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068926183 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07787266 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070658314 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068644064 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.08957969 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076963218 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077331098 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067906483 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070418282 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06808567 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09035742 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124750691 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066594889 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073485179 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074766751 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076194745 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06699065 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085337747 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078001109 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06710854 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070186875 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066512163 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067132266 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079601332 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069167809 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06922745 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076051557 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069978489 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.088823292 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071146224 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082117998 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066594606 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074444588 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066723578 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067932776 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066322832 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092063252 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068599558 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107393155 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068629063 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067994782 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076037894 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074261295 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072667804 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067387181 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082338026 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076970009 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070597643 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075791491 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07088826 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070371713 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086774903 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06930899 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068431438 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068119424 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073283189 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070034036 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068492422 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08009181 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067322634 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070005968 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083524307 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066620927 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068203818 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073299744 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071936429 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066641605 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078017884 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071783068 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067708902 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075945351 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067126146 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070332061 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078734307 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073705549 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06603063 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071821126 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073276011 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068148557 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068797988 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070100899 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06882961 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075469345 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073395846 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071676022 seconds)
  done (took 10.602820026 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158279378 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15247679 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070220566 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143337296 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075504913 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078395961 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148632472 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09365478 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06719608 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068560965 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06861312 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109862366 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105326429 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115659238 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078452788 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067500594 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08274203 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114110925 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148174488 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141843956 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083244907 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076775956 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069638863 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068355706 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070243938 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077666976 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084577972 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076125374 seconds)
  done (took 4.475008661 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080259864 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.09567778 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073763242 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08864076 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091236543 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067121946 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069723734 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069249998 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080072041 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078458137 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067203104 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072907919 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074531915 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071070488 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068487003 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074342608 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074276157 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068842125 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070289643 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072377088 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07694303 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080574358 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071089496 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06662874 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072355724 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066706995 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064116124 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084135806 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067927406 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089117626 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065693932 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074531446 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081145563 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068549909 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067218036 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067061329 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067101164 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067135271 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069119357 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065862294 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066258022 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05758597 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066701814 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07890126 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073494715 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056205356 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072424508 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072415994 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071941852 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065019052 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070306591 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069647422 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070354672 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074481893 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072297028 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072662854 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068150079 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073357175 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074539703 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067344542 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064027288 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065659717 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071349998 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065886428 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075175889 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071859257 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065636826 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066886258 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068808702 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072779509 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066621534 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070268874 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064755619 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068979664 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071374977 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068579018 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068105917 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065970368 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066755934 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067338912 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055159063 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066942421 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053214977 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069778232 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065706904 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065953432 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066997671 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072740989 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079672887 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068273728 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073070317 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067951289 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066312283 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069931711 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059846442 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069517453 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082060529 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082156356 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067121495 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065063023 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081053683 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071458214 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066193483 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056037469 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074420182 seconds)
  done (took 9.190897754 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087654885 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069320736 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08249041 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090605941 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086432008 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07363278 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075624437 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068637028 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081698495 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073203562 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075985167 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067590638 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076396565 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076531992 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069531195 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076729929 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071759969 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082455862 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081863613 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067964656 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075706186 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079347715 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088758045 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080010558 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077811296 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079440012 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088332745 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071391179 seconds)
  done (took 3.966953351 seconds)
done (took 38.250112878 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.816358792 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.990569742 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.818483082 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.159548814 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.940496011 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.935297354 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.881325714 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.815376173 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.020474252 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.857261662 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.100954233 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.871859374 seconds)
done (took 65.965941072 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.839762659 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.960478648 seconds)
    (2/2) benchmarking "String"...
    done (took 2.085716634 seconds)
  done (took 5.808060412 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.126239115 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.406195049 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.053494166 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.817611789 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.822677464 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.050636687 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.617567402 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.352570588 seconds)
  done (took 30.882264255 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.990604102 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.052165294 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.51839237 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.548168939 seconds)
  done (took 15.921408003 seconds)
done (took 64.416807087 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.834186569 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.844778864 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.832338215 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.802956396 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.877659927 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.840027326 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.0958289 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.081814785 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.81842496 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.806145376 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.82134201 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.254351114 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.826533041 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.128854146 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.817273689 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.828959453 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.882843757 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.249681766 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.976009383 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.831712686 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.818165653 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.845307225 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.819240302 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.96605377 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.863040022 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.822521955 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.271227558 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.822645025 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.449073292 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.819521027 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.84938039 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.379057819 seconds)
  done (took 206.939308982 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.818620678 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.073080136 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.123968174 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.825612723 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.516790831 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.000327299 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.940293334 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.550163516 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.821200336 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.832475954 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.995449487 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.818622467 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.024917574 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.768098046 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.848435106 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.825917966 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.045313456 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.038546866 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.851752671 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.987284444 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.842235837 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.819458814 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.784375173 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.992634912 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.84427032 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.905692752 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.834127629 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.846434689 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.015434836 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.005494392 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.855050824 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.853836546 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.024220433 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.695192197 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.845769718 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.849089566 seconds)
  done (took 172.483719267 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.985267002 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.82077218 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.819792524 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.820438286 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.819503515 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.827716712 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.820075281 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.942666879 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.952651048 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.274652733 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.277691654 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.874258381 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.63458711 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.81982895 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.889109664 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.834427545 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.820033308 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.821113624 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.83537464 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.849310701 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.826029906 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.821419072 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.947013853 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.83289772 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.898475906 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.828584249 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.820931695 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82648389 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.189813389 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.820593837 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.828030762 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.064235674 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.822102254 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.820099725 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.722760117 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.554632474 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.913629418 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.822537044 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.826985016 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.82227688 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.040814375 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.821115606 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.821584224 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.822839175 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.999623992 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.820450984 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.946871945 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.821295319 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.318552892 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.82207919 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.821544631 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.659510774 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.505440013 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.825124853 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.821913808 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.824265612 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.821409552 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.821865257 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.831001123 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.595084759 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.899724498 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.824271567 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.823902649 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.829635242 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.828825185 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.824596595 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.83225415 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.827821586 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.129180569 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.88369201 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.044031926 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.945640734 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.826956162 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.824601931 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.891152912 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.918159485 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.823951978 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.823129946 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.823783709 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.82310494 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.904720593 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.823871922 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.944355201 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.831337709 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.824711915 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.874052799 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.893539963 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.824838875 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.719777415 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.827157198 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.824195596 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.1271855 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.891026835 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.825280669 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.824129519 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.823677657 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.945767716 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.949986652 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.609217525 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.827309341 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.801944466 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.830595818 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.964519771 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.826571563 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.010870844 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.829454306 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.907386528 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.830311645 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.826586478 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.824507998 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.859407704 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.825114516 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.885493249 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.825449251 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.195564777 seconds)
  done (took 408.10967041 seconds)
done (took 791.335734874 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.514350257 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.464998105 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.575757411 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.491843616 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.461026943 seconds)
  done (took 14.278325086 seconds)
done (took 16.0459406 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.911863551 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.918111747 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.850553493 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.915014434 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.847204862 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.914409726 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.896046868 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.852061648 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.882397475 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.850962226 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.884161761 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.851915588 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.83811465 seconds)
  done (took 26.181891821 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.062180621 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.263566828 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.900114093 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.056992405 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.876003494 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.07145121 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.989515089 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.982011556 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.97990644 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.844075648 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.841298889 seconds)
  done (took 23.637239261 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.070624202 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.064882394 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.90618967 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.065185478 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.879134266 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.062189126 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.99435641 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.981063035 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.983028987 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.843494418 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.841151123 seconds)
  done (took 23.462344905 seconds)
done (took 75.04836643 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.8363379 seconds)
  done (took 3.60653244 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.859505585 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.041030627 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.881000093 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.839658936 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.835578049 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.835907251 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.840279467 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.83614618 seconds)
  done (took 16.740901254 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.835820836 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.832574662 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.832916677 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.835374274 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.835798403 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.83580573 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.833331282 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.836363464 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.836023994 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.834531769 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.836869898 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.832531505 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.835447691 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.83589211 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.833950949 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.832955477 seconds)
  done (took 31.128620538 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.835906941 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.834187823 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.833704182 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.835455706 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.833995543 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.83470926 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.835094589 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.835118056 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.835404104 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.834081967 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.834657769 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.83449643 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.835102447 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.83507391 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.834963309 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.835839649 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.834577174 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.834253976 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.839149484 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.837561963 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.835883823 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.835231639 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.83594078 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.839516127 seconds)
  done (took 45.824812926 seconds)
done (took 99.070558525 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.789143075 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.282827439 seconds)
  done (took 8.845686428 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.838486878 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.83755231 seconds)
  done (took 5.490955799 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.8375253 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.83826644 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.839193309 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.837788895 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.838409138 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.8387427 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.839243672 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.838807999 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.838287461 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.838159391 seconds)
  done (took 20.157967841 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.838676136 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.840188512 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.836506427 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.838952182 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.838973769 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.836070801 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.838501413 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.839143825 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.838555863 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.836994882 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.839208068 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.837245683 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.839119241 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.83585167 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.839273449 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.835919384 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.836475557 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.836984492 seconds)
  done (took 34.857389186 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.839989961 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.839867403 seconds)
  done (took 5.455273269 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.8368562 seconds)
    (2/7) benchmarking "second"...
    done (took 1.837001807 seconds)
    (3/7) benchmarking "month"...
    done (took 1.83717492 seconds)
    (4/7) benchmarking "year"...
    done (took 1.836913888 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.836891422 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.837049445 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.836851339 seconds)
  done (took 14.633455822 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.841011493 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.998438269 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.068514978 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.480856246 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.841176486 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.843764961 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.794292986 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.843289604 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.845339184 seconds)
  done (took 20.332026818 seconds)
done (took 111.545312468 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.68953225 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.836518944 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.181122778 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.896819119 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.88875243 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.17763859 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.87856696 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.060831687 seconds)
done (took 43.383939088 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.842222433 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.388434988 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.422826744 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.106349668 seconds)
  done (took 12.694658769 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.819931758 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.355868356 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.885392526 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.425884049 seconds)
  done (took 20.277556125 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.205835169 seconds)
    (2/2) benchmarking "read"...
    done (took 2.220140811 seconds)
  done (took 6.207884411 seconds)
done (took 47.798307424 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.841678281 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.84164231 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.838748132 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.841614092 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.838696068 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.838683718 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.842177985 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.839114444 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.843521002 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.841834644 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.842390042 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841630403 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.838920909 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.840347561 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839353907 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841984746 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.842951558 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.839967766 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840036237 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.842952561 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.839720836 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842085722 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.84001572 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.840813742 seconds)
  done (took 45.958947282 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.842787636 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.840885349 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.843688112 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.843254922 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.84052024 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.843007174 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.843482628 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.841181011 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.843887039 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.844297761 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.840769042 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.841482671 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.843950911 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.841837003 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844245198 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.841972831 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.843555096 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840951523 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843574502 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.841723854 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.843440246 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842358243 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.842282775 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.844526889 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.842581864 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.843665706 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.84422348 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.842377863 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.844215645 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.841928482 seconds)
  done (took 57.062535653 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.849186194 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.852238983 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.844796688 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.84484865 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.845989589 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.843991255 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.845587609 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.845228396 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.845659099 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.845350882 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.844948378 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.845318687 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.844095595 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.845110214 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.845137327 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.845259962 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.846308517 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.845868035 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.846241343 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.845762849 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.845398704 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.845128397 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.845441671 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.845871812 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.846559514 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.845416561 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.846037511 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.845784033 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.846391394 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.846111512 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.846483896 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.846269564 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.846673566 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.846028011 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.847419473 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.846271236 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.851011773 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.855206703 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.847403422 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.847442595 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.84665948 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.846857196 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.847991877 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.84784503 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.847063921 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.847200726 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.847089946 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.846584889 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.84705149 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.847768885 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.847730308 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.847370099 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.847155127 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.847594904 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.847373396 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.847703691 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.848029018 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.848801613 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.847530017 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.848200836 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.847684679 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.847822489 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.848153327 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.847143717 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.848380228 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.847719465 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.847353688 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.848282899 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.848142556 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.847829208 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.848116265 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.848883492 seconds)
  done (took 134.763027573 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.847072394 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.846971646 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.846892412 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.845752888 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.845173985 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.848601875 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.845841765 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84789769 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845808779 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.848636236 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848477807 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.847037319 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846744055 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.849493462 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848873698 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.846484984 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.849639986 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846657404 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.849632876 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.850037526 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849284925 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.84648946 seconds)
  done (took 42.431659531 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.849006126 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.849230493 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.847945057 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.848349449 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.846200626 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.850061977 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.849140206 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.849330753 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849343325 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.846218522 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847087475 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850540561 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.847774784 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847308694 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847284958 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.847082261 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849695581 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.847789271 seconds)
  done (took 35.055139078 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.847708126 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.847058973 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.851205147 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.847654965 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.848359578 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.850302251 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847932912 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.850690694 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.851458732 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.849099991 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.850710392 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853874281 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.854381812 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851842375 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854701689 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.853146644 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.854396923 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.851891311 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.855390683 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.851971048 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.852783827 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.854858198 seconds)
  done (took 42.51799044 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.854656173 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.854540229 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.852073185 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.852455432 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.852116237 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.855051205 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.85511097 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.853487287 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.855930438 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.856042868 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.853366645 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.856155231 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.853625235 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.853584747 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.85463343 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852700555 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.854231063 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.853414956 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.854505328 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.851682432 seconds)
  done (took 38.870611019 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.8540635 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854882394 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.854172282 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855003393 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855517173 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.852082521 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.852055766 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.852780504 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.852804505 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.853405849 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.85210765 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.853050131 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.853285413 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.852219775 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.853222879 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.85278263 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.852493846 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852446215 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.852957225 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.851825861 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.85381775 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.852175201 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.852749091 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.854145682 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.853240127 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852562391 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.850487376 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.848418551 seconds)
  done (took 53.672967957 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848697482 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.848552057 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.846327325 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.845088282 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.845090711 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.845867706 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.846460561 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.846308116 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.85029764 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.844632057 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.848554016 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.847333776 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.848322034 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.850038795 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.846583932 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.847114932 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846215129 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.844770671 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.846191878 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843901866 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.84704343 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846815501 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.846378351 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.844372546 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844714101 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.846894356 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.844013569 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.843604002 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845849141 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.844317105 seconds)
  done (took 57.174802831 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.865290452 seconds)
    (2/2) benchmarking "in"...
    done (took 1.865288174 seconds)
  done (took 5.512329336 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.843435172 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846997545 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.845823733 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.844309781 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.844090781 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.846363351 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.847068973 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.844479065 seconds)
  done (took 16.544919743 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.846945265 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.846222172 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.846659519 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.847070431 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.846794417 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.846180869 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.854101677 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.847376303 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.849378345 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.848371992 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.854991971 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.855068655 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.84919919 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.8482664 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.847348332 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.849514909 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.847975643 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.848145967 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.847908583 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.849019879 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848886532 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.85016449 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.851057444 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.845194144 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.850968318 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.858340568 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.85193273 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.84839723 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.848539531 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.852616358 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.848874443 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.845881461 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.849643188 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.848426839 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.848563094 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.849972125 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.856997409 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.849155174 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.854329256 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.849468323 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.848182834 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.84609685 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.849927389 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.850309796 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.850829201 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.848976072 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.849942166 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.846010348 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.848112419 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.852808789 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.853903842 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.849836731 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.846354198 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.852968033 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.851321718 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.856424374 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.84966802 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.853113887 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.857843787 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.859742914 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.863499608 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.857322031 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.852017699 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.850679127 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.858072853 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.873493293 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.85575774 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.848017722 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.84643009 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.849274019 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.85642645 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.86351715 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.859729411 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.849190254 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.844318676 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.844122409 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.844677432 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.844596647 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.852334641 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.843932655 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.841604803 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.842330442 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.85176189 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.865114046 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.840897633 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.839541369 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.838334283 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.838961224 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.839954192 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.851978269 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.838154235 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.83872139 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.837401289 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.838255337 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.839917505 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.83987337 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.837455096 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.839239386 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.836085229 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.838640146 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.83882314 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.841494506 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.847768998 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.837158459 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.837924656 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.844470956 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.837684217 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.837737011 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.845221875 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.839267112 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.838810742 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.839689088 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.843873859 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.835890437 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.840702949 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.847504065 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.839821651 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.839947139 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.8390653 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.839513086 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.847831137 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.865279878 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.838559215 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.838736184 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.843701061 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.850861577 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.838975401 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.843234942 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.839116345 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.836066961 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.836814784 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.841201777 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.839226512 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.840526619 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.840497616 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.841373503 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.836450143 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.839057905 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.839134586 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.840925683 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.840742649 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.83941269 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.841693245 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.842796843 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.839898192 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.840724987 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.845884975 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.839274554 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.840902319 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.841511624 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.83661112 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.839469715 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.839878681 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.840130836 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.840313639 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.838684878 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.838218536 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.839032214 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.838683008 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.837906689 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.838309097 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.839383577 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.842293124 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.839437429 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.842122817 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.83886238 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.834623375 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.837562128 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.837973145 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.837879796 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.838118284 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.83745234 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.840576569 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.845377968 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.837959013 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.838188618 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.840629138 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.836730547 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.837597028 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.837784221 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.840484244 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.845189966 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.837373421 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.843231605 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.837781415 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.836986279 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.838033361 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.839375592 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.836396925 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.83748863 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.840588581 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.844224952 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.851116447 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.843872204 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.836847453 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.840650892 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.836845496 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.840815503 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.840763393 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.836759075 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.835619833 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.834587329 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.835094947 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.835994317 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.836717614 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.834132601 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.835319545 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.834866185 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.834805794 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.836181207 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.83521715 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.835388503 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.836890945 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.833244339 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.835858885 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.834704765 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.835403304 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.832584143 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.834056799 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.834536016 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.835833144 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.834786308 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.841656476 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.831949199 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.836192098 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.837691645 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.834714107 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.833706677 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.834351294 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.838125212 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.83555796 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.843101443 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.835133149 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.83498969 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.841176466 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.835176877 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.834997787 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.837948338 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.83517068 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.832277153 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.838750637 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.843308035 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.834560161 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.83539712 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.836115438 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.835751521 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.835558532 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.842551324 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.832507293 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.83483048 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.836484758 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.837411093 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.832857107 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.83583514 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.836270453 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.835827801 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.837837097 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.834996689 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.834999386 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.834947054 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.834523232 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.83485017 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.834097798 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.837347122 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.840804594 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.839638372 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.834694285 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.836998537 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.836036989 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.838039666 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.835636857 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.834848685 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.834945885 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.846413409 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.843504382 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.840587947 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.835858996 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.834801972 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.839729375 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.835441785 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.838909054 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.833228549 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.835098928 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.834819797 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.833753847 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.83158243 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.835135708 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.83407567 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.837869925 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.837138872 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.83738674 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.834375328 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.834395611 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.834725834 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.834893064 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.832958809 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.835096131 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.834032399 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.836116204 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.836583185 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.834274195 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.835616994 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.84064684 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.835515504 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.836181595 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.834018922 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.834800176 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.834969176 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.835474053 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.834771349 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.837313558 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.841283804 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.838097841 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.842750148 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.834847812 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.842578298 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.836164432 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.83766593 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.841974856 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.83179135 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.83318312 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.834413816 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.83460601 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.842780725 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.834560857 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.835749943 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.838051831 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.834502434 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.835026197 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.836417774 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.833917937 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.83372446 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.83568729 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.843616049 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.836518 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.837927643 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.837086003 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.831475199 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.835245882 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.835168318 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.833744769 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.838000545 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.833576087 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.834639166 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.834419342 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.835719074 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.834630457 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.83487524 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.834670491 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.832662037 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.835834469 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.841847562 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.834823385 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.838016467 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.83454484 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.843225981 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.8360613 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.841731433 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.835392912 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.835714425 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.835910324 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.835036964 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.835906778 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.835001342 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.836297858 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.835170857 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.835680628 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.839951965 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.835243835 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.836357826 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.83457854 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.835445674 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.835298152 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.841826261 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.853882228 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.834828796 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.83707173 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.832138889 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.83561783 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.837048176 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.834735258 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.832925076 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.835600961 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.843085411 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.840067361 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.833865644 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.834588573 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.834475599 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.83562369 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.833594503 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.833668505 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.8333374 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.833779455 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.834197783 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.835665148 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.838521028 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.833802863 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.834869689 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.835674921 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.835157907 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.842608276 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.834111603 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.835524903 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.834847234 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.834061412 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.835367068 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.833933166 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.83547091 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.835495069 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.834522397 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.836862726 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.839947157 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.839867634 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.837509541 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.834687153 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.835758473 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.835757304 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.834745273 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.835193427 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.834377733 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.836123827 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.83677459 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.835365066 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.835658324 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.834300242 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.835580929 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.836173039 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.83606879 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.837233446 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.842130654 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.836770232 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.832866857 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.835619596 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.836148285 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.834749943 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.836568668 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.843908795 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.838254941 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.844920092 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.842913294 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.839390561 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.836434739 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.838498018 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.843583522 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.835196088 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.836907331 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.837609174 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.837079394 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.837626472 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.839004043 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.837402345 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.843684623 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.837173261 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.836972148 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.846647678 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.838440913 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.837415625 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.838014335 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.840386326 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.838121438 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.835310886 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.837332273 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.838394885 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.84462267 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.839300821 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.838736724 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.839716445 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.837049588 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.838600733 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.841186938 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.838048345 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.839677541 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.834653486 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.837993684 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.838169241 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.837282467 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.835533047 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.836968577 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.838054176 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.840347634 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.843464974 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.835843966 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.840738599 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.838580638 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.840098615 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.838558249 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.84012097 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.836463298 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.8361486 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.839273058 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.838393193 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.839388246 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.841864079 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.839215721 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.840242835 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.840238949 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.839128436 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.842241135 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.847001337 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.845631663 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.836499488 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.838145339 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.841113239 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.844313202 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.839936491 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.83937539 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.839758502 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.84109453 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.84047351 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.840691037 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.839571248 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.842298895 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.855408622 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.840475937 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.840885889 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.840192392 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.843545712 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.839478341 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.837518016 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.841241952 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.843531083 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.841625052 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.847315487 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.841480936 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.848343718 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.841372169 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.842643073 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.844044489 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.843305563 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.846293099 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.844409301 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.84103222 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.840877362 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.844278724 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.855211405 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.840760242 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.848429179 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.865521682 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.841864196 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.843626965 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.84190985 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.841836553 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.841875281 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.843527129 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.842412696 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.84238283 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.841888839 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.841662053 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.842492111 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.847353592 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.843406813 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.842126778 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.842731595 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.841696338 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.842712404 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.839599163 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.843529914 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.842413779 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.842911928 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.843143889 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.842737706 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.841890472 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.856179099 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.850432161 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.843014896 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.842852792 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.840748113 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.846718676 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.845937896 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.85157448 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.848976428 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.843705635 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.843215738 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.845613339 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.84311474 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.8410679 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.843225344 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.842580166 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.843585055 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.842251359 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.855846205 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.849991573 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.848541515 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.843427975 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.845799715 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.843954672 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.844587889 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.845596293 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.843995863 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.846751377 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.844467248 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.848121724 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.843870584 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.843956085 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.846180879 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.850529495 seconds)
  done (took 1098.811570732 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.841204684 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.84163734 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.842088056 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.842686556 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842504618 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841961055 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842331284 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.842359443 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.842110049 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.842344636 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.841735084 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842347614 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.842280126 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.842399926 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843291428 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.842751855 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842670539 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.842941426 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.843055244 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842278491 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.844245553 seconds)
  done (took 40.471589622 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.844743154 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.843210665 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.84369142 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.846472885 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842718894 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.845719601 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.842495105 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845247566 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.845638673 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844294803 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.845399955 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845708008 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.843529022 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.842902173 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846272499 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.845766619 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.845806211 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.843857499 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.84608492 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.845502735 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846658811 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.844690279 seconds)
  done (took 42.367479376 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.849287654 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.847992442 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.848851958 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.844527085 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.847505918 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.843803968 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.848134156 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.849999352 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.847451088 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.847354926 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.846416695 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.848286888 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.852667365 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.851877681 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.848720357 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.847936175 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.991978653 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.8477883 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.849125202 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.848501257 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.844806612 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.854319605 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.845383539 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.846858558 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.846932425 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.848529959 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.848191116 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.847652857 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.8477237 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.849216341 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.852143047 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.847551717 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.849244134 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.851170428 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.849285878 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.849422467 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.851401594 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.849090059 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.846720951 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.848994886 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.859809286 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.864646537 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.85040733 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.855361927 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.849358775 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.850106844 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.851216677 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.854895167 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.84597627 seconds)
  done (took 92.548965002 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.850653114 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.849455648 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.847484129 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.849018513 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.849205293 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.849718779 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.84914889 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.849542888 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.846661302 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.84656359 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.849269435 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.847767611 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.847309805 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.849463504 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.849663196 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.846499163 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.847440041 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.848359354 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.846144298 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.846850192 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.847607727 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.849323653 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.85249832 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.848473263 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.85021846 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.84799627 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.847859194 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.851148972 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.847648578 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.847950757 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.850073096 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.850829946 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.850455279 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.850498117 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.849041761 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.849984923 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.850504185 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.848451149 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.852779598 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.847405527 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.851851473 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.850641182 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.851494313 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.851415729 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.851100698 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.850090216 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.848968027 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.849973672 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.849352903 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.853356256 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.852033814 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.84956664 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.851783827 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.84921808 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.852747301 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.85288629 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.849167291 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.84821242 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.853023188 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.850461934 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.851532942 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.851937057 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.849853376 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.852185924 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.851732912 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.849530124 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.848759062 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.851747161 seconds)
  done (took 127.56877772 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.852509786 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.851531678 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.853945721 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.852949168 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.851720986 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.853135642 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.85379293 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.854757917 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.85302029 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.851732997 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.852449387 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.853173573 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.852780018 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.855449362 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.853104201 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.85258917 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.853025265 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.853185089 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.854564237 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853605403 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.853422606 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.853750428 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.853830351 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.855251291 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.853849994 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.854238541 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.853766148 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.853462659 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.853612031 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.856743435 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.853390483 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.854214128 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.855557697 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.854094232 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.856147923 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.854670313 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.854033349 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854246096 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.854677149 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.854886104 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.855780717 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.85377362 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.854296008 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.854197256 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.854064562 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.855547753 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.854046388 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.856164984 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.854330413 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.85458436 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.85726297 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.855064903 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854896702 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.854218554 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.855380588 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.85498394 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855793828 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.854869007 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854713053 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.854576493 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.854600877 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.856608167 seconds)
  done (took 116.750101963 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.853650398 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.8550433 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.853640971 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.851758631 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.855968226 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.852203335 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.854484268 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.854695055 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.855261999 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.858077064 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855107031 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.85326025 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853770586 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855890026 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.854633246 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852346583 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852699354 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.852835231 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.855747314 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.852487975 seconds)
  done (took 38.874387812 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.853476986 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.855674462 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.853095101 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.852694954 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.857986274 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.853755079 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.855697249 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856432209 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853486354 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856499273 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.857060965 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.85669703 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853784109 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.854100342 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.856294221 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.855178386 seconds)
  done (took 31.474341374 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.854176146 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.856368711 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.856531828 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.860298992 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.854422158 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.855041682 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.856116502 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.856012653 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.854973101 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.858676731 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.857303263 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.856946373 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.857895509 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.857769912 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.855684246 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.858474157 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.855790543 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.855584308 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.858209663 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.859306033 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.855973614 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.855156533 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.858201813 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.857941266 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.855325626 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.858448854 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.856396112 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.855394508 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.85630104 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.859051621 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.857300354 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.856923096 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.856586415 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.856767444 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.859273334 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.857700446 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.860385676 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.859065717 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.859168435 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.860189824 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.859993536 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.859038304 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.859291846 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.859362607 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.857759453 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.860061837 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.858613831 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.859037212 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.857411742 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.856903277 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.859428915 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.861237347 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.860764607 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.860262055 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.859686239 seconds)
  done (took 103.96903315 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.860692226 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.861871964 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.857657146 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.859678167 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.860667896 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.858031496 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.859543497 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.86006959 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.859045166 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.861484482 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.858953726 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.861057365 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.859300572 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.859986503 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.857775008 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.859635702 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.857280961 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.859290975 seconds)
  done (took 35.267360422 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.857039751 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.858233895 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.860951543 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.857730643 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.859245592 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.860340162 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.857434396 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.860977573 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861203304 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.860389812 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.858487138 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.861151368 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860829686 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.862175603 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.858721308 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860196068 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.863350186 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.86139568 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.859093376 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.858978923 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.861767002 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.860603777 seconds)
  done (took 42.716255258 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.860602642 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.860338743 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.87656706 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.875979657 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.881121015 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.888003112 seconds)
  done (took 13.03818725 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860707045 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86249169 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.859297321 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863121883 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862035232 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859015032 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859940167 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859822039 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862046534 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86037936 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85979804 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863449767 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862442999 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86063663 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862470781 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863089336 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860505094 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861359828 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86115584 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863332965 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861060044 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863294032 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861122659 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860528032 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860795185 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861812977 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863717604 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861008031 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86183424 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864378147 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863620296 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862287633 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863290939 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863155755 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864974496 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863563172 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861501874 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864743205 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864218669 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861106318 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.865082749 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864229362 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863525859 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862259499 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865279067 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862325271 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861930753 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862560906 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861991895 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866552105 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865369176 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862070037 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864665645 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864372618 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865845354 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865456731 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863234637 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862579969 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864946525 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862485795 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863005893 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865383624 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863242037 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863697312 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865356969 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863629081 seconds)
  done (took 124.738583247 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862601438 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.863024293 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863378023 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865072627 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863315059 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862756203 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862780336 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862803011 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863559979 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863667831 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865610486 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863628667 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863207548 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863679266 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864392415 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863367862 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864284886 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863797302 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863943109 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866336731 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863656143 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863384793 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864380554 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86500887 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864856249 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866600018 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864379374 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864087996 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865209847 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864584885 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866387905 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864685451 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864343297 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.86620844 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865189475 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864588393 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865382167 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86458992 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86533428 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867346921 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865426972 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868034807 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864998592 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864873354 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865749108 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865461888 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866743355 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864554727 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865358539 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864903173 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865366558 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865398135 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865978622 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865047377 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865616851 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8653632 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865469509 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866490685 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866014186 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867972201 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866115681 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866095546 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869229387 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866142685 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866322894 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866300186 seconds)
  done (took 124.893409908 seconds)
done (took 2564.831162249 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.939461513 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.934069056 seconds)
  done (took 15.675911654 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.032155894 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.983696088 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.86809618 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.894676802 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.867096305 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.891786098 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.884251772 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.867489265 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.868627363 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.866432415 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.867984033 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.054206607 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.918319625 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.869110192 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.867924267 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.961549338 seconds)
  done (took 52.372150926 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.870859736 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.872513541 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.881737747 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.873542987 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.87068001 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.882460785 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.901253538 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.87455226 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.903770866 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.882248288 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.939312814 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.879545309 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.870502711 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.918762736 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.882825208 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.885999349 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.956271882 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.943670459 seconds)
  done (took 35.893796016 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.946760723 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.869950598 seconds)
  done (took 10.626267294 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.901814697 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.887788419 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.87662533 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.873814566 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.888088266 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.87659645 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.868648412 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.870144545 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.871441 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.876635653 seconds)
  done (took 70.599568712 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.878435791 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.872865323 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.875184178 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.870170137 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.863407828 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.869382804 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.87184452 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.869170226 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.555433685 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.906122227 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.877677963 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.879625501 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.872782708 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.874063003 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.870580753 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.895060752 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.033124712 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.869300625 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.869363019 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.877531253 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.872835885 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.922404675 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.885379945 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.87188854 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.901129156 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.549263309 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.882061959 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.878561462 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.983518952 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.871137809 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.872560218 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.874300978 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.874747246 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.258919202 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.191448262 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.871550702 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.881979066 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.881593216 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.871882378 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.995903447 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.87418463 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.879668001 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.81528834 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.182375135 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.956555056 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.914376063 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.225157068 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.876166819 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.875108073 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.902769036 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.876255688 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.875819501 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.887896788 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.388921501 seconds)
  done (took 132.884566314 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.867986562 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.15904506 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.023237822 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.869976384 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.142274186 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072705942 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.870286871 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.918015202 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.871187662 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.070673032 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.030830564 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.981400939 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.869415067 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.869427687 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.868996158 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.867808335 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.029305791 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.935832171 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.869856258 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.867967405 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897565237 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076593329 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.998224618 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.870897302 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.892066698 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079376767 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.990688406 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.980253935 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.173249844 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.869096914 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.935418751 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.8718182 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.869151091 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.868913475 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.027185266 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.965021008 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957925078 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.871061443 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.868923399 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.869763326 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.535900856 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065689642 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.967959245 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.011580301 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.123074881 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.072948535 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.518402476 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.869209814 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.509360068 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.034872367 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.085317319 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.075879538 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.99298948 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.872075204 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.232752857 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.870949102 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870499389 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.107739414 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.112227068 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.972332463 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871954681 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.871705816 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.870201634 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.114115859 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.87369335 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.968100823 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872684941 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.873938226 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.969496932 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.975140982 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.118437204 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08402139 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.905747308 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.16807068 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.338214128 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.084991246 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.940290847 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105420877 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.87388523 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.87096908 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957247361 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.621351467 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.031360319 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.119080348 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.092745031 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.907342331 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.508481011 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.87155304 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.065086523 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.056304211 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.067090548 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.111860481 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.023688652 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.065133301 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.872012719 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.87249443 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.078142632 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.010662971 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.873762321 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.229031063 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10677061 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.437510473 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.903791409 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.168521877 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006350765 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.243893451 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.501937701 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.872106556 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.040743242 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.913297979 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.873712979 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.874437715 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.064286476 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.68247207 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.873560175 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.379685723 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.936419697 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.875721462 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.075754271 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.87595248 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082473347 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.876562765 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.109024668 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.033898513 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.908398539 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.117645364 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.114039833 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.662269327 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.120726647 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.116558806 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.992459412 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.09648302 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.467131588 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.875473346 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.150660261 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.877029971 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.874120129 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.040541432 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.876595698 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.109516532 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.877600829 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.101906375 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899905108 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.029192144 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.876359366 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.114007651 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.911772192 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927989722 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.877429137 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.007019579 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.878802744 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.762926213 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.03222026 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.876815732 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.876432927 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.556693957 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.87572051 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022165439 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.105910654 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900092393 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.944805521 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.400975824 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.876241691 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967051815 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.904974081 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.618503888 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.875205628 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.033079804 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.852636931 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.311288464 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.876416054 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.115624819 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.060966605 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.877137592 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.877605315 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.618997849 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.585926005 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.876681236 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.036287057 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.588239988 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.529124733 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078637929 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.8791417 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005412295 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.880563131 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.961062468 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.229317584 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.877154288 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.877737299 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.878327018 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.877876136 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.877067168 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.157934915 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.907404561 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.413955306 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.01358317 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09364552 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.187975219 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.096576905 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.924196075 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.880047772 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.12496918 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.880462737 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.943463271 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.881052262 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.903278823 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.109630006 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.882520575 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.089865195 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.131731442 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.859085383 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.930518026 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.880289387 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.879734298 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.878548229 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.032276335 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969037146 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.880249166 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.879854182 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.990235191 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.007688447 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.070941138 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.47641318 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.050553473 seconds)
  done (took 900.274902778 seconds)
done (took 1220.127724154 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.879573345 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.883494013 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.869581541 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.88174146 seconds)
  done (took 29.334337067 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.886946767 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.885302049 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.886720508 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.885080613 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.886407495 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.885438105 seconds)
  done (took 13.135305705 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.926861274 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.880378498 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.882595163 seconds)
  done (took 21.509386667 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.953604052 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.287656478 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.994830619 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.32589399 seconds)
  done (took 10.38147851 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.88756281 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.887254839 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.886579109 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.88841646 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.887682007 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.888697423 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.886840083 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.887998429 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.889049867 seconds)
  done (took 18.810487729 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.293506599 seconds)
done (took 99.283051585 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.079943956 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.866123368 seconds)
    (3/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.276238238 seconds)
    (4/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.384457152 seconds)
    (5/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.1606581 seconds)
    (6/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.2835147 seconds)
    (7/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.502350484 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.155781711 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.118883454 seconds)
    (10/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.950896128 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.924745932 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.952725883 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.904624125 seconds)
    (14/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.913435243 seconds)
    (15/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.0037949 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.96793088 seconds)
    (17/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.281663842 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.541554225 seconds)
    (19/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.222761152 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.742984164 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.884253943 seconds)
    (22/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.881581213 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.957882147 seconds)
    (24/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.393922183 seconds)
    (25/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.169355956 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.029325513 seconds)
    (27/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.024109435 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.185168719 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.146889185 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.868268597 seconds)
    (31/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.060584831 seconds)
    (32/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.911759499 seconds)
    (33/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.149165661 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.172053072 seconds)
    (35/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.532429572 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.74787391 seconds)
    (37/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.973693149 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.067915177 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.013960667 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.075925397 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.173613512 seconds)
    (42/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.252092335 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.571005445 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.256531176 seconds)
    (45/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.235210526 seconds)
    (46/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.972431516 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.171665332 seconds)
    (48/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.963252608 seconds)
    (49/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.293584981 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.994183491 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.25676644 seconds)
    (52/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.969389543 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.780670698 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.150053459 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.126463095 seconds)
    (56/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.036730145 seconds)
    (57/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.008527993 seconds)
    (58/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.88298058 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.022527052 seconds)
    (60/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.891115654 seconds)
    (61/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.96759345 seconds)
    (62/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.242075886 seconds)
    (63/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.024164552 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.869944082 seconds)
    (65/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.893027419 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.193695485 seconds)
    (67/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.453896785 seconds)
    (68/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.048108282 seconds)
    (69/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.227007376 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.718952067 seconds)
    (71/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.260433438 seconds)
    (72/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.948110029 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.385288911 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.670245596 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.146588031 seconds)
    (76/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.134712604 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.129456652 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.271619679 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.52668546 seconds)
    (80/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.031180434 seconds)
    (81/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.968319427 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.991781761 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.576929279 seconds)
    (84/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.787999876 seconds)
    (85/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.975085838 seconds)
    (86/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.0165395 seconds)
    (87/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.04310918 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.543233293 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.970155596 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.935392336 seconds)
    (91/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.012939336 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.795419046 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.889162257 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.886189914 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 3.740378834 seconds)
    (96/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.897601524 seconds)
    (97/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.982278063 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.910984579 seconds)
    (99/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.995302784 seconds)
    (100/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.956248288 seconds)
    (101/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.786447767 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.822733685 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.330232988 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.392145508 seconds)
    (105/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.487508449 seconds)
    (106/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.968514387 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.20986115 seconds)
    (108/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.916356188 seconds)
    (109/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.968620885 seconds)
    (110/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.015936497 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.099373651 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.87112447 seconds)
    (113/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.298026826 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.391409572 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.655482006 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.075680157 seconds)
    (117/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.172964144 seconds)
    (118/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.89906247 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.008881217 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.886070131 seconds)
    (121/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.060671549 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.410134627 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.373423708 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.230998055 seconds)
    (125/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.067621013 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.189598454 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.262614552 seconds)
    (128/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.447805395 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.220503882 seconds)
    (130/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.177040679 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 2.462190639 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.916504797 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.180356918 seconds)
    (134/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.567744661 seconds)
    (135/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.232354956 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.148492999 seconds)
    (137/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.900979826 seconds)
    (138/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.746151226 seconds)
    (139/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.970635887 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.108787075 seconds)
    (141/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.057969611 seconds)
    (142/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.10959498 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.179733823 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.532805543 seconds)
    (145/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.341381361 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.19079857 seconds)
    (147/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.098418496 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.995582809 seconds)
    (149/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.880119344 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.061818108 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.685530825 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.077987337 seconds)
    (153/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.084855455 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.896881118 seconds)
    (155/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.417679427 seconds)
    (156/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.910929961 seconds)
    (157/309) benchmarking ("sort", BigInt, false)...
    done (took 6.893440504 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.137822949 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.154383054 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.922266552 seconds)
    (161/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.911074932 seconds)
    (162/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.919383313 seconds)
    (163/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.99296899 seconds)
    (164/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.8969085 seconds)
    (165/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.502688674 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.922413372 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.916213307 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.689047322 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.273592259 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.178648601 seconds)
    (171/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.088543646 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.116434809 seconds)
    (173/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.913315968 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.913231171 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.1943461 seconds)
    (176/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.949862729 seconds)
    (177/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.920522831 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.410132092 seconds)
    (179/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.054486233 seconds)
    (180/309) benchmarking ("sort", Float64, false)...
    done (took 5.728229967 seconds)
    (181/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.882447821 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.897026779 seconds)
    (183/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.856186061 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.023955913 seconds)
    (185/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.094760884 seconds)
    (186/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.919180548 seconds)
    (187/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.270138759 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.27922811 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.166604748 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.00829118 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.882179213 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.921573896 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.954196981 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.89475634 seconds)
    (195/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.314257402 seconds)
    (196/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.004045613 seconds)
    (197/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.253823001 seconds)
    (198/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.013363199 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.932272919 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.892922294 seconds)
    (201/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.117098289 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.221651195 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.894222373 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.893787109 seconds)
    (205/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.399367469 seconds)
    (206/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.983491263 seconds)
    (207/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.774191929 seconds)
    (208/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.395744876 seconds)
    (209/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.005751899 seconds)
    (210/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.925099019 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.950021245 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.015224976 seconds)
    (213/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.226684176 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.895589853 seconds)
    (215/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.106844565 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.992060614 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.936833246 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.896674819 seconds)
    (219/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.527373394 seconds)
    (220/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.957463273 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.519309317 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.189323046 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.11372049 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.954205696 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.124589639 seconds)
    (226/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.415422961 seconds)
    (227/309) benchmarking ("sort", Int8, false)...
    done (took 4.893216388 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.034437272 seconds)
    (229/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.094836748 seconds)
    (230/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.373855178 seconds)
    (231/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.094423271 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.920216542 seconds)
    (233/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.376411912 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.898690604 seconds)
    (235/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.898798739 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.040863152 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.933347525 seconds)
    (238/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.109754066 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.896277367 seconds)
    (240/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.965368667 seconds)
    (241/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.026696888 seconds)
    (242/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.000109387 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.13036665 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.305793835 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.976570503 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.818701192 seconds)
    (247/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.41644082 seconds)
    (248/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.977994677 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.062603824 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.184945954 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.286154967 seconds)
    (252/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.330760168 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.97620926 seconds)
    (254/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.907399005 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.879641448 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.803723196 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.306969806 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.201367362 seconds)
    (259/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.885612762 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 4.24915049 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.994522132 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.961412234 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.970205095 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.9223768 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.869249678 seconds)
    (266/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.933449103 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.583028082 seconds)
    (268/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.044151643 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.28451049 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.762122344 seconds)
    (271/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.116489947 seconds)
    (272/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.884611824 seconds)
    (273/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.868211583 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.480971802 seconds)
    (275/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.200833942 seconds)
    (276/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.928049904 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.924740877 seconds)
    (278/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.959539623 seconds)
    (279/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.994636209 seconds)
    (280/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.902363666 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.220646553 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.887093782 seconds)
    (283/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.677926976 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.004550381 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.858680183 seconds)
    (286/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.03682584 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.289201853 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.980092297 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.262699404 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.036448725 seconds)
    (291/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.115372957 seconds)
    (292/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.502701502 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.680624454 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.135625548 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.899690565 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.898633644 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.942410869 seconds)
    (298/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.021105447 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.920622976 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.004712247 seconds)
    (301/309) benchmarking ("sort", Float32, false)...
    done (took 5.665309643 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.899493798 seconds)
    (303/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.978846023 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.929472615 seconds)
    (305/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.238557072 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.489109885 seconds)
    (307/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.047680942 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.91856538 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.182680058 seconds)
  done (took 1019.873801489 seconds)
done (took 1021.768003913 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.931667677 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.92668079 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.908109537 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.930821759 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.022168393 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.945941994 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.919569351 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.910712675 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.956826312 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.959170855 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.909294877 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.943440858 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.911750344 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.910243256 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.909039093 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.92432588 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.212477004 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.932551651 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.928531574 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.918770295 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.928473993 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.910089349 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.959386787 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.943948376 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.913925 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.913296814 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.916223018 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.930725526 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.023629981 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.915645911 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.913524109 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.924848577 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.212590473 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.929499408 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.906511987 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.931395216 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.925140992 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.920417133 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.9145668 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.943375614 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.341822926 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.918572611 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.913515664 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.911481665 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.911933898 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.915170934 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.914420953 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.918032815 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.925371861 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.926323178 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.339684204 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.933659137 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.916460448 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.911580954 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.922419218 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.914280868 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.91639335 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.931457746 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.932475103 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.929767722 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.204355154 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.936776271 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.917437728 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.93031683 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.921342873 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.377564328 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.912420282 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.918511165 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.34231691 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.922581391 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.377424516 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.928807464 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.91342317 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.927769589 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.946452634 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.214456033 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.928165741 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.9117608 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.921284832 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.912783116 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.923799685 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.927420552 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.918849554 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.913599138 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.92877584 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.947722377 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.923556333 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.916904667 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.923619235 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.933922495 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.922594755 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.925842022 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.9161812 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.910056059 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.923346199 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.917445167 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.918367179 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.919623405 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.919116426 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.925726763 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.341768251 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.938102147 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.912007179 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.910820307 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.913154561 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.930290468 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.340917499 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.921878514 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.935513939 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.96170114 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.916647939 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.206147036 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.940438636 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.93282085 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.92441744 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.918149024 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.910722456 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.208852339 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.36359421 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.936316296 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.916503507 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.914753275 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.933262727 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.916949498 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.911678218 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.218201299 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.937463431 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.931737983 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.037119491 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.926020952 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.948845529 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.915310836 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.920727701 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.95064511 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.933768703 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.948671641 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.919147879 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.933157141 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.935286898 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.91266915 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.929681514 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.927297483 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.917741383 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.924974455 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.911046322 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.950671632 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.930563054 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.930384945 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.939456036 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.038846715 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.915035793 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.209245512 seconds)
done (took 300.552728903 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.982181116 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.908258454 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.013567105 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.913028696 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.997832603 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.998031177 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.911493474 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.912633627 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.910636011 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.29074532 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.910393343 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.911608959 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.915408513 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.91029109 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.995561523 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.913680357 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.911217573 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.251789235 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.915466097 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.986246976 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.910874128 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.91107228 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.915731506 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.29290668 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.905417787 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.910372698 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.985985428 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.91530985 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.260534196 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.912996188 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.910321089 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.259504504 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.006109516 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.932964579 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.925056256 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.922155696 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.998913409 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.918521587 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.995225112 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.99599803 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.013213261 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.955614108 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.912246179 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.913102544 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.916715562 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.917083839 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.911891577 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.943148485 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.916498295 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.912380629 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.255779748 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.926056214 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.923201577 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.913218035 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.913354156 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.938031139 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.913541502 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.916206073 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.006779861 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.917121493 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.978944401 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.296792843 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.291549566 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.916011095 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.911206749 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.913669168 seconds)
  done (took 187.337807657 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.984898593 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.990585773 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.984617097 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.919904232 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.965635032 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.989046366 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.920076635 seconds)
  done (took 15.60263004 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.922906769 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.917062315 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.968269575 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.968773219 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.917619976 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.069680414 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 2.324562718 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.928809316 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.915803408 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.97076237 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.917864227 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.918322928 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.924497486 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.918410018 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.967148505 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.929284733 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.033334958 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.918611232 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.917889274 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.072227577 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.917138259 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.924977967 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.972085334 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.929401864 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.918233909 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.923938353 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.514286084 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.918255462 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.916454364 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.917983892 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.915523377 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.963035011 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.918395811 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.914329522 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.916327961 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.034896276 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.919162291 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.916413747 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.918889521 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.912000075 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.918133573 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.919732848 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.919371288 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.9174201 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.920158546 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.944387728 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.91920987 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.919389393 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.919175571 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.921055992 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.970260805 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.920746438 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.917063542 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.916697658 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.977530924 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.926408824 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.920146806 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.917345049 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.919841941 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.917660877 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.074533456 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.969431057 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.92053904 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.968774415 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.919514829 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.920141678 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.919845818 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.920453073 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.016208162 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.920891567 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.96973548 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.917951481 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.080850275 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.944285674 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.922604767 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.924889808 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.92430059 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.923004323 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.917084134 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.92825471 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.918498829 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.921875136 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.927636943 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.919007481 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.918975281 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.035628268 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.032085007 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.919700498 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.936247036 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.929347867 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.920705423 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.976005387 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.921858173 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.920042784 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.976716071 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.038282906 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.978370494 seconds)
  done (took 211.17217338 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.9273142 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.930547347 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.923507503 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.938805057 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.922851315 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.922497091 seconds)
  done (took 13.420115545 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.924868595 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.923315671 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.92235784 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.923253288 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.923032592 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.922912028 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.923151404 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.924498638 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.925879619 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.923929712 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.922892679 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.924814409 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.92349008 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.924118283 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.92380166 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.923212558 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.924135744 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.920454606 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.923198854 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.923549229 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.067323063 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.924660705 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.923858424 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.924163543 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.927370115 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.923796938 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.932172957 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.923342271 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.923305147 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.929727684 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.926516701 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.924542403 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.925648699 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.929699722 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.928660313 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.925377216 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.927254969 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.92593944 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.921270526 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.924168092 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.925435761 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.92605818 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.925106547 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.926088072 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.927175381 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.929005885 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.929993719 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.933790331 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.92627509 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.926406893 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.92672329 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.925123227 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.926326955 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.926148272 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.92730967 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.929724046 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.928262579 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.926685437 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.925664405 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.926871974 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.925360048 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.925716285 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.927333439 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.929601257 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.932907416 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.927091432 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.927381401 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.929798006 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.926393406 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.925471085 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.92734921 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.924408304 seconds)
  done (took 141.660605136 seconds)
done (took 571.048456369 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.230479973 seconds)
  done (took 9.088723605 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.07379291 seconds)
  done (took 9.043419034 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.275494794 seconds)
  done (took 10.137029461 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.933887578 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.972093799 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.92024151 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.928081859 seconds)
  done (took 29.621020028 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.013233687 seconds)
  done (took 8.871843197 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.930359561 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.919103624 seconds)
  done (took 15.739571637 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.953641398 seconds)
  done (took 8.812716463 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.984482856 seconds)
  done (took 8.849371399 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.921989512 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.93878279 seconds)
  done (took 15.732552768 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.908008399 seconds)
  done (took 8.767468266 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.655414641 seconds)
  done (took 11.526117938 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.92891691 seconds)
  done (took 8.799394061 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.005290893 seconds)
  done (took 8.865993329 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.942555674 seconds)
  done (took 9.802965302 seconds)
done (took 165.516752495 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.923852565 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.924510797 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.925234811 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.924211522 seconds)
  done (took 29.557407594 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.961437792 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.96200717 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.963580706 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.972127486 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.964660888 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.961526439 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.95465221 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.954833511 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.972891887 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.964396403 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.963589216 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.964747446 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.962403067 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.954951354 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.964095374 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.964947367 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.973357687 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.964599488 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.9553746 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.966244276 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.930159376 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.973961351 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.96657601 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.930437556 seconds)
  done (took 48.927893836 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.127000028 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.000482965 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.083441536 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.981924351 seconds)
  done (took 10.05434655 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.981339386 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.983088067 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.99513944 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.033095992 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.060542302 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.992174052 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.95468969 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.950534977 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.937335206 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.983360461 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.059663712 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.998673397 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.081221701 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.930127831 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.113863372 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.929747176 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.930025673 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.982363864 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.033314775 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.048059745 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.93097271 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.982583256 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.986533475 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.999586708 seconds)
  done (took 49.740371466 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.92908022 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.938666694 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.935940603 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.929574415 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.930131719 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.930909396 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.937417096 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.931119376 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.951839754 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.931798969 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.930399051 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.930634638 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.930169471 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.931332365 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.929547782 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.943698771 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.944205163 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.931684495 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.933857881 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.936820236 seconds)
  done (took 40.551772166 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.925485429 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.779257747 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.276906644 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.181893848 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.9239406 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.928533655 seconds)
  done (took 31.879334357 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.944250639 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.935321562 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.931953163 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.986662961 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.066397572 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.936872799 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.932027857 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.941180275 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.973865551 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.99232905 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.949703201 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.956717551 seconds)
  done (took 25.411301545 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.929160112 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.928508406 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.929148288 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.946067072 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.941564632 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.938317661 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.939143857 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.925792244 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.947479211 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.951748513 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.938996557 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.944269485 seconds)
  done (took 45.12730357 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019507932 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.970438281 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.980894466 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.609566076 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.30531224 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140048137 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.457302587 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.263436808 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.932204806 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202665865 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.10387515 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034419152 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.184059812 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.303260764 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.954994201 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.400830926 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227545794 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139836534 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954922463 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.68723947 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992586468 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.999669433 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.750622269 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.986919953 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.141154383 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.058318798 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.191036001 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.929235585 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069332266 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968246965 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93938979 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.929670363 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203297139 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307898186 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033010323 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939887116 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.547058268 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.641493793 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.917141889 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.730929279 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.758262769 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.066074359 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941502908 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930861531 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.864093919 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.96830544 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305940887 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.935674052 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.64201318 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.930143723 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941472209 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019904611 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.934862609 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.746578378 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847269174 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.932955297 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.928459081 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93819663 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.504428985 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.125211795 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.006142056 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.897944725 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.023087715 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.692620901 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331891828 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.078060206 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.935511405 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93499414 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866585666 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.69183812 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986871934 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26157237 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.952273873 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.580631162 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245359198 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.160274508 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.872858966 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207913262 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.343725869 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.898089991 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159896174 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932739396 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868100825 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.967713245 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.867082155 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.204016957 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966561504 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.689391969 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969923288 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.265712795 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.943591529 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953593362 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956584151 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155765994 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.817336267 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932436466 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.849816513 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.076679612 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956555789 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.271343549 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867312304 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.93702441 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19039029 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.144923782 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.891293963 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.439471003 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09162405 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.380226472 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.979397782 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.97381174 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.974932923 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.215354054 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991575815 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.129383695 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987231387 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.936343066 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250932318 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40039268 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.066370649 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.087174018 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.0576733 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.251516093 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95968407 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99936769 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.943946451 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.935516012 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.769581355 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.487297692 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.934945194 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.937106286 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.893558536 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.977949384 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.933971384 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.883525354 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.557955132 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.092805897 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.948514552 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.161236302 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396799678 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241200555 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87214193 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26364603 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.990589035 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.157414244 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.596540696 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.024541942 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196852385 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.890650531 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.932524069 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978326121 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954310274 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036578507 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957209369 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.965187824 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.222139249 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.940785921 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.939081907 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.78747958 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.972321455 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936160375 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.941323794 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.688126573 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217508593 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961818027 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.942293901 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.825316937 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.949775374 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002371346 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942051995 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.946875126 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.472686115 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.664088506 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.941844094 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.523030164 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160088053 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947440014 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.69781091 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049251191 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.018174443 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218240891 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996677757 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.871205275 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.649064349 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.629459871 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937523073 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.873019401 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.937402385 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946849954 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948277847 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.133929224 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.220925815 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.980768351 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.699311086 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.980270591 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94881867 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.942930025 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938888648 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.444666308 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.12930222 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.020140136 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.976564209 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080878164 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.952053464 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.87166463 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.941626898 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.943244092 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.937938096 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.938632866 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970744749 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.704011774 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319572668 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19959141 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.546947905 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95186712 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.730015902 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.996303144 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.041404592 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.873818978 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.00428795 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.964225561 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074889531 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.950259307 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.701469913 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.64793232 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.510446587 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271750147 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254734975 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387508147 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.052189447 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.963377301 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.278991842 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873480266 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.496579101 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.9973701 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.284409669 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884818601 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024714868 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.60125592 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.297107833 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953864574 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167268346 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335961657 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.777114333 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094499789 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152918319 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976312186 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.990963617 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.896580286 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.463794901 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081296218 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.73320811 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158339014 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273030006 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.71502245 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.078549043 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.941107416 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.620384021 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020959676 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.650574127 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.111525079 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.014669515 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.001327364 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423248398 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.94702993 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.166492115 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306030717 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.98690769 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.056193879 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.878434802 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.953532062 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.953439403 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.943641027 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.934878261 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.824643128 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.195346541 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95282334 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876954271 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.939878678 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232868472 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.851344976 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.948913816 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943603674 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25856884 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.370100401 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109659144 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.939450936 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.451044884 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950210538 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.877576117 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87698481 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.635946951 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.948358644 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918034616 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156554815 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.043738291 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859577477 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.914571455 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.016933254 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.200282737 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.957549996 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.223336129 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216761192 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.643117588 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967525588 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.045067893 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.721244343 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.064846104 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.944556404 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.180608338 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699557519 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.171437388 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.984621651 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.902167046 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.943038883 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157843073 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.944787205 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.98377205 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18530787 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.667238246 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.946843832 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395957084 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018263764 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.954416012 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.001939101 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.037904533 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954895668 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024203073 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955304885 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.956093278 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.955333613 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991013165 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.950516472 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.082279331 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.960127423 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035837536 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.148028287 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.463867443 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.952113785 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229393118 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311339812 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.282911212 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003432922 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.94604239 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946076064 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.880505528 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09497267 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.171090635 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219935721 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.074605039 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.060454532 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97076894 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.730552576 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.057665697 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183468267 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221635555 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.841231156 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.340829763 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.982011775 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.947769634 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958855049 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.15869992 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161632664 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28806956 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.084025336 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.921070566 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.315113681 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222334342 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.94801163 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.948743985 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539109505 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.956571144 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.756200038 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.986312624 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.975462986 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235210233 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957830707 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341114763 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.96902563 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.104450312 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.464490464 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.711767456 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.237561688 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.93743041 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.010435487 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231138885 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348033785 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259490963 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017394304 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959651535 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.058632751 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096804136 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.828468669 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.949585738 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.949429867 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.165343782 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.659074116 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.958043101 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240980212 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256897045 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.946620372 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.829103504 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97286775 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.958965109 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.173401492 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222268278 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.199257427 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959378439 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.954902286 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.767053744 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231162018 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007281254 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885074734 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.954177616 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048195856 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197731835 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971568226 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.403904581 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.661853993 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234942819 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.949125404 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972834727 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.003615026 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324503556 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280677529 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.480065161 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160634242 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.53574354 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.416738369 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24751422 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.956225361 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.00087671 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249019519 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.954875891 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.921505148 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983630725 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.229124913 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.262830529 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.964845897 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83925477 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.920550094 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.293255847 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.509693671 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.889092177 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.9605171 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.012226307 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.952027927 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.08145792 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962613259 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.84000238 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.000154804 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.706192912 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22191819 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.954506684 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.940991833 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.738616886 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.146270403 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980020282 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094143919 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952312933 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.67291139 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.31379736 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.208728672 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.929880521 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.9568353 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.957072395 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952791818 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.939139267 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.152019922 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.149023524 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225799784 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.954434659 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.984351499 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956591105 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.168366063 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168298266 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.936643354 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100712585 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.935739261 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98960325 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.858205622 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.456403233 seconds)
  done (took 1708.37048962 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.980386992 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.990085499 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.005533949 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.047126077 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.961984542 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.038716065 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.958925858 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.014129572 seconds)
  done (took 57.887811382 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.951434544 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.146571138 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.960552963 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.952514262 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.962335937 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.952669873 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.117432923 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.96052793 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.961853498 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.96175671 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.952383239 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.951595998 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.276716 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.972892518 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.951430365 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.937213446 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.959760002 seconds)
  done (took 75.828340499 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.963533181 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.012240982 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.973804041 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.967792033 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.906098134 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.963928456 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.741321389 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.957981906 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.952530861 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.170116502 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.578470431 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.951898784 seconds)
  done (took 91.029223609 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.959341623 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.956432682 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.957095056 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.958207122 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.956581011 seconds)
  done (took 11.67869207 seconds)
done (took 2227.927120129 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.196521501 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.176250287 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.181397593 seconds)
  done (took 6.245583776 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.09765969 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.147236708 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.265118669 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.285970825 seconds)
  done (took 10.685355417 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.239961553 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.333523697 seconds)
  done (took 6.459980881 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.334714727 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.954788159 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.331534482 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.949674343 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.951989399 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.951905129 seconds)
  done (took 22.745992197 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.953824106 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.956770149 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.955200584 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.956717139 seconds)
  done (took 9.7097756 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.934732878 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.660366138 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.937304185 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.951356903 seconds)
  done (took 21.371829655 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.702513943 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.712014914 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.696618513 seconds)
  done (took 9.998883486 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.546549525 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.86650024 seconds)
  done (took 9.300317055 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.21619196 seconds)
  done (took 4.107208581 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.089380833 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.267853614 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.489845892 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.48675162 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.601881297 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.666469111 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.260918907 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.191476407 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.362945959 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.390102836 seconds)
  done (took 25.69983276 seconds)
done (took 142.029564908 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.329619495 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.189818927 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.153644885 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.289030172 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.176660584 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.152529927 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.168693286 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.27337456 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.796647957 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.794917968 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.288927802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.175742581 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.326648957 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.189353714 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.327366027 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.19425099 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.174303469 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.342998782 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.983744405 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.220433108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.170941338 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.92563214 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.135521783 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.937481914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.177160203 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.106273316 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.504102756 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.196194928 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.137798571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.514149998 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.10800112 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.370948636 seconds)
  done (took 175.726472145 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.859157099 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.956816637 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.957747842 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.956753711 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.549557712 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.95882995 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.96046739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.957522513 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.353999512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.340272777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.957389361 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.561460895 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.96019888 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.957561815 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.974227638 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.95851345 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.482339245 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.91757372 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.969418561 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.974182841 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.98107901 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.540035889 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.983921276 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.584340052 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.542255579 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.991068823 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.958769268 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.997166344 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.963879132 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.969517755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.974572124 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.959690067 seconds)
  done (took 212.906551278 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.958553936 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.960719663 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.960961424 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.959943076 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.959663366 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.967528042 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.961609747 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.959466328 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.737957261 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.733154948 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.970784479 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.96662628 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.970442882 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.959631613 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.968272923 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.959759774 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.970565309 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.973334091 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.967758181 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.973004111 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.408748353 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.948028407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.992172103 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.907109273 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.979228477 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.980436682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.965005687 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.983523433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.986152029 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.987985425 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.985354702 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.963972107 seconds)
  done (took 224.843770272 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.165088194 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.970388276 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.970338636 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.924516853 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.971460294 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.970373884 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.965903085 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.159928284 seconds)
  done (took 20.017662883 seconds)
done (took 635.39416924 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.511113584 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.28319603 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.150001316 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.993418864 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.245112263 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.030900137 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.989234484 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.058371425 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.731616922 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.063667413 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.665602476 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.009411137 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.741011677 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.014398341 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.119263994 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.04900257 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.533179291 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.623953179 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.173456503 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.062990132 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.169564629 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.976075406 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.069154071 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.736986908 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.761454062 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.984720491 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.184943906 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.542477724 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.001521727 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.15893553 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.759355899 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.382754581 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.003466582 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.989434969 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.042949671 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.023767111 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.350652454 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.002539235 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.111875422 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.740919497 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.058246031 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.60067034 seconds)
  done (took 107.60294085 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.962761125 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.960063866 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.959192295 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.961206592 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.961675395 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.960608919 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.958421907 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.959459805 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.960417373 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.960023028 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.96020513 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.961460604 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.960127848 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.961410346 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.959798735 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.960881515 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.962138971 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.962733723 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.960860171 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.96078015 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.961456964 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.960501448 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.973605201 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.960510875 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.962048121 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.961674599 seconds)
  done (took 52.906296803 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.973457704 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.117785023 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.201833302 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.992352129 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.974512668 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.976908968 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.992759266 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.980045488 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.976377185 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.9766996 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.069296496 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.980479268 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.992672951 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.198452314 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.989261318 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.974807397 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.973953651 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.974101963 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.122070801 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.988928385 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.995115723 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.979535258 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.993508874 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.988308696 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.976968556 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.975558618 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.977942045 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.452836147 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.984064348 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.068337285 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.040989286 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.996930002 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.416792918 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.212677649 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.036086545 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.983139013 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.976446542 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.072630205 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.98117113 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.975793145 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.993118721 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.980329741 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.201547296 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.480924472 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.990800193 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.977149153 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.461876601 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.081958225 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.018010072 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.986837351 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.203540596 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.991825185 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.977836804 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.978187121 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.01274584 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.986934486 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.976098255 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.340112382 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.988057085 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.994750274 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.981309909 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.977367699 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.131918154 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.985918243 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.119051208 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.986049531 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.983251673 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.977998652 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.203677937 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.993753793 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.486587821 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.990769862 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.977656141 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.070494574 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.123345538 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.48765605 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.991283824 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.134805643 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.43616429 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.002444884 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.987048081 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.443520532 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.007578639 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.985373757 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.981438424 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.980399293 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.978067218 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.02155947 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.993995942 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.422267728 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.491969076 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.355485492 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.004331966 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.993893778 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.982441535 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.341104843 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.9859832 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.978981738 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.198062353 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.499849163 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.991810003 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.98674096 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.474669227 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.993498542 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.999873925 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.987106637 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.210073021 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.994282336 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.022561591 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.979368719 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.986116186 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.982422297 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.000161422 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.986401216 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.979883471 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.46235551 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.090686142 seconds)
  done (took 244.845866924 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.973511295 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.97508492 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.974346709 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.97468516 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.973884237 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.97969687 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.973360659 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.973522989 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.980214251 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.973393346 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.973829701 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.975059054 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.976941957 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.980170045 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.012468801 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.983004046 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.585435151 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.975315738 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.977454853 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.976776526 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.626971683 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.982961733 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.975732101 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.976937262 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.975749212 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.975349689 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.982965234 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.00395112 seconds)
  done (took 170.581738146 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.982561 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.097887834 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.999957074 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.010705733 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.991276218 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.980430819 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.006496717 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.998753269 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.988260988 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.981160875 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.981497455 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.043253092 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.993028635 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.081514792 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.015437324 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.014308365 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.086224995 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.992995284 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.980907441 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.981299039 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.011491822 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.978197313 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.043672242 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.107597554 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.001223733 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.09910103 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.988972695 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.984706722 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.983639866 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.101454751 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.999751481 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.043162445 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.010569423 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.002474644 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.104302901 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.099668983 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.091791035 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.016284427 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.988661956 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.982154024 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.982402563 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.97251241 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.099933471 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.002509965 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.985900022 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.092109812 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.002627808 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.986127343 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.993598213 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.98270565 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.999066861 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.002788812 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.050680138 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.11500715 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.017847281 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.010320528 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.010496676 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.271809638 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.994536104 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.083593441 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.980572344 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.102892501 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.005046292 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.974152736 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.984761638 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.989884107 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.013410975 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.016283348 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.08851805 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.994828516 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.084589783 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.021467841 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.992236004 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.984427045 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.98719935 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.101950954 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.102423518 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.021515935 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.021656937 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.017684956 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.981548956 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.98593358 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.975253578 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.002950437 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.98906914 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.100633546 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.102423663 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.995358574 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.988447645 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.987372943 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.988667449 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.011241362 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.109984953 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.02030233 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.083524888 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.054426275 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.058536964 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.999574721 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.999974794 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.99037674 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.051202308 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.000001657 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.998485721 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.328317066 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.055428172 seconds)
  done (took 214.764585969 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.465836217 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.042032352 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.043295925 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.272828507 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.407505946 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.842678822 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.033163595 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.036943519 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.061768264 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.194342697 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.095169874 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.04802905 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.023662898 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.010400514 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.034271841 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.056849939 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.038891756 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.33875808 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.15347869 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.129540499 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.015530762 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.339809893 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.350131751 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.42735807 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.070374188 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.37100812 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.717922433 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.276079228 seconds)
  done (took 64.822324998 seconds)
done (took 857.422184743 seconds)
SAVING RESULT...
DONE!
