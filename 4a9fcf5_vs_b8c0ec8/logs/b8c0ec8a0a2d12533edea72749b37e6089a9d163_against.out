cset: moving following pidspec: 21365
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.330126781 seconds)
loading group "string"... done (took 0.543520244 seconds)
loading group "linalg"... done (took 7.443448919 seconds)
loading group "parallel"... done (took 0.169106287 seconds)
loading group "find"... done (took 1.156929485 seconds)
loading group "tuple"... done (took 2.070801574 seconds)
loading group "dates"... done (took 1.308204809 seconds)
loading group "micro"... done (took 0.241805226 seconds)
loading group "io"... done (took 0.965885688 seconds)
loading group "scalar"... done (took 41.147102778 seconds)
loading group "sparse"... done (took 13.347897089 seconds)
loading group "broadcast"... done (took 1.036312922 seconds)
loading group "union"... done (took 14.566586268 seconds)
loading group "simd"... done (took 4.711364053 seconds)
loading group "random"... done (took 9.87593154 seconds)
loading group "problem"... done (took 1.972246349 seconds)
loading group "array"... done (took 22.635168062 seconds)
loading group "misc"... done (took 2.057914666 seconds)
loading group "sort"... done (took 3.474799847 seconds)
loading group "collection"... done (took 20.478525074 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.5702678 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.158580499 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149773283 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.150508015 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202054238 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143025609 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157652642 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099768291 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.966929175 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171660154 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154162936 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.531611383 seconds)
done (took 5.186152914 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.219569406 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094080729 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106690968 seconds)
  done (took 0.876717037 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.07898367 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145365676 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096166936 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079739422 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097045652 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079315706 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096269411 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07979442 seconds)
  done (took 1.356405591 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085929743 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099120058 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083215544 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098268786 seconds)
  done (took 1.048056 seconds)
done (took 4.265975775 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.72377717 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.27406171 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202664374 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465392001 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19870028 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.22090288 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682562032 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.360644627 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.258932695 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101050393 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.137531909 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395041264 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137398119 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.693546148 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092572791 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126643827 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.187805467 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.471279689 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085115649 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111208567 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11800154 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143387825 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131542642 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092826082 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187971447 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083691513 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.198292362 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110934047 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081623846 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.280351205 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203032795 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.70530872 seconds)
  done (took 10.98336094 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110903521 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134498765 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099496043 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13932716 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135865314 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100869851 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085486569 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097726794 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123361428 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177495696 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13228202 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125510121 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096441212 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083787226 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117411385 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24743352 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122195534 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100635722 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101835925 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104956006 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123550425 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114453841 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110420658 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094729475 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168639026 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224707201 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112619921 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127036489 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097820153 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113684671 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143863588 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144319076 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096152054 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081066069 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174768645 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125668241 seconds)
  done (took 5.183045347 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.098869038 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18951636 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124496676 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.173354591 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082161549 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146536651 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096683611 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116111303 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263017583 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.203531826 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.489100982 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143831208 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102164383 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100933357 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08461643 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099696855 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.650099001 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160492496 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118886348 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117948009 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105369559 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086198917 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368540741 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097572895 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082145958 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099625486 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067494737 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.169588031 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100508452 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.208566113 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125100252 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103206794 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135217666 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195564034 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.159639092 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128694485 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119183876 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101356881 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097533654 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080192289 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179876058 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096767794 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088498963 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098711449 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104314847 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13748 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137095878 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099814924 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098258095 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.198736412 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081417574 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115991351 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.951297979 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180647378 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091750631 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097844356 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290471918 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.121723464 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09837403 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078794502 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.306319519 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.190893254 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100818663 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080366868 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098596954 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082332501 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400279853 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08273497 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.709218224 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08379848 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109856158 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083355307 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098455847 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105227415 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089066369 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117730559 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081637349 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10056276 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080089892 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098243861 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081795617 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111061568 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.219429127 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.100144358 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081291185 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098014738 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117677233 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112710153 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101017665 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097385944 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116193574 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100466972 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099760612 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118749356 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101148186 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109322987 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084570497 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144179605 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099657286 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.161431608 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093737893 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079183997 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128565772 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103024418 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13207228 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115085433 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083119033 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.171366536 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097567279 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078449713 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100110509 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079674942 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101097027 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082145758 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113180929 seconds)
  done (took 23.196208198 seconds)
done (took 41.141524023 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.335775068 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105538919 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105760224 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105704496 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103132161 seconds)
  done (took 1.512033678 seconds)
done (took 2.244192791 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.29295756 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.179599497 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096676092 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171112613 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094164165 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.168366065 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.166076684 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095928555 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.223140718 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094994156 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16530667 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077276844 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095520036 seconds)
  done (took 2.678230118 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093985025 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115754377 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083787419 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110919849 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077403794 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111447688 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094280059 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117167452 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110989432 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086487515 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095116588 seconds)
  done (took 1.826677458 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094167446 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114715779 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084031428 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11069259 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078138677 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112446226 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094201787 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118242683 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110600058 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086674396 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094523176 seconds)
  done (took 1.824449373 seconds)
done (took 7.050768515 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090618055 seconds)
  done (took 0.812240354 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.935550757 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.565886651 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112529348 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.153544722 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.325602592 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.175417076 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.47174613 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128387433 seconds)
  done (took 10.804396659 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.146391486 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086954555 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101284386 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086366509 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104434096 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102966031 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087198503 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10393129 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083964024 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099618991 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086938076 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101310473 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100293999 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085528345 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100687873 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084496918 seconds)
  done (took 2.352716625 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120798465 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11934378 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107591003 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109228436 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087503799 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107221309 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107236777 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09062262 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103399295 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104296979 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09191816 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106983238 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105033977 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080950564 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107570411 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108824873 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087660697 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107303457 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108316248 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09137121 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107797734 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096271328 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088297681 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107387446 seconds)
  done (took 3.292657574 seconds)
done (took 17.988725886 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.15711646 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110397816 seconds)
  done (took 0.998151477 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095314503 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115119312 seconds)
  done (took 0.948879814 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.09591563 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096949381 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122251046 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111483427 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082163378 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097975787 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122109521 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081994217 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098516297 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098681162 seconds)
  done (took 1.749273928 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083036657 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11123804 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102751507 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096436727 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106337763 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095567663 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090038885 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100323973 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111673949 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078895915 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10300344 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115287612 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087883469 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11775834 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106693408 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100601842 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086011943 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.0996514 seconds)
  done (took 2.528955859 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079057331 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099156618 seconds)
  done (took 0.915967271 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081494164 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095413446 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082373951 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098529488 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09536294 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077592447 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09563439 seconds)
  done (took 1.363531411 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.441733948 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137970986 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.265344113 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102261115 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104730571 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302442757 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098899651 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086232518 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105433941 seconds)
  done (took 2.443248478 seconds)
done (took 11.683513317 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093229258 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117255087 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114716151 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.459768047 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108463404 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099158528 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147839865 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248266096 seconds)
done (took 2.133835867 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.142115848 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.564849135 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.424883861 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.235813652 seconds)
  done (took 1.970920112 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.398565989 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099112651 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083519596 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083126177 seconds)
  done (took 1.412090409 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079304464 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101604681 seconds)
  done (took 0.930257676 seconds)
done (took 5.207343473 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080191507 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.136319349 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080865444 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101668207 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.079140409 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.101203103 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.09725935 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079421429 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09857042 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080992548 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095970555 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081562463 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098827393 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081481359 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095684153 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078997291 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097586573 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078727379 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096061197 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078707134 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095928248 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081167045 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096119198 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078943032 seconds)
  done (took 2.955492596 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098323301 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100124433 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105056804 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086561762 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10399585 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087696508 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104897375 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098847449 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087305074 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100780122 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103815258 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085819637 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101502578 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086278215 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101388312 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103241532 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087759471 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099565617 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084122122 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103083151 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104692461 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08319123 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102773818 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104351735 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085426742 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103088033 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084161276 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099616077 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104670474 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086593264 seconds)
  done (took 3.640475836 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084550486 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096015012 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079608585 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103283497 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079350095 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098179779 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078919062 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097994866 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080243795 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096209035 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081273896 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096829113 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079042194 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097690837 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080029649 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100898368 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114559464 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079747271 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096588059 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079397667 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.10003623 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079183044 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097258133 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079831599 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096865011 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079372836 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096905836 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079753291 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096675415 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079382165 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100142655 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082689202 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096176397 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08636353 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101212174 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096225138 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083603048 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096738474 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080396679 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096619063 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079100811 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096634023 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079052855 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103353372 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080480636 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099222813 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080104759 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098291497 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07996346 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100046138 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079157312 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096701922 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098813863 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080853808 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100931223 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079131812 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097253978 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078920742 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099041518 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079455806 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096918805 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078474091 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099043674 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081029898 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112623318 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086796356 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097045087 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081518326 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098224954 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099459873 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.08121341 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111287351 seconds)
  done (took 7.270980605 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.128803656 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128088029 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081805724 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100007325 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0774422 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098211728 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.08347982 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097839009 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098987342 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086613086 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097616299 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081742321 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099096313 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095554125 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098112125 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099852047 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086521662 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095576301 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080507155 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101913776 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081187709 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101777035 seconds)
  done (took 2.858978895 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208043522 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106230485 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144642348 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108639272 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084483002 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108134412 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104532091 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088178719 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104207223 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084734596 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102058065 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104764916 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085671056 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101344798 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102099986 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086012191 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103837262 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086188757 seconds)
  done (took 2.677197363 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092517407 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099989464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.211641823 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099993041 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10141416 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085332113 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105853298 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109640992 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085301777 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100697101 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09313029 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103476379 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103198061 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083244987 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103732963 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083765151 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102953805 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083490861 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109793893 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106558725 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088999814 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110115291 seconds)
  done (took 3.03204998 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096131791 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102087094 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12134781 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086478666 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096844135 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080684324 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107621725 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082289226 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108752547 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101792047 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083024452 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099129151 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088931523 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099575181 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105583449 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083045259 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101856836 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083454585 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103331249 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079036149 seconds)
  done (took 2.678671171 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101864882 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101565092 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101586816 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09367579 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101755263 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083981714 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111458021 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102049639 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084227921 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126904008 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102001084 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083450934 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111428767 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107765873 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101462722 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093630787 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110113069 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111652954 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084020277 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102776725 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127299536 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08406375 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111651279 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10180903 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083746653 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102176039 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101863616 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089846977 seconds)
  done (took 3.590304441 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080545888 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099848896 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080543064 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098419989 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080139567 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097720338 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080283944 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098006189 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0830192 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098011316 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082588902 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10028383 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082689948 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.10106354 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083718682 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.10048918 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082300874 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098492858 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081098304 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098558751 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083055267 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100831596 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082636473 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098655291 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080779823 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100395083 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080141546 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098173415 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082469915 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098933077 seconds)
  done (took 3.486246186 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090312344 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108161566 seconds)
  done (took 0.972528497 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078282227 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116544383 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079773771 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104771111 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106199378 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083835346 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109971569 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087171818 seconds)
  done (took 1.538537508 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096745784 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112672431 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085104069 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115301817 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112605161 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100018658 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173961479 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102720036 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108157066 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081636081 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115926035 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082229841 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108315369 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083454214 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107124617 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089662778 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098562938 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108584083 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086655142 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100314956 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085770829 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114224206 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104101079 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.079797538 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103470449 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093668139 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115175431 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102803241 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087206963 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109323255 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089648866 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095130151 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083720681 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102796202 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082332185 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111876875 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119591526 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086958435 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111188556 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103335939 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095103924 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.0969257 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088986133 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108240967 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112743884 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085036508 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103387657 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079475666 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102206399 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087112981 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097416738 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083598352 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097340635 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109258511 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086927636 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113814353 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083621529 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103776081 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087013329 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106001246 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.109001811 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086089175 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104001891 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083346099 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112479294 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08794197 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112570904 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097230388 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07783699 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099916875 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094805082 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1257078 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108629785 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084415003 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102782736 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082285513 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105598959 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103823206 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090017537 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108609602 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084177514 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109439207 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110273601 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083594636 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104464505 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091798386 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100859901 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104823288 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080927673 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119622438 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083274881 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.10025498 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08175496 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114323351 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105925756 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083851573 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.100177759 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093265095 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095849277 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085354469 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104166516 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084602178 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114247157 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108025416 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108755005 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093295112 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.110367961 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084263125 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105896619 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080573504 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103747025 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086354792 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109966337 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096660789 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087520639 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.102536766 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085427052 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111649091 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082471418 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102835994 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110755963 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.089821884 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101151373 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081567143 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105896148 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084473841 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10649777 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111737434 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083493953 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.097350424 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079383837 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105600015 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084327074 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105718401 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108085098 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08696575 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096561883 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081966793 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106952939 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112268981 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08447297 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10327258 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091499978 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103475946 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083931077 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109164535 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105785602 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083349559 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108833385 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085775069 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097992069 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08791292 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106035599 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101977457 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088232397 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106977894 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087491766 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103837942 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083155399 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109114498 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104427939 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083364353 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102343166 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083229557 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114733948 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086162773 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09744198 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099686947 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092269965 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100405196 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084746696 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10128965 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086678735 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103316032 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082352222 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101919568 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104838167 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096526511 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108028916 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104180166 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090587916 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114908975 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084891787 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105358525 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084788946 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104173226 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103787408 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09420294 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108520184 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090119313 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105413119 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099334681 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090871514 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111371201 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083579644 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100768932 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083832366 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107301148 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108285147 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089155263 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104016393 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082780947 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103363959 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088516563 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105463519 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103409594 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082774297 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108524488 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.0840551 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110187038 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105112394 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095260895 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106435849 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080078593 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107427141 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082092714 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109427665 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098173256 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081809045 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102043171 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086315205 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102390395 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087224747 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097131395 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092437704 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111217223 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103942927 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084216206 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103149514 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091830702 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105083369 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08938543 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106675391 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110235901 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096934529 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102778907 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087500572 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114127033 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103949038 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078524547 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10914513 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084117882 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102861444 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083330378 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101472551 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08744675 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113174419 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111943212 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079332396 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105969333 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08402518 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102870054 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080281615 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107924547 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107030428 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0864199 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110353223 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086235513 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10432372 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088531552 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10364354 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105810443 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086292924 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105964337 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085479169 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107267622 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084308175 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107171132 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083849636 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102306788 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105754407 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085231182 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103617492 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090880573 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103997698 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08542874 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.1070288 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105667565 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085709172 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104290005 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084785467 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107118112 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086019039 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104388664 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087922092 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099498155 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111377755 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085368053 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111729001 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085625415 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100531796 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091885427 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106601872 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109896971 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086384056 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104460909 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086369983 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103711015 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088358646 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110215862 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101937654 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09655082 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113211407 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085925197 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106438713 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104768044 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086613102 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102963296 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086247713 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105362719 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085563406 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10397148 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08976788 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107308396 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103829598 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087338868 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105294229 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085856422 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105253602 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080877023 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.1033327 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085185057 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104461563 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11510365 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08664514 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106798732 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084136994 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105608797 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084753138 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100852275 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112650206 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094565163 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105460766 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111923673 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084904461 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106061237 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096352008 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098289242 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083937782 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102152339 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083438894 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112740377 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105777435 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095522194 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104495594 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084408452 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100847361 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086482996 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.112173108 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079907459 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10180607 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107937024 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087550718 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102950375 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085432158 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10783168 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087207028 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115529459 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103883304 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08607467 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10468043 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082675639 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103356192 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084426276 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107170069 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086100505 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102617397 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082030929 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104134534 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105407842 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086443006 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104402612 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08743394 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113943368 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085578605 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.1075226 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108573248 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080143184 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107466581 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08515601 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104301693 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084853001 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108489068 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089142254 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106292373 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114232843 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086361197 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104832705 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086373353 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102616687 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084667517 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105683976 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104380283 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084492683 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10629631 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093984841 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102781292 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089423412 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104663316 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104742936 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093429152 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10596159 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088964179 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11311448 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08867631 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107124793 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112105063 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089719912 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108129633 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08683147 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106472491 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110614578 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084299395 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111037711 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085747222 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106550967 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086997814 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103098956 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085315597 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105590068 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104207608 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092631505 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105645419 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084658492 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10436172 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083838529 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105687279 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109254752 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093709933 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107923282 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089062417 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100208953 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083304092 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106269182 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083857311 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106660513 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108835911 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092021325 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107291008 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086571358 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103992257 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095069908 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111750896 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109039251 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083840368 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108343115 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086898247 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.1074803 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087476337 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105283082 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106584139 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090383171 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107154463 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085739772 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113568447 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08996631 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107435927 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106627512 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087235104 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105826598 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081350016 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106439085 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088946313 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111779743 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088370165 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106288824 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116797468 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086784829 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105613514 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090272047 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.1055917 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10973195 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081550813 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106499256 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087463654 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106100958 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.08147295 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10420818 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083811605 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10754852 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085283039 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101095596 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117237178 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096099554 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108753428 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085313776 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104699108 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08140762 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101040058 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105164306 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087766212 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107657929 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096917743 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10455365 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085186417 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100716681 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085762173 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109294396 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108532447 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083333839 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100791218 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085994826 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108756273 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092361734 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104526541 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085434046 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109326964 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107350475 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08503546 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109412088 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082903143 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109015551 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119350472 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087238466 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106263916 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092931874 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114301361 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106574135 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08176093 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106038666 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090278686 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105598491 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087964051 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107780011 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122054973 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090065461 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104806907 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085540648 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108057261 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086372459 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115199551 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107436604 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087120998 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110013331 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088711371 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115523234 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108975772 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095410385 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108773637 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089516747 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105418909 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087458108 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104360899 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.103935175 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087513726 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107053006 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091802656 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114772275 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104873293 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09834899 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115838548 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092199358 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.102016235 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086294497 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105759445 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101516651 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088020844 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103615641 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085243767 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103732245 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085263981 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.106750221 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092676648 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106745493 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086971667 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106063342 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099882037 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088486212 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.107747289 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087771349 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103048353 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086389832 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106952372 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090618358 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11003821 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106437527 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088573783 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107498384 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087712696 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101075027 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093531009 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105512652 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089683502 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105716243 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106756712 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088078942 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109780177 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092729162 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108049303 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108624086 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099386919 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108274064 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084027486 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103854186 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092126028 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103876431 seconds)
  done (took 59.334938354 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143857585 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082032237 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101246105 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083013563 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115809142 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102467605 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08236563 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1026354 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083310158 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104854091 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081962729 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101665382 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112002772 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126753416 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095432085 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107099393 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10144458 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082846161 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101587476 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083426953 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112203271 seconds)
  done (took 2.927594731 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102830248 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122027494 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118422105 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121915993 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092325078 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118540977 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11860329 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118716453 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101044242 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115324478 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121389927 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118360688 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09397724 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115015559 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113748856 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096003542 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122150035 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112030171 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118609144 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098778575 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116819701 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117518122 seconds)
  done (took 3.293653819 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083654523 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104225058 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088269313 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101108122 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086062133 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101356307 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.0911239 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103956293 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089452303 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.105700128 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084787533 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.106505858 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107685661 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082076118 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106277955 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084074299 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154981542 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110322134 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085608937 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108067108 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.102344539 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088069666 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.101535266 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083066913 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.104672115 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091187359 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107594905 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084486041 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106647627 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085014359 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10611159 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.104135578 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.087801864 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106924173 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085470191 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104709797 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08693033 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105831027 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082532598 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.104583889 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087207202 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.102383736 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086846005 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10808485 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084384597 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.104774372 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.107417063 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087344379 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102009091 seconds)
  done (took 5.607532827 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103556225 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164958638 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088787781 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.147503923 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123726511 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.116918118 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091184209 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.147325399 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106035514 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085801151 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129148344 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123054808 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107100815 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092610842 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.114444372 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106845291 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087898157 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106102968 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.111588977 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087010538 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111471534 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.1136277 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103092008 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121830975 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110990502 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086238134 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107624736 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111074385 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099630737 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112738635 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112736342 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092967558 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125230736 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109805597 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106232327 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091077675 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125155372 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107834725 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090289952 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105041207 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088961948 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112748351 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113628414 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12435165 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087535834 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112442863 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087833343 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103917331 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.121477248 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089830979 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116217319 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122785402 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112011438 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08748811 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112423665 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123395366 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08740843 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105347337 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091549749 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121861448 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.104704945 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090877291 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122786209 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109969319 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.115264004 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102630793 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113787545 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111282951 seconds)
  done (took 8.351179359 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092582913 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11264462 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123511967 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123853309 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093818064 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114504809 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11376439 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.094131992 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114182829 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119368187 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114901835 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137915485 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088838926 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117384832 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114420095 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094154109 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115264975 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114043148 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093669433 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115590111 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114160774 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12362062 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093986487 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123496823 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146483398 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109924534 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093749259 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115198812 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124289183 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114082938 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127395409 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094754028 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114817343 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125266667 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127036042 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094392605 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106934328 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114520187 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094259831 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115916174 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108902336 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123868602 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095027775 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110009431 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114956224 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094060718 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123860212 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127349839 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118675229 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120309298 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.094932995 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124298042 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114445024 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09533181 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124704912 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.150545645 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124053605 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123750871 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115637206 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123646185 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103484528 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131420785 seconds)
  done (took 7.875346468 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105957146 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114351335 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119808737 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.104246201 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086369588 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113122134 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085828637 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.105449228 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118544243 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098337425 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121189304 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11245054 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095871159 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121819166 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111879935 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116729159 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092090844 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112488359 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118062806 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112857151 seconds)
  done (took 2.999562447 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093564538 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125839976 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089146191 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115514989 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.111530655 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095094668 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.11094013 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112639585 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089684419 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111803845 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099579325 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121115051 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109457777 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094619791 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120512742 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114512552 seconds)
  done (took 2.547637686 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096020637 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118837097 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.123914603 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087843497 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107976963 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106161009 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.08844315 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.104692546 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085129455 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124490081 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.1098087 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.091234273 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108781819 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086678013 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105643576 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090953473 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105457607 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.107010746 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088205562 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124027127 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099943726 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10829595 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110097273 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090619763 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109657606 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093685828 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110230033 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107447428 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087217101 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109245717 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089084013 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.118125911 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105729039 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08770931 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.106886376 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086393963 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10900489 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109556624 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.091705742 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108436499 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086912597 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108948303 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088470218 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110696415 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.106410061 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089234205 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104475359 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095108114 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10719734 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088803726 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.109778219 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111517924 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089911302 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120589112 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.113604711 seconds)
  done (took 6.467594626 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09855537 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113136329 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084258731 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.1072061 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092116161 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111609118 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113204519 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092725282 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110830821 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087127416 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111938454 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09357158 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110792257 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112798972 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090643941 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112827657 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084711199 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11135437 seconds)
  done (took 2.677735253 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090055382 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108482341 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096578605 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109418109 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088804167 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113091047 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084780457 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108502691 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108216935 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088943763 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109175849 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091523394 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107158595 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091497432 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109707813 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088749296 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113075698 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108378249 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088544158 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10586652 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091444968 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107899071 seconds)
  done (took 3.050386256 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118871151 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.129544532 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09636982 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.240017961 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.107666046 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13664469 seconds)
  done (took 1.670807395 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108883734 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122359207 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111461557 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111117276 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118972284 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111838392 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091346238 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111457289 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122148898 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105117564 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113027851 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122039234 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121955354 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100909603 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120142083 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118197496 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111589033 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090817616 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110608107 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13197638 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091328022 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122310517 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111766218 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091694441 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112404212 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120767258 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121379077 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125977577 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090943828 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122457777 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118977089 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091715802 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12223018 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126423041 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114027981 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101390282 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111888046 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132086119 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118669041 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099996016 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112338575 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119203903 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122397664 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09764447 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121717694 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112182111 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096070489 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112737918 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112378009 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138826383 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11845865 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099573843 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119225644 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12291717 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122355775 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139338161 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105170779 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12169238 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11909181 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125932918 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121345046 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097281183 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121931459 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126088805 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119140374 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121076111 seconds)
  done (took 8.397238344 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103414154 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129035751 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113027926 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126479189 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100503442 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112332176 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112579793 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090987759 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111948226 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111507295 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156437291 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09224738 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121900705 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122282867 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112613573 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092285194 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112737651 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120808066 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090579078 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138239521 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112495339 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122013256 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122135523 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10063684 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125868856 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118470214 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113021719 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091494185 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11241501 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112740587 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097129348 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112376978 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122131209 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090320051 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121670243 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112489418 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111948327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097920693 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113724575 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119423288 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101021869 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132404983 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11351927 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112601312 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126100658 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092748735 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112845553 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09115943 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113430069 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111615696 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127610647 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105506585 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127020949 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121316411 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113616744 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091808261 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113203018 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112397443 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091255833 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119243515 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12166777 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112954118 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139351516 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091478472 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113724711 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122569806 seconds)
  done (took 8.284692705 seconds)
done (took 158.933465065 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.217963658 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198058474 seconds)
  done (took 1.262270072 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087805551 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140044713 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101454439 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174142318 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084747849 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140274837 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137451843 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097165481 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109361506 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090134286 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.111360471 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091430822 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.176080333 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085398554 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108099746 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111533431 seconds)
  done (took 2.699533357 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113925049 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.260084289 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.128388094 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.110805112 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093421055 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.114608478 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088217104 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116488786 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093728055 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.109878262 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.092810033 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.112101611 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088556091 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.112363049 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.1150297 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.093319895 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109469521 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.092044825 seconds)
  done (took 2.898525903 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112020523 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150393549 seconds)
  done (took 1.122453644 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.240744266 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160562146 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227076659 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.467347274 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.266708795 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.356214862 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.195987825 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.209367874 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165198989 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.207325148 seconds)
  done (took 3.34869147 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117215367 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183649854 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.32336361 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.163044169 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.111368728 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132801514 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.162636765 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.136619131 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.128986144 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105735298 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128481384 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.123308448 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144350061 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099166383 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119512349 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.123056716 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125219468 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.120049063 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.119163473 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099308168 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143140294 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.110759518 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099253828 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11849816 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.124448369 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102744898 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.11090726 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088961509 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121030333 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119624972 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097411477 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131084705 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.125110606 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.160766984 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.128504769 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.162061444 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.12332 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095518512 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119792007 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.116852746 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102115425 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123861504 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130072963 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102182297 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.110114865 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101678323 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.110883774 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.110329317 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098125828 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124559184 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.119312308 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.09673922 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1595156 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.123558515 seconds)
  done (took 7.637993264 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.784336379 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.161327096 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095040662 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.895711188 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14314947 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107773137 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.778262206 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111582746 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252815339 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.750032619 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13451397 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124475358 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.210005003 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259702763 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.953627948 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288773336 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.641144694 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123350739 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151091604 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153735673 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11947226 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114377213 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108630376 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453622688 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115616819 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113777727 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098057117 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121844499 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166420519 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.128541269 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117920351 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179267858 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.255467261 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20305343 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094248624 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115944933 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115752063 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175800967 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269569415 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191166226 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180110533 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110062156 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09178189 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123948204 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133711892 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108920815 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162939937 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173364002 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168811606 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11457982 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119352127 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097887636 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122675098 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164986569 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120752673 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.317026263 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308623179 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089693812 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121365347 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125798513 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257778464 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100741928 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223948347 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139103235 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214000374 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089208892 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773417957 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167766852 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111054695 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09486946 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120562998 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117273198 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119345146 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.145802503 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390169489 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123052751 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115059262 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089857957 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.252545925 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124392912 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09050022 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160456911 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116120868 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120635311 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123909297 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100176242 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.18874756 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228743548 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122053469 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097893128 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115450121 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126609876 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094877671 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213307789 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216629782 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.18385688 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206109529 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121348845 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161483537 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169234165 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119196904 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171376021 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121465895 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1240963 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099981476 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214993039 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144875087 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122671277 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093397623 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11836021 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147804804 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126420083 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118027127 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169498281 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.476738309 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.190144778 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086787418 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127539026 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119749424 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162211114 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117156513 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.237172773 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122252455 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170129797 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120208459 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086667853 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121045869 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161897787 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122003055 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121304497 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12208927 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097112246 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.257684883 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.192404835 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12237798 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242605662 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184381507 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095439662 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192585241 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099215307 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187842645 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097675759 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12087899 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119451613 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771932588 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123622737 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120361134 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09496584 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198682049 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111920362 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123784704 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101817257 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108994691 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776627225 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104388573 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121152747 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.123437939 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094751871 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12223075 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118572981 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093219654 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183365442 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226711642 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096526121 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119570304 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124037244 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160569868 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115867942 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102545723 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125680859 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123968695 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099392333 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114868446 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124372426 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168457305 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161378431 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220445366 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.589383736 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09040835 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124214525 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2274247 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111958822 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.264998954 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119547502 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223326434 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1621071 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120737377 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.304499139 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164363465 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196223698 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126941303 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173458948 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108944989 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095387758 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.185052011 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089970823 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11828558 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162501308 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124168546 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10021865 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958227859 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111975944 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22438691 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108439154 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170144663 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115607817 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09736491 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292542715 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112030561 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.105380623 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18611563 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092237077 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126162058 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.718400356 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102531185 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122199525 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11738314 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.218731243 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162763448 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120011968 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097693808 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120410267 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162600717 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206030673 seconds)
  done (took 43.936502281 seconds)
done (took 63.759193895 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279517342 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219339444 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269646609 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169791431 seconds)
  done (took 1.897186039 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171394339 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151070852 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.1242182 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.11269034 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.1577626 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090024342 seconds)
  done (took 1.690741736 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.360694519 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274065482 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241752659 seconds)
  done (took 1.766231682 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.320743019 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.256497325 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.478364142 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32672256 seconds)
  done (took 2.369613089 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210769737 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.139481309 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11638207 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.108535007 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.201256067 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246004552 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143011699 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20219002 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098116224 seconds)
  done (took 2.397669029 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197865736 seconds)
done (took 11.206531613 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.173957437 seconds)
    (2/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.147655976 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.168179808 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.296526735 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.126938537 seconds)
    (6/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.237626024 seconds)
    (7/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.126648286 seconds)
    (8/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.247219991 seconds)
    (9/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.24668371 seconds)
    (10/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.105983537 seconds)
    (11/309) benchmarking ("sort", BigInt, false)...
    done (took 0.261261748 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.188172591 seconds)
    (13/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.098335974 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.132561806 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.210905339 seconds)
    (16/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.216697622 seconds)
    (17/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.103303283 seconds)
    (18/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.220713352 seconds)
    (19/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.174709139 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.128056975 seconds)
    (21/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.183101592 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.121884474 seconds)
    (23/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.125426167 seconds)
    (24/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099000291 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.215463273 seconds)
    (26/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.079428051 seconds)
    (27/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.22910012 seconds)
    (28/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.138460541 seconds)
    (29/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.100813647 seconds)
    (30/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.256219215 seconds)
    (31/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.226457294 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.122510476 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.201554062 seconds)
    (34/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.081497258 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.141946 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.070479695 seconds)
    (37/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097682214 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.099710146 seconds)
    (39/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.187237862 seconds)
    (40/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.108239402 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.151976442 seconds)
    (42/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.153284642 seconds)
    (43/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.166161388 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.191544856 seconds)
    (45/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.189351646 seconds)
    (46/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.244363649 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.133075494 seconds)
    (48/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.098637413 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.142346707 seconds)
    (50/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.086077365 seconds)
    (51/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.161420776 seconds)
    (52/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.127551914 seconds)
    (53/309) benchmarking ("sort", Int8, false)...
    done (took 0.194051509 seconds)
    (54/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.216984329 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.071783981 seconds)
    (56/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.12210244 seconds)
    (57/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.104336021 seconds)
    (58/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.180153575 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.145506135 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.116296968 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.119292927 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094098787 seconds)
    (63/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.107426841 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.139448238 seconds)
    (65/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169160972 seconds)
    (66/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.142294563 seconds)
    (67/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081794296 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.144129574 seconds)
    (69/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.127594383 seconds)
    (70/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.101915376 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.211199796 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.192139443 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09199739 seconds)
    (74/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.12125095 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08860114 seconds)
    (76/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.23345064 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.101474439 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088781029 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.095030892 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103595137 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.192774102 seconds)
    (82/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.119105451 seconds)
    (83/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.105172693 seconds)
    (84/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.120906362 seconds)
    (85/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.169748603 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11616651 seconds)
    (87/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.113536911 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.071003284 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100718071 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.144135946 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.125818036 seconds)
    (92/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.161233219 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.113759293 seconds)
    (94/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.070848424 seconds)
    (95/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.123290886 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.093010113 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 0.117059664 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095823147 seconds)
    (99/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.09608495 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.208999718 seconds)
    (101/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.128446375 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.177245317 seconds)
    (103/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.117231075 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090438735 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.173051787 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.091041324 seconds)
    (107/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105208136 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091015023 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.145017991 seconds)
    (110/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.089380132 seconds)
    (111/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115718262 seconds)
    (112/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07230042 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.143253771 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.153490214 seconds)
    (115/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.183529568 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.18161491 seconds)
    (117/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067291926 seconds)
    (118/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.194811549 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.160856598 seconds)
    (120/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.1558048 seconds)
    (121/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.153069711 seconds)
    (122/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.092926802 seconds)
    (123/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.188865657 seconds)
    (124/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.129106088 seconds)
    (125/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091941444 seconds)
    (126/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.096973514 seconds)
    (127/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.099667401 seconds)
    (128/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.328157248 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065440272 seconds)
    (130/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067646761 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.144380187 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.072452332 seconds)
    (133/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.122304746 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.185309473 seconds)
    (135/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098531316 seconds)
    (136/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.124338713 seconds)
    (137/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.101047975 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.233063972 seconds)
    (139/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.108435451 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.13928984 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090945348 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.140683521 seconds)
    (143/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.070651258 seconds)
    (144/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.096048377 seconds)
    (145/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095735467 seconds)
    (146/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.141649054 seconds)
    (147/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101166936 seconds)
    (148/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.09488254 seconds)
    (149/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137434924 seconds)
    (150/309) benchmarking ("sort", Bool, false)...
    done (took 0.179799653 seconds)
    (151/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095066899 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.14103775 seconds)
    (153/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.069856767 seconds)
    (154/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.121141757 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.099681039 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.202539381 seconds)
    (157/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.146309064 seconds)
    (158/309) benchmarking ("sort", Float64, false)...
    done (took 0.177006143 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091690141 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.121220158 seconds)
    (161/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.098112558 seconds)
    (162/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134778982 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.092186234 seconds)
    (164/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.14534221 seconds)
    (165/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098567572 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.138587626 seconds)
    (167/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.131720368 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.07162338 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.147642295 seconds)
    (170/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099376216 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.116829734 seconds)
    (172/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.0814112 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.116107239 seconds)
    (174/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099218597 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.123876463 seconds)
    (176/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.092392937 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.139470392 seconds)
    (178/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.071872403 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.195284344 seconds)
    (180/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.123906698 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114729755 seconds)
    (182/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124515461 seconds)
    (183/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.20297197 seconds)
    (184/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.092311174 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.116490252 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.18376151 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.072430667 seconds)
    (188/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.142705301 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.072622052 seconds)
    (190/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.126681838 seconds)
    (191/309) benchmarking ("sort", Float32, false)...
    done (took 0.155068855 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.123403842 seconds)
    (193/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.187124551 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09063339 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.139906227 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.133691346 seconds)
    (197/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.146968695 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.091071933 seconds)
    (199/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.225611176 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.115337486 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160817963 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.118335081 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.181830311 seconds)
    (204/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096480605 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.117366813 seconds)
    (206/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.07054498 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.224724114 seconds)
    (208/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.123363796 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.231353346 seconds)
    (210/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.101339034 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.188791823 seconds)
    (212/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.125077203 seconds)
    (213/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066957993 seconds)
    (214/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097124827 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.148714796 seconds)
    (216/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.072263569 seconds)
    (217/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.222770787 seconds)
    (218/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.120419431 seconds)
    (219/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.167678183 seconds)
    (220/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.071004804 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.214758525 seconds)
    (222/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.080159159 seconds)
    (223/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.089937229 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.116081586 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.223694537 seconds)
    (226/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.072798779 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149306506 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.117629623 seconds)
    (229/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.103865798 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126783959 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.10016151 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.137473737 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.11591568 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115884784 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.14550686 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.097425497 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.154602419 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.12250881 seconds)
    (239/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.127479212 seconds)
    (240/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.126715987 seconds)
    (241/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.094801892 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.115604536 seconds)
    (243/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.072972803 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.071806628 seconds)
    (245/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.129504949 seconds)
    (246/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.071200859 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.145727911 seconds)
    (248/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092346461 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.194624534 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.097486767 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.087924614 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.072020721 seconds)
    (253/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.099244415 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098133054 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.122539744 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.092423401 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.220995814 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.117456703 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.204986565 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.071864089 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.16220996 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.234617928 seconds)
    (263/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.072333032 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.123521896 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.092002373 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.071552647 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126101079 seconds)
    (268/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.082487924 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.140186739 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.072880537 seconds)
    (271/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.11545186 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09913596 seconds)
    (273/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.120061821 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.073696697 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.101832292 seconds)
    (276/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095937412 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.165780444 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.072019623 seconds)
    (279/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.099074077 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.172825182 seconds)
    (281/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.097317444 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.071528153 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.124727815 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134558837 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.116335763 seconds)
    (286/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.093918809 seconds)
    (287/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.098251652 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090555361 seconds)
    (289/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.082182788 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125925146 seconds)
    (291/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.142924759 seconds)
    (292/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.093116908 seconds)
    (293/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.126859936 seconds)
    (294/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.083568406 seconds)
    (295/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.073099506 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.123675729 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.072460913 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.097386969 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.155975738 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116941916 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.180600774 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091548963 seconds)
    (303/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098032147 seconds)
    (304/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.14505413 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.123376381 seconds)
    (306/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.093095366 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.118812049 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.083996034 seconds)
    (309/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.121116609 seconds)
  done (took 41.637646277 seconds)
done (took 42.532733964 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099046817 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146542818 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098582078 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.140303475 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12836113 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090882804 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118962348 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098549102 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.127645772 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125149867 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097750168 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093443568 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09574243 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120926112 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096512542 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141018242 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.127149215 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092796676 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119089859 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085739479 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120795292 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086178743 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113224833 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07012766 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.125526005 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094008038 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.120872147 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121306126 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086648107 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.116524158 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093600156 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.123413175 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092458945 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.131442382 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.098667858 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.126491322 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.127188113 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.102612964 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.121893096 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091870417 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.125723893 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.090540118 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.126641979 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100225954 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.123177499 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097703309 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.125945093 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.13073401 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122346521 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123858384 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.100252887 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.128303064 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.102213024 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.124732398 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.096546373 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.1220765 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.117462693 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115162395 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.126405794 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098206367 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.125585743 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.100209301 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.123865253 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.126250737 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.100962686 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.128730519 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.103845371 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.124282531 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.102657287 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.123438582 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092740873 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.124913782 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.1199648 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.088493075 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.124673098 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.09822797 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110167547 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092468964 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.120003455 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093453927 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.116561215 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095715204 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119728076 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099530613 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120157813 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.075088703 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.121454853 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.098253745 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.117242352 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.101444952 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.124785623 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.098643254 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.119426706 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.129047472 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.091617801 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.122180677 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088617237 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.113747721 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088420225 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.116092595 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087052019 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114115263 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.096120212 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115931353 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096301673 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.128806142 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090434575 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.124754162 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.091878801 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.117232891 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.132269815 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103745082 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.118134627 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098507479 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.117010854 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.10074547 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117465087 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.093422801 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117526691 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.092757761 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124563784 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.0929384 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119543018 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.099867638 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.132334502 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.092502106 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.122323118 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093384631 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.114747783 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093052037 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111215342 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086530526 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112066504 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077973215 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117300931 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089554984 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.123025834 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089632546 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119089024 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11331795 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095642023 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.117310433 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092645135 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11749141 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086161788 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098079441 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092620865 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113417692 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089609756 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112546493 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088456074 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111758414 seconds)
done (took 17.53273279 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086912306 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185036305 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153068891 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144968532 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106668015 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111420443 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121521214 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118509865 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113271838 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142658698 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110627913 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132464653 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14850794 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086146835 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115801563 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090899258 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116922234 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102726992 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145133635 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133371813 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164261339 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086695503 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148636083 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135492461 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120743396 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.11422227 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112589017 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090641551 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116168099 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103541273 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132430105 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115197916 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087591285 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134653811 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104511193 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121798958 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087168234 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11890174 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.111489607 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087941289 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143168 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134146733 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091834819 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118525402 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091454252 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114294153 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088746175 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123209939 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122345384 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091862705 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126999332 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157528294 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090880735 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123438091 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086431698 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122470184 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123261942 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089680612 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112666513 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089749208 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113719748 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09070612 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128827824 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141337451 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091279065 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121003666 seconds)
  done (took 8.636261159 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10440388 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139413121 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130378251 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105955499 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112176687 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088763116 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.117193711 seconds)
  done (took 1.755687379 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088098558 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134638357 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128392564 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138156859 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137424773 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112852659 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130222951 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093118696 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13647982 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088597389 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133459232 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152306637 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089147474 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12052503 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137329954 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088183384 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139427406 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088235928 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118702071 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136805056 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090798694 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136272273 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090731761 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114496244 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102891406 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.119472561 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164749472 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093339104 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11545096 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091595027 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111992956 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166618847 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101968975 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124301776 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113418265 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103187673 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.1303591 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086221752 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131792194 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093861637 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127541765 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117164033 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090676325 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.11569573 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093136107 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124817118 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090252478 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115552161 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091264551 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134255978 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089549966 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129749966 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090011668 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117611678 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115810855 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09630689 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123748212 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089680023 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134559157 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090530127 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133036348 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133227901 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102265992 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131142558 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091321376 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.12771107 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.127953926 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.091244629 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116119261 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092059215 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130684868 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086266366 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115991527 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099123843 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118082383 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.137524329 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.111933785 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115893549 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098399422 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114375486 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089976943 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114771499 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112536334 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117596211 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114567812 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092449565 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117689123 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086773485 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112783312 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.091868952 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113003495 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090435977 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.11754858 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089156456 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117331507 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105928233 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115373228 seconds)
  done (took 11.88722986 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090299692 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114993841 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092424562 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115044131 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090035276 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115845903 seconds)
  done (took 1.586919294 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113513132 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118119397 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10425509 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120728295 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157264917 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129973697 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104683271 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124698644 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107934234 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127085617 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129292129 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105138117 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13711236 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121646371 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.102873133 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12196423 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.132589144 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101261049 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129042618 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096091783 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137056034 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121884382 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095818417 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133161606 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119989359 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09473525 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126616066 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103209179 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127107256 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123874896 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095952616 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119787119 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12097422 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098465603 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130092964 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095797043 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120989375 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120382877 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100096318 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117915406 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.129990915 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0960998 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128103951 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093830593 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123514211 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121092151 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093853439 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125089309 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129632034 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.092875915 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119979982 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095329426 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118539131 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118471716 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095816355 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123909148 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094380031 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130024447 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122423237 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095345683 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118642944 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092989039 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123013791 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118359232 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104867508 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119921555 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121203588 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09586871 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122021208 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095241087 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119325743 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117802366 seconds)
  done (took 9.257991589 seconds)
done (took 34.074060095 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.68841008 seconds)
  done (took 1.655100104 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.708013197 seconds)
  done (took 1.676518389 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.14170603 seconds)
  done (took 18.111533443 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.502337103 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.582004164 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.819407413 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178802897 seconds)
  done (took 3.053694214 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.931284452 seconds)
  done (took 1.917983486 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295117716 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258547303 seconds)
  done (took 1.525531711 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.765958142 seconds)
  done (took 1.744564195 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.35556755 seconds)
  done (took 2.328051027 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.33073027 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184155522 seconds)
  done (took 1.50003876 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.555556622 seconds)
  done (took 1.536914803 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.781244451 seconds)
  done (took 7.77247891 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.257852813 seconds)
  done (took 1.253676066 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301426989 seconds)
  done (took 1.287901161 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.519337387 seconds)
  done (took 4.509763112 seconds)
done (took 50.847785336 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098648588 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127358234 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102066928 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124824341 seconds)
  done (took 1.435941782 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100146572 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121385751 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100367506 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120774459 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126316088 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096471488 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124304204 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100529275 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120547318 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096871845 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121092664 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120364276 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099460984 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123426949 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09283852 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12360614 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124526108 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095532372 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125214588 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096134321 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118926674 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097619046 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124746018 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119076771 seconds)
  done (took 3.68250363 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099458909 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119072164 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096377719 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118238409 seconds)
  done (took 1.424932271 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099538032 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142065501 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139278036 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100100929 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142616777 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135781092 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092017911 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117542096 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093645332 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125468664 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090574523 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.14902614 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137533194 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099170863 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127093345 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113835455 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092167701 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137470952 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099707108 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.1263261 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093274189 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124677162 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09018252 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139466659 seconds)
  done (took 3.803224254 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157970359 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150519517 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139556655 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09535613 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.155383306 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142091146 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088078866 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140894486 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.091004314 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131060319 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118611619 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.13228164 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127952346 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088710956 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113028031 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087771019 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128128137 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127939971 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090024698 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.144745124 seconds)
  done (took 3.45207924 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097521282 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11773596 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088199571 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116400724 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099072319 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120678972 seconds)
  done (took 1.639855888 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090178391 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114300792 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089862425 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114650567 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093543882 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115277057 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088251366 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114865063 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089567928 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115639043 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089297228 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113537663 seconds)
  done (took 2.228678395 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.456080888 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092826801 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120830233 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111392699 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096735911 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115365686 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103584453 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118228494 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141032938 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089304284 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115650647 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091440949 seconds)
  done (took 2.653270372 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23784447 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12523833 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294611052 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191466936 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160266621 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170972299 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152019627 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166369999 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.224833361 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158181134 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208479667 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22168277 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125862871 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219246211 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111475958 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143861296 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226896901 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219298935 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155438089 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232010713 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201964777 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166089326 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178962885 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152162458 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138727546 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17028764 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121587948 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103918128 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236105517 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179576696 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217072097 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162909232 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145817947 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242794758 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247784285 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198617312 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187957344 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135974373 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145524377 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164940473 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26894009 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138260355 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236909117 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159385388 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10444521 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221590235 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168828887 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174249751 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150105966 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138290885 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198188724 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240689487 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193635214 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13838487 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162578325 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160947779 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168235275 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152106035 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252459346 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198877087 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20373805 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094149199 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145104602 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191173913 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181870595 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16780628 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.20787293 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146200756 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194364973 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186160282 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16701197 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219002773 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182556046 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137748442 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170673331 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174086561 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17159033 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254933785 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17742675 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120898145 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168770293 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149512306 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129829566 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167766936 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124387848 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240873377 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12395565 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.134504336 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163234644 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161469007 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161375932 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200175476 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218444083 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148110507 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084083315 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156327229 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154724367 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189423643 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139965684 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159671497 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161494823 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130398676 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177678389 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123550097 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176098959 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091213849 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178234403 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209270675 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100099947 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159323082 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154897497 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150042105 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180650059 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202000735 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141953212 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132877069 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20685283 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175421904 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149443987 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204829077 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199376581 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143866715 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148694034 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200333944 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245425229 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112433334 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230331498 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155318973 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134528803 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.10744715 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178935331 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155435886 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159980131 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13368457 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179780681 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23887699 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098116907 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13814625 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1887056 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133182485 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132004581 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160440819 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148161893 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111625225 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146902293 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151757165 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208934494 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178645986 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153025376 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167012014 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151757467 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249343487 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113955928 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148756554 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148852172 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120965276 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194184453 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196541526 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131355512 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204366504 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.199521777 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129588356 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197631087 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107811925 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177533688 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130385939 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093156132 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221297391 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166815779 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163214027 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194616552 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156127596 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183756464 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.208929974 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173554881 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174516817 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166394624 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159356333 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139202692 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159084331 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164574535 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096204449 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14303111 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135958822 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158426396 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142951048 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106200048 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228191719 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172337915 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148515983 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158419792 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149891711 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179172607 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101649271 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205684452 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177909222 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14711587 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.195805874 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192641042 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213643778 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115833856 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234403593 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12100658 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098595785 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142853159 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172293957 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133711472 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108075285 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193462283 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178362468 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185295359 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176794657 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163535461 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177793399 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188987634 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121323735 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168222944 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185367514 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175332986 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.186242883 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140205665 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.124264107 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175432963 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15483337 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254838306 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166712511 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202644195 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209139125 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148726196 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131656958 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149985303 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186584111 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154487634 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17643783 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147395169 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139857438 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160754062 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108492434 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158760704 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21207276 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162098242 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190811478 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15085561 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186452594 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128441606 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165538504 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158181198 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165806912 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108326382 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177046908 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203291051 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147519709 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169251145 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21988551 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10475329 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.17784931 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240545678 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195655876 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138170403 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157854164 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159898212 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162958473 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175276636 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17729754 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159991017 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187964938 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158494231 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136926216 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139719904 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149503325 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125371424 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133039752 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148739146 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175304381 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139333409 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188856309 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160783576 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15694023 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170676584 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150362677 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14354631 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151131076 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216673513 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174010464 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242596329 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149474476 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178937966 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204388595 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126590489 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131706555 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105487302 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177513558 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136288758 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217122218 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.120749089 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157440634 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178986013 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220098992 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111543834 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.1201306 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15630451 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173716839 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164673813 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15221503 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158963526 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207921526 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142739241 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132136956 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170222067 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129052469 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147457643 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223005081 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080783453 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148264055 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099677909 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132810752 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163934193 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234952962 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108785576 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184410306 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167897899 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168354821 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164925102 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148610395 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148874257 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166272449 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199936361 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212220771 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105349986 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158288305 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175926019 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222368749 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161201015 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.13999423 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203227064 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191552334 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.225113185 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11433032 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19481789 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165762467 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128864651 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211808832 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134897321 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207455925 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134109779 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196087429 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151106807 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142685468 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175671284 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.147952309 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141623806 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188156123 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172992588 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13508825 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13327155 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166864886 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175604916 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154640116 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126763481 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181534695 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124728066 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190406474 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258795313 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105723316 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154469945 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14743597 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135927196 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156229985 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158904443 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138934297 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138621116 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229594232 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.107505735 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220098802 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201356964 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196478989 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175904335 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144458835 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692587598 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102517882 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221316814 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154160713 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206657908 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15185707 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172827252 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157129194 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171251047 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194489274 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184773189 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202879166 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22029946 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177536226 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131928935 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15786059 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161502451 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144102561 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153276771 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166038018 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159188355 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.125119021 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.20329593 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168953021 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133311628 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113939954 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224643188 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127261439 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214260394 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178872272 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110728278 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198723335 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185993124 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133561064 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182326844 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23567332 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114343253 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150288365 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134200721 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155145872 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259709267 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097389823 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22844787 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175647079 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157855228 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166555371 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147446354 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189703635 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156790075 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202853141 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118721101 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157782537 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154689784 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137504019 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129868793 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154012495 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166495577 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.121289691 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185551593 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138249157 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190657632 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12297559 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144277393 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12840914 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218348911 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214112457 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138152866 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134611311 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162632961 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149917584 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175187556 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177749981 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135415978 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108265847 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136664671 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.155258101 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112877156 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15544083 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156973554 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165937102 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205800797 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136671114 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277845164 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140838322 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153576825 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088867426 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131115783 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150467605 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118417251 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156854924 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15021408 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259908507 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146647984 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105329136 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147973397 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126004101 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108557778 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16530468 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190376199 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17450234 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144989384 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081435877 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158560989 seconds)
  done (took 80.868454432 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161157669 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130914613 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146392941 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200982769 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176518389 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269963931 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210103914 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251962223 seconds)
  done (took 2.627185043 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093193924 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145533616 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157286728 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133391477 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091149964 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.12015128 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.331386659 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.140067816 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.09096899 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.13891254 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172172104 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093436911 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.511488738 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.124209697 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119490764 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082554132 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115285713 seconds)
  done (took 3.7349152 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.46140467 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.709563052 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.475770253 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.1243061 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.083628461 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.133229634 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.709750596 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.208772442 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094647377 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.484761643 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.768151971 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.17916482 seconds)
  done (took 18.517353195 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098983767 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122883251 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107050981 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.139431211 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097871315 seconds)
  done (took 1.650665064 seconds)
done (took 128.703561972 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103382867 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409555445 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071980766 seconds)
  done (took 1.603203765 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106630226 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.1365953 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108533081 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136071643 seconds)
  done (took 1.583974368 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097843733 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127065001 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108429136 seconds)
  done (took 1.424928094 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321754613 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190198646 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.150109033 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105354243 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129663975 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103658415 seconds)
  done (took 1.42601203 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096963224 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127309839 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098358953 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130172751 seconds)
  done (took 1.544192475 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094442664 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078578289 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108227912 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074865387 seconds)
  done (took 1.442799805 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113973452 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131536834 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10428789 seconds)
  done (took 1.441609546 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129432351 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138288186 seconds)
  done (took 1.360621673 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104415489 seconds)
  done (took 1.193117892 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117864404 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169718945 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.197154449 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164814358 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.226465208 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165763374 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142240266 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114541341 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130827517 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143917216 seconds)
  done (took 2.667581549 seconds)
done (took 17.545049224 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103278051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.511673901 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414722133 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116401615 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722195707 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384426535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.068482941 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147690164 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165850986 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099143118 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140108299 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678271518 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.020208073 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.465794897 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981411551 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.3698951 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706411658 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093121382 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119943693 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09345947 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.054290153 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092658528 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121468166 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092579552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704016842 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42569514 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094332866 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.373483672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09224334 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125820473 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383208003 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121788163 seconds)
  done (took 17.167845457 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094162779 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17377508 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098749548 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136987889 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12381822 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095279859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123870498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093699786 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179707322 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121943903 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111306806 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121728126 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126363403 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094466543 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141725687 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092624703 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124252588 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093610657 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121397337 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121951215 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11127895 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121551533 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093945414 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121725195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093693879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135590627 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123219356 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09260897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120854894 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098909846 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12724137 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094971427 seconds)
  done (took 4.823726691 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140633989 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182594938 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128231635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127335746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169695371 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125489477 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200440071 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146300832 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153357222 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123974275 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13997312 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098361044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.160221779 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.130187031 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113838912 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122173201 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096548122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121811908 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092481461 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123032318 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139926894 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097693477 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122200243 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093011681 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123495804 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136076881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095439806 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121197348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092852078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126874437 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100195521 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123083239 seconds)
  done (took 5.170619252 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096783943 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126792975 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108638669 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138206058 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095072518 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125004921 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09714751 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123984126 seconds)
  done (took 2.009642935 seconds)
done (took 30.263274536 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111555741 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127978111 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106543392 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134805397 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102853384 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132448278 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091707575 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133531916 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133629231 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10198252 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137821069 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091663461 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123825745 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091684629 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136082403 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098102757 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133279052 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101901894 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132894041 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132565204 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09501626 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133448399 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102332139 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134083603 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104035597 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134198982 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137316529 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105397652 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123237003 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.0946762 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125234725 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111899519 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.132304567 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10527869 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128778027 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097124953 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124174209 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094512409 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134742313 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.135937065 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101427091 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13615318 seconds)
  done (took 6.039177213 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10786867 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.148983372 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105582945 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.087277967 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.1172496 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081089338 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138695962 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087443124 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.118225798 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108276729 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.083302255 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10806604 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07887591 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10504551 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077488708 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075492547 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109346305 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075517165 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076588321 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10667233 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080196246 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072521171 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108387946 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078610545 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.1046784 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.0810085 seconds)
  done (took 3.627495416 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099361555 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136290957 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112903714 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184633582 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160653478 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100614102 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133004185 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140782082 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108891934 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120917498 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095978187 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149819581 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111039036 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12838 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092863771 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136706728 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136662893 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094178074 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128584474 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113408341 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13855543 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10372441 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143857105 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133723996 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092137018 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123279307 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098309245 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135798899 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097823435 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131445039 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.125835543 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09614456 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123460052 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104567576 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12590231 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094123028 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14224427 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131730484 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101433946 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122464775 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096065641 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12273387 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113507564 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167158898 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091846483 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128826823 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129329399 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102840204 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122494775 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11084055 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131674233 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091122315 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125659949 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092071495 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121411957 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135850329 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.093973385 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123582766 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102158392 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124680748 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105482036 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125551543 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108368196 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122809381 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100591246 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121113662 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122379781 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.09155154 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144266917 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098516933 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164290132 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101493966 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124144704 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130819478 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100960716 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128678992 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092540461 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138240313 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107703408 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.131830598 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102663069 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125834919 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124420894 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111595189 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123959659 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095068009 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121784952 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099509628 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124804539 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.102347121 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135684012 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.122311203 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.095161382 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139962266 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.097837585 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123334187 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099852333 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127344663 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091968118 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13444262 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.130657865 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093415189 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132016963 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092958193 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124405356 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102831019 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127114853 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091800279 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127855579 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128164511 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.093686397 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.12324723 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096269193 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124069452 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102930894 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128686563 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097976112 seconds)
  done (took 14.875435096 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227328535 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216570084 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.249195747 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.2678067 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135501676 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.144830571 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214819745 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125066794 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124385265 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16065614 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.16236825 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.186011643 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170469415 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180652186 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110927453 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120150611 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141599772 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135114884 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215571748 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.288627164 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142294529 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100910296 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161970804 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160440826 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137189492 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102760991 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140055926 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133289384 seconds)
  done (took 5.779985118 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107606569 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156505783 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099059306 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143785865 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148313298 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093220337 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127698495 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094721916 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135461356 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135403233 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092589157 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129042284 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100405236 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131636788 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123935189 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102697699 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132249944 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095135356 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126395787 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097625702 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130103444 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.132092965 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097457732 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122445847 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.100635875 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121550296 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086390084 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142937669 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123409374 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115676103 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121307081 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099890644 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133832998 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093312575 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122762027 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096316665 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124625823 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095196177 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124193965 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092667901 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121057043 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077782776 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12234377 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136110826 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099485688 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109278892 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099760372 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127878866 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098582679 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120137532 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095627295 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125452939 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096131196 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130570943 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097727113 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128719005 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09656785 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115827596 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099554044 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124937228 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084627739 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121525162 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.09794938 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117554785 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101167539 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128757885 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092029111 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125171607 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09717111 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128990653 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095278706 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125224621 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121539811 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.096051803 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128183244 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097401147 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127071617 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092013364 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122758863 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093448658 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.105418521 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.093252188 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07481404 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126447897 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092126888 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122077121 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.124803547 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.099136799 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13792432 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094394997 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.129880753 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094886757 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122751221 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.127022505 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083142508 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095570958 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138169995 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140498326 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093188367 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122105131 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10725573 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12817446 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121788589 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076165397 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100067615 seconds)
  done (took 12.946886242 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127492152 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.159066345 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.101275996 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142298005 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155155468 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157746225 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100340807 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130485702 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095115497 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142220617 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093633361 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131452001 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097108131 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136820278 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163613949 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10541959 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125444748 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107616331 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131529099 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170306126 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112476261 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141530619 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.13892439 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094732598 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129614749 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.114286278 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161011927 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.138286004 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108025944 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142895829 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.114727633 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161906482 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142694448 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105592699 seconds)
  done (took 5.518545303 seconds)
done (took 49.886015563 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.218644945 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.424510172 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.199306065 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.079030898 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.23077583 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.240985768 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.211506507 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.19812983 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.673404515 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.201927382 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.471594398 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.856360731 seconds)
done (took 60.138311794 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.22891657 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.337942533 seconds)
    (2/2) benchmarking "String"...
    done (took 1.463878523 seconds)
  done (took 3.933436199 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.551079481 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.202688349 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.463480044 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.200049956 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.200198113 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.488955511 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.837538103 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.549484582 seconds)
  done (took 28.072572327 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.211341204 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.589511166 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.87585027 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.878558661 seconds)
  done (took 18.68743339 seconds)
done (took 60.605014737 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.20037573 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.245135563 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.222157287 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.189839217 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.313166124 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.243767567 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.598344473 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.231956356 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.226269881 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.186186141 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.222712082 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.210867006 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.201755802 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.603385012 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.211615077 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.20495836 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.270735815 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.707306371 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.619897037 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.219440854 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.241988387 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.251705576 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.228791984 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.203731168 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.262560594 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.209135986 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.201593593 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.208605055 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.775534736 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.203474103 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.207331009 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.792012622 seconds)
  done (took 191.048325164 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.202135017 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.158998089 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.263140754 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.237534319 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.594733224 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.405263201 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.342361384 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.666235542 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.226197271 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.22348512 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.42780097 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.207380506 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.501476698 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.193246119 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.212334484 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.300691615 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.500539782 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.509720937 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.227614226 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.474203653 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.218533594 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.455643189 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.356294383 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.389858912 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.252962701 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.26022193 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.222058259 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.254840212 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.39737641 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.423060682 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.216451453 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.239218961 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.832155032 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.067551697 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.230164271 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.247344808 seconds)
  done (took 150.071731209 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.483329082 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.205026549 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.205057976 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205331051 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.236071115 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.203310953 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.786387417 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.787648647 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.712625067 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.448241496 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.267038587 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.497918771 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.209831053 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299024074 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.215561381 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.205755512 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.219812288 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247799666 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211685032 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.20543383 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.786633468 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.223326611 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.409121008 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213611131 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.205758652 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237830753 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.598589532 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206579694 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23879147 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.528745326 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.255295998 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206752577 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.56453739 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.51366625 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.211576669 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317785265 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207999003 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237637819 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.207032143 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.205933618 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.477634107 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.207406909 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206278602 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.206821333 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.209546925 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.855813488 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.210825815 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.788661065 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.210391583 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.174419516 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.211318375 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206667493 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.554634349 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.787035811 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.227372706 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.206791172 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.20956544 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.206843541 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20764424 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.2394544 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.540922274 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.309990972 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.22552138 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.21080059 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241169584 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.209283196 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.387454091 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208158573 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.59995605 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.280136705 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.433240235 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792449232 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213412494 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303300236 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328209123 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.20912051 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.208843322 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207458692 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.209161269 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.315647742 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.208359633 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.630820689 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215273491 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.210575182 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.271193652 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.305116546 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.208803995 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.564060026 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.213652983 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.210428065 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.980206318 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307441375 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.208298189 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.209406637 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209136665 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.636285162 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.790737126 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.433923385 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.214570323 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.571403418 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.214428317 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.20988857 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.653239711 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.775873121 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.861797415 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.215189152 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31754341 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214583068 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.210499905 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.209752698 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.2403735 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.227218797 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.268012522 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.20919616 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.60891055 seconds)
  done (took 347.166524446 seconds)
done (took 690.900596447 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.914130513 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.856107641 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.991192359 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.877900268 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.861065653 seconds)
  done (took 10.640269606 seconds)
done (took 11.779791203 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.399204201 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.397331408 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271648833 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.40242611 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239543729 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.416264782 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.380489857 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.235990487 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.313255082 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.293669149 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.312642055 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.264384614 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.240101269 seconds)
  done (took 18.308960766 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.528703381 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.584277212 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281063506 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.533091558 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255969256 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.571061045 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.414080125 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.442367408 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430029483 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249552557 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226657466 seconds)
  done (took 16.660444078 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.530404677 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.533756737 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284130374 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.538973417 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256757604 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.572334296 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417969919 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.433819628 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.460971084 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249168629 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224698649 seconds)
  done (took 16.646134791 seconds)
done (took 52.755123206 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.221360134 seconds)
  done (took 2.365363899 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.256658562 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.421750288 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.242185102 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.226374836 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.22372982 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.223015256 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.226838705 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.222153619 seconds)
  done (took 11.18799408 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.221722544 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.220908855 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.218103767 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.221693987 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.221984664 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.222063887 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.22175919 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.222766762 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.218557196 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.219548784 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.222106229 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.219099754 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.219632383 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.219127639 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.219472543 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.219318376 seconds)
  done (took 20.672483776 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.222414251 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.219349102 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.220227632 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.220667995 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.219544629 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.220975538 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.220193466 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219621446 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.220076535 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.221158249 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.221188001 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.220303564 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.220568573 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220104286 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.21995478 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221404228 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.219870789 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.221232794 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.225596751 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.220933687 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.221936186 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.220751203 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.220714191 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222001707 seconds)
  done (took 30.448885262 seconds)
done (took 65.815781237 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.411945134 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.945362517 seconds)
  done (took 9.502692728 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.223496996 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.223502655 seconds)
  done (took 3.595190534 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.223890682 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.223748456 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223099497 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.223188568 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.223893196 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.224071595 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.222711112 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.223816477 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224363724 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.223915495 seconds)
  done (took 13.384189286 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.224632014 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.223874343 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.221937871 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.225068359 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.224575326 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.222366696 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.224606787 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.225578584 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.224742475 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.222742358 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.224737631 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.222296571 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.224229605 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.222429138 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.223895396 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.222174253 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.221988632 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.222536479 seconds)
  done (took 23.173098446 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.224633718 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.224679073 seconds)
  done (took 3.59732987 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.223148584 seconds)
    (2/7) benchmarking "second"...
    done (took 1.224380865 seconds)
    (3/7) benchmarking "month"...
    done (took 1.222511868 seconds)
    (4/7) benchmarking "year"...
    done (took 1.223148994 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.22380454 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.223327617 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.22366988 seconds)
  done (took 9.713298727 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226204207 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.398930273 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.477591364 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.833925392 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.227521298 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.229335376 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.098298941 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.229253021 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.231516807 seconds)
  done (took 14.102309225 seconds)
done (took 78.21321928 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.243725921 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.23686324 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.456167335 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.231000039 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.258131864 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.563786034 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.253578973 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.360925911 seconds)
done (took 37.751401847 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.228638023 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.982369447 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.978838141 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.23292955 seconds)
  done (took 11.345524768 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.204945828 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.199865751 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.207619484 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.243887517 seconds)
  done (took 18.007613863 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.293829806 seconds)
    (2/2) benchmarking "read"...
    done (took 1.561671145 seconds)
  done (took 5.006341851 seconds)
done (took 41.737250227 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228659509 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.228523148 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.227248762 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.22934854 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.225975578 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.228159849 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.22613253 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.225604416 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.227941608 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.228262736 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.226183798 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.228250969 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.228608085 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229266095 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225330158 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225777138 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228338621 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.226868405 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.225873419 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226069672 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225986033 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228840499 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.226564266 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.226498578 seconds)
  done (took 30.606129481 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.229587072 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.226484544 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.229618207 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.228476977 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.227127199 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.22882916 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.229728829 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.226817842 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229548377 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.229052212 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228813609 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.226492011 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.229794167 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.228479318 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230106138 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.227427448 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.230485965 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227231632 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229728732 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.228466401 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.229659844 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227126551 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.227313821 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229752501 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.228567705 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226826045 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.231100132 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.229434837 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231428909 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.228412134 seconds)
  done (took 38.014981538 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.235823713 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.238015389 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.232249011 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231440081 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.230531181 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.231988306 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.231314264 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.230099334 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.231093271 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.230086387 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.231204623 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.231533533 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.230932978 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.231502297 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231620396 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.231406495 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.231921931 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.231713168 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.231352231 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.232184154 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.231743853 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.231861802 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231826408 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.231448379 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.231661322 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.232297791 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.231808968 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.232903958 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.232132111 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.232729377 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.233396751 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.232983799 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.233200347 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.232074152 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.232094518 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.232648986 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.237470694 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240476615 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.232883262 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.233726956 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.232820786 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.233443165 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.233130907 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.232963901 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.233894016 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.233338127 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.233738169 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.234381616 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.233087705 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.23353974 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.234459811 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.23433587 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.233781351 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.233584312 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.234099193 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.234789714 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.235254106 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.235014336 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.233765374 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.234073625 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.234983923 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.235409043 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.236780874 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.235390918 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.235472959 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.23558701 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.234814695 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.235595925 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.235331982 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.236670242 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.235849189 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.235212279 seconds)
  done (took 89.960550053 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.23604989 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.232744639 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.232309545 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234209596 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233383833 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.23537974 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.233247997 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24014743 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233344608 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.235733125 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235055337 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.233770367 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232775376 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.237114771 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235830005 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.233773788 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.235975454 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233889446 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.236527796 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.237401916 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235919931 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.232569272 seconds)
  done (took 28.326015247 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236630828 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.238260571 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.233515543 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235700931 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.23412958 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23698206 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.236374074 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238521158 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236851071 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234444885 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233962595 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238602718 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233683574 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233257984 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234413396 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235336603 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235837892 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236577438 seconds)
  done (took 23.402374912 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.235174239 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.235051727 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.237333782 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235686573 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.234829855 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238895039 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235979647 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23777528 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.238100301 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.235316546 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.239346706 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238163402 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.238291929 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235748831 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238671633 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236150738 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.239312204 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234901483 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23798923 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236546352 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.237439184 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238709132 seconds)
  done (took 28.375350635 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238438752 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.238867339 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.236334796 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.235675803 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.236607247 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.239091291 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.238679163 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.238213634 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.240442417 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.23928159 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238104671 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.240144549 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.238040388 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.237680531 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.236831904 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237675891 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.240310324 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.238152598 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240681246 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.238392322 seconds)
  done (took 25.929230109 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241660747 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240266813 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240159958 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241413848 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241247698 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.241172466 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241447068 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.24104365 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240857912 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.242410878 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240624798 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240679235 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240714823 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.241075612 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241235566 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241327239 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24141761 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241799291 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.242323917 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24169244 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.242818763 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.242240036 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241470654 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.241949916 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242448715 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24272088 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241892884 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243047699 seconds)
  done (took 35.926029954 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242007117 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.242248541 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.239642331 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.239463567 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.240688983 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.240007433 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.239875586 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.241184891 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.242178194 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.239617581 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.242176008 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.242562551 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243442853 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.242846773 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.243002523 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.243200547 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243904429 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.2411139 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241840097 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24051711 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.243718565 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243452771 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.243234825 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.241554216 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241154394 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.244171081 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241631514 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.241166841 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244900675 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.241595405 seconds)
  done (took 38.423705513 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.262051309 seconds)
    (2/2) benchmarking "in"...
    done (took 1.262469514 seconds)
  done (took 3.689621384 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.242089515 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244634618 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.244571085 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.241916486 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.241741251 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24446857 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.24444735 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242015328 seconds)
  done (took 11.110712868 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.24348847 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.245147657 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.244993512 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.244514833 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.244711907 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.244804099 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250997439 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.263336489 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.245974239 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.245997364 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.251349398 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.251872684 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.247505075 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245395393 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.245463631 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246613001 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.246047151 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.244888635 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.245711664 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.245274429 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246419681 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248982722 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248691091 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.244043277 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.247694381 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.257573497 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.270305534 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.245651188 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247279639 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.250271671 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.246772277 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.243743267 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.246889017 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.245445966 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.246925862 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.247114424 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255102779 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267044727 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.25284189 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266652671 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246546137 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.24443165 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.248388198 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.247992482 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249801175 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.246303983 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.248390677 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.243967489 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.248218 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.25075223 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.252261586 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246837858 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.246161564 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252103968 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.249224977 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25540526 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.26761612 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.252065017 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.257922627 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.258660676 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.280816323 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.273549058 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250205425 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.249079064 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258677779 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.271960334 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255603253 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.26550383 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.24701249 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.2490642 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.255963753 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28151924 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.275234864 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.250590615 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249414338 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.251184691 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24932217 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251112435 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257152126 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.271561336 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.248583684 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249062779 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260251554 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272056327 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.250738777 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.250795638 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.249428094 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.250513152 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.251774422 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261163726 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.270773429 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.251191356 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.250054797 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.252301659 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.252147741 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.251352556 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.249795402 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252862929 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.249213685 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.251096149 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251373684 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254887935 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.260801492 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252374932 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25238535 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.258509742 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.271516055 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251146102 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.258216999 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.252465821 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25206211 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.25464636 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.258435757 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.249108807 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254155249 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.259971055 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.251945069 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.253620066 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.252490388 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.252677778 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262555478 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.278667564 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.252841504 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.252280864 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.25613898 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.263335459 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252680616 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.255633815 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.253832643 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.251232754 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.251022875 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.254456932 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.254234522 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.254546368 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253555869 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254758444 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.251548999 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.254062127 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.253587745 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.254222981 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.254984934 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.253466603 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.255994886 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.256305901 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.254150548 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.255818699 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.25950321 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.273946614 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.256132907 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.255338711 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.252885986 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254976247 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.255494014 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.254262556 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.254041111 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25591436 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.255198413 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.254969374 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256520641 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.255011942 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255680799 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.255756752 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259698313 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.256695516 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.259484496 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.25544323 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.253479834 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.255850999 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.255907019 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.257014421 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.256149375 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.254388121 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.259006981 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.263823106 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.256101337 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.256696604 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.258323954 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255994452 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256724798 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255489841 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.258056949 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.262974537 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.257101097 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.262779746 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.277119841 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257139632 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.257089096 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.257248916 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.256845468 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257378802 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.259607045 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.26478338 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269987016 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282310443 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.257832736 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.261274738 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.258822384 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.260702911 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.261762953 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.257691994 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.256687324 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258852572 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256914992 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258336775 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.258493093 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.257443911 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.257820068 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.259903084 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.258708209 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.256717371 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258128852 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.259851531 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259085747 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.256431701 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258453831 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258507073 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.258205578 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.256665565 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.25738506 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.258208086 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.25917325 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.259109172 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.265168153 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.256156698 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260998776 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259992851 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.260516976 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.259547745 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.260473481 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260924745 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.258653255 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266397353 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.27890725 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.260696956 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268124637 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.280223959 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.260815953 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.26327401 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.261094057 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.258466542 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.264205554 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.269612694 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.261037382 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.26167269 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.260474934 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26098319 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26153483 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.26694325 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.277843402 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.261154728 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.261241881 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.262828758 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.259429656 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.263665004 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.261837475 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.262440585 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262843396 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261513281 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.261956058 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262302507 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.261353502 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.260954906 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.261186904 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26593967 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.269622587 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.266407491 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.262328004 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.26474219 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.262750639 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.265209462 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.261583115 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.261534291 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.262320847 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275167437 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.287252236 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267986747 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.283419248 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.262154849 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267427261 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.283333109 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.266360898 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262392963 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263304264 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.263305527 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.263373311 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.262235868 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263580965 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.264001266 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265892505 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.265221808 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.267805033 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.26471048 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.262500962 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.263863989 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.263974588 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.264423712 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.261884355 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.264751047 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.267255632 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265261257 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.263208076 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.264905071 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271444261 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.284830219 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.265749527 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.265434688 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.264238397 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.264617167 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.26532068 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.265711688 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.267729632 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.273553446 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.268842346 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.274237932 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.266585126 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274695204 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.264654859 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.269376836 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.272612835 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.262951777 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.265548604 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.265841295 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.266481824 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272470654 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.285512094 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.267623779 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.270489176 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266536516 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.26694589 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.266990403 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.266870264 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267425031 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.26625326 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275123517 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.286708842 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.270709927 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269071015 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.26503685 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.26700438 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.266884174 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.266183642 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27022698 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.266570169 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.268717029 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.266872795 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.268009103 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.26740921 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.266705957 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.26995901 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.266052252 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.268758481 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275620987 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.290053108 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272748612 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.26818236 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.275504439 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.2881061 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274266883 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.287420568 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.269492452 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26857112 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.268903435 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.270040063 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.268328921 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.269619871 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.268700161 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.269768446 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.272984572 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.268472185 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.27144752 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.27027366 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.269414558 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.268322349 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27894217 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291656389 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.27071312 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273935694 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.26699752 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.270698372 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.273610669 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.269404551 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.268518288 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.272247985 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279555655 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276713758 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.269750169 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.270629529 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270023252 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270812694 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.270576557 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.270925202 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.270110852 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.270825962 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.271879459 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.270718795 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273018536 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.271134861 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.271820389 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271797822 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.272212108 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.280580766 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.291480239 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.272016988 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272218498 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.272046268 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.271828407 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.271557317 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.271152868 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272416975 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271990298 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.273565485 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277244777 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.277629044 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.274515087 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.271631397 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.272528071 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.271997077 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.27320183 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272096594 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.272402143 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272771691 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.272893951 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.273256372 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.274160748 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.270431131 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.272097271 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.273922218 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27372886 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275734755 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.279356722 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274751289 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.271250942 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.273713986 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27330936 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.272701111 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.273737196 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.280665508 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.297571736 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.28296222 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.282590002 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.278494168 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.273935776 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277165915 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.281590586 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.273752474 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.274243254 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.274991012 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.27440027 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.275795332 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.276405428 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274114061 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.280626541 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.294494138 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.273972298 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284055715 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.295115153 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275122706 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.276704861 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.278356321 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.275691612 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.273198473 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.275948131 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.275322399 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281697169 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.296226592 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276037032 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27806393 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.275222906 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.276686439 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279226399 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275879144 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.27726581 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.273912323 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.277286822 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276383941 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275865716 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.27358949 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.276134788 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.276216402 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.27915138 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.282735626 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.273383202 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278695971 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.277542487 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.278238992 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277535573 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276919474 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.274169263 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.273564118 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.277089948 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277156552 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.277647916 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.279655687 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.277348005 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.278604841 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.278080434 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27690059 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281124377 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.287646945 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.284268342 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.275403815 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.276114637 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.278447204 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.281264937 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27769973 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.277666702 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277418017 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.279880519 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.278801232 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277985565 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.277820131 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.282053743 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293221437 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29875713 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278725294 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.278733907 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282797651 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.27846576 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.275856229 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.279325547 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.280589406 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.28171024 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.285961236 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.278640314 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285909214 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.298928903 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.280387825 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.282670072 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.282590991 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.286771005 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.282792879 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279054548 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.279045924 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.284209963 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.294812585 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280135289 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289725 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.308840315 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.300497956 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.280951015 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.279869995 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279895903 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.280916692 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.283195248 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.281595697 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.280332393 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280497456 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.281168063 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.282213169 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286419174 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.281709553 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.282686961 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.280812156 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.279738092 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.282335027 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.27862744 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.280852503 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.280982063 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.281031687 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.281474126 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.281706273 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.282420659 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.294574084 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.309698792 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.282666627 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.281346392 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.278823646 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.285555543 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.285773957 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292952967 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.290545537 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.282589405 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.284140925 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.283011412 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282248299 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.281458929 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.282960318 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.2827423 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282437484 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.279820436 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.294733607 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309274687 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.286926795 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.283088802 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28320642 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.283553161 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283882637 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283288144 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282480563 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.285091634 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.286129247 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.287320422 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.28382065 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.283545474 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.286427527 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.291118508 seconds)
  done (took 756.51405039 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281822303 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281079801 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281213231 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281483749 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281710899 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280817888 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281416457 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281622106 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280786546 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281651791 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.281095702 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281400326 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.282346952 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281896164 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283141497 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282043088 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281859351 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282641519 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.28241092 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282463577 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283389151 seconds)
  done (took 28.120372763 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.285173589 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.28280419 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283029435 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285086169 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282999862 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285539731 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.283670749 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285327939 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285863877 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283107709 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.285520852 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286285378 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.283526917 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.284120546 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283949855 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28661072 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.287641067 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284108978 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.286512025 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284686096 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286198574 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.283077562 seconds)
  done (took 29.468910419 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.287097132 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.28559304 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.286024276 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.283928679 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.287541989 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.284050248 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.286968112 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.286380983 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.287419944 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.287685056 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.285991854 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.288406117 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.292777137 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.292009648 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.288669249 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.28688693 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.430777418 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.286027672 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.286923333 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286509281 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.285080301 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.293274795 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.306106204 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.285363353 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.286393639 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.288337954 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.288735822 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.2881638 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.28820419 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.289017535 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.291374368 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.287260077 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.286293219 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.290286077 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.287038704 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.289098226 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.292479059 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.288345442 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.286366112 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.288638362 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.298358546 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.308373337 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.289234582 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.293622798 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.309645606 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.289065022 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.291625182 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.294636682 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.286004053 seconds)
  done (took 64.539275477 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.288837826 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.290223541 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.286487586 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289759409 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.289512459 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.290215132 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.290577005 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.289252618 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.288312604 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.287016822 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.290488927 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.288266079 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287704008 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.290729017 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.289988533 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288162832 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.288336102 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.288348458 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.288046887 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.288216045 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.288797735 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.291419475 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.291693964 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.289633529 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.29047036 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2884579 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288613902 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.291714847 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.289395295 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.286983844 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.29178744 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.291843018 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.292242228 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.290994179 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.288789715 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.292339295 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.291838307 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.289198515 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.292480622 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.289310978 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.292288367 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.29210397 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.292055267 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.292702385 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290238749 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.290757301 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.290715389 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.290001517 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.291085554 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.29232085 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.293436651 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.290655477 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.293173258 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.29088644 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.293510722 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.293341067 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.291602846 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.291066489 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.294575024 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.291897069 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.290603435 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293628274 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.291371664 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.293438012 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.29354785 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.291626653 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.291852896 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.294871188 seconds)
  done (took 88.975891948 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292874103 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.295145807 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294048228 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292836172 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294296251 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.29446824 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.29356605 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.293481293 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294412163 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293519288 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293633126 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294742143 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.293556323 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293794899 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294160225 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.294186097 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.293471939 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294991394 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.294426002 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296066073 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.294379574 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.295045407 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.294422105 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.295672051 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295807738 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.2944912 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.294984489 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.295134821 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294806947 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.294738743 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29517222 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.294405797 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296847348 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.29558024 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.295382095 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.295654222 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296308132 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29604797 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.29591446 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.295794387 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.296709585 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297329995 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295760569 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.296664789 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296540229 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.294865656 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.29557866 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.296105494 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.294762613 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296414177 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.296587217 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295412341 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295451574 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.297032827 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296214892 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.296212354 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296942834 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296168177 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296769594 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.297362096 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296510306 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.298010832 seconds)
  done (took 81.520718389 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297922169 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.297141084 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.295746154 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.295046379 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.297665541 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29562039 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.299054271 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.298314546 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.298493668 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.29775569 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299053326 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294709079 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295875435 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298005704 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.294536955 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295323359 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296409642 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.296329047 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299402005 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.296379994 seconds)
  done (took 27.153623745 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.29629559 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.299397049 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.29746922 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296351109 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.299858759 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.29744176 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.299343383 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298801601 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296676122 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299203512 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.300069475 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299836808 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297456729 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.298112237 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.301143054 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.296880885 seconds)
  done (took 21.990852014 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.298991651 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.299485376 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.299450157 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.299141462 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.29745501 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.297819258 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.300986118 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.298543531 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.298045644 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.300283365 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.30192997 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.301081027 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.301018936 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.30167478 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.298359255 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.300560815 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.297820615 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.298412005 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.301560865 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.300483959 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.299491006 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.299067884 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.300675965 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.301105235 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.298228456 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.299180207 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.298567171 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.29870107 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.299315574 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.30127221 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.298603933 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.298783778 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.298134963 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.300099781 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.300386759 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.299055152 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.301427463 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.303538478 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.302360522 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.301934425 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.302553153 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.298851958 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.301883974 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.303201417 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.298524858 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.303169348 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.299558086 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.30102516 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.298486346 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.30072633 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.302825289 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.302313263 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.302630038 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.30349448 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.304114998 seconds)
  done (took 72.734874547 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302465281 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302502038 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.300640876 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.30298083 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.304436787 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.300651807 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.303933787 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.30179218 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301739787 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.302517524 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.302029243 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.304779426 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301175189 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304221281 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302364013 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304813934 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.301954488 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.302176157 seconds)
  done (took 24.666954968 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.303187455 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.302011795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.305270282 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.302449801 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.30151066 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30510522 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301388754 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.304879056 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304826679 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.302381522 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303244481 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.306093706 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304857396 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.304954196 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.304328592 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301918941 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.305956352 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306629622 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.30363007 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303508111 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.306485683 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305883068 seconds)
  done (took 29.912006033 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.304655248 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.30408881 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.303580153 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.320953586 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.321156565 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.327074976 seconds)
  done (took 9.103767373 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312518162 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305444324 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303570004 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306727056 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305843031 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304066033 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304360975 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303110544 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306561136 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30382714 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304480027 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306186884 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305877663 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303239621 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306023984 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306030454 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304314296 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304496728 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305018973 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306022539 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3035787 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306754308 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304275018 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305593891 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304959485 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304588947 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30752066 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305824455 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304455341 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308137949 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30755038 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304818571 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308063054 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305864422 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308519586 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308250068 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306028426 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309083387 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308463737 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3057036 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308473029 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308981238 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309152715 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305509422 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307463775 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307565747 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307039254 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306888221 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305674585 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309836037 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309107624 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306453477 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309943138 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309705222 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310426301 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309975398 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307911563 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307286136 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310424994 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306945317 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307083305 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309422933 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30723266 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308127246 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310017288 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307037387 seconds)
  done (took 87.496943625 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306875716 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30785939 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307588785 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308714508 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306905829 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308169333 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30743191 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306775175 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308074519 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308620831 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311349612 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307604235 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3083892 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307024817 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308303074 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30907584 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308191199 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307331109 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308208199 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310693491 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308770514 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307847114 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30795739 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308024832 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308928566 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311178682 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309312447 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309244853 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308178162 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30932741 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308546206 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309107592 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310170919 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.310090684 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309212641 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308631147 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309333215 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309166357 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310369038 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312796199 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31149396 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312713576 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310158846 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30930096 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309574538 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309517404 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311159467 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310046375 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309971019 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309524762 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311147166 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31160928 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312273254 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311423416 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310831659 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312229164 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309916196 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310787853 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311726636 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313216442 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312012724 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312097895 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313666877 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310574998 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310995589 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311925711 seconds)
  done (took 87.667928263 seconds)
done (took 1764.779020293 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.347078687 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.422336987 seconds)
  done (took 13.999376458 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.477090885 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.427636338 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.312353351 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.34480219 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.313114629 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.316761708 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.333665563 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.313721903 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.311879134 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.312582017 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.312186314 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.499252546 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.307304974 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.314234637 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.313291231 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.406739951 seconds)
  done (took 42.849253938 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.341503417 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.320957966 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.437815 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.336555081 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.34152188 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.517565116 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.374001936 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.318198672 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.501966966 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.36125618 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.995670685 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.342460998 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.318175646 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.510545194 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.33788177 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.514878669 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.582425214 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.999454816 seconds)
  done (took 30.684126715 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.804947238 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.34353035 seconds)
  done (took 9.380611222 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.322298105 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.348757099 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.336360679 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.349399122 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.369816585 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.379746009 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.327933309 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.312972512 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.317574395 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.377603296 seconds)
  done (took 64.680991612 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.338585002 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.318621759 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.321073149 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.317205701 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.310688646 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.327022883 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.316357268 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.315921621 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.308012924 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.454060623 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.340124507 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.327841927 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.338870357 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.320559802 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.317478444 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.357067761 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.456416671 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.339020499 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.316833545 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.325438343 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.320199847 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.430635874 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.36384198 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.318616446 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.454758351 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.326749974 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.323243685 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.326658404 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.43845255 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.339538238 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.319995789 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.320347293 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.322195805 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.894407393 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.784799343 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.330526031 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.345134649 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.329563283 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.318983148 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.457934176 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.3433509 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.32827201 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.321591893 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.753728592 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.477881587 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.440271338 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.638945129 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.32311304 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.323199249 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.385155543 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.322767354 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.322386954 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.352440476 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.095128026 seconds)
  done (took 111.497203427 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.334495126 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.804926951 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.485613451 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.33647147 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.184487544 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.124123948 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.333134802 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.626603118 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.343799264 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.317153603 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.604460367 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.850220394 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.33744651 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.339108011 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.786074932 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.380753851 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314551257 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.185542652 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.334394977 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.317485907 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.737106013 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.334306917 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.334493028 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.601786098 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.356813406 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.803131347 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.014543675 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.783591207 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.335219177 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.317037799 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.810396555 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.341702782 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.384932829 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.318906829 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.600493932 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.699623743 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.690167757 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.341567715 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.318379994 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319198615 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.343085361 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.800254183 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.702616673 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.336593491 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.334307033 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.807429594 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.337687098 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.328746647 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.319165014 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.528886624 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.245865217 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.320946555 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.997867623 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.318303701 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.582194389 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.374536894 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.331308812 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.832930221 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.336625639 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.5445103 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.367260701 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.317074954 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32225257 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32458412 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319470086 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.689544788 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.637977632 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.323540868 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.691166648 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.823559703 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.337321503 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.891849785 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.279545922 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.33726342 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.358622533 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.319606197 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.0500765 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.850795618 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.353213568 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.320154089 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.676865518 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.34002647 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.607836956 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.336380285 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338519637 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.749748147 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.345331472 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.355263963 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.320293958 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.336604418 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.093636932 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32339112 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.619202683 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.361826182 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.32007311 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.320267842 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.329574301 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320736388 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.338862295 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.323684331 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.872042499 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.340739578 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.655096138 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.342376706 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321014417 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.346302376 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.324323333 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.321831917 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.547760637 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.802080284 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.326979937 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.323209909 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.333019897 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.330520598 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.534239207 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.320936953 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.653959206 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.342907315 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328908637 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.33800404 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.13184217 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.376740091 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322208605 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.343009459 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.182158201 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.549106749 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.342396014 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.322453234 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323408818 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.340124211 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.931251169 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.32306305 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.399789023 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.322780014 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056075302 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.360552117 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.323078565 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.913990022 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.332310095 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.323641132 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331561411 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.32470603 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.650913777 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.616376352 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.548514874 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.326389527 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.343811263 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.036593364 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.395220444 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460345413 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.344001572 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.316418376 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522100856 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.546907768 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.32639839 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.888808733 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.324956367 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.547839898 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.324875561 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.662359064 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.840677213 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.342705609 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.332625213 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.055215036 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.04614364 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.995939803 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.326562651 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.619924523 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.348581534 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.777972647 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.325535497 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.325734003 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.928125016 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.32505649 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.33533598 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.326171539 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.32507333 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.396114854 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.503497649 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.640785572 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.329257852 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.810562604 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.377909591 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330916371 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.327631358 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.329182797 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.679174708 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.389482849 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.332020792 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.331924725 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.328772926 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.332671026 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.82149808 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.258984173 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.333176988 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.481807176 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990419364 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.34637709 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.326849776 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.981526733 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.551614611 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.899954096 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.370718566 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.660870018 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.354039298 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.369969221 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.143067315 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.400012922 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.823816964 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.346249881 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.329617339 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960170457 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.346349067 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.479660435 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.328583589 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.328479563 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887949775 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.345457018 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.331650801 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.945272482 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.328565491 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.604941984 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.330936376 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.32872824 seconds)
  done (took 1112.84777393 seconds)
done (took 1387.168348899 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.329369346 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.330078434 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.317023369 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.332563007 seconds)
  done (took 26.559564901 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.336363178 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.334109986 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.3340765 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.333361307 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.335668662 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.332676515 seconds)
  done (took 9.255070516 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.452543681 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.333299057 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.334059067 seconds)
  done (took 19.36913311 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.570014765 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.703048833 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.735530626 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.723304259 seconds)
  done (took 10.981123245 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.335475947 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.335203745 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.3346231 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.335504618 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.33706168 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.337323295 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.337358803 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.337262374 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.3377321 seconds)
  done (took 13.275326381 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.624259656 seconds)
done (took 86.312761443 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.057910901 seconds)
    (2/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.815443137 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.150251474 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.841186096 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.361984629 seconds)
    (6/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.518320804 seconds)
    (7/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.38165733 seconds)
    (8/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.760686743 seconds)
    (9/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.374835852 seconds)
    (10/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.820851473 seconds)
    (11/309) benchmarking ("sort", BigInt, false)...
    done (took 6.337074798 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.061951827 seconds)
    (13/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.420021952 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.597628451 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.003881926 seconds)
    (16/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.811014095 seconds)
    (17/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.44487092 seconds)
    (18/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.914549441 seconds)
    (19/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.367648265 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.370652024 seconds)
    (21/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.64987372 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.228997572 seconds)
    (23/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.441625071 seconds)
    (24/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.356048749 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.366609327 seconds)
    (26/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.711916807 seconds)
    (27/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.907601374 seconds)
    (28/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.410550618 seconds)
    (29/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.457218449 seconds)
    (30/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.757341458 seconds)
    (31/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.816479175 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.413174999 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.321962035 seconds)
    (34/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.859812087 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.807300231 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.87504439 seconds)
    (37/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.357735777 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.751157399 seconds)
    (39/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.521295965 seconds)
    (40/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.503075831 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.331150068 seconds)
    (42/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.739880845 seconds)
    (43/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.343774354 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.316014316 seconds)
    (45/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.295345203 seconds)
    (46/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.376147379 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.835730052 seconds)
    (48/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.434275945 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.705798443 seconds)
    (50/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.979471897 seconds)
    (51/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.254237166 seconds)
    (52/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.333131229 seconds)
    (53/309) benchmarking ("sort", Int8, false)...
    done (took 4.420603364 seconds)
    (54/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.178682242 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.386593938 seconds)
    (56/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.874704431 seconds)
    (57/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.418366243 seconds)
    (58/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.638961101 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.954534455 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.267007945 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.145225968 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.448404036 seconds)
    (63/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.925133903 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.60306602 seconds)
    (65/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.672766859 seconds)
    (66/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.529569068 seconds)
    (67/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.613894622 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.016670261 seconds)
    (69/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.342445025 seconds)
    (70/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.343067693 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.057156559 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.327058508 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.390966774 seconds)
    (74/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.359699942 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.310409052 seconds)
    (76/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.450402134 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.313707002 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.964358901 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.829103379 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.827008719 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.676364274 seconds)
    (82/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.621123542 seconds)
    (83/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.838781153 seconds)
    (84/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.426623313 seconds)
    (85/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.37274401 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.870355339 seconds)
    (87/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.558043129 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.682343952 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.779916136 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.345412042 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.334983345 seconds)
    (92/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.6182006 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.344617671 seconds)
    (94/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.39719315 seconds)
    (95/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.35145924 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.509324365 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 5.580014693 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.397891003 seconds)
    (99/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.879448868 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.354248458 seconds)
    (101/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.880180973 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.336234888 seconds)
    (103/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.414448103 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.762193269 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.372207176 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.268728815 seconds)
    (107/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.723370009 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.762034694 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.396753842 seconds)
    (110/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.043043839 seconds)
    (111/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.337285214 seconds)
    (112/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.458700153 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.381526194 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.319024044 seconds)
    (115/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.345335871 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.977056557 seconds)
    (117/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.24575266 seconds)
    (118/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.677458416 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.41224487 seconds)
    (120/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.732270879 seconds)
    (121/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.168670439 seconds)
    (122/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.422619319 seconds)
    (123/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.949489261 seconds)
    (124/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.356360709 seconds)
    (125/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.895629868 seconds)
    (126/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.211764613 seconds)
    (127/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.364165976 seconds)
    (128/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.322647595 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.763437699 seconds)
    (130/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.058127812 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.220149696 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.336434793 seconds)
    (133/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.364432687 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.323994118 seconds)
    (135/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.556167062 seconds)
    (136/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.363016887 seconds)
    (137/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.396880247 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.337813711 seconds)
    (139/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.012125078 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.385365912 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.703867241 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.108909892 seconds)
    (143/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.979262116 seconds)
    (144/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.743339363 seconds)
    (145/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.443441802 seconds)
    (146/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.372972538 seconds)
    (147/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.346194656 seconds)
    (148/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.358429898 seconds)
    (149/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.339365672 seconds)
    (150/309) benchmarking ("sort", Bool, false)...
    done (took 1.862579257 seconds)
    (151/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.384363885 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.967749685 seconds)
    (153/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.169440443 seconds)
    (154/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.422146427 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.614981746 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.344198414 seconds)
    (157/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.739370187 seconds)
    (158/309) benchmarking ("sort", Float64, false)...
    done (took 5.731856435 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.761367491 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.179323472 seconds)
    (161/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.597795408 seconds)
    (162/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.982451082 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.469722343 seconds)
    (164/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.014474682 seconds)
    (165/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.476089381 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.648357757 seconds)
    (167/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.0830666 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.344921799 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.087969591 seconds)
    (170/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.349948874 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.363633405 seconds)
    (172/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.206596958 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.168770413 seconds)
    (174/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.366846246 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.366783707 seconds)
    (176/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.340559055 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.807817458 seconds)
    (178/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.774136147 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.365885308 seconds)
    (180/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.35063785 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.356305604 seconds)
    (182/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.363732759 seconds)
    (183/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.050054244 seconds)
    (184/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.44759642 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.13959371 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.771097346 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.934195669 seconds)
    (188/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.448686459 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.329637918 seconds)
    (190/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.429416475 seconds)
    (191/309) benchmarking ("sort", Float32, false)...
    done (took 5.378298899 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.241995641 seconds)
    (193/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.98438432 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.026435744 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.089220734 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.417818342 seconds)
    (197/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.019734471 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.388334018 seconds)
    (199/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.342518738 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.534904508 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.362034349 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.349138383 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.747986273 seconds)
    (204/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.366949039 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.35750476 seconds)
    (206/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.325300164 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.494971108 seconds)
    (208/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.387332922 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.342520857 seconds)
    (210/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.363003489 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.345350516 seconds)
    (212/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.403642373 seconds)
    (213/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.035718769 seconds)
    (214/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.37671166 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.641196971 seconds)
    (216/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.042882959 seconds)
    (217/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.349952345 seconds)
    (218/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.407642902 seconds)
    (219/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.378238354 seconds)
    (220/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.484562297 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.787162372 seconds)
    (222/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.732735386 seconds)
    (223/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.408574035 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.329480089 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.344174261 seconds)
    (226/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.579319214 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.893990868 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.344481194 seconds)
    (229/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.383938997 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.9768636 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.563981582 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.121146009 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.614832466 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.16853633 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.351337317 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.370340713 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.339330535 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.975105524 seconds)
    (239/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.437460608 seconds)
    (240/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.359002869 seconds)
    (241/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.443866694 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.388180792 seconds)
    (243/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.3294449 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.875749977 seconds)
    (245/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.431535716 seconds)
    (246/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.655332905 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.346365767 seconds)
    (248/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.476341626 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.346400725 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.256134356 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.362321619 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.848029085 seconds)
    (253/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.314538087 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.471822434 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.372355954 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.145585095 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.344760169 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.589760836 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.363889177 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.264499587 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.330221188 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.346080137 seconds)
    (263/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.556041237 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.393301629 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.470190873 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.169261777 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.749479189 seconds)
    (268/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.766914849 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.645265751 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.919257485 seconds)
    (271/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.456766483 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.372553815 seconds)
    (273/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.347438478 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.414587169 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.994470663 seconds)
    (276/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.417306527 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.463590712 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.581772846 seconds)
    (279/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.351756877 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.447347162 seconds)
    (281/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.26571147 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.791174704 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.429161024 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.419915146 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.430459609 seconds)
    (286/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.455761213 seconds)
    (287/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.110112463 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.459076262 seconds)
    (289/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.782942167 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.147686322 seconds)
    (291/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.375604261 seconds)
    (292/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.376934066 seconds)
    (293/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.376010549 seconds)
    (294/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.081791547 seconds)
    (295/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.10772136 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.389672501 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.51555219 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.638939991 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.460279725 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.260593112 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.439844584 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.181057631 seconds)
    (303/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.240303896 seconds)
    (304/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.349575529 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.391543617 seconds)
    (306/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.358939148 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.353564493 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.330953161 seconds)
    (309/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.415140589 seconds)
  done (took 940.18754153 seconds)
done (took 941.436922029 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.383964805 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379311568 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.361023922 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.383863735 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.473670499 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.387205688 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.373381707 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.36483454 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.408352721 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.411926735 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.360867125 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.38520836 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.362723615 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.36148477 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.361184872 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378603712 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.479270412 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.361234589 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.380007331 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.372497015 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.37919859 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.359467833 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.411572915 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.38684969 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.365637888 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.367133065 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.365722961 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.382015399 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.473629081 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.366937181 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.366886501 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.374780424 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.477647005 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.361962543 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.356868827 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.381393901 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.374058526 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.373147887 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.366599873 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.39552335 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.920425156 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.38200322 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.364676613 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.364235147 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.365998104 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.36905015 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.365217171 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.369560348 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377386768 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379373971 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.910528594 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.398031732 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.366450719 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.365807815 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.37683505 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.365236377 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.368090507 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382907138 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.384995815 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384141293 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.46720863 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.371504826 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.36707429 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.382343558 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.372471031 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.950710371 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.380523073 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.369893515 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.981623234 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.399556303 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.032079282 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.402213081 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.368974947 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.381023113 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.398260342 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.531141809 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.370136464 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.366174216 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.373987983 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.365898916 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.375162017 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381008631 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.371921822 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.368138539 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381521011 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.392694019 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.377812929 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.368834728 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.375657488 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.387140882 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.375179275 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.379455967 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.370285268 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.363356844 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.377383427 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.370387403 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.370576799 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.369916816 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.373505348 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.379355901 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.992065443 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.413062667 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.363670105 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.365552207 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.368648124 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.381696244 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.992147365 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.396644787 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.390263626 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.415616872 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.369906671 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.472798349 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.372343524 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386197515 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.379032433 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.372466978 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.366525396 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.518665844 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.004183328 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.411123567 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.370337585 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.367613895 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386546573 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.371664338 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.368077043 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.522192283 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.378588895 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384452511 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.491658743 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.380863613 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.400732338 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.367567079 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.373082917 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.396067236 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387734315 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.401710575 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.372677814 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389045347 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.386503106 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.366756343 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.382209474 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.381267324 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.371404354 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.376420629 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.365455924 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.394564064 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384814089 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385280073 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.392075057 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.492478601 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.368782184 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.476063997 seconds)
done (took 232.763800952 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.429911641 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.364963255 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.451350665 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.366167868 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.466843894 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.468987257 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.364016201 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.365087995 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.363082254 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.745708032 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.364618913 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.364453406 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.367736234 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.363790617 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.449168422 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.366141063 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.363599159 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.707221137 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.366388014 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.437510242 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.358967104 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.364290991 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.366295529 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.751582059 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.365079578 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.36660397 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.438763472 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.367010592 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.714673731 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.363104995 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.36037928 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.716379286 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.457097287 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.394613286 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.368319337 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.375536598 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.469185671 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.398585478 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.451240459 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.450978994 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.45448196 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.396433248 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.365903942 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.363948112 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.369255078 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.369090505 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.366219756 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.394588617 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.369838402 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.366065178 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.710653969 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.378864279 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.376403298 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.366656356 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.366923926 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.388363831 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.366235465 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.369632546 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.458195354 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.369160297 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.432810857 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.751772696 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.748303822 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.369701788 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.368793524 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.367460347 seconds)
  done (took 150.721557392 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.434458012 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.440563232 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.487256063 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.389436854 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.419269316 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.492649974 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.390132284 seconds)
  done (took 11.334557959 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.376058465 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.370411613 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.427307908 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.419870585 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.369792225 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.518455794 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.371436437 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.38364909 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.368276222 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.423827393 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.371261069 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370939381 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.377496001 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.366306967 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.418878795 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.382954206 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.485638791 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.372004697 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.371541583 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.527879528 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369555831 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.379016826 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.42383228 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.383086816 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.37389805 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.377362682 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.940617234 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372824865 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368921348 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.372005459 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370074356 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.410517276 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.37261276 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.365726846 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370507904 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.487523234 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.372218336 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.369593374 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.372120641 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.371609272 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.372064188 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.371822325 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.372599024 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.369069648 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.373658802 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.396131289 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.373639027 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.374625693 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.373789497 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.373613965 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.423865542 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375101669 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.370968478 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.371499514 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.429031207 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380535365 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.375146676 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.370045718 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.374704238 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371537429 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.531325928 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.420491482 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.374384659 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.421748402 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375180537 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.375203844 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.375867319 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.374562386 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.429679609 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.374840372 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.422988267 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.371970514 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.528311498 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.397925943 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376182512 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.37778208 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.377731912 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375525997 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.3740244 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.379723235 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.373136139 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.376481789 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.381277897 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373848946 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373678758 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.47871966 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.483363886 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.373889314 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.388802843 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.382380773 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.37361314 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.429494793 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.37565803 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.37352595 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.428065369 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.490674091 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.428983201 seconds)
  done (took 157.098602267 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.381212384 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.383586171 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.377858537 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.392388255 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.37739356 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.376400682 seconds)
  done (took 9.576528843 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.378365032 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.377058743 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.377820622 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.377486024 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.377972678 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.378151578 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.375949883 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378656181 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.381552137 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.376576902 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.376988223 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.379817336 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.37780836 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.378663281 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.377647232 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.377613182 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.378796257 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.37644564 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.378521158 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378392799 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.484176871 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.377499505 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378951763 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.378981777 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.383381461 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.380053205 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.386154092 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.378280104 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.379000458 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.388665776 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.400686364 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.37937053 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.380944718 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.385632478 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.383131916 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.379904078 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38506725 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.381074262 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.376757343 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.379333395 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.380887319 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380453447 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.379496862 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.381968104 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.38179432 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.383865889 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.3858289 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387766253 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.379472272 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.381589243 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.381412267 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.38163449 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.380849302 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.381810461 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.382154284 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404198479 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.384625819 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.379866941 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.380507533 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.382015693 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.382711018 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.381328949 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.382911778 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.383935786 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.378797544 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.383143053 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.382258238 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.385733651 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38108992 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.380542373 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.382883152 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.37928672 seconds)
  done (took 101.845165798 seconds)
done (took 431.85231138 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.44726143 seconds)
  done (took 7.739985621 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.55680716 seconds)
  done (took 7.851852665 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.697279872 seconds)
  done (took 23.994120959 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.472050874 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.384740192 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.380441317 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.379855829 seconds)
  done (took 26.910824314 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.439762899 seconds)
  done (took 7.732470195 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.374506613 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.395322662 seconds)
  done (took 14.065649091 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.525559717 seconds)
  done (took 7.819198748 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.063723461 seconds)
  done (took 8.363615077 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.394240899 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.391959071 seconds)
  done (took 14.349916842 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.367345054 seconds)
  done (took 7.66047313 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.589864877 seconds)
  done (took 8.884594735 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.385316597 seconds)
  done (took 7.680687235 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.451979913 seconds)
  done (took 7.74681457 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.070775091 seconds)
  done (took 10.36524917 seconds)
done (took 162.458278833 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.375796839 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.844106437 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.375243222 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.376586155 seconds)
  done (took 27.265899776 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.417453811 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.418437474 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.418349803 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.428425956 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.420596592 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.418630161 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.409817268 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.409790242 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.428935897 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.420478023 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.41997813 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.420889191 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.418550126 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.410095683 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.4212487 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.421236991 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.429408751 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.420474263 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.411240467 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.420808335 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.384714802 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.428712181 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.421512022 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.38664839 seconds)
  done (took 35.302058401 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.904169993 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.456742184 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.538192922 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.437550887 seconds)
  done (took 7.632489561 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.435755646 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.440192365 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.450834132 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.490110798 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.517664682 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.448239057 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.413134608 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.408128019 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.393740877 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.441445641 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.515115035 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.455353639 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.52413034 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.384719521 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.573597699 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.387305845 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.386739272 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.438131141 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.490781407 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.505996874 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.387514098 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.439741861 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.441032953 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.455997412 seconds)
  done (took 36.12206174 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.399486725 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.393868103 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.386248685 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.385884397 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.407181665 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.385159624 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.387067361 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.386697652 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.385824013 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.391937851 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.384510237 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.398742474 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.386844626 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.386213985 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.39256091 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.389165682 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.393504342 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.387158383 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.38702228 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.390240829 seconds)
  done (took 29.10369746 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.380306454 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.27515664 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.732868303 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.638273233 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.379986277 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.388945807 seconds)
  done (took 29.094549414 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.466744307 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.636930712 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.387929055 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.801972159 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.909072219 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.416716124 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.388023476 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.652223916 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.014539528 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.012304375 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.461401063 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.461228206 seconds)
  done (took 20.909954817 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.385287432 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.391188375 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.394480037 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.406609957 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.448288122 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.412367304 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.39516079 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.384242226 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.4602362 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.4733988 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.411686617 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.451445728 seconds)
  done (took 38.31565848 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471132575 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.435565825 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.507428152 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252357712 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.109022567 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597101141 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.299915254 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.835992051 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.390418706 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658922522 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393072657 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484338583 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.642370157 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38478683 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412681505 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.460732017 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632515255 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924750744 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386247861 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.700462905 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419183958 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.395766667 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.888841016 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.424126857 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595303751 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.367754899 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.646484505 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.160742933 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705080455 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406365953 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396425281 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386038574 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659995495 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086710964 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503807546 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395953558 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.276274155 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.935456 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.365633301 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.814643247 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397456733 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397336662 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398086015 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388340945 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322137751 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387667501 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846224438 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.393250098 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.097354313 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387230176 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398095439 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481637424 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.390940251 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.961505144 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.490418353 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.395136657 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.385880386 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394072404 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959965302 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.278407754 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406464358 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.328990831 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.888358727 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.80592057 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079669946 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.509717727 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.391206612 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392123424 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323612817 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.810511171 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41311718 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526004443 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.414222273 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.037789162 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181687853 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.428999063 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.32888009 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992991595 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406228446 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.331175444 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618286965 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.167071789 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328795253 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.338780909 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.323588301 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181873757 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398948007 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.869877876 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397632501 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.841414972 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.400317497 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405834235 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412664988 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61462295 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.27007049 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390549782 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.389436111 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532704148 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412176069 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.837089085 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326318866 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.394805201 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648843031 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.602841779 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403010048 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.481397345 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630102847 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39729614 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.413839759 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.401977293 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.409062748 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.026833857 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423305738 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.280338297 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415280828 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.16994186 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207621453 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401533236 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.500863058 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.391240372 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68432157 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.250374367 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.296774554 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459762508 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394601383 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39201739 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.829758503 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.252158529 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.550836016 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.388937583 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406442661 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.4105057 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.392564946 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353432885 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.394971319 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399738297 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.198609836 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.617817949 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408191479 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675478644 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326962693 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531805893 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40989724 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.61797135 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.744271378 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.41881449 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654480065 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395102381 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415422547 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412210476 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412237006 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490752324 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414964118 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.392432301 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.678635808 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.398016969 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.398367557 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.850635401 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.179829597 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397832295 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.400777167 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.312523131 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042632501 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394774225 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400792087 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290199385 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.408817002 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462829624 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400920918 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.404508908 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.451992237 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.415436996 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.399261104 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.409556936 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627213801 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407250765 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.878978732 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483331478 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.608185378 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043362036 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429128526 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.330238857 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.105837147 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.088286032 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395123357 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.587141104 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396133967 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405705343 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407164881 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.074976841 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043311069 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425174739 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.765948425 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.410259236 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406646655 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.401241388 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396548711 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.441472716 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.337895264 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423147141 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.416086718 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542947592 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.410849956 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.332453939 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.914610494 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402920148 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397266319 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.173188968 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432143139 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.74145136 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899311281 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65916135 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.251527791 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409355087 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.888518064 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.441187638 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.395846084 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413435574 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417523979 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.42573742 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414119503 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.409048524 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.831880904 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.854135577 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968655926 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177699262 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023758818 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43562044 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.413619326 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.289197129 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.852530462 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33512204 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.059593063 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612756187 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.883969058 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357004436 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614384949 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.759671126 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.275423076 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410150113 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628724665 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410759958 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.409814112 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420227743 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612377407 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435449849 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.398574052 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.356450251 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.918381694 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650394244 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414942215 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48908999 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850791565 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403032541 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.188426269 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.399690514 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.863225632 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.611642492 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.950927852 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.796179206 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.4085164 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424363256 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902710921 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408115054 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.931843355 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074414482 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.421809433 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.643355532 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342582084 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.412335281 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.411740912 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.39841049 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.964182522 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.429277005 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.660684244 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412558758 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337577362 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411284689 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994791839 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.275864426 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.4082514 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402345868 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238887175 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4172734 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735966198 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.413322013 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.412977207 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425221011 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.345228165 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338096381 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.097325798 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40416375 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374607959 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962846443 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.85183457 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.495161797 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430839022 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261391812 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661608713 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.417999589 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.048934562 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651423188 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.370239636 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427708936 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.505596491 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420483266 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.392485074 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.300985642 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.641449807 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314118172 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.629638365 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.523175197 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.305895544 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.402435474 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617661335 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.307430941 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.408820515 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679154623 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.136106532 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.422348913 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179410439 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449787716 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416469066 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.432344564 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.906165714 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412140048 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475565863 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417027479 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.416382777 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.417486217 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592696489 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413220933 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414650283 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.419638183 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499763533 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.340843029 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.418112829 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.198116824 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054650516 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227775501 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.08138124 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447416251 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408179602 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41489168 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341976532 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555377178 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.934358809 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681936737 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526622497 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.037359105 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430214523 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408219176 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427520678 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626788505 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680972337 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.284133994 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407112904 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.078864815 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.288384007 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418477248 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.618941559 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969383202 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032127427 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.581929221 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409761867 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.863435783 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683329133 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.501044356 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408824323 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006436817 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.426895737 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.886754477 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.436430756 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407918434 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582302269 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420477049 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11129745 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.440043332 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.564594201 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.182392721 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.814506028 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.675457671 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.99438048 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.427861878 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070082916 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.231802632 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68262044 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479665312 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420253982 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.535498068 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557272361 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.418124759 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.299883046 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409225802 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259059295 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.120559684 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.420178053 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058989883 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69448626 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.408660412 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.415030308 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441331192 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.421092001 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.635956102 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200256397 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636142303 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4199326 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413591622 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.989632265 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05802248 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445860097 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347300627 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.415342894 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686397795 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.676906797 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435935976 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.864064364 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.122564012 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022248541 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.38794891 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43366078 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416208895 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.212761545 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069182932 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.482018743 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986255191 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074246779 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427472051 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69377456 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.41722459 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414103675 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695271123 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.416068653 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.423318274 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432298072 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.059747859 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.303534355 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.425992948 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.844411107 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.360188925 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.641557634 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.138106139 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351412226 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423535841 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.605988639 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415725376 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533737245 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424867659 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.415923072 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421751031 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.17312505 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.694292006 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.420179665 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.40113672 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.413140573 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424372275 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449609761 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668580142 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421486095 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.089409917 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.765806431 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.673454129 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.4296163 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.403587312 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.419357743 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415959137 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140661433 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.393919222 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.109231949 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042913103 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.428408618 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.434043181 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.418612848 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.632031209 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628435792 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.432745985 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435535892 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421764559 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437745864 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.314943594 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.188286917 seconds)
  done (took 1633.987328044 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.437984553 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.462494459 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.431425759 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.511366812 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.474068036 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.472258555 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.451220013 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.489618775 seconds)
  done (took 53.061462631 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.42168714 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.583050732 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.448868202 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.421477684 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.433515834 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.428030471 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.936330023 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.442595926 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.426015533 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.424824371 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.418128494 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.431524096 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.143837054 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.426671892 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.426729675 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.406639571 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.426288846 seconds)
  done (took 66.983587986 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.421131482 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.976306605 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.445969202 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.417601209 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.186405823 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.438017071 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.003424608 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.477924148 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.449245679 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.46674912 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.076144822 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.457360515 seconds)
  done (took 82.15018392 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.427021922 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.426168414 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.424908145 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.426604364 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.425005144 seconds)
  done (took 8.462353359 seconds)
done (took 2069.68533206 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.664575708 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.219075287 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.128640763 seconds)
  done (took 5.682567902 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.569119713 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.617532141 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.778167696 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.754811431 seconds)
  done (took 8.055286711 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.701944833 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.79697611 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.612610268 seconds)
  done (took 6.44678332 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.017959786 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.442895073 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.577725202 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.420791595 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.428037223 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.429698809 seconds)
  done (took 20.616762205 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.42610893 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.428117675 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.426047079 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.428449349 seconds)
  done (took 7.046325495 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.402403985 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.138238459 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.411378823 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.427687067 seconds)
  done (took 18.716371417 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.17324884 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.184804657 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.170280579 seconds)
  done (took 7.864418665 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.426622393 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.272458779 seconds)
  done (took 10.036427358 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.729645284 seconds)
  done (took 3.066724838 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.559148155 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.755010773 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.571625105 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.522381895 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.600291053 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.881796531 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.341207513 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.854134985 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.485192413 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.907604814 seconds)
  done (took 30.816220652 seconds)
done (took 132.384640398 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.666943083 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.826651342 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.625998741 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.634792919 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.655390599 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.626284581 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.935098391 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.598633597 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.141572699 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.130455093 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.681379149 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.657036348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.651994601 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.825314866 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.651284465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.442305778 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.657293028 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.707775888 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.361236393 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.430730253 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.932326391 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.268488509 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.50896641 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.437537441 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.666466301 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.577003233 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.847940824 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.442569375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.441728346 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.873211744 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.578170589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.424639128 seconds)
  done (took 200.246262413 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.424564223 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.456180811 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.42598963 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.458841382 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.440403127 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.427281303 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.445154865 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.445865755 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.440593209 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.426263581 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.425544938 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.432030757 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.427674507 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.44427888 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.427410516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.461740634 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.435085159 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.436904291 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.431669175 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.42647197 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.446670625 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.461796866 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.426600214 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.426711504 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.438086486 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.427234049 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.444583397 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.427551036 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.42704306 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.459931164 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.428476417 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.446478055 seconds)
  done (took 207.343065823 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.427742802 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.427916103 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.427362855 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.429495656 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.426000136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.427659259 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.426968188 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.426733485 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.427250586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.427183846 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.44760154 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.427281497 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.429687611 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.426542817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.429525868 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.432681695 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.43661414 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.427943512 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.43473916 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.434053687 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.428048007 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.430944286 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.427768582 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.437981484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.431741278 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.427338682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.441502664 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.427806858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.427680053 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.428802532 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.448486627 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.429235219 seconds)
  done (took 207.131763439 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.627010646 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.438091882 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.438328614 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.376818113 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.43791291 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.436515462 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.435337448 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.636789743 seconds)
  done (took 15.170440349 seconds)
done (took 631.226345007 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.845232088 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.600362881 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.65238818 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.458214057 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.306296447 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.478301905 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.456258491 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.643888656 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.385641924 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.654179969 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.777970829 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.474695357 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.929821493 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.456658918 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.734131664 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.564452442 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.403623285 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.533373224 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.804057364 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.089048513 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.743362033 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.063760912 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.678471922 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.397175183 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.943277538 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.05298481 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.279991986 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.405916983 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.477037399 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.805874914 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.306510422 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.553472846 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.537881524 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.528993423 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.589520836 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.564236123 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.536148277 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.534640081 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.670365228 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.786957948 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.095047263 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.207194462 seconds)
  done (took 98.352761816 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.422861976 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.422528767 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.421268448 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.422030078 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.424238536 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.423370979 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.420830065 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.422032914 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.421820797 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.421608898 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.423575622 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.425181316 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.420924773 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.424280194 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.421945458 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.421855493 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.42298683 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.425818748 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.423954694 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.422701463 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.423814967 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.422286135 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.422132907 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.423542278 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.422581379 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.424884293 seconds)
  done (took 38.342919801 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.44251146 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.70704858 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.887227883 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.448025614 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.441861176 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.445924721 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.530065209 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.443552113 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.44344996 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.445673821 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.620640352 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.445436456 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.48124181 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.915937604 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.444699714 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.445119048 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.443509871 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.443192973 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.712994999 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.451690775 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.55633205 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.452553936 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.531983756 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.45458158 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.469660333 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443963635 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.448886511 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.977704773 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.465068436 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.621850755 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.361669982 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.536314589 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.926217949 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.920053969 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.356407992 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.453963427 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.44484237 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.626045018 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.446958247 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.444680616 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.532304689 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.448696326 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.896338195 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.088412317 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.465899373 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.445221387 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.000490041 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.648495625 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.732549643 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.461531073 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.921820914 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.449009098 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.447255684 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.446596092 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.729118793 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.461169171 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.44494452 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.005222945 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.472187222 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.533248439 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.446589637 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.446927768 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.722403747 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.446628789 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.710799722 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.447288265 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.456274312 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.46808946 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.897863082 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.449780917 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.108585801 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.466639666 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.44622059 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.623429027 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.713023551 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.038320178 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.471773748 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.729315746 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.942669527 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.553822694 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.459425262 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.969598219 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.55885532 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.459761204 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.452341809 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.451187373 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.450118919 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.499689335 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.535912283 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.056709539 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.121590075 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.030501274 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.5607985 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.470072708 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.450122332 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.0066114 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.470070667 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.448557104 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.894126805 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.108689813 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.46943022 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.457142061 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.118192799 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.470350991 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.540885634 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.463143748 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.906326213 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.449856583 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.500818925 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.450916269 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.455795036 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.473893163 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.538784496 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.456048087 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.451446108 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.084447555 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.657358087 seconds)
  done (took 190.548905182 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.444252483 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.461805461 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.449797774 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.442278015 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.444293066 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.452459766 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.444501551 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.446135192 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.452657083 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.445564659 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.445288878 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.445372474 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.445835334 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.449772654 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.455259653 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.449791908 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.055753106 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.446809316 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.443880204 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.444490894 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.272423959 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.455247638 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.44381495 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.444022651 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.445079809 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.445667197 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.448425696 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.447355599 seconds)
  done (took 155.326269683 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.453968116 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.086566375 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.47295755 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.601203171 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.475110376 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.44959989 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.597787731 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.517398472 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.472165548 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.449887395 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.450680707 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.791345372 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.455018581 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.034019584 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.672047694 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.620529149 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.031781466 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.472640808 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.450970444 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.451183699 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.602533167 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.458517335 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.792584692 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.088868752 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.473886208 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.087693194 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.437540818 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.45428892 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.45035634 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.089663622 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.470393333 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.795716841 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.541257636 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.522527099 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.112217946 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.05459471 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.053775109 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.622763078 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.456427548 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.45399727 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.453442525 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.436858657 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.091560052 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.475781304 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.454602312 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.082030791 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.476472037 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.455612743 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.464254226 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.452422816 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.52144804 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.544097263 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.825709155 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.098736274 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.561022655 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.475401732 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.607591995 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.870860291 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.456367762 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.035652721 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.439689599 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.097730451 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.47836624 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.440876584 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.455698832 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.460987403 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.626066677 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.610571679 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.046832413 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.477023494 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.037277532 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.647761124 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.462612661 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.454145973 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.45738717 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.099247917 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.059418002 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.646541951 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.617319097 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.689335136 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.451473644 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.457012148 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.442885243 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.545851837 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.465053215 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.101005492 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.058020937 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.478891455 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.458493713 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.458329251 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.45980398 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.662330416 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.129341014 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.566591231 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.03882816 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.822598843 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.802717082 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.459493093 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.524538636 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.476415131 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.804462281 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.460141294 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.523597942 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.933584059 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.805272311 seconds)
  done (took 174.921501399 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.724228119 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.754528919 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.55924103 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.613061499 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.091515768 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.054147371 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.77687404 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.610421043 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.579811764 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.735569971 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.722341364 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.546276611 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.652479157 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.549032656 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.220460867 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.555611814 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.576416601 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.621209452 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.583651589 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.537969062 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.138907431 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.770436333 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.654257626 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.49589637 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.561182942 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.31291955 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.070997419 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.060578061 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.642024791 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.853995501 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.028264855 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.656040384 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.488999397 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.193803377 seconds)
  done (took 70.359170611 seconds)
done (took 729.193379187 seconds)
SAVING RESULT...
DONE!
