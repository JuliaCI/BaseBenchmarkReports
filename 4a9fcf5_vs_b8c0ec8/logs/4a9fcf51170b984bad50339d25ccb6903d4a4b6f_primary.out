cset: moving following pidspec: 22930
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.328211589 seconds)
loading group "string"... done (took 0.541895263 seconds)
loading group "linalg"... done (took 7.427502074 seconds)
loading group "parallel"... done (took 0.17000721 seconds)
loading group "find"... done (took 1.15549475 seconds)
loading group "tuple"... done (took 2.06199806 seconds)
loading group "dates"... done (took 1.305185948 seconds)
loading group "micro"... done (took 0.241068579 seconds)
loading group "io"... done (took 0.963679469 seconds)
loading group "scalar"... done (took 40.168221212 seconds)
loading group "sparse"... done (took 12.978173958 seconds)
loading group "broadcast"... done (took 1.031291286 seconds)
loading group "union"... done (took 13.933963745 seconds)
loading group "simd"... done (took 4.704830638 seconds)
loading group "random"... done (took 9.492459467 seconds)
loading group "problem"... done (took 1.990278256 seconds)
loading group "array"... done (took 22.20444754 seconds)
loading group "misc"... done (took 1.996286507 seconds)
loading group "sort"... done (took 3.381629711 seconds)
loading group "collection"... done (took 19.397948212 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.569310917 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156116162 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148413047 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147507594 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.198603412 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142961037 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157598235 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096432158 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.929721364 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.170736706 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15105589 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518621009 seconds)
done (took 5.102648672 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217687264 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09456335 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103457752 seconds)
  done (took 0.858706917 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077834876 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144381922 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093581033 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077536433 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094439779 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077024716 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093794898 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077467224 seconds)
  done (took 1.325288339 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085969652 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096859632 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081240757 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095145346 seconds)
  done (took 1.025940007 seconds)
done (took 4.179762384 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.721585728 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.268084454 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203746519 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460242776 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.190286955 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213253369 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.661750537 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.332438063 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251221915 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098443054 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.133952758 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389962594 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136232412 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681275559 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089175779 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122169284 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176060016 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.436744695 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082645305 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108947092 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115897775 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140187061 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127336725 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090707532 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185691681 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080796968 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191777356 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10656552 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079841296 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.273607183 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199859036 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680933465 seconds)
  done (took 10.73528864 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110661886 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132569257 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096774285 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137180648 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132949031 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098898035 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084900132 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095184178 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121905714 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174579649 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.128585242 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.12307366 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095579684 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082097536 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114852963 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244840867 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121784726 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100353453 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100392031 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102308231 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121797535 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111767827 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10714337 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092885014 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164502426 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220044848 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110677212 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124874433 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095496533 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110881371 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141376948 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141823378 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093506723 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080617562 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171383265 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123156331 seconds)
  done (took 5.091611259 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.084098585 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188119172 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120141559 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168300284 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080174859 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142387138 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093884642 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112913119 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253977589 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.170599247 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.486546442 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141457636 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099716523 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098018846 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082364822 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095990639 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.6282444 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156492802 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115353252 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114578699 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101454057 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083615942 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363219227 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094043327 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079189091 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096799712 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065159866 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163447817 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097095517 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.172536017 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122881039 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09975955 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132427198 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190284739 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124000205 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.115547969 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095760846 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077617253 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.190713354 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087460551 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095500971 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102369696 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133264731 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134226487 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.1291741 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09809106 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.194751314 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080209642 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095076627 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097115347 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.91229106 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179476087 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088560549 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095932655 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283456834 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116000727 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096324669 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079549494 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.25711442 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186245235 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.102058815 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078573915 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096320694 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079399191 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.397478114 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080017716 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.02265851 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08397084 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107948669 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082054691 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094997435 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102679168 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086506436 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113945528 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078498373 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098594438 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078105977 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096353932 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079857087 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107088686 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.211954248 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097717527 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078510138 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095374334 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115187048 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11006233 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097414085 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093657505 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112365603 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09239382 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098544557 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080337375 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132788976 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079410399 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107616502 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097937184 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142106976 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080426996 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.161085194 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.105487931 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094920173 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123159194 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.083338777 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127099045 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109770333 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097485358 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168489942 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076537181 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094973644 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076907163 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096276718 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077639538 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097266986 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080540208 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108934322 seconds)
  done (took 22.944861992 seconds)
done (took 40.520822646 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.322171921 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102283496 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101911646 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101346691 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099222575 seconds)
  done (took 1.471006824 seconds)
done (took 2.188273578 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.281630775 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171980436 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094261045 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.163110166 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091719089 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.161260047 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157971944 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092493448 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.213417278 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.092746177 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.158213376 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074723589 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092615387 seconds)
  done (took 2.590086328 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09264355 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113078406 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082337179 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109745776 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076816836 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109370524 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092958037 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115911254 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108895925 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085747827 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093195491 seconds)
  done (took 1.796200791 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09341088 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110828649 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082035012 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108031098 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076087656 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108690916 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091873755 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113873866 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107291452 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084856867 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092283674 seconds)
  done (took 1.784023474 seconds)
done (took 6.878652109 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090677528 seconds)
  done (took 0.80058499 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.911474318 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.345292974 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112437933 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148556186 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316004513 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171713542 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.452522635 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124297702 seconds)
  done (took 10.49867006 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.143943627 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084777179 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098486112 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081248753 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099725426 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084185111 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098215085 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097714327 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083999327 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097940789 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.081781121 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099361268 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101659058 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082468943 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100891281 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085685156 seconds)
  done (took 2.302099181 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11775721 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116283041 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104495014 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106696777 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085850312 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103274856 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10384747 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.086704527 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10020584 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101115944 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089294543 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.1035525 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101349823 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078966989 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103225607 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105988596 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084057721 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103596245 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104734324 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089958623 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104569913 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094246916 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086200717 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105858361 seconds)
  done (took 3.206755736 seconds)
done (took 17.522612303 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.155860414 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.105988994 seconds)
  done (took 0.982674197 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094540717 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110896456 seconds)
  done (took 0.930232025 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095952014 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094175494 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12014741 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107296191 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078946062 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094622141 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117814919 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079775192 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095543495 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094513597 seconds)
  done (took 1.706551695 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081636138 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.107151527 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099752393 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093567794 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103225879 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092958192 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086189483 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097053831 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107402944 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076258038 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100141967 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113798277 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086702512 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.1163443 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106485189 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.099498163 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085461601 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099718102 seconds)
  done (took 2.481375272 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078910089 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094873008 seconds)
  done (took 0.903820789 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080804138 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092385088 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080937108 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098084156 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094527884 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078137704 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094495636 seconds)
  done (took 1.348659379 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.43087153 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.133947062 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260471501 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101941354 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104120568 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.294486872 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.095627659 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084462115 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101130518 seconds)
  done (took 2.393337049 seconds)
done (took 11.47174894 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092145759 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.113828088 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113958918 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.453923262 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105537593 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.095449208 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14605413 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.243580522 seconds)
done (took 2.100614453 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.141564971 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.561986435 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.42044214 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.232548037 seconds)
  done (took 1.949752802 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.397927866 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097131881 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083276328 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082491029 seconds)
  done (took 1.400117112 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079602062 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098936608 seconds)
  done (took 0.917849531 seconds)
done (took 5.148828356 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079563999 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097708129 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.113936876 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097746397 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080895393 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097626475 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079214383 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099909375 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097211139 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081691457 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095464785 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081077695 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098033597 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080898225 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09543762 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078456212 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097365645 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078245036 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094841713 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078731164 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095314104 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080784727 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09553421 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078777828 seconds)
  done (took 2.925189629 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099192817 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096426533 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104112295 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086834382 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104047608 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086863266 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104154574 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098874384 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087040228 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100848717 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103617213 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085873453 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100622138 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085653766 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100470512 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10272256 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087699833 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098347282 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083577089 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103873965 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10318001 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08188497 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103125841 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103746488 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08617666 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103460909 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084913194 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099186613 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103115778 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085482432 seconds)
  done (took 3.616671379 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085195093 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092616729 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079162732 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10299281 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079009628 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098289588 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079144104 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096907245 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079814627 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095972116 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08087717 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096097792 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078807574 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09787547 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079625917 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100079286 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113136724 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079391486 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09608228 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079265742 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099885418 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078784627 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095589705 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078952287 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096178368 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079166052 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096118923 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078618317 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097258971 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079124936 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099093701 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082540872 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095412923 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085706511 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099687128 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.095009554 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082908754 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095573309 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080102272 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095550021 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07854127 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096059573 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078497021 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10241727 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080445743 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098062744 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079157069 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097384019 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079522312 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099789679 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078689306 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096274018 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097452217 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080115022 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099886756 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079533882 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097013119 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079506907 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097236523 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079999681 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096294296 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078578676 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098206028 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080576728 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112507192 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086311375 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096590196 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081415353 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097984579 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098613556 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.081072633 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110397956 seconds)
  done (took 7.221015547 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.128963877 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123778367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079318655 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099284537 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078579046 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096506271 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084291717 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097265496 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097858608 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086112412 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097893906 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081704364 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098575323 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094515089 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09747408 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099220675 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085902128 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094870661 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079923 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100131314 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080117275 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100649589 seconds)
  done (took 2.828723171 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20549482 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104225379 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140184049 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105496082 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084110565 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107759098 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103339915 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087536928 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103688947 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084142695 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101362688 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104102881 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084230841 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101803637 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10115355 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086610525 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103189799 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085319273 seconds)
  done (took 2.642057042 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09240923 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096748344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.207344553 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096115988 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097158606 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082461501 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103745767 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108662859 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085826791 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099606399 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091629945 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102235594 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102313491 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083109638 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102479263 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082326347 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102618637 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082677107 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108729662 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106239098 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087626913 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109067936 seconds)
  done (took 2.983743292 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095987634 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099892474 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116072677 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082974923 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095650539 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080899285 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107198349 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082304118 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109474917 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101418015 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082976084 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099245295 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089352862 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099617999 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10536347 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082312752 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100053979 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081984291 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100514847 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076705046 seconds)
  done (took 2.643836223 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102116761 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098869971 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097792526 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09119915 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098474435 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080926634 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107764227 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098640003 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08172123 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124362646 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098584938 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081982549 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10754049 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.103999597 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09843977 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091440185 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107546186 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108213568 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081864841 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099706302 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122873137 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081594183 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106955281 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099075022 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081987223 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098819543 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098045003 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087508679 seconds)
  done (took 3.492900563 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080498281 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097838675 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077469103 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.094650193 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078038519 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095953702 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077529667 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094908974 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081614219 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09778242 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082820595 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099952447 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082000461 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100334129 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082040921 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100136614 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081977261 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097843558 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080483905 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097955548 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082865598 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100434271 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083281997 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097667558 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080571944 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101347522 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080228706 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097765442 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082327854 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098484934 seconds)
  done (took 3.443692672 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089488587 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104717593 seconds)
  done (took 0.952380295 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07749917 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113618816 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077730581 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101662152 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103397872 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.080796498 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108465953 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087656725 seconds)
  done (took 1.508996598 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094832668 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.10831861 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082402223 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111406703 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108478356 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097102515 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170262814 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099371566 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104249225 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079334393 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111591093 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080186366 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104743607 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081387911 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104580545 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086828454 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096313241 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103253086 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084380837 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096495762 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08374663 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109326297 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102072884 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.082883675 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102672753 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093409644 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113646469 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102342595 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085785033 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109246312 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089477932 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094786331 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083241017 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101942636 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081004873 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110374903 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118851965 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086553045 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110837038 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102594721 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093882169 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093393446 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085753324 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103866891 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108110419 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081430009 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099565997 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076533412 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099324789 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08509998 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095292859 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082714704 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096060905 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10778452 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.084645647 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109386147 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.0796866 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10066221 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084324456 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10261468 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.104675619 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084169607 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10079983 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080990188 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108645145 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085573283 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109037384 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094132028 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075464858 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098158762 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093028486 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123901427 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105738727 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082650209 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100360516 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.07957177 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102728588 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100844552 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087577325 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105466051 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08167526 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105573664 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106109179 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082240568 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.10129373 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090120975 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096679854 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100958377 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079514235 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116693029 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079966303 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095960817 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078199 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109597868 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102149622 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.080963126 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.096060384 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08875746 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092509429 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082203379 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09984637 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081887559 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109667988 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104406542 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104467537 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090422839 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106137381 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081586291 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102038023 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.077544853 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100026834 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084034233 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106051298 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093104267 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08433233 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099276989 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082336033 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108118037 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079435261 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099188189 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106122184 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087482109 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097026664 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077651649 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101997425 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082171223 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1018282 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107410444 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.079721765 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093454995 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076573332 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102433678 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081447993 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102189822 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104349752 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08407651 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093300111 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080074223 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105700794 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.1094063 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08317295 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102502866 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090491581 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103180827 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082546004 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108519923 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105054744 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083781877 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108232546 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084530644 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096928203 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088489639 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104963796 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.100238603 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087746411 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105810095 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086471576 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102900125 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081578011 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107395314 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099364608 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080368933 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098987281 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080531811 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11029332 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084173395 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093950424 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097624091 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091110599 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099010348 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08417824 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100694524 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086867643 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103577456 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082049735 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101587115 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103375366 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096872315 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107478843 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102747356 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088377829 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112978175 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08358963 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105788278 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084012931 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104296241 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104017266 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09402338 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108536035 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090565123 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105205108 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09876383 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090891566 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110495756 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083408309 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101045463 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0834359 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107337913 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108361145 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087933069 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10458756 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082547455 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103405822 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088511972 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106409801 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102302644 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083152271 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107917461 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083274405 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110713871 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104179045 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095243521 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104723555 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079225034 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106022415 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082752143 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108117344 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094488768 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081302529 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101829389 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084244462 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101000317 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087074469 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096054281 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091081384 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110741351 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102182502 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082234666 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102016992 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088858118 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10249769 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087994259 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107174603 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109446212 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094833042 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101551841 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088183426 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114279047 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103091357 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078128971 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10814515 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081402989 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100390139 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081730058 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097565932 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085687828 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109741625 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10664401 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076844816 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102162593 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081881028 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099774298 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077829256 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109132128 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105639791 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086651175 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110328264 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086330924 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104303088 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088906584 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103636487 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103697541 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083487194 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102397845 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083272032 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102500442 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081462432 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10313308 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080419943 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097224908 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101566648 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082006302 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.099946036 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087945149 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099530186 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082671274 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102786375 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100425062 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08286219 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099805725 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081786957 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102507514 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083456137 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100276457 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084982126 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094936883 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107165493 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081947714 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107867677 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083141957 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096541807 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088259159 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102984515 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104675926 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083511434 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100826018 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084618316 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099701398 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084783419 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106714189 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097668766 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094058677 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108834289 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082185523 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102822157 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100781917 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083940316 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099142927 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083608015 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101313654 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082551721 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099998647 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086660844 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103601206 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099502788 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084149578 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101188786 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082347781 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102070405 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078883253 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102634679 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08423714 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102269705 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11080297 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08346126 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103256971 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081748127 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100881811 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.0817703 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097353306 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108696345 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091849924 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101599451 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107501934 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081205392 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101443735 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093303204 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093632382 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08046722 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098643243 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080491844 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107758965 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101147704 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091576757 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.1000097 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08169441 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097097902 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084162206 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.107010628 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07704213 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097952345 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103990425 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084387626 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098610869 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082837562 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103261047 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084183133 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111959978 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099596793 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083585899 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100840004 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07977015 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10103294 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085019925 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.10720886 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085469092 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102071523 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082062702 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103990222 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105263823 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086891616 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104421422 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.0869097 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114057458 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08538709 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107111265 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107883273 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079921876 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105922894 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084177711 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103874736 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084599502 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107569684 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088054737 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106174864 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112599444 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085163748 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104576755 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085998187 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102374585 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084698743 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105214045 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104596023 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084914478 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105131761 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093552237 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102643341 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088280122 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103835019 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104454348 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093693964 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105184392 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088750047 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111979741 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08825207 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107255803 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112320271 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089902679 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108212895 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087094525 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106639889 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110064609 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085047192 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110779556 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085552117 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105625396 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087592309 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101783405 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084592593 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105120599 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103383487 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092392726 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105494795 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085111543 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104385866 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08419109 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105172607 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108927477 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094500503 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10729325 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089351826 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100152338 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082758659 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105903213 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083465536 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106560787 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10850309 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09279312 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107126462 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08630145 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103221138 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095003722 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111929712 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108001334 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083403115 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107767137 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087275883 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107139656 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086501733 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104924544 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106142714 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090369852 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105833725 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085263054 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112466981 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089516998 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106400248 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105646526 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086776862 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104709018 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080660138 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105237544 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088233995 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110159893 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086597754 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102175477 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111690139 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08275207 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100554556 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086626706 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100208861 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105482647 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077925808 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102144766 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084030267 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102069689 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078859643 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100121875 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081092507 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103599361 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08137598 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09731144 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112105718 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09218763 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104554321 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081603231 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099983246 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077867171 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096815973 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100412809 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084220899 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103256273 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093997685 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100774559 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082061567 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096461283 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082262474 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104688225 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104736576 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080048641 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096798396 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081567184 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104552681 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088138619 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100891413 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.081365372 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105397771 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103562305 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08205187 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104813616 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079562516 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104633288 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114955046 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084023929 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101416583 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089218711 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109632499 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102213349 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078627117 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10188944 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086312919 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101758073 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084136102 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10274601 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117655774 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086250303 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10006241 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081981756 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103855406 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082467098 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.10996035 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103175234 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083983338 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.104944868 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085558387 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110389556 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104005535 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091610757 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105415998 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086194613 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101242477 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083156928 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100736692 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.09959647 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084334704 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10227761 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087992943 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110435668 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.100438296 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094563744 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111687045 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087805668 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098776867 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082591727 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101749206 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09671278 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084783327 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099262948 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081699994 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100313503 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081951832 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102666505 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088597263 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102565564 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083400534 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101972818 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.094656638 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.084834832 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.103353391 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083896726 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098233638 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082614962 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102692065 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08813801 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105320566 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101948154 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085015975 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.102882658 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084353839 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096644637 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089339864 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100194596 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08552749 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10111431 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101378431 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084727125 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105518362 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088478207 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102375367 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.102738222 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096298493 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104355723 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080946355 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098301551 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088104688 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100525955 seconds)
  done (took 57.866625901 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145153381 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080187533 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097245711 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07915073 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11087439 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097847642 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07908509 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098413242 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079914686 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100755108 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078980364 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097744591 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106527884 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122662835 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09254963 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101843839 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097114133 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080022577 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096909774 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079455604 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107602904 seconds)
  done (took 2.837440302 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103411343 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119454165 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113855442 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117169076 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088979034 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112819334 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112911536 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112328462 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098048698 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109639447 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117204432 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11271969 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090702147 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108839221 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109197783 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091452868 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117584234 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108134736 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114055956 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094030887 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112027535 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112548272 seconds)
  done (took 3.1842571 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083579486 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100387988 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084592724 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096346077 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082808345 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096480224 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086189279 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099112363 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086033565 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101397207 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080900241 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100820841 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102410616 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078960565 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.100971685 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081577846 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149480037 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105589104 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08199218 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103034929 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.096739102 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.084826289 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.096628316 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078475263 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.099870895 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087004187 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102889418 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080344531 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101444005 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.080813415 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101957482 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.098936181 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084573084 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103015404 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082349492 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101042939 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082752083 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101942166 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079180826 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099773201 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083196132 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097435228 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083827003 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103434053 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081096959 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100429696 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.103916236 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083829025 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096915656 seconds)
  done (took 5.391648664 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102430459 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160806693 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085454381 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141761635 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119559026 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111468592 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088277059 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141409019 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104722688 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084209957 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127246239 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118879856 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102244402 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089398548 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10764054 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102030526 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085265519 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101506509 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087976093 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102330042 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106656534 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089695126 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118677372 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11681294 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106568591 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082724765 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103251237 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107511915 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097191413 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108043254 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107817832 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088643891 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119128002 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105236397 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083173652 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106442489 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119586002 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102970022 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085758811 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100328964 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085645184 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108390586 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109186211 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100965103 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103606423 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107662377 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083543223 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100191583 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117371451 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08634795 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111680464 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118215763 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107282611 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085051677 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107162268 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119243952 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084175604 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100759191 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087495682 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116370222 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10060163 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087416522 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11829563 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104635548 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111322559 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099355133 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108678265 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107530273 seconds)
  done (took 8.051745307 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092168598 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10960632 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118089002 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119431818 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089935027 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109297101 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108798183 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089696841 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10960725 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114736618 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108713999 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13250848 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085707159 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112190102 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109206027 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090421597 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109614567 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109015043 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090003984 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109494274 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109282445 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119080237 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090203207 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117761723 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14129592 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10440626 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089082877 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108974433 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118528042 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109312187 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121404662 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090299812 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110634515 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.117734056 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122146007 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089943868 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102128385 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108955794 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.089808084 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109626966 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10388883 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118538988 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090904908 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103840488 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109978624 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090322496 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119327367 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12152759 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113453307 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114773771 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091118075 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119157904 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109203007 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090005777 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119151529 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14561145 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119577435 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118741023 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108958749 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119653037 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099085954 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.126080897 seconds)
  done (took 7.562172073 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106401134 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113404318 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.115203921 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099648857 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082356701 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108071382 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081799986 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101378003 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112742048 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093879915 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115602852 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106698098 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091233296 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115094238 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107624332 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111141697 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089454924 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111281401 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112810243 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107660468 seconds)
  done (took 2.906253604 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093190965 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121922916 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084639423 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110814416 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106383643 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090644757 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106037252 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106528116 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085844561 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106593184 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095636898 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115552527 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104493086 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09080363 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115167281 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110122376 seconds)
  done (took 2.466769833 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095841967 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115265293 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119177361 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08361385 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103011192 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080202607 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104864776 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099607496 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.0804258 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119618585 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084214659 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107533295 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104043769 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082291645 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100390206 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08675448 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100205685 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081935036 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104375504 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118826246 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095146634 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103578481 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104820364 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086561439 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104324538 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089954866 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10510806 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101391089 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083311195 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103663325 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084812348 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111609919 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100241775 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083616798 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101852721 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082242971 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10504571 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084890431 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10809831 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103649954 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08293768 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103026416 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084688384 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104747442 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080126548 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104874072 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099930724 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090892532 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101311275 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084235786 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103792975 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106158542 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085792029 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114688708 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088223445 seconds)
  done (took 6.177663753 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098917121 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107557808 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079861776 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101830721 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087950314 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106593677 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107710925 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088154549 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104967131 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082760789 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105750783 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088866308 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106769395 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106978162 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086796002 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107238222 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080219508 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105690392 seconds)
  done (took 2.587669195 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089951721 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103328584 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09147211 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104313972 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08493872 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106591764 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080236866 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103120098 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1024166 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084502092 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103242629 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087262481 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10250423 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086676545 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104360273 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084039385 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106601773 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101943776 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084253544 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099736611 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086972547 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102233907 seconds)
  done (took 2.931936174 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.115064756 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124079775 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.090708176 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.226787538 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.100145751 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.128748693 seconds)
  done (took 1.617254307 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108774812 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119178189 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105146085 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106912117 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11301194 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106477563 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08721819 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106191622 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115736336 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100778302 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106789656 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115829595 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116560116 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09632837 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113224862 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112718049 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105897965 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086307423 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103668583 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127214959 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087145729 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11691462 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105403056 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086516909 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107526207 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115296817 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116686705 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120201649 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086805873 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116111232 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112654464 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085957902 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116624629 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120610525 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108087056 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097489811 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106652847 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127218233 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112342625 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096375282 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108101734 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11326645 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117172029 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09308401 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115539885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106786067 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092323723 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107142322 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106103517 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13482586 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113980069 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094726279 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113589687 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116923179 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116449354 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133169359 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100288381 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115531722 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113336679 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120864286 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115673494 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092389688 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116250816 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121064298 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113815814 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115262447 seconds)
  done (took 8.037486532 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103056552 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124183634 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10690199 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121930011 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095025868 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107435658 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10648358 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087111096 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106987952 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106294993 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151685919 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087080459 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115817083 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116447178 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107455473 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087117796 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106044892 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11628441 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085619549 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132139817 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106170143 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115321934 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116082174 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096019441 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121133409 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112748077 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106811756 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087049988 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106864648 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106843611 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092847356 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107945978 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115893096 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086264177 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116856933 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106562362 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10708773 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092742357 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107411861 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113725965 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096038928 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126906824 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107505371 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107177694 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120982188 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086413144 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10689608 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086171364 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107804859 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106452624 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12100382 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101424438 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121244937 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116360227 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10709187 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0865167 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106877395 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106897207 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087356798 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113436558 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116123214 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108041221 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133426919 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087305149 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107198454 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11603773 seconds)
  done (took 7.919250631 seconds)
done (took 154.532336714 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213608935 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.19754525 seconds)
  done (took 1.24484745 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.086864815 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134246382 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095718156 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167864495 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085267015 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139298505 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136615523 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097093514 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105504398 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085624262 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105449335 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087223989 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169596859 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085028884 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105572528 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107731973 seconds)
  done (took 2.63528525 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.112854759 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253925299 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121056319 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104386165 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08898093 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108474516 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083002726 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110186302 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088884121 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.103872513 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08832051 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106144359 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.082904415 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106133896 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.107891957 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087385816 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.103483869 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087377932 seconds)
  done (took 2.789299965 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11217166 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144830328 seconds)
  done (took 1.107338329 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.2390439 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.159800034 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.232225855 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.463687272 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.269017312 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.354849442 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.197393779 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.208227771 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165535754 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.207127003 seconds)
  done (took 3.339066943 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117583542 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177530544 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314080559 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15490288 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105632411 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12464336 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154359684 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129863869 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122398586 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10028511 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120736984 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117277358 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137355215 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093891857 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113813505 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116093732 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120023135 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11399066 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113135124 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094948273 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136000591 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104697262 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093560505 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.112898179 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.117764449 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097717399 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105314488 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084953661 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11476567 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113236817 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092280654 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123993047 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118110183 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.152263253 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121342573 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.153574117 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.116443153 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090038355 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113995735 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.109639049 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096437621 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116992551 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123786538 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097091104 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105310286 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.09630226 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105295992 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104640717 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.092487487 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118133122 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113428198 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092088973 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152752392 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11794671 seconds)
  done (took 7.292836429 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.780901425 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15478209 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090075885 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.872353481 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134892036 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10241778 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.765879306 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111384913 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252034876 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.741674483 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131682436 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118996399 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203085916 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255983856 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.94950903 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289558717 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.63344502 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123365594 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149283746 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.150965056 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116427521 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134358935 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109131212 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.426062491 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115046528 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110725618 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.094756156 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117290611 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15960931 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.122702931 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112253644 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174568424 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246785781 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201549125 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093751179 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111158031 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109505543 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167658377 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263291033 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190874909 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177124013 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108378326 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088322352 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121316399 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131697535 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106309548 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159847545 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172903433 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167130967 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113768554 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117605231 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097426515 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120496958 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.161594552 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120745273 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314581382 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.307145049 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087753565 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121709772 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124255846 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258619293 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100576279 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22327126 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138669656 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211867984 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089390551 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774868756 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167532625 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111200557 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09413144 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119520728 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1154716 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11917889 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143991521 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389059969 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123765163 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114161111 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089274311 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.238925245 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124395399 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090117597 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.15879227 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116264676 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119650218 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123340272 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100355086 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188247348 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233605996 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121919562 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097591021 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114846206 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124814031 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093726084 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209497593 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216548929 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.181672874 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207619891 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120635462 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162477958 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.166879082 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118406742 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.169227613 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118653754 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122282303 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100182282 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214516913 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144287686 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121723283 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092226919 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118055036 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147252079 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125840171 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117174301 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169778513 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.452836381 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187663425 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086287618 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127530363 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118682204 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160757336 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115940627 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236074603 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122074452 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16662805 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119463681 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086113743 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120600525 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.159845556 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120062664 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119854566 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119757156 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095603762 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.254766062 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.192335856 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120251807 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240851798 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181685298 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095603612 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190719562 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098972791 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187388094 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098762945 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119810928 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117298701 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769105206 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123842065 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118693396 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092644239 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186330762 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111438313 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122320436 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100911828 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108608036 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771224562 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104632677 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120529523 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.12257722 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095286016 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12004816 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116357662 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09344809 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180392852 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224731854 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096678964 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119663844 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123627916 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160626604 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115193988 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102697267 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124173429 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123695751 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098397526 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115257521 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123257955 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168718322 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162012123 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217816805 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.588319805 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089327298 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.122776795 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223704698 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110735131 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.263015407 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119084307 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.222022719 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16082468 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120448261 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.305619474 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163332482 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186182467 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125973468 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171524857 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107672467 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096109822 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.184108205 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088846421 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116526054 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162141036 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123458457 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099784547 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957586816 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111781741 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223131301 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10759569 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170769404 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114795446 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097360414 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292074138 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11080466 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.105470097 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.183864243 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092326639 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123429549 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.711703353 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101556958 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121051002 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116721964 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.215982883 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162408233 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118244462 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096372158 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118520043 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.160638357 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206427099 seconds)
  done (took 43.467430939 seconds)
done (took 62.716234201 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278071527 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216581165 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.26626244 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169865465 seconds)
  done (took 1.877306875 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170034195 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148123611 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120920916 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10608337 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148590525 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084482437 seconds)
  done (took 1.648442324 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.358193571 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272818553 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240913827 seconds)
  done (took 1.748675254 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.312239311 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.244489727 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473215452 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323660272 seconds)
  done (took 2.324006734 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209005485 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134114868 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110872699 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102956995 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.194636496 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.244788172 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141814787 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199534638 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098218166 seconds)
  done (took 2.357059003 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194943841 seconds)
done (took 11.023877858 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.203830865 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.198045017 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.156724035 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.153894918 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.24971559 seconds)
    (6/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.153964409 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.169593242 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097847145 seconds)
    (9/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.238456183 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104845706 seconds)
    (11/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.226884222 seconds)
    (12/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.210400547 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121420227 seconds)
    (14/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095061323 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118883283 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.150184061 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.135156044 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.190718788 seconds)
    (19/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.098007425 seconds)
    (20/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.198951939 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112857176 seconds)
    (22/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.123531224 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.084816074 seconds)
    (24/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.241929597 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.166329539 seconds)
    (26/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.19973174 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.146335384 seconds)
    (28/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.165158275 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.206367614 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.149621479 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.128513218 seconds)
    (32/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119792425 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.205645938 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092292699 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.226199274 seconds)
    (36/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122741401 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111865492 seconds)
    (38/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.215373447 seconds)
    (39/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.117320399 seconds)
    (40/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136014641 seconds)
    (41/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064952845 seconds)
    (42/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.121370222 seconds)
    (43/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.091494458 seconds)
    (44/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.14455394 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091379025 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.207390392 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116100075 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.112587404 seconds)
    (49/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.176602357 seconds)
    (50/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.248177736 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117150887 seconds)
    (52/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.206523774 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.136374126 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.135258031 seconds)
    (55/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.232814975 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.223291152 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.132456201 seconds)
    (58/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.161495694 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109672529 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.176496611 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087451026 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.135914677 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.086493022 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.146470977 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113818361 seconds)
    (66/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.114035875 seconds)
    (67/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.089100469 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096444099 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064650138 seconds)
    (70/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.117080311 seconds)
    (71/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084720159 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.130978127 seconds)
    (73/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.118819385 seconds)
    (74/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.086142968 seconds)
    (75/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.130727764 seconds)
    (76/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.065723149 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 0.107592283 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092764248 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.119821399 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.20828666 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.188087774 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.085691985 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.210674912 seconds)
    (84/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121277131 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.178142735 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.109212433 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.165955983 seconds)
    (88/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095602286 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.118158058 seconds)
    (90/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.168644748 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.089597943 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110451305 seconds)
    (93/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.183774869 seconds)
    (94/309) benchmarking ("sort", Int8, false)...
    done (took 0.186016329 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10785871 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.113459821 seconds)
    (97/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119256142 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094968402 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.191366358 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.13473666 seconds)
    (101/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114635373 seconds)
    (102/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089089912 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113193493 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.150538163 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.135042777 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116279809 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065746928 seconds)
    (108/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.087458601 seconds)
    (109/309) benchmarking ("sort", Float64, false)...
    done (took 0.169861145 seconds)
    (110/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.197536193 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.192634064 seconds)
    (112/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.118846842 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.188660827 seconds)
    (114/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.183300817 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.115361528 seconds)
    (116/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096427332 seconds)
    (117/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136050064 seconds)
    (118/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111783041 seconds)
    (119/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.115727516 seconds)
    (120/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.190018802 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.168151225 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173261079 seconds)
    (123/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112939895 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.176670516 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.406775231 seconds)
    (126/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094675419 seconds)
    (127/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.161621452 seconds)
    (128/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.14463229 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.180795691 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094531402 seconds)
    (131/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116509503 seconds)
    (132/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.113711587 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116367385 seconds)
    (134/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086802371 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.132723755 seconds)
    (136/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.214497815 seconds)
    (137/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.065602928 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.113738111 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092556041 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.135688049 seconds)
    (141/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.109546578 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.214689728 seconds)
    (143/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.088056126 seconds)
    (144/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.115363192 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086424314 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10880103 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094266484 seconds)
    (148/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.116056632 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.072725585 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.131664312 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085462635 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116649301 seconds)
    (153/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.20495906 seconds)
    (154/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.08139803 seconds)
    (155/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118892651 seconds)
    (156/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10966674 seconds)
    (157/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.099169519 seconds)
    (158/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.075903301 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.122468218 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065238296 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094181693 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.089011516 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091475784 seconds)
    (164/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11710543 seconds)
    (165/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.190752088 seconds)
    (166/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.095694108 seconds)
    (167/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123015792 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.188493764 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065181793 seconds)
    (170/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.110559141 seconds)
    (171/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100306523 seconds)
    (172/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.088571341 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065364649 seconds)
    (174/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085047833 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.097366326 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065974281 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10773331 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.149472305 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.134590428 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.132242599 seconds)
    (181/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09405176 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.114450897 seconds)
    (183/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086750526 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109401301 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067154978 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108798617 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092163493 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.131092506 seconds)
    (189/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.19779946 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.181827061 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095395338 seconds)
    (192/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.09058276 seconds)
    (193/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.162857954 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.0982597 seconds)
    (195/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067225064 seconds)
    (196/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.148887071 seconds)
    (197/309) benchmarking ("sort", Float32, false)...
    done (took 0.151235584 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.141330859 seconds)
    (199/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.115507137 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.153970605 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108417547 seconds)
    (202/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066593927 seconds)
    (203/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108658434 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067886051 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.117927074 seconds)
    (206/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.127248132 seconds)
    (207/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149970156 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085280887 seconds)
    (209/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112500851 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065725691 seconds)
    (211/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115331018 seconds)
    (212/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087478376 seconds)
    (213/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.169701018 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118776397 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093428587 seconds)
    (216/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065874155 seconds)
    (217/309) benchmarking ("sort", BigInt, false)...
    done (took 0.241347705 seconds)
    (218/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113110056 seconds)
    (219/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.143738201 seconds)
    (220/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.173960422 seconds)
    (221/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.065935545 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115289777 seconds)
    (223/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066757412 seconds)
    (224/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091622914 seconds)
    (225/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.176083856 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.108914096 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.194713877 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085050215 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076624741 seconds)
    (230/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.127726246 seconds)
    (231/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067327552 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.189916464 seconds)
    (233/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124299852 seconds)
    (234/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066213202 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.090584943 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163423049 seconds)
    (237/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115406934 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108583552 seconds)
    (239/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.086999744 seconds)
    (240/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066208708 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118568499 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065620888 seconds)
    (243/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089266328 seconds)
    (244/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066463175 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068190069 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.089521412 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.085297016 seconds)
    (248/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.099791401 seconds)
    (249/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.076266374 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086157774 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.089330459 seconds)
    (252/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066404589 seconds)
    (253/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.091217474 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085854923 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134727907 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.152853745 seconds)
    (257/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.100676718 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111117475 seconds)
    (259/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.090006883 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085762081 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.138015997 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092393785 seconds)
    (263/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.114841499 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.085981339 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118624727 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.087867066 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.08976213 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086086704 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.089236674 seconds)
    (270/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093889881 seconds)
    (271/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.187110544 seconds)
    (272/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068031698 seconds)
    (273/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116353419 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067300865 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.179296029 seconds)
    (276/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087261569 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116279203 seconds)
    (278/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06705813 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092246672 seconds)
    (280/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.089814679 seconds)
    (281/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.089628532 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067624967 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.06673711 seconds)
    (284/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.092126905 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093786832 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.134181111 seconds)
    (287/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065656412 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107893695 seconds)
    (289/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067290048 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.137010392 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.08590636 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108353007 seconds)
    (293/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.103979011 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222244674 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117248746 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085276961 seconds)
    (297/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.090884904 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085698155 seconds)
    (299/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.099242932 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085726501 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11491435 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.08717316 seconds)
    (303/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116263123 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066228981 seconds)
    (305/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124272946 seconds)
    (306/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088855765 seconds)
    (307/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117100476 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092102879 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109461971 seconds)
  done (took 39.514084464 seconds)
done (took 40.397165535 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099083683 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.144921861 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095250581 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134946962 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123293972 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090466706 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118415634 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09771838 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122547308 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124947891 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097792518 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092668734 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.0956394 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119354043 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096499417 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137749954 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123155589 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09295799 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118896474 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085261361 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118033749 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086509134 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111545768 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069391155 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121652045 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092935016 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116505058 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119632434 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086951552 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110066797 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089581777 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116542143 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085782911 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123209148 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092818164 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118109907 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119443915 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.095850056 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110858819 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086769624 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117617019 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08631086 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118805859 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094561794 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117493802 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091965198 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120155435 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122077846 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115765703 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117963757 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094759036 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120193783 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094882913 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116673622 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.08996223 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118886098 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.115264314 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11411387 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12191811 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091221888 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118063047 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094133187 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116096577 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.118391593 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095057101 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120471218 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097282289 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115117714 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096784485 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115617331 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086142057 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119321632 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.1134435 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.085979881 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120753923 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097406015 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.108504443 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.091753511 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117028387 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091234833 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109875021 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089286518 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111861604 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092135915 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112680351 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069760659 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.11419939 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092106394 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109343024 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.094872883 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116245885 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094084559 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112019423 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121256941 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086309595 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115241154 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.086449346 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.110147726 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.08848472 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113827438 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086281563 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112998152 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.094571427 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.111300317 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092410686 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122493648 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086712336 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117315873 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085552026 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110222777 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124168752 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.096820374 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.110829341 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091308 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.10890263 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094011743 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110163575 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.085843665 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110557928 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086823417 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.115891135 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086256601 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11281002 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093415027 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12442487 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08539685 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11411065 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089148603 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110165592 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091671913 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110752849 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086117452 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112141206 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077180731 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113568178 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.085853762 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117082039 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090410884 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118925845 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112746976 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096207136 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.115937192 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.091778863 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115909792 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085162514 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.097438933 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091519721 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113570361 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.087928529 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.110327265 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089153638 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110495153 seconds)
done (took 16.852196632 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086594262 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183375341 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151369882 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141482595 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107103685 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111414358 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121561729 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118230264 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113849575 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142266474 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110393657 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131346179 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148391279 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085634317 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111724378 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090800082 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112695693 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102113109 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144385608 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133386258 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163989828 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085751041 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147000033 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134703461 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120238402 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114054308 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112141876 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091088629 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114617319 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103237379 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131855415 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114792258 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087072586 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134100475 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10387911 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119841408 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087358238 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117520633 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.110765357 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.086791906 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140514342 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133185185 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091894426 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117372197 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090353749 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114356891 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08820137 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119967065 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.12192893 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.090852892 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126013948 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155831849 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089954774 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121968757 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086370665 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122693233 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121659669 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.08910649 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112401809 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089150367 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113986144 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091004389 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127249146 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142249268 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091238816 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121076688 seconds)
  done (took 8.572867242 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104705819 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139901404 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129867517 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106168647 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112507406 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08716405 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112360659 seconds)
  done (took 1.73837111 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087525543 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133476008 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128347501 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135621128 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132259762 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.107523107 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123332541 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087597436 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13004479 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088086711 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133144763 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152276977 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089395112 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120166321 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138270306 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087484946 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136972294 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087527849 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116668403 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136295424 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091133593 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134302433 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090331332 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113602731 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102694077 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113479944 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162441866 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092662862 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114889873 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091128191 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111830922 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.164997362 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102508994 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124230222 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113003289 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102352652 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127861355 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086851929 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128843004 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093583352 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128577194 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114126547 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.088951938 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.11218452 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.092494359 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123923902 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.08954834 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113603843 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090687568 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13366802 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.08917009 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127424305 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113265576 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.092791935 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115168789 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094410094 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12388557 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089122352 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133281254 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089641738 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130166787 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132361631 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102210715 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130398541 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090836529 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127216316 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.1270985 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.090572238 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114845453 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.091457102 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130474926 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087204937 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115634798 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099149677 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115085086 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.136662002 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.111439317 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115247444 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099181041 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113515137 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088824873 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114087318 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111528169 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118273741 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113824426 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09262314 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11726004 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086459784 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112404137 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.090926909 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.111342443 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.089565247 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.11715126 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088743391 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116580733 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105328884 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114059625 seconds)
  done (took 11.76794482 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089965824 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114418998 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09126368 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114115965 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090130547 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11522709 seconds)
  done (took 1.57260196 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113781985 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117013177 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103749194 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120488453 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15640171 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.128785065 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.103395528 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123844277 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107009686 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127615842 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128354339 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104783555 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135293845 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12084125 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103180317 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120426499 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129512631 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099750064 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12719978 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096358985 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136301458 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120555745 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095719118 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131690413 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118177318 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095579135 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125465247 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10214648 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126666019 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123068326 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095010349 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11804498 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.119784022 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097457075 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130093759 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095763948 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12037007 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119042216 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099936236 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118518571 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.129564503 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095205085 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12683828 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094108732 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123172291 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121490714 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093776175 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125295969 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.12884371 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093730864 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119560349 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095228997 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118289538 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119247085 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095371527 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123405214 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09313477 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128545555 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121046682 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095856733 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118169879 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092707399 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122174399 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118099572 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104846823 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118430266 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.119987905 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09563943 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121890793 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095547015 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119034194 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117220875 seconds)
  done (took 9.199788858 seconds)
done (took 33.788778777 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687319956 seconds)
  done (took 1.64319068 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.705592599 seconds)
  done (took 1.663210395 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.956520056 seconds)
  done (took 17.915103751 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.502286308 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.575598555 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.807648722 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178417065 seconds)
  done (took 3.022285944 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.92945375 seconds)
  done (took 1.905362775 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.294261768 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25707149 seconds)
  done (took 1.512939506 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772351414 seconds)
  done (took 1.740454021 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.323493634 seconds)
  done (took 2.2867592 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.330375227 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184104118 seconds)
  done (took 1.482947533 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.549250477 seconds)
  done (took 1.517732772 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.756199293 seconds)
  done (took 7.731256108 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25720043 seconds)
  done (took 1.239864544 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300793819 seconds)
  done (took 1.273394027 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.519862599 seconds)
  done (took 4.496609593 seconds)
done (took 50.393985712 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097070554 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126202844 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10148301 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124171902 seconds)
  done (took 1.418652467 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099946178 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120426467 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099427255 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120352799 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126186552 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.094880009 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122470303 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10036337 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120100087 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096009873 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120195582 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119399066 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098028819 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122223974 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093065182 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122489746 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124046456 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.094891882 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123728408 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095660669 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118095651 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097341324 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123921968 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118304953 seconds)
  done (took 3.647859246 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099556231 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118324015 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09507841 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117738599 seconds)
  done (took 1.406415697 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099327703 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140900115 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139074087 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.09949024 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141560715 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134735307 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091032745 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117253741 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094285345 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12415848 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089355356 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149055588 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137572792 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098842781 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126692337 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113111093 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091102531 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136804731 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098885322 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125142627 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.116961442 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099361966 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.11503424 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.113554562 seconds)
  done (took 3.772154414 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157840813 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.15077701 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137889981 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094916267 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.154589377 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.1403201 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.086839637 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.13951656 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08972357 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129078283 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117448762 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132244256 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.126750293 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087239816 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112793137 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086563094 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.126868064 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127181238 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090667025 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.143617031 seconds)
  done (took 3.418671595 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09677068 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117419139 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087624644 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116270165 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098353614 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119918903 seconds)
  done (took 1.618379483 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089708617 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114440981 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089683368 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114502326 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093073755 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114378759 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087806361 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114286522 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089515258 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114707645 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089150536 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113131292 seconds)
  done (took 2.207279327 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.453761471 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.091916006 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119622718 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111651655 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095769067 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113768208 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103057227 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118186305 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140410288 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088117023 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114459631 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090795547 seconds)
  done (took 2.625580956 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238036551 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125083703 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291001581 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191131529 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158330061 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170203555 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15140442 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165507688 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22369402 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157591408 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208315223 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221244837 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125273515 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217546799 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111495567 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.142507489 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226402879 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219275108 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153637313 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230854726 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201492799 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164337294 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178426714 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151196781 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137974972 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168633303 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120249418 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104446098 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236030905 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178663289 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215649537 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163384014 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14511113 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240774529 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246695903 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197279304 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186600028 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134652847 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145513683 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163377666 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26821781 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136972057 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23634792 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158028368 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104747987 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2207036 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167263676 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174361516 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149588379 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137948368 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197579621 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239292848 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192498227 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137044817 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162575792 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159103961 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166466032 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151896454 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25038631 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198157361 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202369287 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093990401 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145822453 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191211157 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18096048 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167312511 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.207418117 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145470347 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192574855 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187572096 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165787464 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216830975 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182091665 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137118921 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169647555 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173516441 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170299184 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254473364 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176663686 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121208016 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167627945 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148780133 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130348194 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168285326 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124461041 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240203177 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122362752 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.133782665 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162897052 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1606888 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160601154 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197628267 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218471206 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146930896 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082968908 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155442937 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154689907 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187971179 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138294187 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158752996 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161171949 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128420621 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176924085 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122487242 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17527856 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091248313 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177304133 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207358368 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099666954 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156926912 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152618253 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148115114 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181876377 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197929507 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139891148 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132120045 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205280555 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200143482 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.122061772 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203591603 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197503968 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.141808735 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148172809 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198826687 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243806979 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113067732 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227618634 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154504703 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133580689 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106409863 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178853391 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154016111 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160253102 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132572658 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179062922 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236561215 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097402073 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137488377 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187171976 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131845075 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130867675 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159970198 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147584627 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111277512 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144991437 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150352662 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206530885 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177887986 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150827616 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167088463 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15042814 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248071423 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112801263 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148710933 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147560678 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120158527 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194064894 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195656465 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130196285 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202336269 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.19855597 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128221726 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195536436 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108024917 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175379995 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129100026 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092280625 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219156349 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164413265 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162012574 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194303902 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153537117 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181618575 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.207364096 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172037771 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173896018 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163328385 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158376694 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.136839114 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157414466 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164244581 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095777809 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142523941 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134319248 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15597643 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141556041 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106083798 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226278116 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170717065 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147597958 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156818713 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148382675 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177957092 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.100824291 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203535674 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175596872 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145576085 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.195757997 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191729929 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211005021 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115826927 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2313732 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120015515 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097988609 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14082832 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170839523 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132531449 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108138629 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190525745 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177255887 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184623766 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174474662 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162474319 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176585821 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187026239 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120034339 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166972374 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185218888 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174561625 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184606418 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140037881 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.125029406 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174353346 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154120728 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253884868 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164503765 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201000429 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206981072 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.147677498 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130932046 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149070388 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185317004 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153974838 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176917482 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146710927 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139371105 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159997625 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.107849735 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157450402 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211209314 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160988472 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190221466 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149586457 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184827002 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127065605 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164729456 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156712137 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164929674 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108128369 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176334674 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203081519 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145977995 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169603831 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218730145 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104080035 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.176722105 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237903241 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194679598 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137056767 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15749391 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15899617 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163048988 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172775986 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177117921 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158420218 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187583786 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157792564 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13553854 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138726847 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14931289 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124507956 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132922486 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148463132 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.172799813 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139157754 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186482208 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159854243 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158045356 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169643203 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149528291 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143040913 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148869806 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214622431 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172461391 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241305985 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.147947449 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17853452 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20401484 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125265403 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130327073 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105111752 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176304995 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134981477 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214470711 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.120154665 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156254347 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179121583 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21907744 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111159169 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119405886 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155706838 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171705556 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163967605 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150835806 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157216309 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207564078 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142584903 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130183468 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170462644 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129107455 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145984807 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223984732 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079896489 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147045857 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100262442 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132143872 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163428615 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233133672 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.10817738 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.183818285 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167829988 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167196143 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163606664 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147600437 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149119623 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164234666 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199443627 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210439713 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.103365111 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156925353 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175094738 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221561768 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159136108 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138615589 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20220714 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190656819 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.22451068 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113693843 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192798629 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165702251 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128022096 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211187684 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133365788 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205918811 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133336643 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197589938 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151175982 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141774643 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173878554 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.148435457 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140568528 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18676475 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17208665 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135687772 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131914267 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166245836 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175232909 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153093023 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126058718 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181893004 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.123529504 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188933273 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256140038 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105461857 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152673545 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146232685 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135083245 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15545376 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157143725 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137610971 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138656739 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228563185 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.107648975 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217542417 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200340498 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194953102 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174799736 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143227504 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691939209 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102195877 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218101905 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154416833 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204900735 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150886157 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171374789 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156595501 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170415535 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192526408 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184785763 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.200640668 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218248137 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176396766 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130653655 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158025265 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161315898 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142377291 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152220138 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166068041 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159112932 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.124563661 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.201540237 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169062199 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133507061 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111753055 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222687571 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125809374 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213482392 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17865859 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110261973 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197191167 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185075078 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132287128 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180830781 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235104423 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112435176 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149369341 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.131863731 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154267449 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257896492 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096322585 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225186916 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175251329 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156071082 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164976351 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145714588 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189385698 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155427572 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203311476 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118618862 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.156681538 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154372232 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136787732 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12810015 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152363984 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165273919 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.119320709 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183634099 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137832061 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188967937 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122242184 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143701683 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127125849 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216866545 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213624586 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137367406 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133818156 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162096369 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148761592 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17441834 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17552712 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135094535 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10667662 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135444911 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.1533747 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11234191 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154219235 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155170627 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164451564 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203708387 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137257248 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278056555 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139721392 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152699881 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088638885 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13128398 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148494468 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117892892 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155047851 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148756244 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258220357 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14453753 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106112161 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146996343 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125187641 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107393026 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164024757 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189945343 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173771316 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14329722 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080988292 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157560113 seconds)
  done (took 80.3623994 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160455803 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129961561 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145670226 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200841071 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175171804 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269254293 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209275249 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251717438 seconds)
  done (took 2.605489643 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093278423 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144492705 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.151562435 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132273243 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090021996 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119695732 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.32982181 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132041121 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090400698 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139452821 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.147238624 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.116757793 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.507353455 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.121078777 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117500918 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082302381 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.114756765 seconds)
  done (took 3.687830763 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.458306006 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.706868103 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.474845967 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.123338217 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.135200652 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.132743721 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.696284757 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.208702044 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094132645 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.482339164 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.770758151 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.177585738 seconds)
  done (took 18.527462545 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098307071 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.120239141 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106937934 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.134941379 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09497 seconds)
  done (took 1.626095927 seconds)
done (took 127.896233326 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103748091 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406921669 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071349489 seconds)
  done (took 1.584999731 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106190979 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135798854 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107830021 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134671002 seconds)
  done (took 1.566389082 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097688205 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126270255 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10820078 seconds)
  done (took 1.407698774 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321750511 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.188858862 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.141783831 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105675001 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12864124 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.101796284 seconds)
  done (took 1.414346068 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09693346 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126735602 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098223274 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128514464 seconds)
  done (took 1.530564372 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093782695 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069878814 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100269039 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073548207 seconds)
  done (took 1.414261693 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112554935 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130986659 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103972408 seconds)
  done (took 1.430166374 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129609686 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.13855417 seconds)
  done (took 1.350466944 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.103992653 seconds)
  done (took 1.18032597 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117097861 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.167873119 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189835531 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164556291 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.227000872 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165990274 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.1409267 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115283734 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129865145 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.142556599 seconds)
  done (took 2.642680053 seconds)
done (took 17.355141944 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102741858 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421866451 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411752093 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1155715 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721522917 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379518601 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030420371 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145212813 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164141702 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092687532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138228498 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671172586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.020859371 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.372069218 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.979202166 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.368391922 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.70253673 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092116789 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119218509 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092364992 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.013836454 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091214644 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120803139 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091721768 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70125961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423937541 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094340775 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.368079852 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091322349 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124852866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381974532 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121217765 seconds)
  done (took 16.835732939 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094183132 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173217103 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097560532 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136535637 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122526771 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094085215 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123262197 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092744156 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178319647 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121162957 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110589895 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120591243 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125913033 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093800755 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140719734 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091743694 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124098207 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092268126 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120263728 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12088747 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110651698 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119566366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09346117 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120087299 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093285216 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13383398 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121961383 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092830589 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119334486 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097970333 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126345661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093489353 seconds)
  done (took 4.781021689 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13883591 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181284375 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12701619 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126264577 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168376642 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122113577 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197890818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144437172 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153546434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121442207 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139018039 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091738828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155589017 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121982988 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.112895816 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121041366 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096776117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120735246 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092047087 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121341721 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139682484 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092072504 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121859422 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092700224 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121930616 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135593487 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095684706 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121135568 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092305749 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126122395 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099480654 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123013832 seconds)
  done (took 5.103380345 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097038533 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125670514 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108600342 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13806081 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09540647 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125568345 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097424004 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124104291 seconds)
  done (took 1.997091144 seconds)
done (took 29.794070648 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111388269 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126486866 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106129755 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133700465 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102223212 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130585186 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091377332 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132966234 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133437916 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101746387 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136949977 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091998762 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122626447 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091410603 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134830377 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097786299 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13292316 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101806066 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132255829 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131408779 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093265668 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132848549 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102712265 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132755684 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103952971 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132445566 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136912437 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098201915 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122617687 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093899261 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123624984 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.108793612 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130103966 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104517247 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126198477 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096170374 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122728633 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093894983 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131600887 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133200557 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099568127 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132721921 seconds)
  done (took 5.973213029 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.1062375 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140606255 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104503995 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081271615 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115969921 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080416834 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137296029 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08435393 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109740684 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107066693 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.08032757 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105224033 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077815222 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103644602 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076251257 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074518567 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108469709 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074788452 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07617761 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105538414 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.078638865 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071914823 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.10806299 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077980203 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.103180327 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080822768 seconds)
  done (took 3.563614008 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099494087 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135115009 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111643954 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182854427 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160314374 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098993832 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131644398 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139278177 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107721477 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120393677 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095634698 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148474946 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110995392 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127660291 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091640666 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13603995 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135601077 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.092774169 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128251178 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112208809 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13781019 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101206684 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141069995 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132493953 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091321929 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122364031 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095815837 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134434092 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096799646 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.1300452 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132560394 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09521972 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122779393 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103381513 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125580037 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093445804 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140593688 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131054605 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.100506644 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121349731 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095308583 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121231176 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113664913 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166999416 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.120549759 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.098900918 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127553587 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10205074 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120446701 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110625937 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130709294 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091127702 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124007088 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091474456 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120929853 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134133858 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.093012103 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123580461 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101090755 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123972567 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.103514787 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124758041 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107984442 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121346255 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127947919 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090775172 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.120873561 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.090407332 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143705979 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094237172 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161922071 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.123861333 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.09243254 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130419296 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.099357585 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127142668 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09155042 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13699592 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101051085 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124531985 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129643913 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.096094608 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123581206 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111527798 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123097014 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094184353 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121963542 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098393958 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124643383 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093346177 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13531371 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.120560328 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.09554723 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.138589552 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096306961 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123114224 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.098877546 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126924815 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09119839 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134925973 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.126702072 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.092893922 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131478954 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092307583 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123904882 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.101282592 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126184796 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090694262 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126372219 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127006383 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.092952254 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121491944 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.094889397 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.122038549 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.101694152 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127029902 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.096301387 seconds)
  done (took 14.719554839 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226738835 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214315769 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.247024952 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.265283422 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133989493 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.144031156 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211350052 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124377348 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124012932 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.15969386 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.160772994 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.185028846 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.1690498 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178633063 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.109718734 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120845888 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.140272893 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.132980738 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212952221 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.287944025 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.141293895 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101472999 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160551948 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160662258 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136268851 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.101308766 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139982754 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132538655 seconds)
  done (took 5.734495903 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107340779 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155824881 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097654903 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144552301 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148046611 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092274622 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12697713 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093963445 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134621865 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135327192 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092564859 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.1281627 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099850452 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132051125 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122610686 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.101820355 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131626059 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094401796 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125250396 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096987689 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128808159 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.130153711 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.096301179 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.1213664 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.099791717 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121168836 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085650449 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141491872 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121608548 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114464463 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120076316 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.09875406 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132655894 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093088075 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12200947 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094614298 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124700459 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095378356 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123715031 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091186852 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12014658 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077256381 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121642117 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135295854 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098815608 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108489985 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.098011506 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128331685 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098292704 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120365837 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095838598 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124360112 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096048199 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130193463 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097873791 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126957098 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096397486 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11465955 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098081831 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123923225 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084036209 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120614644 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.09805545 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116590384 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100118237 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127364363 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091171614 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123911105 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096895427 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127988402 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094607886 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.124780464 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.119545032 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.094398883 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.126772014 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.09701813 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.12456899 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.09149726 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121587465 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.092631735 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.104377793 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.092346825 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073168023 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123988386 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091442316 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120685999 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.124785824 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.098529806 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136203671 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094107743 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.128284007 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093278806 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120195962 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124781616 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08346409 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095291746 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.136675687 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139878424 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.092085658 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121090312 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105789463 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12762333 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121358081 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07578795 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.099025921 seconds)
  done (took 12.842757784 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126228621 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152548122 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094878847 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141868477 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154508356 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156890325 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099772287 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129900761 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094022154 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141339524 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092910659 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130717429 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096775903 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135708951 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156186907 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.107883138 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124355602 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106701153 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131646935 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169053663 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110937434 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.140531584 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138181457 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093877033 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128124275 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.109919212 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160323946 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.137305411 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106162719 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14186932 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107347331 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160701902 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142514309 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.09800147 seconds)
  done (took 5.441240427 seconds)
done (took 49.359209888 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.19713523 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.421152972 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.180393257 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.055132314 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.208714671 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.213872855 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.213141958 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.180924658 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.638641849 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.180169963 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.423312774 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.850854248 seconds)
done (took 59.878261504 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.299569044 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.32117671 seconds)
    (2/2) benchmarking "String"...
    done (took 1.48892021 seconds)
  done (took 3.923478878 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.533252336 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.115885544 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.441731361 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.181273611 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.181571994 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.476565556 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.848933029 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.534259357 seconds)
  done (took 27.892437807 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.1878133 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.576667512 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.9750855 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.968042735 seconds)
  done (took 18.822033574 seconds)
done (took 60.585285999 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.178951138 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.197450293 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.200185068 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.161541749 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.294135345 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.223072052 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.459339424 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.42433129 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.192377057 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.169562963 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.204295901 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.183332172 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.187529063 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.518124984 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.185957617 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.188008353 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.237070715 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.658677183 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.589132242 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.183574572 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.196160188 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.249018645 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.18384698 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.191202039 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.236532274 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.184815653 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.211736132 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.188342724 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.770282432 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.190359782 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.190981405 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.679692259 seconds)
  done (took 191.223883152 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.184082502 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.142794369 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.211684542 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.250097598 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.560280182 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.38605279 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.325915624 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.656815109 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.207280914 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.194200298 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.395421866 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.191090935 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.472280152 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.200835587 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.194191862 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.2919038 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.474024482 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.464105563 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.208627729 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.457945733 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.193893477 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.468059188 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.432705768 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.360829394 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.217060294 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.196537183 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.192355431 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.206156574 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.375724915 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.396585843 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.190017713 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.213376637 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.809957408 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.049041059 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.196235615 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.194361273 seconds)
  done (took 149.279150164 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.492492216 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.1859055 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.186870526 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.186721817 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.218967086 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.186606068 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.766654238 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.756058843 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.686956414 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.53144607 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.255465881 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.440136848 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.187089032 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28161939 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.199182735 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.187729777 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.201583147 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.229152603 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193302395 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.187456942 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.769307335 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.204673869 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.342569352 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.2098405 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.187722795 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.222019614 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.578014324 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18848976 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22027019 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.511608817 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.237349805 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187316217 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.510362575 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.090439121 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299346225 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.189689031 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220419515 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.188680449 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.459716905 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189475074 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.18894559 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.190960228 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.798680001 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.187998282 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.18872508 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.770226579 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.10923292 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188536861 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.189012708 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189363055 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.533848287 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.709084853 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.207584421 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.188271292 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.191683741 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.189611596 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189089146 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.222640397 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.56174948 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.287037692 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.205511023 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.192070948 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.222050342 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.188808015 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.194170819 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209386571 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.700631842 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.265934402 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.408860546 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.773070393 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195362523 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284527781 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309642862 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.190251488 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.190200842 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190260212 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.189568018 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.298796614 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.190777863 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.610890242 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196702532 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.190862752 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.25224959 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.285848306 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.191210688 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.563892038 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.196445335 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.190044297 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.920522206 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.190572937 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284853863 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.190486412 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.191149956 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19172202 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.60819934 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.758107314 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.414564482 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.196234968 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.494154021 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.191757219 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.190298093 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.627062519 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.74867785 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.79606426 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.191995269 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300528979 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196432189 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.191434195 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.193316718 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.191478338 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.221284659 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.208600738 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.250157425 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.193024708 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.590632736 seconds)
  done (took 344.285704536 seconds)
done (took 687.394720177 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.8617567 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.811292764 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.947947708 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.821783141 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.815773126 seconds)
  done (took 10.381525745 seconds)
done (took 11.503232104 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.379936635 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.379326486 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.253944693 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.382004454 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.220854984 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398392364 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.361353452 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.2123798 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.294671892 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.274557728 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.296039372 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246696363 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220621894 seconds)
  done (took 18.044442432 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.498532542 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.506140079 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256840417 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.505006057 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231783764 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.507224638 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.388282907 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400465282 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.404394376 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225377956 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20664069 seconds)
  done (took 16.255683973 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.515681435 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.506134441 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260909199 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.506997544 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234732362 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.505343179 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392032586 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.407603504 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.404211882 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226692017 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.207720553 seconds)
  done (took 16.293392616 seconds)
done (took 51.715879494 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.203536392 seconds)
  done (took 2.328922181 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.238640821 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.399662158 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.218949093 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.20806865 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.204535084 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.206204529 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.208601087 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.203787663 seconds)
  done (took 11.014149564 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.203788547 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.203385287 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.200671644 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.19988045 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.201093586 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.202758214 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.201172789 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.202502611 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.203781384 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.201681993 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.201514408 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.203667702 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.204763054 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.201799278 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.204450518 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.204359824 seconds)
  done (took 20.368005626 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.204161788 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.201025833 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.202126232 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.202803648 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.201213012 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.202363092 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.203421447 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.202062939 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.201699149 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.202285109 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.202425561 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.20210383 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.202224617 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.201784758 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.202471028 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.202599284 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.202395135 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.203112395 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.207937037 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.202325616 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.203040664 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.20243755 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.202080894 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.202770761 seconds)
  done (took 29.99272851 seconds)
done (took 64.827630287 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.33311685 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.913278418 seconds)
  done (took 9.373707976 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.20553751 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.204885504 seconds)
  done (took 3.53989034 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.205676646 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.204882976 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.204927059 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.203972214 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.205332334 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.204778809 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.205648792 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.205431256 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.20571606 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.204901675 seconds)
  done (took 13.179300747 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.205143039 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.206020713 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.202986777 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.205036632 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.205621451 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.20292589 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.206220858 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.205157039 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.20648844 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.204163004 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.205537811 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.204008792 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.205727496 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.204038213 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.206398378 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.204852125 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.205752462 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.205064454 seconds)
  done (took 22.820692925 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.208198239 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.205920532 seconds)
  done (took 3.543740199 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.205410516 seconds)
    (2/7) benchmarking "second"...
    done (took 1.205046687 seconds)
    (3/7) benchmarking "month"...
    done (took 1.204501468 seconds)
    (4/7) benchmarking "year"...
    done (took 1.204042554 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.204138209 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.205583718 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.205449783 seconds)
  done (took 9.564242998 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.20852672 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.377580409 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.459929033 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.834850045 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.208842814 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.21129821 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.096837977 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.211642634 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.213508638 seconds)
  done (took 13.952543318 seconds)
done (took 77.101306251 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.224413112 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.217211561 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.398528319 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.205559475 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.241150859 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.544495717 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.200851838 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.335587878 seconds)
done (took 37.497451619 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.208561408 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.956707501 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.957219334 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.206245132 seconds)
  done (took 11.252259429 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.182055628 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.148581101 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.200257359 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.226360586 seconds)
  done (took 17.890177221 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.251696904 seconds)
    (2/2) benchmarking "read"...
    done (took 1.541371263 seconds)
  done (took 4.925391315 seconds)
done (took 41.406944653 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209915909 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.210171539 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.209543584 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.207574435 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.210528662 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.208134378 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.208581045 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.210184254 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.209639995 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.208855398 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.207392064 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.20911836 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.209691885 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209211067 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206400197 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20770762 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209917138 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.207224004 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.206946543 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20644712 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20860618 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209552471 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.207701204 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.207778727 seconds)
  done (took 30.138803728 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.210523784 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.207877636 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.211447555 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.210212764 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.208025093 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.209962697 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.210372583 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.20801634 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.210909407 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.210989442 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209475404 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.209274211 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212643286 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.208999098 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212116264 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.208687545 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.210587437 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209455293 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211438356 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209503034 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.211524455 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208810868 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.209374061 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211925272 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.210216008 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209463009 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.212431242 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.210678603 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21321974 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210944437 seconds)
  done (took 37.442527726 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.216759128 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.219962746 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.212603799 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.213012332 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.212285089 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.213072609 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213068578 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.212814068 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.212136688 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.213342062 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.212898715 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.212726634 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.213850997 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213230185 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.212723955 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.213027169 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.213995368 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.212710441 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.212776302 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.213313742 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.212666726 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.214021771 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.213041748 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.21348857 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.213944843 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.214474573 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.213845778 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.213856052 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.213532644 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.213826824 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.213936169 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.214455133 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.214124435 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.214960843 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.213746024 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214697451 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.219716037 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.22112463 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.214053826 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.214616987 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.213529313 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.215173103 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.214297059 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.214022928 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.213791066 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.215142212 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.215533992 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.214383073 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.21518691 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.215289281 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.215454041 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.215020434 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.214916429 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215287612 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.215598954 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.216359151 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.215305111 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.216852243 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.216596957 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.216014585 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.217289421 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.215706283 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.217486884 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.215592202 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.216522196 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.216865073 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.216305354 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.217013038 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.216189728 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.215912734 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.216077099 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.216672479 seconds)
  done (took 88.601129019 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.215971044 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.214377555 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213808511 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214213292 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214781619 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217522367 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213877424 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217225795 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214857011 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216468498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218128538 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.219775842 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215387735 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218694639 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21780261 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.214077199 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.217763144 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21566852 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.217542106 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.21983717 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217616638 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.215867846 seconds)
  done (took 27.900387827 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217644309 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.219464809 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.215504363 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218246743 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216727395 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218280972 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.218680877 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219747293 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217684804 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21620643 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216458706 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217971343 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215853679 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216229252 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217096846 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217826146 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219004349 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218078208 seconds)
  done (took 23.057774004 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.216899572 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.217054246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.218145999 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.21682257 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216894874 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220231468 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217164036 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219183584 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.219130005 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.216778469 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.220027467 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219682409 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.21930921 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217623195 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219886828 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.217648583 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.220256374 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216944728 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220114485 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217021194 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217438044 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218952259 seconds)
  done (took 27.944988046 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220159054 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220160642 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.219384241 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.217917396 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.21806885 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220555211 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.220854227 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.218605674 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.222303545 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.221236871 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217702234 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.221139832 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.219948456 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219727906 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.218232333 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219221435 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220764509 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219697854 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219880143 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219042211 seconds)
  done (took 25.537020359 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221948655 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222718003 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222132171 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222280272 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221612753 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222051685 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223319729 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.221903709 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222772863 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222992558 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.22207174 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222701193 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223581128 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22369958 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223647409 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222809448 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223187968 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222629875 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224358107 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224371212 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.2250656 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224082606 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223340838 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.222983088 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.225359819 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223845291 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224388418 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224203147 seconds)
  done (took 35.394514778 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224261071 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223571256 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.221547113 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.222567575 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.222309641 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.222439403 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222581612 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.222481434 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224068046 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221495095 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.224713525 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224769196 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224539357 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.224587711 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225330628 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.2244989 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225275779 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.222436219 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223055221 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222564502 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.225217095 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224485328 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.225380827 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222290431 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223182368 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.225822979 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22270348 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223883181 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225698789 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223264193 seconds)
  done (took 37.857947611 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.243776439 seconds)
    (2/2) benchmarking "in"...
    done (took 1.243211247 seconds)
  done (took 3.63356795 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.224658181 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226332845 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.226443423 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223860453 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224364926 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.226445282 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225974532 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223388135 seconds)
  done (took 10.948771665 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.226315846 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.225430215 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.225754594 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.226139041 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.22722381 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.226680037 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234152996 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.246218472 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.227683556 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.227215482 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.233253124 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.235138069 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.229639708 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.227106031 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.226874673 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.229437226 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.227259498 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.227295186 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.228408282 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.227493865 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227171011 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22967786 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229419753 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.225213467 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.229899338 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.238165979 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.252211384 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.228270035 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227289117 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.232054995 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.227687304 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.226139252 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.228095354 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.229439505 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.229422441 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.229035746 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237246002 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247839066 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.234937854 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248783167 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229088042 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.226678625 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.230200858 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.229271246 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230565978 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.228643428 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.23021978 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.227472584 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.227489158 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.232978124 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.235059532 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228909376 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.227580057 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233088368 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.231574857 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235787532 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.248476502 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.232528955 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.23891092 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.239939023 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.261264069 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.254393627 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.231633599 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.23038371 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240836388 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.253844854 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237189536 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.247035999 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.227321288 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.231193652 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.236652029 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263044088 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.25535389 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.230743422 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231916108 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.230944537 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230124934 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231610381 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238372551 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.252857166 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.230703657 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232678 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242028285 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253863355 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.232698402 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.231190296 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.23139333 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.231947802 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.233065315 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241950041 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.25093342 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.232891363 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.230292376 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.232712986 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.233002866 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.233737949 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.2314862 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233478274 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.230939101 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.232423901 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232050206 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236453751 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.240197756 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232369188 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234143071 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.239228385 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.252846093 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233157518 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.239642426 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.234325266 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23221728 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.235576152 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.239365797 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.231135397 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237061959 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.24153328 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.23368783 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.234879747 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.233677167 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.234339893 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243711847 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.260065735 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.234598732 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.23513104 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.238414691 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.246254557 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234736575 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.236945271 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.234654362 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.232366886 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.233318209 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.2368903 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.235113667 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.236530505 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234829151 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236358821 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.23301023 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.235996816 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.236207287 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.236684756 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.237111978 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.235553673 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.237196559 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.237621332 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.236008333 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.237196675 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.24079324 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.254387054 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.236826297 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.236721709 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.233558187 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236893403 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.236642847 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.237617723 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.237183025 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23651063 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.23709214 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.237480964 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237311745 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.237134419 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236764735 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.237187765 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241149406 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.237234359 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.240499918 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.236413476 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.235137586 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.237916005 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.237516888 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.237148656 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.238624654 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.235016386 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.239941899 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.24487906 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.238442706 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.237887188 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.240435056 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237870615 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236908345 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237642516 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.240250284 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.245811784 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.23823757 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.243226474 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.258497242 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237942708 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.239102109 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.238698781 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.237684005 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239814468 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.241213487 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.246181523 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250904367 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263767347 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.239684847 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.243736272 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.239661233 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.242690709 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.242911398 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.23964202 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.24043385 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23855204 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240033307 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240483728 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.240494383 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.240769142 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.239242625 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.241706909 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.240506937 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.240599031 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241033398 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.240335711 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243426254 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.237689531 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241343636 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240741655 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.240303203 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.238971115 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.238860259 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.240677744 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.24093835 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.23972181 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.246743547 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.238390852 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241574317 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241566065 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.240304999 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.24011719 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.241500117 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242337694 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.240361036 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247146089 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.259661574 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.24308052 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249037423 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.260092677 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.240917559 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.24470628 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.242359498 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.238850785 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.24466788 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.249454421 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.241973867 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.241807168 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.241042534 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242266614 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241851636 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.249263016 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.260424056 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.242004987 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.242640867 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.243766373 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.239822949 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.243385604 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.243945859 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.244045705 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245311096 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243892757 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.242609349 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244281783 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.244482571 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.24353028 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.242511986 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245910785 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.250577068 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.248618732 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.242300307 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.244965508 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.244182864 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.247973209 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.243528883 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.244693308 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.244459649 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255841916 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.267517562 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251677692 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.264544268 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.2448518 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24889835 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.264786137 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.248516255 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245465514 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245553684 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.245214501 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.243573469 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.243346835 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246212651 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.2452008 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246517612 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.24792031 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.24967112 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.245471955 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.244508638 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.245298957 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.244748385 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.245326451 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.245731299 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.246822956 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.247729473 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247798663 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.245466934 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.246078713 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253291377 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26531529 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.247626035 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.24556057 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.247674934 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.245885212 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.247271101 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.245779594 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.248652453 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.254789217 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.24910909 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.255347292 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.247887639 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256124399 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.246007829 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.250178088 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.25510839 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.244384006 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.245791188 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.24688341 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.247901707 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254128146 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.266513684 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.248433493 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.250886508 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247389102 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.246910123 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.24750013 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.248494813 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247256356 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.246798906 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254937037 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.266674518 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.252089608 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250544534 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.246459014 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.249136001 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.248860501 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.249202208 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252463248 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247862604 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.248855503 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.248449603 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.249448526 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.25039113 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.249064462 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.248227816 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.247530513 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.249315199 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254581488 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.269485386 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252921018 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.25060454 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.256480283 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269680749 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255699975 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.268487284 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.250329175 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.248808406 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.250904495 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.250939953 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.249724158 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.251561171 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.251719333 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.252469524 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.254273245 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.249746357 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.251925761 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.251691534 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.250647957 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.250770384 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26121506 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273836309 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.251934059 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254939724 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.248158568 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.251617509 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.255062954 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.251138985 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.249639853 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.253640458 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26066032 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25995815 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.2510339 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.251824877 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25259579 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252520676 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.251848613 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.2526948 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.251712178 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.251938245 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.25212094 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.25174978 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255482822 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.251578959 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.252846464 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252923298 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.253228779 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.261100819 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.272529513 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.253279006 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251796152 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.253888328 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.253257708 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.252639409 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.252200036 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253664434 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254104258 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.253901515 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260116916 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.259435976 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.255243746 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.252504646 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.253022643 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.253005885 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.253694014 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253263927 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.253042203 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252365961 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.253714429 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.253458989 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.254448139 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.251877872 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.254388957 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.254438747 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254398678 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256672975 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.260637448 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254096769 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.252616331 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.254731762 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255659785 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.253614706 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.254729343 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.261833426 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277775703 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.264141473 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.262193123 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.258488397 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.254980346 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256765457 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.263007086 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.254237274 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.255423834 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.254304977 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.257380325 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.257505419 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.259486892 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255888013 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.261196887 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.276744164 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.25552565 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264507649 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.276178219 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256742349 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.257303232 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.260800978 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.257185368 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.2548997 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.255624325 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.255623686 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263151907 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.27618097 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256829303 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258416197 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.256759962 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.258489963 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260540414 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25763963 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.257367081 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.254811325 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.257927675 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256943344 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257035982 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.255738258 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.255602946 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.257293109 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.260394604 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.263642972 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.255711377 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259249992 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.258098153 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.258907986 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258793684 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257699402 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.254896147 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.255562154 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.258343971 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259602028 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.258260229 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.261012575 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.257953108 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.259307343 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.258440705 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258323965 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261249303 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.268615363 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.26535494 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.256661336 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.258019718 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.259219618 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.261394603 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257945742 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.259800438 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258098149 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.261423697 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.259877184 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260720147 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.259683301 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.262155127 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274552244 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.279125113 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259863472 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.260129228 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264094382 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.26035049 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.258379209 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.261282341 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.262181156 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.264204219 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.2673706 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.259949265 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265806974 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278991205 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.263133176 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.265148797 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.264234944 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.267995746 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.26388989 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261472703 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.261085551 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.266886987 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.27515501 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261267457 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271486199 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290062039 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.280924973 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.262350166 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.26211274 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259977584 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.261226273 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.263503245 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.261411234 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.261917922 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262554504 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.261307852 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.263022645 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267495844 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.26308341 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.263457676 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.262149399 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.261802265 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.26239188 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.259002679 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.261678495 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.26326697 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.262603387 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.263988503 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.262125985 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.262819476 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275010013 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.289768991 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.261721748 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.262823459 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.260953569 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.266830938 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.265272406 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273502267 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.270174278 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.262990614 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.263980393 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.264327705 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263327378 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.262520591 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.263224339 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.262609715 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262852126 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.261958279 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.275887477 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290066456 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.267234146 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.263480936 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263986857 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.265001997 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265319992 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264253225 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264241084 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.266445526 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.267488014 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268531425 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.265451038 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.265439483 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.268493053 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.272278768 seconds)
  done (took 745.374216146 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26295382 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26239231 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262589767 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262058037 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263574343 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263239526 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262594942 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26214505 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.262644691 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263616679 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263448447 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263951627 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263513017 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264434293 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263961303 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265075304 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263767739 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.263381472 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264425282 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263845849 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26385939 seconds)
  done (took 27.714772052 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266406063 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.264250694 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.263810704 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.267407789 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264761282 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.266249183 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.264251453 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267199293 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.266128589 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264021944 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.267123956 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266343684 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.26534144 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.264558068 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263948764 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266611275 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.267808734 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263451985 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.267818214 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.265410328 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.26765899 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.265547034 seconds)
  done (took 29.03087152 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.268265721 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.268171467 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.266648678 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.26602194 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.268325429 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.265816753 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.269576747 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.268573086 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.268730651 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.26756881 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.267435341 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.269173998 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.275760109 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.273875641 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.270514788 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.268490351 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.412188572 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.269603354 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.269293501 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.268544376 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.265950727 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.274101772 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.287225843 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.26772654 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.267352384 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.2692409 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.269113882 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.270941454 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.268802893 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.271083262 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.273758141 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.270695195 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.270039841 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.271818843 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.26816277 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.270883544 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.273410968 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.269591825 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.26839524 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.270090929 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.279941151 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.29186051 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.270446313 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.276754206 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.291150566 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.270984169 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.273510133 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.277784042 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.267933154 seconds)
  done (took 63.628652167 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.271593381 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.271690916 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.268049755 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272034314 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.27144559 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.272084824 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.271027479 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.271243656 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.267998654 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.267950835 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.271586538 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.268817863 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.269393289 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.271857473 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.27216984 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.269355666 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.269959476 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269781903 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.269059004 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.269547173 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.269449329 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.274312522 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.273450912 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.271363967 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272806469 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269937909 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271001997 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.272544637 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.271346845 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.270594575 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.273482205 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272742746 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.273436928 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.271793373 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271223277 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.273900277 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.273911705 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.271065266 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272769317 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.272083371 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.274431443 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.274685078 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.27330433 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.273774616 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.270625037 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.271859028 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.271970697 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.271151961 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.271927765 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.273266379 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.274015767 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.27116242 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.273905992 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.271102863 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274186216 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.273508024 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.272524397 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.272468561 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.273573136 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.272771695 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.272323243 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273375711 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.272059567 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.274156136 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.275575948 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.272703616 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.272731302 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275164174 seconds)
  done (took 87.685771876 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273909157 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.273493033 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275200051 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273954279 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273678487 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.275305443 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274797471 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.276235488 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274085735 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274446484 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274036333 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.276299995 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.274654941 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.275392652 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276473317 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275757494 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275485849 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274789346 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275617519 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274797869 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.275264052 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275620649 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.275348953 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276264404 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275647411 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.275472898 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.276037332 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.275754111 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276290442 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276387179 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276989777 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.276832247 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277044273 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276446488 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.277040626 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.276314987 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276134347 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276097437 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.276918351 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.276724525 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276929494 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276897097 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278262715 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.276243732 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277523735 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277250209 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276825292 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.27793739 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277868948 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278079021 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.277389496 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27783986 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277065313 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277878004 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276439587 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278234256 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276858999 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278397063 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27855933 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277482847 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276985451 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.278832208 seconds)
  done (took 80.32380592 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279278642 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.279170067 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.275863292 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.275361935 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279212605 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277629757 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.278402641 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.280108006 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.27947991 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.280100621 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279447038 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276584927 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277159755 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280255767 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.276857941 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27707781 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277656539 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.276913767 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280345851 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.276855566 seconds)
  done (took 26.760193458 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.278342112 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.2806295 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.277562364 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278834798 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.28065861 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.277940204 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.280151619 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28123726 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278486799 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279147272 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280277365 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.277656919 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276662142 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.276585477 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278980104 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.277096114 seconds)
  done (took 21.658776044 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.276001628 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.278053926 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.276212109 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.278183559 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.275522462 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.274403426 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.278298968 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.275392979 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.275457324 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.278744223 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.278857799 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.278053049 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.278542515 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.277970561 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.275750745 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.27789353 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.274620742 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.276078759 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.278072051 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.277908526 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.275703987 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.275493395 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.278434292 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.278549326 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.276739918 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.275751215 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.275876561 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.274953523 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.275231659 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.277605631 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.275506441 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.276715954 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.274246957 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.274681757 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.275810432 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.274722841 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.27778405 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.278573198 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.278086548 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.277890582 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.277054331 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.275149668 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.277818157 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.277606391 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.275040557 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.277999045 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.276049398 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.275765712 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.27660697 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.275252056 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.277901866 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.278042764 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.277509173 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.278440869 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.278244602 seconds)
  done (took 71.421791317 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278790308 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279297209 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.27650507 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.278021727 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.27937501 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.275174534 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.280217405 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.276476202 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275699385 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.27933233 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277605337 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.280298275 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276464802 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278426491 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27817151 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279269819 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.275463004 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.276847713 seconds)
  done (took 24.197330351 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.27607715 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276929527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.279832919 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.276177431 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.276594608 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280713791 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277258874 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.279806659 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279329627 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.276627051 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276533864 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.279885376 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279815236 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.279822043 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277661745 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277166793 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.280484427 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279804971 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.277413171 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278056145 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279724376 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279126434 seconds)
  done (took 29.320576414 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.279479205 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.278100483 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.27941633 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.296006072 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.299069682 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.301602146 seconds)
  done (took 8.930727263 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28737105 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28073431 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279191885 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28111213 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28158323 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277046645 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27812572 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278592815 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281827946 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278711054 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279244373 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281218922 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281545145 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279396579 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281834711 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281097068 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280413619 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279322442 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280433407 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283045628 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282946078 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281841189 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278801112 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279707548 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280562436 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280075061 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282045004 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281673944 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281814435 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282682948 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282436439 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279687491 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283058533 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280625448 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282829773 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284728404 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280020341 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283490103 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282306246 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280898774 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.283003822 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283465009 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282362936 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281573649 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283620444 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280540104 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280425319 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281171699 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279605528 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28424045 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283432206 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282354719 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283723556 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283695508 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283217084 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284226024 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280909187 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281183099 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283910713 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28235586 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282053969 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284842672 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281566609 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281572158 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284226177 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281659695 seconds)
  done (took 85.811152511 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283513834 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282104262 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281973054 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283642823 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282171275 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283045191 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282076729 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282595087 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288786617 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281512834 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285167124 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2818201 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28129733 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28225075 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281695881 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283626991 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281402963 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281646296 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281284331 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284722397 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282116485 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282198795 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283548457 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28418584 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281959619 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28364218 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281821941 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281872244 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282000931 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28257389 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281938825 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282447024 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281369822 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280829298 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28230974 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282087963 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282112207 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281247908 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281444466 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284721572 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281217683 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284589442 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281376493 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281712089 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282353515 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283582054 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282646726 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282688419 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280450226 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282220068 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283142274 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282867763 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282206115 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281857132 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283172906 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283219351 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283070923 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282693271 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283673886 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284444472 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282892355 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282907848 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287313112 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281568909 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283115927 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284112794 seconds)
  done (took 85.861985721 seconds)
done (took 1737.308987732 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.296652769 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.282748916 seconds)
  done (took 13.779631013 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.44639801 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.401833754 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.28301147 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.31558518 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.284305115 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.304948545 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.296890414 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.285259154 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.284260923 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.284228576 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.284153582 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.474050803 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.279710267 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.284384949 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.284432277 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.378804794 seconds)
  done (took 42.376960622 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.31302062 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.291328944 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.404034143 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.308152997 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.314619129 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.482625277 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.348424859 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.289858532 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.462946343 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.330365936 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.881530646 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.313588153 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.288594879 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.419882248 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.307455316 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.477341368 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.539618474 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.878662912 seconds)
  done (took 29.85429775 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.750423773 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.319146293 seconds)
  done (took 9.27206481 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.300218599 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.341520839 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.283820775 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.289271918 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.306167878 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.373149386 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.280795909 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.314568021 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.319390912 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.296684049 seconds)
  done (took 64.309771792 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.305524814 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.287322865 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.288239819 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.28661597 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.282899523 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.278543032 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.285741347 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.278316619 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.962039464 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.411021801 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.306469249 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.294728382 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.30462205 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.287400689 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.283511258 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.324034186 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.466859665 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.304211915 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.284272911 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.292373838 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.286922879 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.388033227 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.327306602 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.285299299 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.413066754 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.978989077 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.290709777 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.294138378 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.448441568 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.304861239 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.286733688 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.287628244 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.289702176 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.861678543 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.735531472 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.297400815 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.327930875 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.297024672 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.286531577 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.416860134 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.308764832 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.295847352 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.295977003 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.706545478 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.444993891 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.399340274 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.543118617 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.294605517 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.290357189 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.351689246 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.288058461 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.289973947 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.318180895 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.039505466 seconds)
  done (took 108.992191539 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.317556678 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.767131987 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.450667941 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.297364712 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.139515941 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.926774727 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.296499226 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.561743193 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.311774453 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.280264648 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.554160731 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.783003184 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.295764412 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.32633498 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.635740678 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.330592144 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.280143216 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.12754243 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.294897398 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.281106353 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.686435091 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309287977 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.283199455 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.411491644 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.315868463 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.728883008 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.778164561 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.695358029 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.29664713 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.277411313 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.735954226 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.298645734 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.290520642 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.277085285 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.542117325 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.626356118 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.617744962 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.301680352 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.303512737 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.278486697 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.295783219 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.721737757 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.623544098 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.291250705 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.291837696 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.735045986 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.290742315 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.279088928 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.275431386 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.481194281 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.979840823 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.275577914 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.715359074 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.275055512 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.531387638 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.33301353 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.324206677 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.744986651 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291044812 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.402262196 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.341138179 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.276533289 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.280611129 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.275370702 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.278272364 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.605629722 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.661470433 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.277039448 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.607684291 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.738678379 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.29579629 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.798416778 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.164803858 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.293328927 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.314067105 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.275029969 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.896474819 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.768861182 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.310284046 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.27757617 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.591873468 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.300443603 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.54226837 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.290640708 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.278497609 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.686165124 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.299657429 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.301312466 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.288830991 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.276970899 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.00985729 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.282064335 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.547954031 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.299131834 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.276358187 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.277975082 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.280803382 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.276731497 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.283034872 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.283748224 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.786098217 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.298265491 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.58597928 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.295469516 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28161237 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.277648159 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.280765632 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.279360205 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.498937859 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.774680016 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.278231008 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.279776664 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.2780199 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.282488784 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.386566087 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.28288374 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.565720049 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.302792244 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.277869097 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.295645291 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.93099026 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337269888 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290901368 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.276666775 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.12081845 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.501650277 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.295635284 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.296231715 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.280093384 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.292967939 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.717303987 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.280252254 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.346052358 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.282258262 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.962587144 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.329731565 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.29762544 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.643871888 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.286654561 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.279045101 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.282056237 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.280483578 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.597105495 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.549539716 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.545080446 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.279375631 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.293609014 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960822536 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.334746379 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.412073457 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.297484446 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.258316393 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.476892862 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.426147632 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.280020852 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.832910157 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.281028628 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495718582 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.284535592 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611441543 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.757720232 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.296573294 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.288292692 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.970415973 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.992589411 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.005696954 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.281558479 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.550556482 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.251354077 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.734515248 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.280784708 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.28078771 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.832125396 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.285099299 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.286687202 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.280985798 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.281945151 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.350998618 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.455349 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.423123607 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.283485415 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.720690747 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.327080357 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29120599 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.287390978 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.285010076 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.634969339 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.343256539 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.284435287 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.305792661 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.284542109 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.284148547 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.731999076 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.174549621 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.283122968 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.434343106 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.895103238 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.303304816 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.283776367 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.951092011 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.491216061 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.806257124 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.331480943 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.572111042 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.30193052 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.321898941 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.051967461 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.35102258 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.734248269 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307377321 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.284080046 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.86778697 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.304727348 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.342588447 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.28479926 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.283705991 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.805367935 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.30599261 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.284339077 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.711624692 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.283978625 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.535146103 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.285059467 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.326857617 seconds)
  done (took 1098.964657163 seconds)
done (took 1368.749422378 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.286179591 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.28642474 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.272373021 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.293007035 seconds)
  done (took 26.346268142 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.297843997 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.294904843 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.294756279 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.293041829 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.296404757 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.293555434 seconds)
  done (took 8.980628991 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.344804704 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.293181968 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.294224342 seconds)
  done (took 19.142327471 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.497996557 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.519837469 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.64237403 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.378821082 seconds)
  done (took 10.250698568 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.295523831 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.295108795 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.295075553 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.297830155 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.297982288 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.298726898 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.296962988 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.296617094 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.299772394 seconds)
  done (took 12.884141755 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.99971892 seconds)
done (took 83.810243673 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.275266949 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.312374253 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.588048007 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.3581758 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.289899142 seconds)
    (6/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.322329092 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.707763947 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.291412586 seconds)
    (9/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.51140971 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.541246663 seconds)
    (11/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.536249014 seconds)
    (12/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.499625906 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.33563109 seconds)
    (14/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.316329696 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.31580098 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.88671199 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.637723746 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.528030143 seconds)
    (19/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.825820381 seconds)
    (20/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.498016128 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.175133071 seconds)
    (22/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.380641152 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.689331885 seconds)
    (24/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.71449441 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.31095029 seconds)
    (26/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.609719708 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.708301803 seconds)
    (28/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.321380678 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.977593001 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.311093644 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.218495465 seconds)
    (32/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.297454002 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.581328365 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.419511469 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.758326564 seconds)
    (36/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.984237256 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.352014463 seconds)
    (38/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.277878853 seconds)
    (39/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.316662227 seconds)
    (40/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.313480124 seconds)
    (41/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.760085437 seconds)
    (42/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.293120521 seconds)
    (43/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.323839457 seconds)
    (44/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.62517285 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.019361694 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.301045047 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.409265524 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.529222176 seconds)
    (49/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.083233 seconds)
    (50/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.298184 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.557156181 seconds)
    (52/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.570662309 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.388529896 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.118955133 seconds)
    (55/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.850248401 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.298310692 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.650591939 seconds)
    (58/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.532471414 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.296602284 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.453551234 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.36824472 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.187776556 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.581766374 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.931030927 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.726255211 seconds)
    (66/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.874861593 seconds)
    (67/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.874299413 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.403652828 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.641921522 seconds)
    (70/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.310803106 seconds)
    (71/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.668709208 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.68131445 seconds)
    (73/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.417269522 seconds)
    (74/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.292376377 seconds)
    (75/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.45057571 seconds)
    (76/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.470646898 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 5.4976408 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.326913399 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.307717626 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.977220493 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.849599786 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.298812957 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.317747297 seconds)
    (84/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.34188542 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.913419366 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.311402972 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.371179645 seconds)
    (88/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.302840124 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.378606687 seconds)
    (90/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.035586845 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.025301157 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.359014981 seconds)
    (93/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.122381041 seconds)
    (94/309) benchmarking ("sort", Int8, false)...
    done (took 4.353582432 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.020950917 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.106740938 seconds)
    (97/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.3249688 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.300266488 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.301982381 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.345407992 seconds)
    (101/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.399803438 seconds)
    (102/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.35878918 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.358159236 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.577787296 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.144131343 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.498439329 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.603113757 seconds)
    (108/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.29424171 seconds)
    (109/309) benchmarking ("sort", Float64, false)...
    done (took 5.591022172 seconds)
    (110/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.811612623 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.301729787 seconds)
    (112/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.436590046 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.384524551 seconds)
    (114/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.033973114 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.547102245 seconds)
    (116/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.318833495 seconds)
    (117/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.3295338 seconds)
    (118/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.360074127 seconds)
    (119/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.868661782 seconds)
    (120/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.282926535 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.28096527 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.338698517 seconds)
    (123/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.303099659 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.653480133 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.302457252 seconds)
    (126/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.324809735 seconds)
    (127/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.296126121 seconds)
    (128/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.638656292 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 1.810517373 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.341957563 seconds)
    (131/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.378493173 seconds)
    (132/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.890470901 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.573282217 seconds)
    (134/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.296384616 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.681364107 seconds)
    (136/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.303364592 seconds)
    (137/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.01268592 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.034229097 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.565597807 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.135063047 seconds)
    (141/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.440075215 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.296951691 seconds)
    (143/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.42140923 seconds)
    (144/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.656518181 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.302330664 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.722317615 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.441680049 seconds)
    (148/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.379911373 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.279250725 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.690323411 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.068311206 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.329980469 seconds)
    (153/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.127516537 seconds)
    (154/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.851382077 seconds)
    (155/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.308385071 seconds)
    (156/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.314481647 seconds)
    (157/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.515930508 seconds)
    (158/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.509252096 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.446167574 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.525804379 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.327996842 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.601361567 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.104315244 seconds)
    (164/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.331709639 seconds)
    (165/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.804112072 seconds)
    (166/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.398907828 seconds)
    (167/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.437979021 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.279526755 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.928795495 seconds)
    (170/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.365021421 seconds)
    (171/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.465345031 seconds)
    (172/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.7129072 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.306197602 seconds)
    (174/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.669801901 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.701808166 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.143104418 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.8727995 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.409634303 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.562949762 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.18393914 seconds)
    (181/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.414779575 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.315820297 seconds)
    (183/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.300559659 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.212154671 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.28738342 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.199535442 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.334260806 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.674106521 seconds)
    (189/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.368731059 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.408222888 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.341792719 seconds)
    (192/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.143442806 seconds)
    (193/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.621572641 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.635571384 seconds)
    (195/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.829849657 seconds)
    (196/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.071302888 seconds)
    (197/309) benchmarking ("sort", Float32, false)...
    done (took 5.294530525 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.374544103 seconds)
    (199/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.386134325 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.299668698 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.366613908 seconds)
    (202/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.173278418 seconds)
    (203/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.509546684 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.311541041 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.330331574 seconds)
    (206/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.332513112 seconds)
    (207/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.520013925 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.913549188 seconds)
    (209/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.309144464 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.748773311 seconds)
    (211/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.367615509 seconds)
    (212/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.360070137 seconds)
    (213/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.334492677 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.947582017 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.509459333 seconds)
    (216/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.430161942 seconds)
    (217/309) benchmarking ("sort", BigInt, false)...
    done (took 6.318831935 seconds)
    (218/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.406911905 seconds)
    (219/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.489695998 seconds)
    (220/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.71766557 seconds)
    (221/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.674419218 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.347697444 seconds)
    (223/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.897028874 seconds)
    (224/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.328803974 seconds)
    (225/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.77077813 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.447486178 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.303326264 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.364736966 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.039123367 seconds)
    (230/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.102179431 seconds)
    (231/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.616975078 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.296702283 seconds)
    (233/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.006147556 seconds)
    (234/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.857835766 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.341788962 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.308735545 seconds)
    (237/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.387911295 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.409345401 seconds)
    (239/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.315037399 seconds)
    (240/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.114504993 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.31414495 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.575815218 seconds)
    (243/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.692123794 seconds)
    (244/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.84168735 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.295688737 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.50475908 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.779654218 seconds)
    (248/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.119849802 seconds)
    (249/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.585315554 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.310865937 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.627894348 seconds)
    (252/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.663564562 seconds)
    (253/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.29092582 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.545909419 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.788166018 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.413034738 seconds)
    (257/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.387022952 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.369607719 seconds)
    (259/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.380923052 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.061626465 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.285337374 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.390417441 seconds)
    (263/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.428673699 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.647889211 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.707842214 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.391668265 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.031522298 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.142475062 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.525651075 seconds)
    (270/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.331593406 seconds)
    (271/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.615160157 seconds)
    (272/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.289622516 seconds)
    (273/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.376380769 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.286721201 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.330505879 seconds)
    (276/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.328164482 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.037278344 seconds)
    (278/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.843167453 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.288152727 seconds)
    (280/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.416773188 seconds)
    (281/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.485920793 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.287607713 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.312562887 seconds)
    (284/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.911109941 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.411933143 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.699015929 seconds)
    (287/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.501549276 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.408570637 seconds)
    (289/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.824422013 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.300059314 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.863167481 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.429932449 seconds)
    (293/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.624008797 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.30616835 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.121587493 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.187921513 seconds)
    (297/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.694931737 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.721360271 seconds)
    (299/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.6961821 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.101656187 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.355027394 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.307153457 seconds)
    (303/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.352499008 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.640751934 seconds)
    (305/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.650577202 seconds)
    (306/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.41435303 seconds)
    (307/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.334408631 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.331030776 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.933382903 seconds)
  done (took 906.461618467 seconds)
done (took 907.673881213 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.341770042 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338511514 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.318627214 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.342077273 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.430783685 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.343197696 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.329509641 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.321040721 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.367507302 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.370326268 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.317683419 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.341003962 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.320767356 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.319148957 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.319641238 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.334636565 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.30442161 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.320450475 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.33547279 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.329728277 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.336980357 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.317772713 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.370012708 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.343063007 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.324262601 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.323866554 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.323730602 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.339395128 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.431995189 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.323212204 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.323062303 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.332682467 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.314908839 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.326370416 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.316099303 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.341375022 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.33088373 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.331150892 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.323616831 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.353176956 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.682223082 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.337179394 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.322775047 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.323553527 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.322509692 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.325318117 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.323681047 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.329276132 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.336123701 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.336682514 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.673986311 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.352038087 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.3250091 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.322747545 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.333618766 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.32253287 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.325720752 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.340105285 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.341696069 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.339477806 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.294071172 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.326623371 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.325011549 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.338780653 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.330363051 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.711341453 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.334155284 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.326828413 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.684605426 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.344463641 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.710932466 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.34564465 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.323830102 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.337130982 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.353488636 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.31679481 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.324899073 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.324024128 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.330985729 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.321495067 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.333510663 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338401508 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.328980874 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.326275179 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.337790696 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.347638789 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.334885749 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.324923573 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.333768686 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.343554554 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.330522434 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.335396512 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.328146299 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.321397074 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.334946277 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.328944036 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.329097477 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.327659431 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.330905442 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.336929138 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.68413301 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.361336436 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.322009926 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.322412516 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.323855105 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.338867079 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.683504562 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.342429209 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.34791402 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.373987273 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.327241034 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.306328205 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.334886028 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342975185 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.334979026 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.33047968 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.321546607 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.308301106 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.683616818 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.356963221 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.328882243 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.324662632 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344054016 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.32882339 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.324217649 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.323106724 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.335744521 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341799892 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.448011294 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.338480933 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.359114163 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.324119071 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.329946366 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.350367974 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.345065617 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.357979167 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.330341481 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.345055741 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.342707628 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.3246282 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.337296476 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.338767642 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.330261615 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.332785992 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.322470696 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.351794536 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342310532 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341742912 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.349254068 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.44931116 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.326447999 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.313213821 seconds)
done (took 223.116282956 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.385937959 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.324619922 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.409836931 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.324022078 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.424819548 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.424918817 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.32236987 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.323114634 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.323294835 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.703900715 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.323591175 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.323110284 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.323562871 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.32266466 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.40742647 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.32506296 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.322687248 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.66869397 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.325753265 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.394812261 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.319946546 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.322970543 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.325812172 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.704222807 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.321792767 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.31853343 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.395345918 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.325798745 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.670000242 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.324454325 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.322773167 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.668841531 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.415083725 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.343064494 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.336191531 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.333556056 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.425232211 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.343778706 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.407758771 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.407331589 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.41059693 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.364523061 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.3241615 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.3226694 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.327809032 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.327249923 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.324977581 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.353543448 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.319474469 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.324893229 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.67225896 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.336373527 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.335391857 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.325346116 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.32527159 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.346474807 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.325782034 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.327791191 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.416610146 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.328469851 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.38860146 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.707474015 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.705906744 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.327630354 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.327436987 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.326384653 seconds)
  done (took 147.900505803 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.394897373 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.399557676 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.438367795 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.348530534 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.377104874 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.441809889 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.347147659 seconds)
  done (took 10.989183196 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.334413443 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.328904484 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.377817935 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.379033486 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.330274993 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.475234599 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.329947504 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.340784179 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.327078559 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.385634953 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.330682199 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.329864862 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.33592219 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.325844332 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.377204413 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.339900386 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.443691 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.331356071 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.329201263 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.486085537 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.327579908 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.337157259 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.38152918 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.340569172 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.330563983 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.335024273 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.930244919 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.330531346 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327942041 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.331164687 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.329114204 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.369342723 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.331972806 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.331526119 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328851876 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.458714128 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.331697185 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328757763 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.331775964 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.325149195 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.330734763 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.331780489 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.331475866 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.330223238 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.330853298 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.35443274 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.332074612 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.331241794 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.332082103 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.332427919 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.383553266 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.332026309 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.32886579 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.330365572 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.391284943 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339279325 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.3321028 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.329406143 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.333017077 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.331158053 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.488765595 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.37987432 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.333952497 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.382285539 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.332809163 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.334768815 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.333792183 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.332960392 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387544225 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.334677747 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.380400478 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.331748209 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.507135107 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.356291094 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.336095323 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.33669741 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.335512748 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.333642986 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.333579486 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.339056131 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.331183632 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.335964305 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.339782655 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.330656789 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.332135015 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.436450904 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.453317251 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.332161604 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.346902719 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.341703775 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.333167732 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.388035178 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.334858844 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.332842569 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.387206113 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.449978022 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.392388118 seconds)
  done (took 153.123271216 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.340473614 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.342703117 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.335525027 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.350759901 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.335930443 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.334777172 seconds)
  done (took 9.289618725 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.337031881 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.335325492 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.33566357 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.335666101 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.335666375 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.336993837 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.335219569 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.33785274 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.338740193 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.336308832 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.337157692 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.337350184 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.336745781 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.336832084 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.336493547 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.337189197 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.337232347 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.335101287 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.335971243 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.336774312 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.432939891 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.335580628 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.337078223 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.337491035 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.340979425 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.337843929 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.345167053 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.336813757 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.336481202 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.344621351 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.356700845 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.337093101 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.337922227 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.34275294 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.34042254 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.338880878 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.340735692 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.339239103 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.335482358 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.33827199 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.339855146 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.339065225 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.339477416 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.339995275 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.340110155 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.341611667 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.343668855 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.346128593 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.338492612 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.341349126 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.339854899 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.338587584 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.339650254 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.340052811 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.340594448 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359384856 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.342651725 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.340389672 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.340199603 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.340011186 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.340519736 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.34038224 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.341370025 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.34174961 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.347811748 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.341630874 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.341101825 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.342944498 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34049628 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.340836084 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.341011295 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.33858876 seconds)
  done (took 98.804103705 seconds)
done (took 421.343863473 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.647663409 seconds)
  done (took 7.901104618 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.385313233 seconds)
  done (took 7.641263816 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.094692688 seconds)
  done (took 21.357210276 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.356554826 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.413054015 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.339963746 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.338654108 seconds)
  done (took 26.701562185 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.582430109 seconds)
  done (took 7.836207465 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.333810247 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.338590446 seconds)
  done (took 13.927817582 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.91479545 seconds)
  done (took 8.169132961 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.784976467 seconds)
  done (took 8.045349355 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.343643966 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.361651631 seconds)
  done (took 14.223671659 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.306416279 seconds)
  done (took 7.552615298 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.098803759 seconds)
  done (took 8.339035913 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.319875303 seconds)
  done (took 7.560336042 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.377799231 seconds)
  done (took 7.616939902 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.068558722 seconds)
  done (took 9.306857453 seconds)
done (took 157.431515547 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.317736029 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.782871037 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.325959659 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.325685741 seconds)
  done (took 26.991396875 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.359568489 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.359351552 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.36176062 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.364849305 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.356060397 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.354047697 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.34614487 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.345693636 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.365257872 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.357708404 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.357031909 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.350329333 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.350124394 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.341550971 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.351541698 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.353023359 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.35858084 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.369295916 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.341728905 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.350525003 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.310528894 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.354662099 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.348648053 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.310727048 seconds)
  done (took 33.660509658 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.832843416 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.377809225 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.460282341 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.357577189 seconds)
  done (took 7.25190039 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.359231704 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.360390778 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.374663981 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.408971899 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.434709927 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.367251241 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.332459437 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.327049287 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.313769154 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.36119555 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.435066596 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.374495616 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.442523511 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.305378624 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.491488295 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.306563519 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.305532034 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.359600519 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.409264139 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.424642172 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.30561091 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.35777446 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.360970867 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.376776883 seconds)
  done (took 34.118064947 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.319143784 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.313686861 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.305655869 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.304016281 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.326426451 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.306099541 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.30630051 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.30417431 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.304978926 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.310063846 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.304383879 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.317646333 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.304443189 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.305421203 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.312718128 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.305020801 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.309790579 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.303098069 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.302297924 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.306442661 seconds)
  done (took 27.39401667 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.296893224 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.172200887 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.648569302 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.553059348 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.296547045 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.304057861 seconds)
  done (took 27.48993888 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.36959637 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.521589318 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.302618407 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.647890151 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.747492784 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.323243692 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.307096983 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.537036939 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.839337727 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.840068641 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.367867151 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.377245343 seconds)
  done (took 19.398751404 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.312201986 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.306985228 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.314201845 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.322269211 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.358038445 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.327820353 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.313649332 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.301083858 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.365076031 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.385616703 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.333465146 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.359940652 seconds)
  done (took 37.225276703 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388172416 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345220366 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.251986323 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.055609806 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.020616588 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.513700219 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.076074525 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.731386037 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.30745209 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577761883 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258935894 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418119349 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.5592977 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310170929 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.311116684 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.274382407 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551976399 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786782921 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313711564 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.152247851 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33690828 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.314067566 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.312761791 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.342619359 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.51913932 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.2834629 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.565826532 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.086368398 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588392664 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320938076 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320351221 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308853793 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578700896 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956369286 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419954638 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317798102 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.999671509 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.850056829 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.300402841 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.236378696 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.085191251 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.296775914 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312892496 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300037485 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.23761367 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302643205 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736580463 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.305198745 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.011803963 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.303710111 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.311951295 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400361545 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.303380515 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.295111558 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324820302 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.30532003 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.302183437 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310167558 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871991517 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.621935685 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318883736 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.240316851 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.675075686 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.229612822 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930765095 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.425424864 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.309104892 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.304365571 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234152634 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.150090436 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.322952803 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449618321 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.324284117 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.951624768 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985583795 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.30972475 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.256328279 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858443481 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322014248 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.242244902 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53378761 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.084093432 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242098655 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.246765573 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.242182247 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011104541 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315390001 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.68364487 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.310226203 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.734656847 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.318658727 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321062928 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325905502 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.526463511 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.184352087 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304240467 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.064521089 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454938569 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321717017 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.735272319 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245606652 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.302985321 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556618997 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.511964369 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300513129 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.289744762 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518862563 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306724272 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.333593196 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.310196138 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.312610772 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.855022925 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.334054669 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.611628411 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323247442 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.074089409 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029809422 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314271759 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.403518014 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.302999614 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544924357 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.054448681 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.46526258 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363906139 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301569164 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.297089936 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.246694006 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.155318456 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.200848674 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.294642551 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295420092 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.332497538 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.300093553 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247658711 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.300854559 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305464376 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.085107844 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521668366 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302174877 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580865336 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231292515 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445669941 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.307904818 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.522335464 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.483581777 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.32419359 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557379887 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304265097 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.313955979 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.315611843 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318664517 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396064599 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320431208 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.303372554 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561453001 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.304045076 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.304097569 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.269615341 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.085774301 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300939381 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.304603517 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.137114819 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864706926 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300865618 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.303105174 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188896205 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.31452276 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367389868 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.306224186 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.310316112 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.067002871 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.129910304 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.313142541 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.304603143 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.530550496 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.311006393 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.265585378 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390173147 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.492987579 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.873356363 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338777083 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.234597537 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.012319058 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.995526873 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301263247 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.491579333 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.301964062 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310075915 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.31217392 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.822540905 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.870637225 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326587128 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.193837654 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.315544894 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.312177677 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.307887787 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302405119 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.044037951 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.67031355 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320941597 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.31994917 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446198614 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.317018098 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.237556927 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.820618962 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.309771598 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.303405412 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.080649468 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337966521 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.202098233 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772909416 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564320194 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.030812346 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.323909732 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.378539749 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.337390113 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.303579176 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.117247598 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335515436 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.325514049 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328330766 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.314427233 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.305751024 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.742602309 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869846784 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00059326 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851848975 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238329812 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.317161131 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.216337972 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.732461077 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247764307 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.96226073 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4862555 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.764259064 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258813293 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49835145 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.491417927 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073821066 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320741242 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.532572441 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215545743 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.132988225 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335541661 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.517252017 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339830832 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.310671007 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.238977584 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.586995744 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.536531696 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.146675173 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384785792 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733998158 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.138101568 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.10270801 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.305214898 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.65935807 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492150248 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.94596685 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.695050736 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.318654007 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.314110232 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775965142 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.312820611 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.834711875 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923039042 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.324986955 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.523560342 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250877396 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.317594527 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.318088377 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.303373457 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.562231419 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.327773883 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.57783648 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318998276 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240826227 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.308407635 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846492713 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.177542712 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.312473857 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308101564 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057210813 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31702723 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609536395 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.316197661 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.060208978 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328555491 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.242956361 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242891711 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.002465154 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.318422443 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283471202 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807424291 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.675491243 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.32196277 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331180381 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162815696 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.563229003 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.323568646 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.878474881 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553103488 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.094813596 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338620445 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.409595602 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.168806386 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.30998575 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.191149338 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.545097768 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.147036118 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.533163989 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.278529865 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.218953251 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.308425664 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529734834 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.192753277 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.310525482 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548167382 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.043696795 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.313983402 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994201425 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352734854 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.322659033 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.323102223 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.684911075 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325103475 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381078693 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320201675 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.321349582 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.32335903 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476199197 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317990001 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330724897 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.326179492 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40435097 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.68516488 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.045546312 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.107932008 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886530648 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04227646 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.900262114 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341857992 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.311862046 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312691367 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247452279 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461784456 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.838654617 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585999843 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441267617 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.753341607 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341793351 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.184844548 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332982626 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547213929 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58851261 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.182660766 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313169485 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996121289 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.204865232 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.324346024 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.524615198 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812283364 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876003488 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422019035 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.317018409 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.747943896 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595673825 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.402750461 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314231767 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902854832 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.323681614 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.670350565 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.346990507 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313629922 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479879931 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.324715496 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967119041 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.35175837 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.475177832 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.087220016 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.339707917 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.570402208 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.759925337 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.326238385 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890977605 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021927787 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577183732 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38385191 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.326119763 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.423461629 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460653995 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.323624722 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.204089838 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31616202 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159913051 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.026719073 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.326308493 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890818201 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595604485 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.312870864 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.325427943 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337922683 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.325917896 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.5385984 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017608174 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54765541 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.324797476 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.325199382 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.30724417 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890890757 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346667157 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250573957 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.320171433 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552245971 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.577425367 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343688385 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.768374716 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.0288788 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863951823 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.291763678 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339079158 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31599624 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.016431763 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889722659 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.075133148 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824308863 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.97640816 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317876608 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614396385 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.321396618 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.326621743 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601904446 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.321746043 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.331575964 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.334999715 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.892570374 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08614163 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.332084647 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.274100889 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.255384661 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.544733001 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.957340147 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258691362 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320041194 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.49161372 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.328010089 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448821265 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32967054 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.316474891 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320210383 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.072870435 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602958457 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.325531538 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.303900901 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.218712978 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.329995401 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33298753 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552108939 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324555745 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.993845031 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.669077674 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.576064363 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.319485829 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.307915552 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.323166812 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321868281 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037900565 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288974262 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.83131558 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891769132 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.32932763 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.338227084 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325072353 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.537951358 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531972748 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.329774179 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333655729 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321205668 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343436529 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.228690298 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.087888924 seconds)
  done (took 1570.084361619 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.334891933 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.345878182 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.333453792 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.333179533 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.349138011 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.369381933 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.366329538 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.346529473 seconds)
  done (took 52.019096425 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.325720183 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.476460418 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.351440449 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.326228878 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.332146215 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.320691825 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.776855528 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.355930576 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.330742285 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.331222612 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.336902408 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.324877547 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.964642113 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.33692016 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.330994725 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.3107568 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.329487227 seconds)
  done (took 65.104636217 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.323501076 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.825714604 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.418966967 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.334163817 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.27732661 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.340745939 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.972204244 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.330787033 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.326121597 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.622732087 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.997856832 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.354272696 seconds)
  done (took 84.366267412 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.330445838 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.331536894 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.331189458 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.33099534 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.331412313 seconds)
  done (took 7.896554217 seconds)
done (took 1994.240896049 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.568320463 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.003731664 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.94168914 seconds)
  done (took 5.186845974 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.471930709 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.520688525 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.640476358 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.644860769 seconds)
  done (took 7.52199111 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.610877214 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.70052625 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.525106303 seconds)
  done (took 6.080722925 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.69519816 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.332177052 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.463968154 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.322934904 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.330580629 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.330964886 seconds)
  done (took 20.229030245 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.329511471 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.331672954 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.330314734 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.332152585 seconds)
  done (took 6.569014208 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.307767425 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.015543257 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.308238302 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.328795044 seconds)
  done (took 18.206364312 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.073960121 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.089952035 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.073666729 seconds)
  done (took 7.482873467 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.325259982 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.176601285 seconds)
  done (took 9.745765902 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.618913644 seconds)
  done (took 2.862005775 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.460223664 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.654374309 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.342746017 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.287960902 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.372516718 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.072273401 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.902296041 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.512797457 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.269348801 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.421807138 seconds)
  done (took 27.540613309 seconds)
done (took 124.725311234 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.067886378 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.575054076 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.528896607 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.039635012 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.553009893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.530124572 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.541284156 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.008633467 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.547388822 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.538715536 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.043023851 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.549721189 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.486921193 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.574142062 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.488617893 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.575946498 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.552885172 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.11182995 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.729966015 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.929692924 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.539351264 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.677424794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.873471614 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.699197078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.549536375 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.481334276 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.272444882 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.333589745 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.900374168 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.285828247 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.482204054 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.094741257 seconds)
  done (took 191.409507858 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.328498829 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.325134412 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.330161358 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.327074352 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.345179183 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.327194431 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.331675678 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.352152466 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.329703844 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.328460336 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.337104829 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.327777932 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.349718791 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.345601239 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.344891185 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.328165502 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.329734476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.346298153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.330098895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.330468036 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.33093755 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.360562732 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.328372314 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.348153977 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.329570468 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.347298643 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.332815672 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.329035295 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.348051279 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.348391805 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.347273715 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.330608028 seconds)
  done (took 204.021295911 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.330292994 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.331800693 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.332397075 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.338022652 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.337064392 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.332295869 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.331742238 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.331312471 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.335330944 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.330560851 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.341017092 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.334367947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.330370235 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.331707555 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.331824512 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.330010323 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.331400228 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.346740927 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.330471088 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.331466878 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.349681219 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.329963995 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.352759701 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.331704769 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.332704087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.348951271 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.339551155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.331347964 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.331748408 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.333769285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.33167783 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.341479093 seconds)
  done (took 203.974664583 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.534685185 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.340852662 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.340914691 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.290649692 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.339849923 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.339351514 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.335624423 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.533531758 seconds)
  done (took 14.304495447 seconds)
done (took 614.952528883 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.626948043 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.339596787 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.53898333 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.359687932 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.108325671 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.378375198 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.361436186 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.52834174 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.245048223 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.533148788 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.6139815 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.382369908 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.745693547 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.359688539 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.611206721 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.466359524 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.250631937 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.378542007 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.671286942 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.861348993 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.620411954 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.832345216 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.546559681 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.247037626 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.760907865 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.819021903 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.041458118 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.24602355 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.375634804 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.67807489 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.927456363 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.280394665 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.420542183 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.419005854 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.475864149 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.456447656 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.267021492 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.416652122 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.560569295 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.608709849 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.883171639 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.072233953 seconds)
  done (took 91.569397833 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.324082552 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.325082113 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.323846785 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.327013152 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.327878045 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.326678538 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.325505609 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.321742508 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.325433183 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.325271429 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.32430601 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.328372733 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.32594002 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.327974282 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.327841732 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.326420721 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.326364642 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.326410183 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.325940627 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.325773251 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.326071823 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.326064006 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.325815003 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.326023939 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.326324918 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.327523258 seconds)
  done (took 35.72987506 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.345135322 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.591119457 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.747510339 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.350270471 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.344774577 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.348557978 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.420692214 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.349491688 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.347515552 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.347811114 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.513219288 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.347917951 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.37884757 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.777320412 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.349025561 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.346728889 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.347474558 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.345262672 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.600865464 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.354403633 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.445016835 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.348161575 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.421848888 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.358268593 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.36877607 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.345533596 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.351933224 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.864197585 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.363920431 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.514488772 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.107781345 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.427216976 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.813530907 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.770589444 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.105741364 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.355775581 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.348573448 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.517199436 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.347675351 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.346087431 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.422454802 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.347948669 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.758413168 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.963015594 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.36884962 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.345156732 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.88664664 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.540963818 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.585776025 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.354375949 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.784230129 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.354789408 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.350149106 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.349611197 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.585701586 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.354552828 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.34661449 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.872528688 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.372227044 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.423975441 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.351755499 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.348644579 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.608374864 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.349975651 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.597608252 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.349721372 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.35710722 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.368001556 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.760303682 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.350742366 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.989685742 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.36797566 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.349720202 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.515441536 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.597953612 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.915519465 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.36906047 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.612499204 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.825679865 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.440345238 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.354465905 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.854859322 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.444947307 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.353848783 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.352204059 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.351954797 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.350331857 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.400196579 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.421982372 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.910509629 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.989102294 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.894595809 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.446998394 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.362877024 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.350729603 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.877438543 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.369205344 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.351302525 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.756800732 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.989358901 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.368498822 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.358026918 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.991163334 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.370583579 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.427086179 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.35635985 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.769793897 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.359245833 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.403739102 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.350931261 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.357108117 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.373462916 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.426575941 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.354693074 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.351853815 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.957090525 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.54427813 seconds)
  done (took 177.429242824 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.354831125 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.342993891 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.347092686 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.36253626 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.345023041 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.352970409 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.345835918 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.346191665 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.349621205 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.345585261 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.343737258 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.344881144 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.347300628 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.351734641 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.376537241 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.353686984 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.001783883 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.346588807 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.348969678 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.345848271 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.13501197 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.353838718 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.347823747 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.342694759 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.348103481 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.345535069 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.354096006 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.370342404 seconds)
  done (took 152.514079625 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.353684674 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.898977582 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.372206295 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.48054617 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.371988037 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.351564429 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.480184747 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.410366722 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.373230242 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.350555811 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.352760715 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.64665332 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.355937803 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.852663545 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.538852647 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.507206579 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.851421599 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.373533271 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.352291428 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.352756501 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.483401621 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.357851698 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.64681969 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.902253108 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.372579924 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.902431049 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.340934792 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.356065192 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.354694347 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.903472561 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.369722177 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.649824877 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.429383475 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.413386356 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.920458339 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.873766971 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.873902308 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.502273157 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.354511963 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.35127557 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.353429967 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.340194959 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.909433333 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.382468714 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.356138704 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.896286771 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.377003216 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.356305333 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.366068769 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.353763432 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.412740071 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.432267819 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.669868988 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.91151087 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.447766455 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.377620972 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.483889172 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.741296855 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.357492733 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.85656921 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.343407323 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.911270509 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.377167301 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.341206613 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.356409088 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.361549901 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.503058419 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.485795982 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.856546215 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.375211177 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.8563081 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.520288548 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.355234889 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.356763545 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.358889631 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.913790102 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.890143497 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.530073911 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.490717451 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.545681012 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.350708694 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.356119157 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.342702596 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.430443796 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.35600583 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.916196528 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.882805167 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.375369381 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.358862863 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.358952137 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.359174888 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.527610495 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.940977473 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.459088796 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.849760489 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.674095993 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.661976283 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.361800842 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.416598887 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.374458884 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.65851244 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.366311431 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.414797782 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.810157964 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.661046218 seconds)
  done (took 161.630162804 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.598745104 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.581206348 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.457186782 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.487415964 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.95933251 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.916292251 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.571810162 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.496470892 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.466096761 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.613057608 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.497822855 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.4568802 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.523967476 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.439352515 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.072676264 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.452720656 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.466768728 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.510786898 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.469931883 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.384253708 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.012340515 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.635439251 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.52592226 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.243207993 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.45945386 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.138572638 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.910609143 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.945544726 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.530998034 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.68521747 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.904432654 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.489087181 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.3167319 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.021539886 seconds)
  done (took 65.512636409 seconds)
done (took 685.635425313 seconds)
SAVING RESULT...
DONE!
