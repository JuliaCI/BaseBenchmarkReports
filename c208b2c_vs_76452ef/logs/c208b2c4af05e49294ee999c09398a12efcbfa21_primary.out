cset: moving following pidspec: 28330
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.382740096 seconds)
loading group "string"... done (took 0.501795933 seconds)
loading group "linalg"... done (took 8.435499947 seconds)
loading group "parallel"... done (took 0.171412287 seconds)
loading group "find"... done (took 1.351094356 seconds)
loading group "tuple"... done (took 1.937730186 seconds)
loading group "dates"... done (took 1.322290282 seconds)
loading group "micro"... done (took 0.209224818 seconds)
loading group "io"... done (took 0.57093919 seconds)
loading group "scalar"... done (took 40.795634309 seconds)
loading group "sparse"... done (took 12.886545339 seconds)
loading group "broadcast"... done (took 1.035814827 seconds)
loading group "union"... done (took 14.066117344 seconds)
loading group "simd"... done (took 4.877214843 seconds)
loading group "random"... done (took 9.756562587 seconds)
loading group "problem"... done (took 2.080566186 seconds)
loading group "array"... done (took 23.390325352 seconds)
loading group "misc"... done (took 1.073003242 seconds)
loading group "sort"... done (took 3.522547837 seconds)
loading group "collection"... done (took 20.955166996 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.578505901 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133862907 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.145474694 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.171834062 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20225008 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136753398 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153929846 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.459241615 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.026700872 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202771758 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140720763 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523403921 seconds)
done (took 5.622720609 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.273426064 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084501851 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125579117 seconds)
  done (took 0.9050232 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073579211 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.171314752 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091203314 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.108067657 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107914409 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090331696 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107556312 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108208582 seconds)
  done (took 1.481811858 seconds)
done (took 3.437250116 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.738045634 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.857211351 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.533815014 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.12444265 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154038829 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128370222 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.306876711 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.159492292 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.10360319 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.116255827 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173384001 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.39183147 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.482568588 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.980089232 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.106854041 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.124681581 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.080042447 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.720901811 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079629996 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.132587897 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.494732518 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.108704641 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11539971 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125401578 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204528035 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113654836 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.181012055 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.108297475 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.682719971 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099850323 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182811247 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09580625 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159570574 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.227753659 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.076679956 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.106477976 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671735829 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.189810526 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.109043798 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092274505 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676972205 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.078124025 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.192512351 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10580615 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.107621266 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191968439 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117575104 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075451207 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098425842 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085557095 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.173219872 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.452333173 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10411725 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.140882997 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092917776 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.720917449 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.093293195 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.154579644 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124009208 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108938525 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.098117727 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090249763 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.174683753 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097906189 seconds)
  done (took 19.732721697 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115441655 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139152802 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092112838 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137198787 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139994013 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094362075 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08245737 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091390649 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108159209 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181276145 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134924882 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142781916 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072633298 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.095123639 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114618024 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230618737 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118795655 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117783667 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08081078 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10403861 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120744228 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109982288 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106216673 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092291537 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167910416 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20611541 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.119325752 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121809012 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.078699865 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112712704 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140792459 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161994361 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076217808 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09228271 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175680843 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104865416 seconds)
  done (took 5.092516131 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19421095 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117477395 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1835424 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.173124276 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145602685 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165881191 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116327536 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260785814 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.145682086 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181227905 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126281673 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097575137 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092373198 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078721003 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092249385 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.752973668 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.142323655 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.164658115 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121304047 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101033319 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082890035 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.394909352 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100016966 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.076420972 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100371565 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067375805 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.183204389 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082932929 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.159623824 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.216902906 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.09717596 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107030663 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128533819 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198413445 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125968024 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.115822711 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099919101 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077807925 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.211023819 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087631546 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09480172 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100769498 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130949677 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131061881 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095223561 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.087451036 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.24055793 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080005137 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112676667 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078933715 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.018729972 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196912255 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092312872 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.093410981 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.33346479 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.112755475 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081815462 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095509766 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283221826 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131769656 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.077919952 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074909122 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099848751 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076159739 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.402286395 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084633529 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.980084447 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095081858 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.150639214 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095449278 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083706905 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099971937 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083638284 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114951644 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.076912007 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094319725 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07768802 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074318386 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101081573 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076814434 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113213565 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098562413 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076106992 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159366821 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.115059469 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09622293 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122326561 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080931543 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09390618 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077316432 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127717108 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09443618 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080097459 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135382423 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09935901 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.095562316 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097823105 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140025957 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092737774 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.171034231 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092714493 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120537053 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.081427419 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125867889 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115391922 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075726796 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097979075 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074260989 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09470196 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143605971 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091243119 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076777361 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.096393321 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090048999 seconds)
  done (took 23.162164881 seconds)
done (took 48.681265228 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.424714175 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108449906 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107027088 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107941148 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106297853 seconds)
  done (took 1.626269238 seconds)
done (took 2.37624223 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.318100474 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19386218 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084308466 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188403727 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08434981 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.175417579 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177195369 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096949851 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204106768 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080056579 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164543656 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09740241 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101405358 seconds)
  done (took 2.740206991 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088964539 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113454223 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077919193 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087522243 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089892333 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087141716 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104116527 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107844581 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103796699 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081350978 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089072035 seconds)
  done (took 1.774165859 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09105127 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112070207 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077534924 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086836838 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088961552 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086959947 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104460116 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097275392 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104925927 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082796767 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089383015 seconds)
  done (took 1.767743431 seconds)
done (took 7.020291073 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.108133709 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.63841745 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120130867 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.166199942 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.326921303 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19372391 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.618706907 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13023333 seconds)
  done (took 16.241118794 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.12488729 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092419163 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076609353 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096536531 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078689586 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093255329 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.077399801 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092399754 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077856038 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093605287 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076749789 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093317488 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.077417953 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093779272 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076472324 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075834075 seconds)
  done (took 2.208058218 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111169368 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11087606 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098741795 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085183716 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097143552 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080123567 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099479587 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09709082 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.079297146 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094560779 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.085158803 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099036004 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.083135283 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092646482 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.082149564 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.101553225 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094176124 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082954793 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.098593612 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082777888 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10067603 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.079738721 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.099539314 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.083846289 seconds)
  done (took 3.07554401 seconds)
done (took 22.26971262 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160290453 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080258475 seconds)
  done (took 0.993450272 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096651408 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.1145128 seconds)
  done (took 0.970286416 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102399449 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093178992 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130336109 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093553023 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0935909 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07618512 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12453575 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094566498 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077768739 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093907167 seconds)
  done (took 1.738646105 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081396985 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096626039 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.085345469 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115213687 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088268543 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095913736 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081188855 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096839571 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08273735 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094035815 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101296912 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096803044 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.10047593 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.112967566 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.081651658 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.099808875 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086116059 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097821832 seconds)
  done (took 2.452976509 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076618132 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078625869 seconds)
  done (took 0.91773165 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079930046 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09126084 seconds)
    (3/7) benchmarking "month"...
    done (took 0.078690123 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094752197 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075255833 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092309154 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.075420838 seconds)
  done (took 1.350358253 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.46220181 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.177111217 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.317076007 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110030274 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128780885 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.335487269 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.129304289 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108715174 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108345205 seconds)
  done (took 2.679407449 seconds)
done (took 11.862892879 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088023714 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.128585263 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.471508953 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111636744 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.074580575 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.153517644 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.251867218 seconds)
done (took 2.044868932 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.331652997 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118189526 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084091781 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075327459 seconds)
  done (took 1.369538665 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075469555 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080952839 seconds)
  done (took 0.924318837 seconds)
done (took 3.060958271 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07572607 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073662325 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.105371482 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.090590017 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07421533 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071741946 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090393114 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074380084 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091761589 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071852459 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.07368609 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.090845548 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.074780578 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09082859 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072769859 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088322937 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.193571428 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071632156 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088748172 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071734126 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091374192 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074805544 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071640772 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088438808 seconds)
  done (took 2.878785323 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099374368 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09300238 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080040915 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097893366 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079321449 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.09806563 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080087339 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092443301 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.09701064 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.077608846 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095231078 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.078578501 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094219466 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.078043234 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093841007 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.078147471 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097371436 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075149181 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093520411 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.078909784 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.09735319 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074866305 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095522427 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080157507 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.095690298 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078366569 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.094077982 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.075193406 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097644412 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095249124 seconds)
  done (took 3.410933017 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081064388 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071735479 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089587061 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083288265 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089093781 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076146569 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.088668613 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.073181748 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093395504 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.072389332 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077396903 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090849504 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07232531 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094273459 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07760118 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096338315 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.092658808 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.089663489 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.073042974 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076920306 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09569463 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.072370426 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093316816 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073756537 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089501679 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072893234 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.073331368 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.090426166 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.072833513 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090084551 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078274502 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096128833 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072253768 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101823352 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07956973 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07239091 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097215304 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.071550842 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094366102 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.072031116 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08933625 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072096234 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089498246 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083679882 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.075293141 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091227941 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.072604465 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094340938 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076556863 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096186755 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072505866 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.088229921 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07796278 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.077611682 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094874573 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07186977 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091078762 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072337428 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093795569 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07250914 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071501572 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088108601 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.078333742 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090577357 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095139908 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100452387 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.072472144 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094705165 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.075903825 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097225666 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078371107 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108080754 seconds)
  done (took 6.793699398 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076774147 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101244858 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074574019 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074384507 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088176356 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073007708 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096461874 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073221519 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091617769 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090316856 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090245508 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074187466 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091660778 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077348836 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09086926 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074657846 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100876596 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071136825 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090741275 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07641136 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073452259 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096266884 seconds)
  done (took 2.62070782 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214256917 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100343427 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135829413 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091546576 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10972632 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10938585 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079225399 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099366794 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079893195 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100298744 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099932869 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080331537 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109601313 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099126851 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082952885 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102185855 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079279852 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102026273 seconds)
  done (took 2.653497675 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087622135 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093236865 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09894065 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093903649 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078357406 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09661131 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081678386 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108388017 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077964551 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092987981 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086190316 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095951728 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078541028 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09265198 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078356898 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092769246 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.078717885 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09363221 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08652037 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098677471 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099914842 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086833584 seconds)
  done (took 2.756815802 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091886429 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095184318 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096441355 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097135832 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075252529 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09533577 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083557144 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093391827 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085968999 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095197627 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076323221 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094530776 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084254977 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093875876 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.082060778 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093842405 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078410722 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093988927 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077985469 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093035195 seconds)
  done (took 2.558713382 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115602969 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107171739 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089953826 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11908499 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110878709 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090492706 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118505055 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090237646 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108011284 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120081225 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090325008 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107227866 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101535999 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114906054 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10761301 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101563704 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118911254 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118887654 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090662589 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108372808 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103432666 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108616304 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119243397 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090932614 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108509743 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090095829 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108228271 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097577158 seconds)
  done (took 3.738040538 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075371282 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075376862 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092595925 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073244516 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090734648 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.072906427 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072928449 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090209062 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075324021 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090462554 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.075582883 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092498028 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075267013 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.075084846 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092495403 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.076027965 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093014365 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.07329515 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073194057 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090673514 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.075023954 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093004721 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.075299863 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09043517 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072554733 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.075549472 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090296 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073270206 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092796454 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072737601 seconds)
  done (took 3.222518501 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083696717 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104410502 seconds)
  done (took 0.97485115 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07350578 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10937941 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073787221 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079477788 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099505757 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075918299 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103358269 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099850889 seconds)
  done (took 1.498744263 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099961863 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114101065 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082197441 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105509117 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095519945 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.11326738 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157453491 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08190489 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.102634261 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.077484809 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113633009 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.076555178 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.102564015 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081861993 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103304716 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091311886 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094867978 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086584762 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10178843 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.078917654 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100523333 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092414064 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104744764 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083364685 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.09684164 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088830477 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108367521 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106047347 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082558867 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106419077 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083443412 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088592185 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080847685 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099845804 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077195572 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111835598 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094128589 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099937509 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085745464 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10171308 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086346819 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092942566 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086787062 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.101726502 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089809717 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099373608 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.0828689 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094238488 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.077662001 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.098854938 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.075487353 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097693903 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071825766 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103429571 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085393697 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113362905 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078748724 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099841362 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081529141 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.097485596 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.084588198 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099270444 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087147605 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098250775 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086411174 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.104194613 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085024414 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093319483 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.070419018 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095526347 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.086386373 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119012998 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088791885 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100493137 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083537385 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095040269 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082045141 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101132783 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084029095 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106257978 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08079754 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101592158 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087865336 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098657286 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080907494 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101823838 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.077956147 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097660271 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077259121 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114676543 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079257623 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095618216 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077694963 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105201077 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081137955 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098171062 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.07837812 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103592068 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070289009 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099921548 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082108619 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101289953 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088836498 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100661574 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083215013 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.103955208 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088384719 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100807779 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080286062 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091956917 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083118009 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097475692 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085344941 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089355362 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083019679 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.09941058 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.081888579 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105611354 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078624344 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099632523 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087450702 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106528619 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079408524 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091781343 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.081104248 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09947577 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087305773 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10704576 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.079690467 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093379918 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07536256 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103946286 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08138016 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.101587845 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081856623 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100051106 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.071115355 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095741103 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082170561 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106181508 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080007138 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10177126 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.086383692 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102906866 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.07996808 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105614059 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.080867483 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096017662 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08657326 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099884194 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075576337 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105658502 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.081184156 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097517448 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.082454627 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105402163 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08398461 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100739039 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079273834 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100381625 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082722414 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.095282113 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081950776 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097914965 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.088903239 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.09986567 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075876604 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.073777786 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101877161 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.078138796 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099270763 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.077983265 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.099794805 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082163937 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096613519 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08069264 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.098832147 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094119321 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10838195 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083677074 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10263507 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088751074 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099876721 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083791916 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09954389 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083027956 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100315686 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.086491744 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.102779308 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08271656 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10052448 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.073551259 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101830876 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087165494 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.096636108 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078842551 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.095602809 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.081474609 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10723716 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.080868932 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101000762 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079180172 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10202822 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086653232 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.099252635 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080587257 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.096290578 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.081912659 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103920896 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.083383264 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102598109 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.088472521 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101138816 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.075669489 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106634817 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07960293 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103923704 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076701291 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.07838491 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096546961 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084322486 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098826818 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08084721 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089734306 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088092007 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106370831 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082914025 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.096429184 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082953697 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109752456 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.080481695 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103919087 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081892202 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.103658665 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114316028 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.078454786 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.081850498 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108312798 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.082043254 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089685217 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.085098628 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098480659 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.07627553 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098962045 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079742361 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109902264 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084187858 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101829665 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070871404 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.099650355 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079198177 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.096535297 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077164421 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105170736 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082754609 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.099901618 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091317556 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102279859 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082842017 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10273701 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081521813 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.1026954 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084094718 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101482272 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083013277 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.098557736 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078902859 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.100380934 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077914134 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.078719978 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.100523319 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082420089 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101378958 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083897266 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099138155 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087377251 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.101251446 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083276479 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11848278 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.097933048 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.078877103 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102430449 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08548784 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101054567 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.082208665 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095064961 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088096938 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101224896 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088323682 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100285089 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.074480829 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100464835 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.081546853 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101905486 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084458143 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102762604 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.081316991 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.0818322 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.101122726 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110578541 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.079736682 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.10770621 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084958531 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103371039 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.082422528 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102279086 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.080353029 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.097034745 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082191863 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102756347 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083751685 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099259392 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.085429162 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.101774987 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.081317913 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099154831 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08441256 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102357243 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084230618 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.071792144 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.096849784 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.078696907 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101482687 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086627529 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101936695 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.081425973 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098944295 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084496944 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099820293 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074175681 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104381788 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084974697 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101927119 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09116424 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.097468722 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.082583034 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111295282 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.072001688 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098207832 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.078899095 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097420704 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087988366 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102113963 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.087919658 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101692656 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078831752 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092857834 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083768746 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.07953048 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.091344713 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078849938 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104799262 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080081432 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098717967 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082980233 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104313498 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08402359 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104559812 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081124932 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.100610977 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083215697 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093293367 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079040814 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.097465209 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.082441318 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102127991 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079459265 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.074506634 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099945617 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082377047 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101468615 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08140657 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.100525331 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088084208 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101307812 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082882928 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107490618 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.072946266 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.101340875 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082014091 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100757672 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.078537897 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.102616831 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084251396 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102989103 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.087129088 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100211472 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084465305 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100823886 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.079527577 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100679684 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082382016 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101743535 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.078903699 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102107839 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088348252 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097393792 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.082691749 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102316077 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.079852367 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.102724536 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083266159 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.101585096 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084831552 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08249942 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102072992 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.104148613 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.082330628 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08333685 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102891085 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.080944026 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105343709 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078942112 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107987941 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102597853 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083793675 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.080876964 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.097951602 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081973409 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100124023 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081731544 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.10721127 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083656091 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097723646 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0780371 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098344233 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083467455 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10609425 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089934811 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102617315 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08467412 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095110146 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.075438745 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102728367 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079593096 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100140494 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085486719 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106250685 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.082892865 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.098323742 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081534961 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106556305 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086578289 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103910995 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079614686 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104476492 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08441373 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.101908899 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.081192041 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100922836 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084527913 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104523707 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08121363 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.098031482 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091390908 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.10625265 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085194471 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.100948217 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085495704 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101028407 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.07774197 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103122417 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085581526 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1047681 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.083124746 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101610668 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091839647 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.097098296 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.081730104 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106957177 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081741288 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107374063 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077396064 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102745881 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08477648 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103379791 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077415748 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.098455186 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079287412 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.102145133 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.078634737 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.07650575 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112114053 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.106739926 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085729472 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100450095 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080465325 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095819887 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076628251 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.078700883 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104058733 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.081982119 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109882915 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.078499094 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.097795275 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.076530251 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101039627 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08406731 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.103932702 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.075990178 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095771206 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.079637535 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.10323617 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090186091 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09989161 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082680893 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103697967 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.082357962 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09883211 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088964057 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094159147 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084096495 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113575422 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084007353 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104873594 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.085874037 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108365193 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08342679 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096283612 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084489441 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10224493 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083652544 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104039802 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084592535 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117850902 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083636339 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.098282562 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081104171 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.101671485 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.080226276 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109150898 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08453731 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103168705 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0861257 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.100346507 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085371869 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108521697 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084752282 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.102982982 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083358373 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100257326 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08224277 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099522797 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081699929 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103372496 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084465683 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101021105 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.085418617 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.098648037 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093052803 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109050591 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085331156 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094491695 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079623563 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098091354 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077400989 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103695646 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076875166 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081041738 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09983887 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081698377 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104796147 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085098218 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102601458 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084847252 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101442787 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072596967 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105627375 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.083072029 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105013321 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.075655815 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101593178 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085061081 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.106140008 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088565008 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099998121 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.082770125 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.101395927 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0856742 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.095960819 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.086402621 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100542108 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081906982 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098019555 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083205836 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084496797 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103911492 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084511047 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104748487 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.101841166 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.087717408 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106537435 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077905492 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.07522221 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.105208209 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079366168 seconds)
  done (took 55.626367855 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143580263 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083357994 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073808005 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093996749 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119863883 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078599478 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093053309 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078359464 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09727217 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087648618 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09359233 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074198564 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115823289 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12039218 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118433203 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088314739 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092945607 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078192301 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093096008 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078179089 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113905295 seconds)
  done (took 2.852489901 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.09883652 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11074759 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109511828 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095769835 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104098142 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.111137296 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.089969397 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110753404 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115984771 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085802407 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116347863 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111673711 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086909386 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105971281 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106214712 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089890715 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114375276 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084478522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113207461 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108614927 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088789083 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110466397 seconds)
  done (took 3.102146367 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087489203 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082078697 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106629309 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.073552679 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100831157 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.073229165 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.106642826 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.075658014 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105366725 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.082825437 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.099272527 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.082689845 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107331703 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.073199677 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.080768359 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095407861 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.086725796 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101698067 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08368449 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.095684456 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.121979144 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.076848863 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076980955 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.099835722 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091575955 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104195262 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.083372247 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101777667 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.079948924 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101519314 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.076386863 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105155135 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.085956355 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.099878822 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.08099404 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101881048 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082472861 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.075739451 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098878053 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085664769 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.09737452 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082897518 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10915396 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.078710199 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095929131 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084758534 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101526094 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.074022664 seconds)
  done (took 5.193294498 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.112784947 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.149750613 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.080245134 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140722398 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117249213 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092566753 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102947436 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140176142 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076325936 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.100308801 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11908936 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.095968129 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103160601 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.087266001 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.105987911 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101219114 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084536084 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096571646 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087686615 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100935331 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.087993101 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.104489746 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116032541 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.09315708 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107342577 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080239318 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.097959658 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106774531 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09343761 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107768601 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10778455 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089517515 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117074498 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.080157333 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101204136 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.084559435 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119746728 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101806802 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085346234 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095895749 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.084784939 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107279436 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.084830466 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.119644416 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10345573 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.083605046 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101623766 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075206959 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11292669 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105320639 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092904913 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115503586 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106661557 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.082659964 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107491432 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11658954 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083103602 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100442968 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086282421 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.114899593 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.076909456 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106866262 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115712162 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.084696723 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110711617 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115060016 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.084085009 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106350463 seconds)
  done (took 7.842721375 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110392757 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108054686 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099232889 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120118087 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107334822 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087051183 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106880827 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106876129 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.087201716 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113835216 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087789761 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155397186 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.103984423 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09344613 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.108429245 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108241121 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.087949461 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107207449 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088013151 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107014222 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.087002109 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119662864 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106538848 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11961708 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100689254 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105342509 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087636504 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107949722 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119299098 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087602772 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120906485 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.106745576 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088935809 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119471029 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120162796 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.08736437 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102097285 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087582812 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107517519 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107355687 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085009146 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118623961 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088642057 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104981351 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087060623 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.108022769 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119438973 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.120063507 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094020144 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115673083 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.107699516 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099914653 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107494925 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087283585 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11909413 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12778618 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119342253 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119209039 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087675827 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119426409 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119616349 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127083072 seconds)
  done (took 7.413816082 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07963035 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079511123 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097223072 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.076667119 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098725623 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077202112 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07820306 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.099814071 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078815787 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097976534 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078683319 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096899196 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076888672 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078578642 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097238361 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076887249 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09611579 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077007784 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078677461 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096086164 seconds)
  done (took 2.565004253 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087977253 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119905274 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080645929 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105826536 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.081829534 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106991653 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081532185 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101711909 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07985236 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102313315 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092077437 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112198431 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099177877 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08669657 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111124077 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106245496 seconds)
  done (took 2.40835976 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099268931 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120215732 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124111566 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084761671 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.097952958 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08754033 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102248048 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.075825479 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.074651204 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108894621 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084564703 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10584488 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.081414127 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098341145 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.080216732 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105374167 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075313459 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.103107896 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.082240381 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.123967411 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.084993518 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103308639 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.08241803 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.102007756 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102863619 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.086090987 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105406789 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077694462 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098359652 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083116811 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102184668 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.08786616 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.095891991 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084099206 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.09786959 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077579789 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.081857547 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103652399 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106748868 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08278389 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.078092326 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103700878 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081865825 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101879556 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075316064 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103718184 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075570978 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105801446 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081835289 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103607348 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082254623 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108236946 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086479267 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.111652644 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088679094 seconds)
  done (took 6.001361008 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094961584 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103636118 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085346867 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09766538 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083778345 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108693151 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083719367 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102555235 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08231584 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097640292 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082494253 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104909136 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08254321 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103805975 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082337795 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10513724 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075235473 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.080786843 seconds)
  done (took 2.515173963 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085161845 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079045979 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107528243 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079368306 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101060878 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082089709 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096698982 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077879871 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098845868 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.080096321 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099956668 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082384592 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099508283 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.082329329 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080211397 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10123909 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082249462 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099811398 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079453558 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097070486 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082830852 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098766708 seconds)
  done (took 2.831965541 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.097771019 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.131784072 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.094250671 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.142097029 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.105134452 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.08430257 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.114327888 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.084286874 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.122650324 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.083772065 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.104368589 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.083968669 seconds)
  done (took 2.105748064 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104904377 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137853693 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082066319 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103680894 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092932949 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107474259 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105009017 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085426157 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11861612 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118967485 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085823355 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119657812 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119098046 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096634271 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11500118 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114145178 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085221983 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106403815 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080792031 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127791714 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105962103 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119344213 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085400915 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105765584 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085112538 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117617137 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118806144 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119018545 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086276996 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119267034 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114157587 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085940327 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118858812 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119390483 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083173323 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118715848 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085421249 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129276085 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114271041 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116701855 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083165287 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11440746 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119530785 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092803685 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120056017 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105504761 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092274465 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108460636 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087387828 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136342657 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114612265 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117194562 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093144291 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120336388 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120017929 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13386671 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119262671 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116947009 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094453188 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119999284 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118260337 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09427992 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117447889 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119161866 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115161816 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09719765 seconds)
  done (took 7.990181681 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119949617 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102797033 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085268337 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121535977 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118130339 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105662083 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086458366 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106256358 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085714781 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10244839 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153053484 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085612334 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118299097 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117850517 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085616327 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106472485 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085268479 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117379057 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103384477 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134012806 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085924927 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118338286 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117772896 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116531607 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098872399 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116257842 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10555478 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08556808 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105944653 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086266779 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114114971 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085506787 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1180635 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102250548 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096533704 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106652698 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105564729 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093631687 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105991717 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094316688 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118445345 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129680739 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106461249 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085575422 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119009585 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105799567 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085571967 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103218813 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085563064 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1035356 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120724156 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099182528 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119492214 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117761447 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084950428 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107241398 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106708813 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086219588 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106290763 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093428582 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117688514 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106901825 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135320873 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086184313 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106395033 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117661314 seconds)
  done (took 7.824381876 seconds)
done (took 150.147244466 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099224546 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137193236 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094800213 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164458952 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081043665 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136433365 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114107664 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.116765522 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.081473475 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101986324 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.081433534 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.103991371 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.147176725 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080720674 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101900653 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.084233035 seconds)
  done (took 2.589500304 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.177655755 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.284247361 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100922162 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109355883 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087138879 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.105387434 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086850607 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.108980645 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082233642 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.1141104 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.083686998 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.104057629 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.092088654 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.105291208 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081380068 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.104636954 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11330843 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.083677704 seconds)
  done (took 2.896620957 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111937216 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156380173 seconds)
  done (took 1.143063132 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117154945 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18134248 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.531452351 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155496141 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.109784301 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.124661645 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157193163 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100978621 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.218941764 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125617266 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104117671 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.1080613 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.133895706 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093629554 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11076484 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.087298529 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.13525716 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.0877003 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.110463392 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088189093 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133710186 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108367417 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093054417 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.10936446 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18222259 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124516937 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088154164 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109427368 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.088643599 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109518291 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092925104 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.122949274 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123901332 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.164477539 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.114377059 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.160779117 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.116220827 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086167527 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109229056 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086674995 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.113227075 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.112605966 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10168466 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.107828062 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088137404 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.116009906 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087664566 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.109603668 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115235629 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096203784 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115695068 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113464264 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.160407535 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117430656 seconds)
  done (took 7.631071898 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.785461826 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148775861 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085853818 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.889409048 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138657956 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100130811 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.787169785 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12987283 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235597979 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.783064091 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125023023 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122856579 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20613607 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.269857823 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.125565772 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.331684543 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.691848351 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099913075 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137408277 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.14915967 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093294602 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137682468 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127414967 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.451335466 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.08770704 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10861946 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092395151 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121205172 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158742559 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108605972 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090494352 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.202084536 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.262657495 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182268331 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110068491 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085118157 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107735539 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.1719622 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266604877 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194264377 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173398419 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104693228 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085334465 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121390969 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129954966 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083033518 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161525923 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.19464448 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173612665 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090123788 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121899076 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118803194 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.09852666 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.181602151 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084499067 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.335707765 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.342034855 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085424745 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117163174 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105279981 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265313406 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107954136 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204559083 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136461123 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211814529 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085900701 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805249248 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.165213679 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108326876 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096340328 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11624111 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092429453 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121623028 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168274362 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390097456 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123926268 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091135102 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107428898 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206050391 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085252479 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108180696 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162318949 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110924482 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095783719 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124875499 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122737664 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171322637 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248043136 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122604564 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094933108 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115063383 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121166846 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.087890594 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210719385 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217907714 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.156541479 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233980746 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099603966 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162337347 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186894007 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098644061 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19181676 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.094578509 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127639438 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121225507 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.193134715 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.140027795 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108621675 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092138554 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115545648 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.143256422 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089899635 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116435476 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168815005 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481270929 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186628141 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08296809 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089582949 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117732369 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160808807 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115950672 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238188598 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118732078 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164471941 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117579783 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083606603 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120622961 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163695199 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124539198 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117185015 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099445027 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118048957 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.24809124 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221301983 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102911153 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242326859 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178222369 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096100105 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195218192 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095799801 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189802075 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097652435 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120705094 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.088250555 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792925528 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121872971 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093705702 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114839 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191782992 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086093879 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110323333 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086507468 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104589235 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774894233 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110664869 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083944468 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086458523 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120362395 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117172959 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093096393 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114569029 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161392438 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233995246 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121592697 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094097983 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107778325 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159004195 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.088313956 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108422024 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086518398 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108315843 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.096038501 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11382566 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088681373 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192046304 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.158254403 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220130168 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.558290675 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107938558 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08703592 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229897518 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085970072 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305168759 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116941445 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203368913 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18822048 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084082475 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.337406768 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167315828 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.194271433 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088141847 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191838176 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083785791 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11537653 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.161373779 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.08540255 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117477142 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157124251 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126446742 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123457299 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.117690982 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109027401 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227340729 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082295518 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.19205426 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088459134 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120999725 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305971198 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086942699 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128777265 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160565481 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113231338 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08665292 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.734697975 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108711247 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118274398 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097187289 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222396214 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163396685 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116948154 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094319343 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123194187 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.160795349 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231174085 seconds)
  done (took 43.567734559 seconds)
done (took 58.694262994 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.303907364 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.259200662 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.28921706 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189916263 seconds)
  done (took 2.014791978 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175674491 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147528902 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120653226 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.105074161 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149644692 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.082633733 seconds)
  done (took 1.678250684 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.430477327 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.380506145 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.305180833 seconds)
  done (took 2.018299216 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.246380544 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.271413587 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.318993 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.423732435 seconds)
  done (took 2.26361333 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200723636 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122422533 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.094962046 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.138279163 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.166030106 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.169084417 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139329747 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.146761446 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104059832 seconds)
  done (took 2.231035054 seconds)
done (took 11.109458692 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.171851732 seconds)
    (2/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.102220163 seconds)
    (3/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.283315564 seconds)
    (4/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.100281401 seconds)
    (5/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.238613945 seconds)
    (6/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.122824373 seconds)
    (7/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.259274595 seconds)
    (8/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.127662062 seconds)
    (9/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.154062805 seconds)
    (10/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.266846021 seconds)
    (11/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.123218356 seconds)
    (12/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095075442 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.223682612 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08800667 seconds)
    (15/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.155538376 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121127295 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.130781384 seconds)
    (18/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.191295587 seconds)
    (19/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.212271667 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.114045226 seconds)
    (21/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.165401652 seconds)
    (22/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.205770502 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.153804143 seconds)
    (24/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.167642657 seconds)
    (25/286) benchmarking ("sort", Float32, true)...
    done (took 0.226624915 seconds)
    (26/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.194893887 seconds)
    (27/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.154959438 seconds)
    (28/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.098083464 seconds)
    (29/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.212863065 seconds)
    (30/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.114379341 seconds)
    (31/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09448684 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124221939 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.217432083 seconds)
    (34/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091524369 seconds)
    (35/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111756189 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.0946721 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12408167 seconds)
    (38/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.096371074 seconds)
    (39/286) benchmarking ("sort", Int8, true)...
    done (took 0.213984099 seconds)
    (40/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.199319637 seconds)
    (41/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.194546934 seconds)
    (42/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133680691 seconds)
    (43/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089032175 seconds)
    (44/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.203121894 seconds)
    (45/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113803708 seconds)
    (46/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.160309681 seconds)
    (47/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115181985 seconds)
    (48/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.200768254 seconds)
    (49/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096060935 seconds)
    (50/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.190320739 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114206411 seconds)
    (52/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097456246 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136545358 seconds)
    (54/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.160830938 seconds)
    (55/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.220249277 seconds)
    (56/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.097313647 seconds)
    (57/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.1742702 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08582336 seconds)
    (59/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11423907 seconds)
    (60/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.191932282 seconds)
    (61/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111036728 seconds)
    (62/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.095027591 seconds)
    (63/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.182506465 seconds)
    (64/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075199542 seconds)
    (65/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.109041374 seconds)
    (66/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.172061913 seconds)
    (67/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.191131806 seconds)
    (68/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111784025 seconds)
    (69/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075116273 seconds)
    (70/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.095683658 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.099054109 seconds)
    (72/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.12849959 seconds)
    (73/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098254724 seconds)
    (74/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.170403819 seconds)
    (75/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.133963013 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.115287599 seconds)
    (77/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.112088678 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.197018293 seconds)
    (79/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.071706806 seconds)
    (80/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135403781 seconds)
    (81/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.091722296 seconds)
    (82/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121847159 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.084401144 seconds)
    (84/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.178725448 seconds)
    (85/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121327345 seconds)
    (86/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.106995884 seconds)
    (87/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.120846309 seconds)
    (88/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089530042 seconds)
    (89/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.120761487 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.119976073 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.148240094 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.114100727 seconds)
    (93/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.203742066 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091534186 seconds)
    (95/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110238146 seconds)
    (96/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.08426135 seconds)
    (97/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.176243947 seconds)
    (98/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.075754264 seconds)
    (99/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.179524193 seconds)
    (100/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.132909595 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.115649489 seconds)
    (102/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.114717215 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.125150654 seconds)
    (104/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.124453502 seconds)
    (105/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121965329 seconds)
    (106/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089484687 seconds)
    (107/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112923756 seconds)
    (108/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093863591 seconds)
    (109/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116851268 seconds)
    (110/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.10702967 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.113842507 seconds)
    (112/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.130888343 seconds)
    (113/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.095566466 seconds)
    (114/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088364423 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119453471 seconds)
    (116/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.155091698 seconds)
    (117/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.167090382 seconds)
    (118/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.176294277 seconds)
    (119/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.096306258 seconds)
    (120/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.079039524 seconds)
    (121/286) benchmarking ("sort", Float32, false)...
    done (took 0.1712871 seconds)
    (122/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.10967547 seconds)
    (123/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.116450563 seconds)
    (124/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.098892255 seconds)
    (125/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.11085505 seconds)
    (126/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.091424349 seconds)
    (127/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107241614 seconds)
    (128/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098967335 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.113538976 seconds)
    (130/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.085375314 seconds)
    (131/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.09552041 seconds)
    (132/286) benchmarking ("sort", Bool, false)...
    done (took 0.179763233 seconds)
    (133/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095515862 seconds)
    (134/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.115847964 seconds)
    (135/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.180831789 seconds)
    (136/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09635088 seconds)
    (137/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108715685 seconds)
    (138/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.153592397 seconds)
    (139/286) benchmarking ("sort", Float64, true)...
    done (took 0.225235162 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.114021124 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089326166 seconds)
    (142/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119640981 seconds)
    (143/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072700007 seconds)
    (144/286) benchmarking ("sort", BigInt, false)...
    done (took 0.250676453 seconds)
    (145/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.089559162 seconds)
    (146/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119329639 seconds)
    (147/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.114222343 seconds)
    (148/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112531685 seconds)
    (149/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.082967759 seconds)
    (150/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118597991 seconds)
    (151/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.190043518 seconds)
    (152/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.167835734 seconds)
    (153/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.190535455 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.107582642 seconds)
    (155/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084288336 seconds)
    (156/286) benchmarking ("sort", BigInt, true)...
    done (took 0.244905172 seconds)
    (157/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116095788 seconds)
    (158/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.100456693 seconds)
    (159/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.168024478 seconds)
    (160/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.084631894 seconds)
    (161/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.098033213 seconds)
    (162/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.091644568 seconds)
    (163/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.117157418 seconds)
    (164/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.098022646 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.115477491 seconds)
    (166/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118483039 seconds)
    (167/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.107293588 seconds)
    (168/286) benchmarking ("sort", Float64, false)...
    done (took 0.170237936 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09158697 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.196249936 seconds)
    (171/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.169691411 seconds)
    (172/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.115465493 seconds)
    (173/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.075048916 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.114180576 seconds)
    (175/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075101245 seconds)
    (176/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.079239883 seconds)
    (177/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.099321572 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092429943 seconds)
    (179/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.110699864 seconds)
    (180/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.088196353 seconds)
    (181/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.109579088 seconds)
    (182/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.182568428 seconds)
    (183/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.097849946 seconds)
    (184/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114255933 seconds)
    (185/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09186844 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.113878634 seconds)
    (187/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.073152486 seconds)
    (188/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.146632554 seconds)
    (189/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097336204 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.099350859 seconds)
    (191/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.129508793 seconds)
    (192/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.112604038 seconds)
    (193/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.088242875 seconds)
    (194/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.099344003 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 0.217116682 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087802343 seconds)
    (197/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.133540987 seconds)
    (198/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.071983305 seconds)
    (199/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.099633801 seconds)
    (200/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.072589671 seconds)
    (201/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121303308 seconds)
    (202/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.086119154 seconds)
    (203/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.187336629 seconds)
    (204/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.079047695 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123511704 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096732656 seconds)
    (207/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.118854784 seconds)
    (208/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.072178429 seconds)
    (209/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.096700806 seconds)
    (210/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.074747088 seconds)
    (211/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.072948255 seconds)
    (212/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11434282 seconds)
    (213/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.073797798 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.109142188 seconds)
    (215/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.123924291 seconds)
    (216/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.111593295 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086407349 seconds)
    (218/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.097587342 seconds)
    (219/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085322328 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.114202507 seconds)
    (221/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091323802 seconds)
    (222/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.096234612 seconds)
    (223/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.080817707 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.113983607 seconds)
    (225/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.136177477 seconds)
    (226/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.114433069 seconds)
    (227/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09144788 seconds)
    (228/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.143550669 seconds)
    (229/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.195114134 seconds)
    (230/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.178670179 seconds)
    (231/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090013337 seconds)
    (232/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.113034366 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091370039 seconds)
    (234/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.098239346 seconds)
    (235/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076920008 seconds)
    (236/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.126498874 seconds)
    (237/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.073230954 seconds)
    (238/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.244220138 seconds)
    (239/286) benchmarking ("sort", Int8, false)...
    done (took 0.19064415 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10888963 seconds)
    (241/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078936555 seconds)
    (242/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.101378775 seconds)
    (243/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.158623264 seconds)
    (244/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112907481 seconds)
    (245/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.073420189 seconds)
    (246/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.172126064 seconds)
    (247/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.203305638 seconds)
    (248/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111993892 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091689897 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121607876 seconds)
    (251/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090095266 seconds)
    (252/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.072983569 seconds)
    (253/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.09992119 seconds)
    (254/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089591758 seconds)
    (255/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.113638637 seconds)
    (256/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.0733735 seconds)
    (257/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108133203 seconds)
    (258/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.073134716 seconds)
    (259/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.100265302 seconds)
    (260/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.110513089 seconds)
    (261/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114560605 seconds)
    (262/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087487686 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117432172 seconds)
    (264/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.076381841 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108697786 seconds)
    (266/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.076148025 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109499106 seconds)
    (268/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.072730138 seconds)
    (269/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.102987216 seconds)
    (270/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.12396646 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123025164 seconds)
    (272/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092186453 seconds)
    (273/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.104432383 seconds)
    (274/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.084284278 seconds)
    (275/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.097850122 seconds)
    (276/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.138968196 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.111735692 seconds)
    (278/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.076965931 seconds)
    (279/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.103568142 seconds)
    (280/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.073325064 seconds)
    (281/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.079958295 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.110940499 seconds)
    (283/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.072866859 seconds)
    (284/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.095886452 seconds)
    (285/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089474951 seconds)
    (286/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.098004299 seconds)
  done (took 36.562472548 seconds)
done (took 37.474349751 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098719404 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149781664 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094756523 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.139462656 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.098972546 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.124106796 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117716513 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098824 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122544386 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.099546758 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.121943418 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.079279107 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.11929758 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.095685149 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.12065645 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115018876 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122350679 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.091574787 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.112329772 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086991191 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.111606369 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088070689 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112829293 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.079918409 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.118921664 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093309586 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114793783 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.095655267 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.112905118 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.085312534 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.109830319 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.091210866 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.110018614 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.097750765 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.114087669 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.087316114 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119846797 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.094211788 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113787864 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08820338 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117493741 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088323932 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115227828 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.092473526 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.112422199 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.087383318 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.112024465 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099235935 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139041774 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088237145 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.117482872 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.094407335 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.120411188 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.092194749 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.110605558 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.087400388 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.113169138 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115554368 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.111561708 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089139717 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116515273 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091909732 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.110732686 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.087390179 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112515774 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.094905512 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119631781 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.086962825 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118792812 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.090045728 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.108195734 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.088241936 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.110311728 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.085184656 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.11789418 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.095092177 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08275148 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.112881436 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091597365 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.113902276 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.087290574 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110001628 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.089521969 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112725738 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086456042 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.104106704 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.085880957 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114569437 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.087494994 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.11238456 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.090930954 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.115208495 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089822252 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.119620332 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.08710335 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.113580646 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088216201 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.113013815 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.08930076 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110730678 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.083551402 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111134784 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.092199423 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.085229766 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.113765001 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122335265 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085901924 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.090365295 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.111491506 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.086788272 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.125457661 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118982026 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088409169 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08943508 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.10824322 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.090497958 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109539914 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.085239264 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.109713307 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088537505 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.113692297 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.088441157 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110741972 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.090958176 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122188978 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.083655217 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.110791019 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104868991 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.11218484 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.090391506 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113456776 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086276355 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112632842 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082208702 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110771792 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.085565761 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.114958076 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085990294 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.087180116 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112417333 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.088321572 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.113390525 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.088240444 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113090288 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085126025 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.104755472 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091651824 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110909789 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089307883 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.114025843 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088565805 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.108192004 seconds)
done (took 16.562403138 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095244953 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185778124 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145884437 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.149741472 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.120542484 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.130033439 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124592092 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.144581588 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.09614305 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142343433 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.144802436 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109610454 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150244968 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121220455 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.105436171 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.119149266 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.118898961 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104769073 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153691769 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.139101336 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12117589 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120553278 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.141336893 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139120523 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09450046 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.149704154 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.098511088 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118395702 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.12182177 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103710506 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135726615 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.098180655 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.120825253 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131308772 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101473262 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118864431 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.105168005 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114942068 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.095282325 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.120255765 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133045537 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106773151 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117102967 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.126768071 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094598991 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122947226 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.094094584 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118599692 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096221485 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114538749 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099796628 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.141122291 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118018112 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.096792312 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120835799 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11980235 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.096538465 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.12322012 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.097634722 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122663532 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094894209 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.122385316 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124870795 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.111709057 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.119613601 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12080391 seconds)
  done (took 8.862959165 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10914594 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146775158 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.125498977 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.101718232 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.122732434 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083655904 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.109106785 seconds)
  done (took 1.765896093 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085755355 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.140136361 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118305641 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143096074 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13531398 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.120774363 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128915988 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085343989 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135279443 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.122326334 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111918172 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165159624 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.086174737 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122802606 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.14473314 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.085230376 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.14518552 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.086076294 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118378535 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.143301188 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090680437 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133136144 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.099431011 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114181563 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107311723 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113088234 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.176332783 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096991943 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110140195 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09069799 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115813777 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.179912026 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10839124 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.121727685 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082845449 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139061292 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130990666 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090072403 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.134790782 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.090730907 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.132488291 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.092456855 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118270216 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090646754 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118011681 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100843965 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121770163 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119209751 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090983002 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.139112492 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.097253791 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.132891013 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087696515 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114748978 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096145163 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117150305 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.100378757 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115929646 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138931409 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092512575 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137725785 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112394436 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.131919517 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138051753 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103029112 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.133473193 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.107313582 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11641177 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093404946 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118772457 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137815567 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088829141 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.122037912 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101660473 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119939998 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112722549 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138566059 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090231373 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124117591 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.08979792 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113702745 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085601253 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.13885464 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088897437 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113272661 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129252372 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097499325 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117830739 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089563352 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.133975078 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090231555 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122661694 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121908075 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089975055 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126574326 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.114112387 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.12260391 seconds)
  done (took 12.152364133 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088849727 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.088182442 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.118105659 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088718708 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112875382 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088416944 seconds)
  done (took 1.564950353 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11776217 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11534808 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102722477 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119474652 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154525738 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.110936845 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.136142863 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096626249 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.131460022 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127154568 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110504299 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.138085664 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.116301844 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119009196 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.136056097 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.093701734 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.136603066 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.090516606 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126975871 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090478031 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.130829834 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.094003007 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116393648 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109304887 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119724574 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119987754 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093727739 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127916386 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.10060494 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123101771 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.093890262 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120172437 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095176417 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12152919 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.137443461 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09460997 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115284199 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.096603561 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12116925 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.094875398 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.139054442 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090577812 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125409097 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097561159 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.121746241 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12103012 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097000065 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.119316585 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111070566 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122301248 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096722214 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120101115 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094625714 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122388258 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.094408889 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121335531 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122388389 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.111352871 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.119346608 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.094188606 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117018182 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09518002 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123321062 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095242938 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121324238 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.097128539 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120349381 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090608969 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116906836 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09334304 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122400356 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091494266 seconds)
  done (took 9.108577107 seconds)
done (took 34.416248792 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.669154379 seconds)
  done (took 1.646881715 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.831303152 seconds)
  done (took 1.810479657 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.77319444 seconds)
  done (took 18.7790907 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.466617682 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.557900088 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.986149276 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16164922 seconds)
  done (took 3.149854913 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.963558282 seconds)
  done (took 1.960049665 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296679916 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238029261 seconds)
  done (took 1.5206255 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.81186902 seconds)
  done (took 1.807134119 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.497090742 seconds)
  done (took 2.486631816 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.340617824 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.197365412 seconds)
  done (took 1.537716075 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.566965098 seconds)
  done (took 1.560026226 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.738295795 seconds)
  done (took 15.737467276 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239948883 seconds)
  done (took 1.248780241 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291362252 seconds)
  done (took 1.288128621 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.634159705 seconds)
  done (took 4.632761727 seconds)
done (took 60.156955772 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096633861 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.100402321 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.126019832 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.098037226 seconds)
  done (took 1.414572882 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10234152 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119974279 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09784102 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120459241 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10206854 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.121648515 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.09377588 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.165040581 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119719786 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096131655 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121423924 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094059989 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122014316 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.094525476 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118903941 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.095900318 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123673717 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.094502216 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122679789 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095563683 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11802013 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.095381015 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123443153 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093367843 seconds)
  done (took 3.659442481 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09697691 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.092200374 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.119138683 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.090873566 seconds)
  done (took 1.407003396 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100359752 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133347508 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106574124 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126396386 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.107313211 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.131968184 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115343831 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.08916909 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.091977723 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126677702 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090832575 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.135387433 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133820959 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.085116826 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129038432 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087629591 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.113011567 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.107158157 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125828501 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103269654 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.116153895 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099338266 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123494443 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.104690952 seconds)
  done (took 3.691664176 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171918948 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129209904 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139679117 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09618451 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165192887 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141661681 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088338058 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141893067 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.090191116 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.127715651 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093152958 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167681579 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.125268026 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.091526613 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116633318 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.096088992 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12506647 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.099208362 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.117484272 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.1277607 seconds)
  done (took 3.46137256 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096843844 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116553575 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086330101 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088724684 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122895404 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092689379 seconds)
  done (took 1.609858467 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.086375804 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.086030551 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.11167374 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084863966 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116296424 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085790244 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.084093658 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110922521 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085002756 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.111444676 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.084942123 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110740565 seconds)
  done (took 2.171066044 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.377637235 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114527482 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.114010905 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089724542 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.093546081 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114607011 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.127620112 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.088557815 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.145326958 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089012747 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114571281 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091469883 seconds)
  done (took 2.567586263 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204230424 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094655967 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258135918 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.350580021 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153095707 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163640305 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278843509 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160564151 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180797313 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136440301 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191533549 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155250485 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151758655 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175966787 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110455272 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.174851756 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173241362 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199343692 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145834282 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201407198 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160501478 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165465245 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177387756 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149273508 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133752348 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155507971 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.091416046 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126133646 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170319365 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168027286 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171365524 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146657559 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110494312 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225855414 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209641109 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175463946 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.304036558 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129963225 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.189895438 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.180803524 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247927391 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111698864 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217678209 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125646001 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128324395 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180896718 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154908367 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.179563317 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129734293 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112270553 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180711545 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171512412 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203688786 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106849813 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.324126581 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119282456 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143460719 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180939575 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183967326 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186414417 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165352459 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119694545 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184572623 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17716053 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177377738 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143352139 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.165329548 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095509568 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171855885 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21869944 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175473743 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162778443 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18314728 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131647549 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163903032 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167339615 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150254301 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147890985 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158238254 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120510646 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147893858 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108151342 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127021247 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.156532538 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121258953 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200765995 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133432529 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.187325848 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20204456 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156320379 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159464716 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162595706 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164260938 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116730983 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.118399034 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144947867 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158965664 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12732594 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130157097 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155478892 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141749448 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.098579687 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150461031 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.094432202 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157695733 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133308826 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164407259 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16238001 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.09876057 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162545658 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147399138 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.156908432 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168921748 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183774538 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132681919 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102873461 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191710272 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156541228 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.134637031 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171770036 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183585594 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.164207149 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107836322 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166284857 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217805565 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112194715 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185819861 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138831694 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131778857 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.120463 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156820661 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15482229 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.156023027 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127671303 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122293119 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216086647 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09725594 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135118602 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172682297 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097323069 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127701051 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140226239 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106119548 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14110644 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146088067 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.109584998 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154427202 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159358687 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152771401 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156317481 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112281031 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217322565 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10283997 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.160066696 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145958034 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.089278793 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.175736606 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209837199 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09947736 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194679088 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.165880428 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223219868 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164465074 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101325768 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175453502 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126422179 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.090083149 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163342112 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159852428 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159299154 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.180916772 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217630638 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.165372664 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122600675 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147698239 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164151733 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.173345734 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15387225 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.143723044 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159398018 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164560484 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.093804542 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122572828 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.097966549 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140916523 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128554542 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102944069 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177434819 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161136586 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211981897 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131205238 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139854005 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179044449 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12499237 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162100313 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17080196 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109071666 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180267595 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178253764 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163995565 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14020356 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172393516 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118357965 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093911246 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131831245 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163983401 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102772299 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132746456 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14136043 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1789804 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170671795 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118827124 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228524949 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163595672 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188476624 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120979462 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.134381115 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167441036 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157542729 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182355185 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105188012 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.157882585 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175443342 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139605505 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186525349 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160365157 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167638229 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195701269 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.155738542 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128662274 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1185871 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162614713 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138866514 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164283713 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144084645 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106293 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151343751 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132276702 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095419618 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176438459 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141775174 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176340966 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155806693 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169017181 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125530441 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139882198 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13093021 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144104109 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115457416 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167835341 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183544614 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142932792 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155334049 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17095087 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099673751 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307647963 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183340373 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181237452 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13456068 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141154393 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159742903 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128671453 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159915611 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176301832 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1427195 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177718797 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157863976 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141408883 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105634545 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145674285 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149624031 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.119148616 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.131835243 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151948268 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140515384 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181810989 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141402661 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128473578 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161866674 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146408825 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14733271 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112358265 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197204738 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156165552 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174378741 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.155236492 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165749644 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195924536 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123884227 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09785647 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.125422883 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177717344 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102624719 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159375776 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.184585091 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223249536 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15802518 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164573876 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106470006 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118830444 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157770649 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118489676 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223706684 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138485999 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105804411 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186775701 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.149615734 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128155113 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132099309 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310801494 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11429709 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169916743 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.11495916 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276429171 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095435982 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128215322 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15685848 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16783664 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107590497 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179798612 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163057875 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142166944 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15716125 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107534741 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213476239 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20413494 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169041778 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172668164 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.13977409 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126107807 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160191357 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17268227 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141890653 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142455922 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159718359 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179287339 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.185075431 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.102236482 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161416345 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161630375 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15844557 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170204649 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132022437 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196440467 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100150494 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162932201 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138116109 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121408685 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155458525 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.184181561 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103795769 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169603983 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156720898 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130810346 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095542895 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147831038 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157035111 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140193062 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098201584 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203072239 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094989844 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160874448 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177810865 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100259662 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153470904 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144224594 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135536133 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111637928 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143373202 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132439641 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140785145 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177193859 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129962183 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173633024 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174208782 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162151998 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158150066 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112205854 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66470987 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126078542 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179202134 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115202577 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209948844 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116925446 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164122838 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16059725 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147203712 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165863901 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146748341 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.190293983 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164551877 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156406094 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128707298 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143005049 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111718661 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129478965 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14979338 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161739323 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109470518 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135866241 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15584368 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113989266 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.141071678 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136327323 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181885013 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114664103 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207617766 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177590478 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106614173 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164097379 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171398904 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12929196 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157890561 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169354 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108998562 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148355062 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.130531601 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131937411 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149128138 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123130994 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159002705 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158969483 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130390187 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161206718 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132585018 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1586799 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140919726 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158272644 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099738573 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152062634 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156451498 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102559186 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12731104 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152739151 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157390564 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127333658 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124296125 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.144444011 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173188664 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124478114 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130911637 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284574374 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15568471 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189408562 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.119919793 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132578407 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141570511 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15301412 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.122869414 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157269239 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127664414 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102398745 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129003903 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.180359213 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.151845761 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15298578 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154996167 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158724693 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22667846 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.104803954 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.264020213 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136119963 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124111104 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.128859239 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127511231 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112205076 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133741272 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139887295 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189418744 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178275634 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149079256 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.112837026 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124850371 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097168049 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132424224 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157282023 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122846127 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156765311 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141802257 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.116227784 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112704728 seconds)
  done (took 75.00504016 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.15511777 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130982973 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14669816 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.1933828 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164392788 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23989082 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.203717727 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22458586 seconds)
  done (took 2.557713524 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.098332121 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155559242 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137419591 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.122953679 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.089832112 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.328202489 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.135307457 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121805045 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.116401505 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.159469348 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.08980135 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.530067212 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120556774 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.121980867 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.085010812 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.113104636 seconds)
  done (took 3.612140018 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.287853741 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53675421 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.095502086 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.243478236 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.223768377 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.150218311 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.746778052 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.156784124 seconds)
  done (took 12.53760523 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119977377 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.138221746 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.132473806 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.161024738 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.117173809 seconds)
  done (took 1.772914414 seconds)
done (took 116.463383281 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093414133 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124007714 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.094289112 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.125175549 seconds)
  done (took 1.524345151 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.108158273 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078573358 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109771319 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077576908 seconds)
  done (took 1.468749277 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.420895608 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.107729906 seconds)
  done (took 1.662349817 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113519449 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132107159 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105112763 seconds)
  done (took 1.452996267 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.101331039 seconds)
  done (took 1.206100244 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096175488 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.098167699 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.139575817 seconds)
  done (took 1.438079659 seconds)
done (took 9.856027215 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110996278 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.435913859 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384602091 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135875433 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.690893851 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.406674148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.110174204 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.127191912 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164592031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11787706 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105817819 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.696669445 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.066438007 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.369649666 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.052036611 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.365561516 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.671422271 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120029946 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094708061 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120074766 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.060454238 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116654748 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090401665 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119094182 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668211829 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421098442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089691598 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.378333532 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088329105 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123476253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.375703034 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116399601 seconds)
  done (took 17.088736041 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094236793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177254251 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097051505 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119800441 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092645431 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119318128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099165359 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.131798676 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179744522 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088005308 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136090831 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.088332462 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123470076 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089779236 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1381206 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.089050166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120220841 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09208458 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12484869 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.091643745 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136897642 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088503301 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119278585 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091538664 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116758464 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101770634 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089174462 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130059994 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117408361 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095480746 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091191499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117792854 seconds)
  done (took 4.69118879 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13943523 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186906902 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126695743 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123752535 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168187816 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090930178 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200688322 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.157234803 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183217478 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118578351 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10674226 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117589662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124051912 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118644893 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109703836 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117788993 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.091636841 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120115343 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095295257 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119982563 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109533833 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117260812 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.091238277 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120063109 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089946035 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13181786 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090125645 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130665512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088693821 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124151246 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.093249518 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117606284 seconds)
  done (took 5.032526554 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096145611 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12599573 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.105779404 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.134870838 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.091480819 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124607117 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097439171 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120248869 seconds)
  done (took 2.005413861 seconds)
done (took 29.92366654 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106527794 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.094786844 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132147264 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101249765 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127193874 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102705475 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116282253 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100023182 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.130804968 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.097239135 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133727679 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.088079234 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.08948768 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116153006 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102369666 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122588359 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.103820197 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.127421926 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.108930441 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.134227375 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.090142283 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.129896355 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098540483 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138741044 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108274653 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.137846478 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133866767 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094676282 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.089185533 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119297489 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.102944238 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.140225478 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.091424289 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.1351056 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093191687 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122271111 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.089921911 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.120421739 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.103706132 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.129758026 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.094503594 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128495384 seconds)
  done (took 5.829903294 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.115341806 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.162234244 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.089679473 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.119414346 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.08997135 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.15677985 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.153154194 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.089754142 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089200751 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.14390808 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.144405148 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.089683998 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.119192608 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.089585133 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.088939218 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.120273158 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.113171613 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.143447925 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.148966767 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.120887273 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.165059111 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.149790349 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.124113083 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.142687322 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.159867648 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.125004769 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.139828892 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.154382331 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.116361866 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.117636631 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.119802764 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.151254502 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.088948553 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.118745443 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.130704315 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.154723626 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.14571291 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.159197368 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.120636679 seconds)
  done (took 6.089708403 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.097217435 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103256917 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.141034736 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184029399 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164261151 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.102094445 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.099076442 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137569536 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.105451589 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118963424 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.089855958 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148149904 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108081673 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126565064 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089893517 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134087679 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.108617656 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.120763948 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093323529 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138323907 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.107270666 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131651475 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101133867 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.129527799 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.089342128 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128732939 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.092550004 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134391794 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.093964537 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126787809 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09310406 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123983205 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.093032745 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.130706187 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093574962 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126115893 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.11252622 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127769983 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101012297 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.151307606 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130837211 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.093919612 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141271718 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128351667 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.119707291 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.096613183 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125366351 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.098321797 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.087647866 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136665294 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099513911 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.119206563 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134254934 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.089654826 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088715175 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133943664 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.09012307 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.122133586 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.097252227 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125925766 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.109029149 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124137769 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103446035 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120295028 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.095408066 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118873479 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.089417487 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123882612 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.111790277 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121959663 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128835958 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.119480353 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095997358 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127138597 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.095647613 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128702584 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.089923965 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132435292 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100107303 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123257057 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.099538775 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092467598 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123162331 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.10629255 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133441934 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126292727 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095208221 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125389446 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.094195077 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.119729517 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10478923 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091277471 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12291464 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.105250287 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120265661 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092722593 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126173076 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.09414595 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117665524 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10107274 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124668784 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.089806587 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.12952651 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.090870521 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123122928 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.099219549 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123117863 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.089605614 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123346515 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.096321755 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.089215144 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122865413 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.093659817 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.122679281 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102881521 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127356348 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.092843368 seconds)
  done (took 14.382645026 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.23651511 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216742189 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.192003824 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301480571 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.142293795 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116634172 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213463533 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.165591368 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090206194 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160607104 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176271833 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187903233 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.176134285 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.186676331 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173766025 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121290579 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.109355223 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.173425443 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21630399 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.299144454 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.109587316 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.136477003 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16309372 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162492552 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.109327392 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136853471 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.145267031 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.112417323 seconds)
  done (took 5.867941156 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107489555 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156702523 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097581847 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146453568 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147821425 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091242691 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125789131 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.091535049 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102760519 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134631264 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.122209157 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.098194773 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.126593242 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.100788704 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120967306 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.100169858 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131369636 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.100247935 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123489078 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.094342704 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134151558 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10854894 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125692067 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092769175 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137948873 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.092369974 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.122316063 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142311347 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.098553024 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146175963 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.087573074 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130010514 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.105092514 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.120738519 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.093565207 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.123625457 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.09276643 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.091823179 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122850065 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087890867 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120427433 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081798396 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123055537 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105929903 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127350839 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088071087 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126028885 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.094293196 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126977598 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.087080196 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.091733704 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123309459 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.093846992 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132653043 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09313063 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128173894 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09389114 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.122799127 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099190663 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123686511 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087993037 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122796974 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.096373615 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.125117481 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.098883958 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127435192 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092257119 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123193911 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.095210779 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097225525 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.123795412 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099119246 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.118689313 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091274886 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130834743 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098633174 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.124838354 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092110611 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123965163 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.090052798 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078437734 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.120642597 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077558691 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125429777 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.089212274 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122898124 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.093555939 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125976828 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106599793 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130616804 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.098083654 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120816061 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093144575 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.125397193 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088256731 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.125175971 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108174925 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140384038 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088799383 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.11898959 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105818576 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.122336078 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.088871811 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.082565809 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.131043559 seconds)
  done (took 12.774770163 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131656492 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.171583846 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122194672 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.109721748 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155085062 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162336022 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.098471537 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.097725692 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.12237643 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108171354 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124815166 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.099312193 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.125258774 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104898898 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162572978 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.130573625 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.091670457 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104494764 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126599266 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17507185 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110109452 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.160112263 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161025756 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093827213 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126865791 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.158725188 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.136188417 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.135436589 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103138589 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.163328636 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.13418298 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.134707451 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163927682 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.126907407 seconds)
  done (took 5.584683828 seconds)
done (took 51.63755894 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.256201658 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.431753029 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.205242469 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.204359986 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.246559382 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.256590942 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.209683225 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.398427642 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.941009967 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.205394236 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.204631195 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.206243852 seconds)
done (took 27.904743977 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.227590662 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.371585593 seconds)
    (2/2) benchmarking "String"...
    done (took 1.539598182 seconds)
  done (took 4.047303094 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.206855537 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.205902082 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.452736661 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.217920086 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.207314479 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.224034402 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.221788476 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.220823603 seconds)
  done (took 15.885488648 seconds)
done (took 25.504587043 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.294779887 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.425789695 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.463973594 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.228129 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.224588406 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.218350803 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.211217667 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.256617251 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.215157375 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.212072122 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.20875281 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.48452347 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.229344229 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.592604671 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.208836536 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.244996759 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.225831245 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.445924973 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.208385358 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.275983704 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.195464316 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.219227781 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.215167307 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.23086247 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.217953582 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.210215639 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.245751115 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.208494632 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.435338321 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.227273504 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.254238944 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.210544717 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.239448805 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.218162844 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.320226245 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.239358954 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.388993011 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.216119869 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.200078362 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.225285041 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.418802335 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.627236773 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.213588889 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.22239044 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.213167252 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.291956042 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.201212825 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.935499111 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.218188003 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.224255278 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.247178309 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.584928366 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.216231734 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.221058729 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.222314527 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.45768821 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.212771935 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.257660257 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.241220593 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.21533921 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.210261475 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.219420819 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.242718232 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.211973375 seconds)
  done (took 144.260032611 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.21276224 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.215069047 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.215227348 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.278599824 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.215074529 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.21595237 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.212695378 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.212643766 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.215685937 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.239012954 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.217621699 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.216483205 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.21643747 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.194083895 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.214990891 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.22716274 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.216134132 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.213040572 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.234645481 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.213854284 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.216546463 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.216187172 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.233567484 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.216773356 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.220470819 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.290325965 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.258189673 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.212415883 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.216154094 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.213216213 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.260345942 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.235716797 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.841486243 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.069915903 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.218826395 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.23548575 seconds)
  done (took 80.692496582 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.21469308 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.213333578 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214193909 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.246479839 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.214022796 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.802200379 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.807503168 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.948156013 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.339156709 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.620492637 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.527990961 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.217318221 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308309592 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.224968586 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.21425169 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.231394365 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.239813605 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.218871643 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.215531125 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804417795 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.23157033 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.455479524 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.412286822 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.230707123 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.247066594 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.61320706 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.214447977 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248098024 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.215577775 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.551588135 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.26601048 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214703343 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.609803956 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.910950381 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331142347 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.217160751 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248257765 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.216878588 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.498885089 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.214962423 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.216236237 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.218606384 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.908762595 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.218984257 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.80615245 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.220184064 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.18237538 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.217654222 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216649524 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.216225022 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.272843826 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.934033409 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.236571948 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.217263786 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.219067619 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.216190426 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.217716208 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.250564997 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.298951457 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.333941368 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.217805243 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.220209858 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249688694 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.217478166 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.413339516 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.220151016 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.048901115 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.277414281 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.331208277 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80951681 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.220685555 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315821203 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338269142 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.217459868 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.218283253 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.218261053 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.216962034 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.329405895 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.217766323 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.218770104 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.641629545 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.396007929 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.234933031 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.659106736 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.320500598 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.219030349 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613943521 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.221968898 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.21782356 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.21965237 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.963414462 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815803728 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.218784595 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.219745138 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.218959935 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.642047139 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.809931396 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.481426277 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.222252916 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.868688247 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.227681617 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.64964762 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.784037286 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.931349196 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.224040675 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333419892 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.396380553 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.236694773 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.219504106 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.645929876 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.222715269 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.271091306 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.219946651 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.620333479 seconds)
  done (took 369.443881235 seconds)
done (took 595.534147488 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.936967036 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.878131165 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.016090805 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.916894176 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.876242279 seconds)
  done (took 10.772625334 seconds)
done (took 11.920642917 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.414471772 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.417852681 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286616517 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.420279346 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256809444 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.434750806 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.399609292 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.244504209 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.324848161 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.308579071 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.327581971 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.27692581 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.25584111 seconds)
  done (took 18.517367049 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.572924895 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.225945272 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.308329597 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.567390691 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.265641717 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.544730387 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.436932628 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.244388651 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.426707693 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241800196 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235164182 seconds)
  done (took 18.220387633 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.601621482 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.226908393 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.310094212 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.556659032 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.267252721 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.561218215 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.442227614 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.245065061 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.44586205 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241456936 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23486577 seconds)
  done (took 18.282696658 seconds)
done (took 56.16986206 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.265369257 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.392070215 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.252075737 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.236081794 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.233185773 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.234170502 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.23737942 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.233606416 seconds)
  done (took 11.235132276 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.232799768 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.228079376 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.228915504 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.231945347 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.232085998 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.231492872 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.229144089 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.22939908 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.231484703 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.231572893 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.229861754 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.233532874 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.23280569 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.23251864 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22954564 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.230757743 seconds)
  done (took 20.846820283 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.233123109 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.229452751 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.231307011 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.231156742 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.23095887 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.231689328 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.232236706 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.230178894 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.230931441 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.229571218 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.231795946 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.231814226 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.23042132 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.230633484 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.231830096 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.232854183 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.232471004 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.232789673 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.236901262 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.232250499 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.231552056 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.2311085 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.230973715 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.231949961 seconds)
  done (took 30.714881628 seconds)
done (took 63.947313282 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.224996978 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.235135276 seconds)
  done (took 5.612962332 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.29529403 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.294333685 seconds)
  done (took 3.74344117 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.235067202 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.234728626 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.235900702 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.234832406 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.234866109 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.234468919 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.234462005 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.234499083 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.233733717 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.234738042 seconds)
  done (took 13.502774816 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.233919878 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.234626578 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.233291398 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.234708865 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.234099181 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.23193911 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.234521899 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.234051571 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.234232365 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.233085456 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.235512709 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.232589898 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.236083963 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.232203524 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.235944208 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.234373469 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.233419619 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.233456658 seconds)
  done (took 23.366536122 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.249414176 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.25706404 seconds)
  done (took 3.66105484 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.362658999 seconds)
    (2/7) benchmarking "second"...
    done (took 1.275366579 seconds)
    (3/7) benchmarking "month"...
    done (took 1.344930003 seconds)
    (4/7) benchmarking "year"...
    done (took 1.330783863 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.275341963 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.254694103 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.274546423 seconds)
  done (took 10.273724652 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.236421797 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.431315122 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.543390164 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.796284151 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.237971953 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.240192756 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.127763009 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.241190773 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.244213674 seconds)
  done (took 14.254779777 seconds)
done (took 75.569566 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.229696444 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.247855424 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.243358181 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.246568237 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.574216947 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.256850108 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.233042831 seconds)
done (took 16.187396287 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.216594375 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.219468132 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.23817626 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.232206723 seconds)
  done (took 10.062377726 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.243679778 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552841104 seconds)
  done (took 4.952146239 seconds)
done (took 16.170796011 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238745786 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.237775411 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.235508238 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.236198409 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.23942314 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.235539752 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.235860577 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.239246262 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.239828015 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.235496177 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.238184393 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.237714285 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.238635154 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238297955 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235341286 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235754159 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237985949 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.236221714 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235542381 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2372302 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.238693256 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238978328 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.236986031 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.236045375 seconds)
  done (took 30.854168785 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.23815158 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.236693234 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.239752909 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.239062527 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.236315903 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.239923299 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.238760588 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.236954387 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.238848202 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.239078825 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236626886 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.238554062 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.239890639 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.238042448 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239457926 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.237697266 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.240221538 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237975919 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241304019 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.238506725 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.242159214 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238135583 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.237833409 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24095585 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.237027908 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2379165 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.242218924 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.237772812 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241184464 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.237672471 seconds)
  done (took 38.324367769 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.2461167 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.248677167 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.240080177 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.242046664 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.241607516 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.242484081 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.241669056 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.241777451 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.242399909 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.241428048 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.242336693 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.241912355 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.242113771 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.242602561 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.241930274 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.241399149 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.242624342 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.241587817 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.241020106 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.242076787 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.242604537 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.24195138 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.2425625 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.242105027 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.242341278 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.24252354 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.242113867 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.242160043 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.242543489 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.242415939 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.243861642 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.242062784 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.243395745 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.242849365 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.242418653 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.242013456 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.248144559 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.250166009 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.243066642 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.242961609 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.242422687 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.243259241 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.243039153 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.243082176 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.244406952 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.243158971 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.243038029 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.24296123 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.243846352 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.243468464 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.243687787 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.24416128 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.243654661 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.244077034 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.245162687 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.244354489 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.245348122 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.243853773 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.244231448 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.243034759 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.243817075 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.244012719 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.245152532 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.245014037 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.244565243 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.24495159 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.245022829 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.245500893 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.245600771 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.244903227 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.245410065 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.246285861 seconds)
  done (took 90.689102448 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.245333615 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243577462 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.243010937 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242036401 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243167519 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.246738862 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243799225 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24680991 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243618727 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247021822 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246102668 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.242998431 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243714532 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247312435 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245897214 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.245096527 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.246979706 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244487018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.247114057 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.246926787 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24662983 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.245504604 seconds)
  done (took 28.558788511 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247640349 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249453783 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.244322487 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248536913 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246061795 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.248140512 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.246751198 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.248267394 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247252084 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243666173 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244043377 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246971592 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.246515619 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244321326 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245045928 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.247249364 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24727926 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246266623 seconds)
  done (took 23.603503032 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.246523078 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.245717325 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.247729363 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.244837099 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.245720754 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248061276 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244471153 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248219471 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.246961411 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.24465807 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.247586161 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248781401 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.248019462 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245683737 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24810726 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.245564644 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.24755713 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245847636 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248888853 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245574079 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.246930865 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248817949 seconds)
  done (took 28.596944022 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248638629 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.248830314 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.247053895 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.245832025 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.245918894 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.248432504 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.250504772 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.247593138 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.2498719 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.249911564 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247491402 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.249775086 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.249692084 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.246659758 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.247504988 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247279327 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.249307944 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.248129807 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250536684 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.248358281 seconds)
  done (took 26.135543927 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251389102 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250162503 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.251165724 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250673125 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251475353 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.250289076 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251141575 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.250969031 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251362143 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.251796927 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.250642189 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251363434 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251983031 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252159215 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252021589 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251705067 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251912223 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252541711 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.252403514 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252139421 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.252302878 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253553545 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252870832 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252367994 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253043917 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252143956 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253082625 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.252095429 seconds)
  done (took 36.220615106 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252036187 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.252735699 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.249717087 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.24956548 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.250065908 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.250206329 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.250106234 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.250789589 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.251708544 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249620048 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.252894843 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.253608478 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.252829735 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.25394973 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253670975 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.253568044 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253570237 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.2508632 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252432951 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251547221 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.254091317 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253217209 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.253540672 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.251728146 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251677899 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.254525551 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252926672 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.25239434 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255369046 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252252631 seconds)
  done (took 38.739246897 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.298292672 seconds)
    (2/2) benchmarking "in"...
    done (took 1.29288728 seconds)
  done (took 3.763406928 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.251914489 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255433594 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.254475931 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.252615214 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.25293786 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.255358794 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.254957741 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252103639 seconds)
  done (took 11.202748241 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.256512537 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.25688025 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.255518576 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.25593527 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.255630001 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.254707999 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263399416 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.276532773 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.255971139 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.256082209 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.262320486 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.263186855 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.256591698 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256490906 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.255168103 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256905007 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.255763573 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.257178418 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.257485716 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.256788909 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256367109 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259657829 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258867682 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.255484008 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.25702112 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.268239359 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.260208206 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.257181824 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257407594 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.260655198 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.256348069 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.254215532 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.257039818 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.257212884 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.258732633 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.256707736 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265776195 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280931939 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.264336058 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257808043 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258728735 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.255637685 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.258302867 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.259221674 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25891329 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.257836096 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.259027164 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.254755167 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.257181397 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.262051397 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.265237879 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257636797 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.255713756 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260923434 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.259338094 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265264558 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.279403142 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.262001847 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.267674737 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.269745423 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.271469941 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.284805186 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262006183 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.26040478 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2704775 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.283222468 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267416283 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.277250238 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.256789596 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.258584865 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.265379457 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272995614 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.286731455 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.259285954 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259598272 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.260701215 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259937642 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260798204 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268241006 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.282858623 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.260909518 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259852668 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271058034 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284250305 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.259705762 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.260442153 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.261500563 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.261373143 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.261470143 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271370044 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.281736946 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.261913625 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.260135399 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.262544877 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.26225851 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.261199202 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.259973494 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261404428 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.258476651 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.262148323 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261447245 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265595834 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.270687158 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262388823 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262098106 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.267656233 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.262549406 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2620399 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.265858893 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.261707629 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261568641 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.262834846 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.267480185 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.260248913 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266254512 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.270606366 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.263130011 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.262688161 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.262576445 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.263283586 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272251797 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.28898711 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.263391873 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.262702858 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.266843769 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.275390839 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263620852 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.265843687 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.263818011 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.261227099 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.26033925 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.265454103 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.26408519 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.2636559 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26402525 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264786912 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.261379464 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.263521845 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.263718161 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.265362066 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.264533245 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.26334295 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.264732151 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.266602222 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.264923549 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.265447665 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.269878135 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.263414012 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.265345724 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.265210853 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.262180642 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264794797 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.265042536 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.265168823 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.264001779 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264747279 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.264887856 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.266104038 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266498393 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.265516856 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265908512 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.266805411 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270248884 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.265748341 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.269032999 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.264724446 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.264435327 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.266645906 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.265386985 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.264747084 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.267914911 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.26458063 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.270752033 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.274579522 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.267809662 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.266314117 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.26863785 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269008471 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266586813 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267070774 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.270645036 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.275316578 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.267635021 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.273548484 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.267630488 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267484331 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.269034523 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.267590125 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.266000991 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267229685 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.271303415 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.275248646 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279581884 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293151503 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.268588802 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.272321212 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.268599291 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.272453801 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.271154995 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.268010172 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.269254146 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269643295 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267490193 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268313872 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.269383065 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.26973653 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.266988203 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.269049762 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.270169368 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.268689272 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268252214 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.268202903 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2687439 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.266546456 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270125636 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268936994 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.268043667 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.265907106 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.269468159 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.268864506 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.27060399 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.268951183 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.274417471 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267473783 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270700529 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271987208 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.268526876 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.2682461 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.270528185 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271770392 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.269345201 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277912466 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.290240758 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.271772174 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276269047 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.290125495 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.270750649 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.273142272 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.271401355 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.269054214 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.273891747 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.279371977 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.272007965 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.270441479 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.270862922 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27151285 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272314158 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.277654568 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.268557107 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.271070952 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.272791756 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.272245882 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.270102252 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.27331383 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.272293544 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.272677043 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274537018 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273901753 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.273229961 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272979268 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.273563524 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.273090688 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.272705359 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276096933 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.280560083 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.277579263 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.272540119 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.274600172 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.273854418 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.277272574 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.272111911 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.273416887 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.273640613 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285928823 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.299242821 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280342631 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.292989705 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.275152067 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27931684 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.295015833 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.276905133 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273376306 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274610982 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.272443416 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.273755014 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.271746128 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273335313 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.275008485 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275267165 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.27610693 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.278186134 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.274423635 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.275555614 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.274622341 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.27445804 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.274315932 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.273962177 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.27517549 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.276463734 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276113807 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.272949064 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.274672539 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282308819 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295591185 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.276010704 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.275528462 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.274563317 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.273776966 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.2761495 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.274723758 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.277780967 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.283289602 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.278980282 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.284369462 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.277178066 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.284593846 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.275866222 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.279393883 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.282782902 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.273744453 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.276154053 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.27800771 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.276608015 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284041215 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.296375212 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.279517305 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.281178355 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.278082258 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.277563557 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.277135584 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.276378604 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.277746797 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.278295721 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.285881747 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.300623696 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.281815643 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278446757 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.275608208 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.277667401 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.277307897 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.276503546 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279943364 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.278259935 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.277708201 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.276654748 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.276990885 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.278214712 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.278033511 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.279500839 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.275992909 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.278382719 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283126924 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.301215647 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282550407 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.278540586 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.285809364 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277434535 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285355001 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.297469539 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.278279837 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.279822218 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.278809089 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.27973783 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.27810757 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.279204259 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.278888746 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.280656149 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.282449962 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.279273106 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.279851585 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.278894039 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.278928901 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.279077008 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290398999 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303580308 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.282640767 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.286211989 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.278088683 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.282438499 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.284857595 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.280668729 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.279342123 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.284030633 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292240767 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.288886192 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.281502494 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.280515992 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280385102 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281368465 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.281071063 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.280480591 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.280457747 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.281276245 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.281295634 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.281098189 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284331861 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.281652059 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.281784389 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2823498 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.282710627 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.292885578 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.281681972 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.281831855 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282125087 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.285171354 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.281974314 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.281463044 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.283204984 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283401941 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282500035 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.283353071 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289214102 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.288657297 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.286015797 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.283337811 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.282708722 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.282166061 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.284110413 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283043897 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.283086193 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28417551 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.284492299 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.284800862 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.283014204 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.281587014 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.283605121 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.282559421 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283898106 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286720872 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.290342807 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283844702 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.280819079 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.283218435 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28482435 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.282618678 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.284705564 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.289188455 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287401193 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.295147633 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.29187377 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.2875328 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.284197683 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28709192 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.29187734 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.282792608 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.285048818 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.282437901 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.284715994 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.284625136 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.286903636 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284424426 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.290230395 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.284047347 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.283274586 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.29263533 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.308819129 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.284205499 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.286282122 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.289475849 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.283674318 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.283600402 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.286011889 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283903227 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291042885 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.304947211 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.285698708 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286270849 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.285491957 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.286587581 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290475915 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286344249 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.286651642 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.28133203 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.285276565 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284587481 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286210898 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.283794084 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.283981395 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.28531163 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.288833515 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.2927138 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.284706126 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287120158 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.287144182 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.286804963 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287198213 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286580454 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.285452755 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.284293986 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.286214767 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289076781 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.287324937 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.290357877 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.285559322 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.288924436 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.29001053 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28780263 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.290341344 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.298166663 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.295158929 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.284701214 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.287201673 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.287867743 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.289969565 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285728337 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.287922327 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28836178 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.288559393 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.290626989 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.287743685 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.289211848 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.291685821 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304732198 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.312295946 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289800428 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.287267582 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290676109 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.288962949 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.287475052 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.289639646 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.290572843 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.292119059 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.298396463 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.289731736 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295258034 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.309644386 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.290250549 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.294426822 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.292686524 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.297310216 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.292619289 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.289879991 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.29001315 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.295993996 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.30575737 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290335195 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29969073 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319455544 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.310394021 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.291168285 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.290265169 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28872285 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.29157411 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.291732144 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.28952533 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.292618165 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292392897 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.291112857 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.292239796 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296606818 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.293182972 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.292880804 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.290768267 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.290470236 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.292952877 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.29101716 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.292502039 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.291620443 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.291205794 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.293037557 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.292982234 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.292915753 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.303687961 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.319571958 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.291496349 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.293871912 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.290174493 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.295163404 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.295487063 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.3034428 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.301013373 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.292265379 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.29275745 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.295388602 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294299734 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.291494762 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.294038939 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.292108923 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.294250837 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.291368088 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.306211519 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319831637 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.29666555 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.294171398 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.295102072 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.295074855 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294062547 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294891635 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294262291 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.294867206 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.296257149 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299174429 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.295691774 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.29354042 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.297643584 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.303399012 seconds)
  done (took 762.505634009 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294682326 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291365559 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292062833 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.29181135 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2926507 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293022285 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292257154 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292982253 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293064881 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292874006 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.292333607 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292967345 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.292280529 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292807688 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292557198 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292021145 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292291332 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.294140012 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292248345 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292533513 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293958429 seconds)
  done (took 28.356714081 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.295507657 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.29306946 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293679378 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296067767 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293062134 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.295598426 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.29321964 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296421428 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296564094 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294182457 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.29653578 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296490616 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.293864693 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.294087108 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294234423 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296465809 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.296300796 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294006933 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.297131365 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295433812 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296389664 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.294647776 seconds)
  done (took 29.703981459 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.298303972 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.297488376 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.296646175 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.29633525 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.297769387 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.295151453 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.297527333 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.298628294 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.298326906 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.298438873 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.297831771 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.299043714 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.304657549 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.30431808 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.299672363 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.298921266 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.29865623 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.298442556 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.298235934 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.295649317 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.303752931 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.296061422 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.296086068 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.29702067 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.298466102 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.298897022 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.298720002 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.298047659 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.300591894 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.303647176 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.29921941 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.299406397 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.300798333 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.298239326 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.300355426 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.304390996 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.299496897 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.297617322 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.300322177 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.310191347 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.320618207 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.299347863 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.304721561 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.321452227 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.300230936 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.303276208 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.308258537 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.298033419 seconds)
  done (took 63.641183345 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.300568955 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.300053752 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.298391862 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300385712 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.300621968 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.302327525 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.301181733 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.300772801 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.299659273 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.297848253 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.301376041 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.298976201 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.298395105 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.300764886 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.300890517 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.299985545 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.29943604 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.299982822 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.299366748 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299913781 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.298293833 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.30202488 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.300691962 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.29970014 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.30214125 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.299752239 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299012814 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.301576567 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.301677241 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.299668883 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.3025906 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302933299 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.302053933 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.300155817 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299758523 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.303017432 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.303177516 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.299560145 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.303322128 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.299663549 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.30309681 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.303008577 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.302487378 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.303710908 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.300838766 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.301236448 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.300778997 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.301542646 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.301393336 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.30277106 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.303603577 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.301803752 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303541927 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.301642463 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.304441623 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.303843669 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.300292397 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.300865602 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.303685017 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.302660736 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.301431157 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303866636 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.303308007 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.304561941 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.305041562 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302962907 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.301811243 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303715091 seconds)
  done (took 89.711265971 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304803289 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.304741547 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304152223 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304398437 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304510406 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.303688853 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.304214823 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.305234194 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.305380372 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.304654714 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304203559 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.305216244 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.304465531 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.305571852 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.304654951 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.30599153 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.305223067 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305163992 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.306027414 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304582003 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.304463806 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305528498 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.30536818 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305829814 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.305641561 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.305642436 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.305304234 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306229366 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306669999 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306809362 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.306201223 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.30662789 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.306708877 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.306831695 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.306181796 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.306790656 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306151161 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305929412 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.307681046 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.306710273 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.307024995 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307323391 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.306845325 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.307906225 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308854889 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306680538 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306684669 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.308382368 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.307195705 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.306908997 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.308070462 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.3092322 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307816298 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.307957865 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.308467747 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.30846405 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308594087 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307658678 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307804264 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.307273313 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.308030246 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.307995119 seconds)
  done (took 82.211975315 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30885099 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.308699548 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.305312809 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.305019658 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308521156 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.306214027 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.308711844 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.308951727 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.308002475 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.308292136 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310067574 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306396855 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307822653 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310783058 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.307537753 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308002715 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306624348 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.308497583 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30920462 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.306766063 seconds)
  done (took 27.380159827 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.307088746 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310057538 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.307506187 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30729642 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.309612524 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306866097 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.309441129 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309853802 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307225911 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310379815 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.309720414 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310312633 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307819456 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308267973 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.312195561 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.30780794 seconds)
  done (took 22.165112303 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.308244277 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.312520824 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.310115106 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.310553902 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.310414019 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.308014224 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.311625527 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.309097007 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.308339084 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.311775467 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.312159376 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.310689267 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.311009057 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.311320681 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.309584677 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.311521751 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.309868239 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.308446006 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.311820186 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.31111363 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.309879214 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.309292066 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.312471299 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.311958078 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.310737459 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.311509879 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.309099113 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.310673721 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.309570662 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.313265939 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.310832312 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.310619186 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.30972926 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.309792949 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.312812236 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.309480419 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.313292209 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.312358475 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.312587842 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.312343886 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.313081621 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.310690293 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.313271337 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.313142893 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.310473243 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.31397021 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.311346854 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.311214085 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.311052058 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.310233334 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.313637383 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.313236428 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.313625607 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.313807266 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.313320403 seconds)
  done (took 73.341810315 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314459833 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.314163405 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.311895322 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.314907064 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.316055708 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.312674382 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.313851109 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.313999964 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311222662 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.31398729 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.312092135 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.316182751 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31128862 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314218633 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312959532 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315527611 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.31303751 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.312572568 seconds)
  done (took 24.872407826 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.313490773 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.313274119 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.31576927 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311772306 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.313636759 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.316024617 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312124806 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.316391308 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31595888 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.314278649 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312686127 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.316303367 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316899037 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.315173128 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315712381 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315442815 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.316869672 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.317422002 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.314620994 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.315018398 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317104846 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315759076 seconds)
  done (took 30.161257 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.315032679 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.314585869 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.3150115 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.333204536 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.336729404 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.314652907 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.315412651 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.316751178 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.338764088 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.369595251 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.364299808 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.335795639 seconds)
  done (took 17.200617592 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315459217 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317484408 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.317066728 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317976073 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318257405 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314672777 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315624856 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316484692 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318218229 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317067887 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315799647 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319199839 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319194483 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315434595 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320099503 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316867986 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316722933 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316275745 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316465224 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319056058 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317385107 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319548709 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317629605 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316189135 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316532236 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317666538 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318859483 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316759307 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316420567 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319230416 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3183522 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316326245 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320326176 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317166671 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318066407 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320166118 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316925678 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319316479 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320021827 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317159992 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319718152 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319145171 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319826862 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318687237 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319611111 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318514269 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319030545 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317232428 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31822425 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320875733 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320758216 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319518885 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320728339 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322540104 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322097128 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321543123 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31971694 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317804743 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320827802 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319674509 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319442016 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321421402 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319996624 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318106988 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321790309 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32001423 seconds)
  done (took 88.251587881 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319260556 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.319267443 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319964066 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320328608 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320217609 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319480613 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319169448 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32006454 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320841496 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321678109 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32279491 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320921889 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320263603 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320348278 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320709396 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319532974 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320196188 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319945483 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319825188 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32391983 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320464753 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32231168 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320992883 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320886057 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32163813 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323958605 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321427557 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320993218 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322019486 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32074962 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321307962 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322331479 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320828665 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.321134695 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322132447 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320944672 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321090509 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32056124 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321539891 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32381358 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321793554 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324168316 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32165753 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322185244 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322704063 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322031685 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321605 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320841735 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322873682 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322354267 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322931372 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322643328 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323651473 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322306805 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322998626 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323010859 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322606098 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323418218 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323058742 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324908149 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324096771 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324407419 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325652627 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32334183 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323430869 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323979426 seconds)
  done (took 88.474900777 seconds)
done (took 1785.82414018 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.487067596 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.445169793 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.324559065 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.331292354 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.324871801 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.347890375 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.33574051 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.324425284 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.324634665 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.325226 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.324218109 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.520155201 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.320659464 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.324284651 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.324448311 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.421626627 seconds)
  done (took 27.04566873 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.355727299 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.331467525 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.453141708 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.353836838 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.35371634 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.527301999 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.391343351 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.331101592 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.520138396 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.377767797 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.3341005 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.354763545 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.330169442 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.327981819 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.349695966 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.526930311 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.602230727 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.327909182 seconds)
  done (took 29.389422618 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.829674875 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.339463443 seconds)
  done (took 5.407591536 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.351024296 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.330681538 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.331238236 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.330345005 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.322543342 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.342209509 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.329987233 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.323562278 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.32442833 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.472068904 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.335651652 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.340647229 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.351656655 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.331299319 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.32867348 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.37120465 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.501114472 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.330505997 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.32825549 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.337088077 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.330994444 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.423039128 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.377190971 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.332377183 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.467289441 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.332264738 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.337124742 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.339450982 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.476558015 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.330684483 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.329902999 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.330849948 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.332978259 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.285828554 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.813607716 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.341152954 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.359175237 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.340363658 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.329641032 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.495270465 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.332796675 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.34049769 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.325686078 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.78811309 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.497583552 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.461462034 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.357654013 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.337747348 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.334293535 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.3980302 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.333411585 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.335015107 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.379274578 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.168131209 seconds)
  done (took 85.360595629 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.338816836 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.326141187 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505861155 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.353428457 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.331726091 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.330966189 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.330995117 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.64978708 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.340400449 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.327337406 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.674567211 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.91948509 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.357648112 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.357104149 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.21032141 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.372216067 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.342420636 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.326312774 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.348021489 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.332511759 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898880601 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33298786 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.329259257 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.587573434 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.36899092 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.86676187 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.332413492 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.345674783 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.331967664 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.327807451 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.870784977 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.363412011 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.383075509 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.329365405 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.609794222 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.736245967 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.704083112 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.337080723 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.360847817 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.327889062 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.346740059 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.865574547 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.733840414 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.333010587 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.348041085 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.877544414 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.33208155 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.340578976 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.335490351 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.578699008 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.331455427 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.339489688 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.329311756 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.333535254 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.330092519 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.397711071 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.391140091 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.873661451 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.331983334 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.33036069 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.365080713 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.331781665 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.330333183 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.331545546 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.331468833 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.735109359 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.490768183 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.337268765 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.733486057 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.873877892 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.35045356 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.938042399 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.353926129 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.359323053 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.342197642 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331408775 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.330981977 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.877250348 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.347661451 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.331206788 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.719155217 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.335440951 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.677983515 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.357443724 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.332206548 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.912468417 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.337622684 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.33704301 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.330945489 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.349330573 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.338137257 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.33808957 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.634472526 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.357180035 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.33246188 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.330395569 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.334018433 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.331459262 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.335027929 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.335023287 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.935760332 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.357707535 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.33292294 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.337580778 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.344097738 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.335506076 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.336254989 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.334329462 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.597821881 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.350127508 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.340688255 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.33353954 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.333099469 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.342003841 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.576158622 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.33647127 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.688224016 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.34164398 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.335375234 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.341530203 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.334374433 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.391169089 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.335259214 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.337984492 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.274163497 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.645591318 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.363037062 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.337771426 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.335582453 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.334070977 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.337809803 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.337064782 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.355365773 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.337400133 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118458213 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.378044656 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.358916973 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.334115378 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.336870953 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.335191003 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.359805364 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.334253062 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.635854109 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.624491714 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.485711522 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.33818 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.335176769 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.099443207 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.372079611 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.514069407 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.358741488 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.335403143 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.578597416 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.525768473 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.338912522 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.336464795 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.337807626 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595252757 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.341581132 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.65386081 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.907697358 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.358468268 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.337137416 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.125690151 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.09631798 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.341961161 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.338276012 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.683580027 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.361944731 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.335432388 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.336658353 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.336453438 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.353880946 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.361281195 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.33649647 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.336351959 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.338182982 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.47270566 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.530612104 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.355910464 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.343628543 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.881604819 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.427662599 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.338396491 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.366760658 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.344648351 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.337553353 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.388435222 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.341868817 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.384226316 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.338723212 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.347171625 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.942057587 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.340939896 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.344789311 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.530447435 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050390494 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.362272803 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.355732727 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.344036913 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.216556522 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.906667268 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.36769864 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.694205882 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.345081022 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.380197211 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.340244465 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.427882404 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.904957054 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.342853203 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.338218149 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.018225649 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.362929439 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.865559737 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.338575262 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.342586204 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.973678332 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.362698135 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.342915694 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.339061632 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.345228683 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.635393757 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.343363835 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.366059709 seconds)
  done (took 500.240031062 seconds)
done (took 648.681191874 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.340575857 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.33959052 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.329844543 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.344164134 seconds)
  done (took 10.611944246 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.35102503 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.346554912 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.348549889 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.34723544 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.350878808 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.346619173 seconds)
  done (took 9.349866678 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.340604374 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.34144465 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.347818792 seconds)
  done (took 8.288758685 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.571117286 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.379301663 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.709234366 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.365619624 seconds)
  done (took 9.285418414 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.34955762 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.348830385 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.348586474 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.352146829 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.353062739 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.353364764 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.351393241 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.351047943 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.352190059 seconds)
  done (took 13.416592499 seconds)
done (took 52.209302479 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.40196441 seconds)
    (2/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.34314365 seconds)
    (3/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.34121749 seconds)
    (4/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.373647289 seconds)
    (5/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.331846938 seconds)
    (6/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.496377688 seconds)
    (7/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.330238426 seconds)
    (8/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.335820454 seconds)
    (9/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.335252589 seconds)
    (10/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.336291807 seconds)
    (11/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.470782102 seconds)
    (12/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.354357701 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.75387401 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.670259663 seconds)
    (15/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.371589674 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.408851601 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.346965981 seconds)
    (18/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.006225095 seconds)
    (19/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.3364645 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.376690802 seconds)
    (21/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.334435514 seconds)
    (22/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.512543389 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.292687201 seconds)
    (24/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.351113934 seconds)
    (25/286) benchmarking ("sort", Float32, true)...
    done (took 2.34490616 seconds)
    (26/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.709508516 seconds)
    (27/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.341733113 seconds)
    (28/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.459302826 seconds)
    (29/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.335611541 seconds)
    (30/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.338096547 seconds)
    (31/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.482769027 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.352932526 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 2.34863296 seconds)
    (34/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.218515251 seconds)
    (35/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.477392376 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.476469114 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.1267659 seconds)
    (38/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.490177722 seconds)
    (39/286) benchmarking ("sort", Int8, true)...
    done (took 2.344385419 seconds)
    (40/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.331195033 seconds)
    (41/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.344794114 seconds)
    (42/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.356431444 seconds)
    (43/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.457719976 seconds)
    (44/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.592096561 seconds)
    (45/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.373623317 seconds)
    (46/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.888318346 seconds)
    (47/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.375801099 seconds)
    (48/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.331847213 seconds)
    (49/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.375212713 seconds)
    (50/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.347842151 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.461655435 seconds)
    (52/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.349510729 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.603667289 seconds)
    (54/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.333180919 seconds)
    (55/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.355649483 seconds)
    (56/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.235886168 seconds)
    (57/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.205386676 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.40661711 seconds)
    (59/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.37333082 seconds)
    (60/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.34100053 seconds)
    (61/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.380461281 seconds)
    (62/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.014442591 seconds)
    (63/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.335255498 seconds)
    (64/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.332552429 seconds)
    (65/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.392710142 seconds)
    (66/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.332211033 seconds)
    (67/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.356736991 seconds)
    (68/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.349114033 seconds)
    (69/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.334605303 seconds)
    (70/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.332726622 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.756839076 seconds)
    (72/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.211083179 seconds)
    (73/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.360291554 seconds)
    (74/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.46175913 seconds)
    (75/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.350915053 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.976620936 seconds)
    (77/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.370567845 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.347055111 seconds)
    (79/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.336533159 seconds)
    (80/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.356206848 seconds)
    (81/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.374609193 seconds)
    (82/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.435563948 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 2.347373338 seconds)
    (84/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.334967351 seconds)
    (85/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.361755276 seconds)
    (86/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.36493957 seconds)
    (87/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.334393885 seconds)
    (88/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.355265206 seconds)
    (89/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.478071507 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.382216636 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.351551751 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.038817852 seconds)
    (93/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.338302122 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.785340377 seconds)
    (95/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.428890371 seconds)
    (96/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.894778405 seconds)
    (97/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.473438075 seconds)
    (98/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.335484261 seconds)
    (99/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.479003294 seconds)
    (100/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.356296919 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.323983458 seconds)
    (102/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.376676667 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.357352459 seconds)
    (104/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.536546105 seconds)
    (105/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.376019751 seconds)
    (106/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.573800553 seconds)
    (107/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.43413409 seconds)
    (108/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.390060206 seconds)
    (109/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.434962611 seconds)
    (110/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.366842469 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.691536592 seconds)
    (112/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.368966982 seconds)
    (113/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.339161918 seconds)
    (114/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.362525263 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.563020848 seconds)
    (116/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.346400852 seconds)
    (117/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.342155794 seconds)
    (118/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.345646201 seconds)
    (119/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.223667947 seconds)
    (120/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.726409072 seconds)
    (121/286) benchmarking ("sort", Float32, false)...
    done (took 2.350222977 seconds)
    (122/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.215511595 seconds)
    (123/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.471601141 seconds)
    (124/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.435351564 seconds)
    (125/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.337666749 seconds)
    (126/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.382162806 seconds)
    (127/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.355906989 seconds)
    (128/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.359477509 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.766261021 seconds)
    (130/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.361669936 seconds)
    (131/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.067732772 seconds)
    (132/286) benchmarking ("sort", Bool, false)...
    done (took 1.880795777 seconds)
    (133/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.375171741 seconds)
    (134/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.388240593 seconds)
    (135/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.342964886 seconds)
    (136/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.610990675 seconds)
    (137/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.434834732 seconds)
    (138/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.337490298 seconds)
    (139/286) benchmarking ("sort", Float64, true)...
    done (took 2.353526704 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.363845908 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.212747882 seconds)
    (142/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.629365399 seconds)
    (143/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.344906557 seconds)
    (144/286) benchmarking ("sort", BigInt, false)...
    done (took 2.35660894 seconds)
    (145/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.438473936 seconds)
    (146/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.436056113 seconds)
    (147/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.365342944 seconds)
    (148/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.420027581 seconds)
    (149/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.337804484 seconds)
    (150/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.486531322 seconds)
    (151/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.338251424 seconds)
    (152/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.339373852 seconds)
    (153/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.876921265 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.302974967 seconds)
    (155/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.190894123 seconds)
    (156/286) benchmarking ("sort", BigInt, true)...
    done (took 2.354166587 seconds)
    (157/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.380720555 seconds)
    (158/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.367590933 seconds)
    (159/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.378426249 seconds)
    (160/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.629706819 seconds)
    (161/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.360049776 seconds)
    (162/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.421188381 seconds)
    (163/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.392005249 seconds)
    (164/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.133091296 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.347884692 seconds)
    (166/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.377353914 seconds)
    (167/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.211885396 seconds)
    (168/286) benchmarking ("sort", Float64, false)...
    done (took 2.372173479 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.353710136 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.345695839 seconds)
    (171/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.343813888 seconds)
    (172/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.381461681 seconds)
    (173/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.340609218 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.267340941 seconds)
    (175/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.340244202 seconds)
    (176/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.346208646 seconds)
    (177/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.343647079 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.372564697 seconds)
    (179/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.344203683 seconds)
    (180/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.380748746 seconds)
    (181/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.43653338 seconds)
    (182/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.340535646 seconds)
    (183/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.363874561 seconds)
    (184/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.918861947 seconds)
    (185/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.385552395 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.698073557 seconds)
    (187/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.361919349 seconds)
    (188/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.509819162 seconds)
    (189/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.397190974 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.341242443 seconds)
    (191/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.721835828 seconds)
    (192/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.371785079 seconds)
    (193/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.370777948 seconds)
    (194/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.34201725 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 2.36145649 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.412852933 seconds)
    (197/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.369105909 seconds)
    (198/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.353781347 seconds)
    (199/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.343115717 seconds)
    (200/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.349003943 seconds)
    (201/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.368719031 seconds)
    (202/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.478596588 seconds)
    (203/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.245476298 seconds)
    (204/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.75756645 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.358632191 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.583560229 seconds)
    (207/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.440806646 seconds)
    (208/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.510911141 seconds)
    (209/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.890117811 seconds)
    (210/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.427205144 seconds)
    (211/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.364367523 seconds)
    (212/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.46795981 seconds)
    (213/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.341513996 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.380682149 seconds)
    (215/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.26665711 seconds)
    (216/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.374470608 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.399420783 seconds)
    (218/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.34346221 seconds)
    (219/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.883844495 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.343473928 seconds)
    (221/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.1960209 seconds)
    (222/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.877382528 seconds)
    (223/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.361716 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.04441826 seconds)
    (225/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.389559494 seconds)
    (226/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.390313198 seconds)
    (227/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.464893623 seconds)
    (228/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.403525266 seconds)
    (229/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.362259683 seconds)
    (230/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.345370171 seconds)
    (231/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.422463134 seconds)
    (232/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.550558119 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.367589873 seconds)
    (234/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.358082561 seconds)
    (235/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.358991779 seconds)
    (236/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.3601361 seconds)
    (237/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.348226867 seconds)
    (238/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.361548621 seconds)
    (239/286) benchmarking ("sort", Int8, false)...
    done (took 2.359558892 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.585756755 seconds)
    (241/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.365072846 seconds)
    (242/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.373682876 seconds)
    (243/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.467158188 seconds)
    (244/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.463774551 seconds)
    (245/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.344826704 seconds)
    (246/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.344727777 seconds)
    (247/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.360082726 seconds)
    (248/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.470862179 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.386145915 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.746342382 seconds)
    (251/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.38587267 seconds)
    (252/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.34810852 seconds)
    (253/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.352613916 seconds)
    (254/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.5084653 seconds)
    (255/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.369278683 seconds)
    (256/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.209734054 seconds)
    (257/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.200626196 seconds)
    (258/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.200989942 seconds)
    (259/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.362937734 seconds)
    (260/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.42719739 seconds)
    (261/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.366665313 seconds)
    (262/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.360262982 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.443677945 seconds)
    (264/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.345755672 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.442901065 seconds)
    (266/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.346039523 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.508677226 seconds)
    (268/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.610064953 seconds)
    (269/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.739857941 seconds)
    (270/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.745645545 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.363793359 seconds)
    (272/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.374394585 seconds)
    (273/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.352828813 seconds)
    (274/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.279245447 seconds)
    (275/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.347472924 seconds)
    (276/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.361652576 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.404333283 seconds)
    (278/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.346488151 seconds)
    (279/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.347048044 seconds)
    (280/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.374125587 seconds)
    (281/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.214740482 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.389716216 seconds)
    (283/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.357070731 seconds)
    (284/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.033127933 seconds)
    (285/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.426611135 seconds)
    (286/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.363832241 seconds)
  done (took 575.181463575 seconds)
done (took 576.44168679 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.396233713 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.405755862 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.373308848 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.393983137 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.483993003 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.547883951 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.383908469 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.375961189 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.421505486 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.422383103 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.371854833 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.547554575 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.372705262 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.372809414 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.374304871 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401231372 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.361930563 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.37392644 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.389399342 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.385603516 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.388891657 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.373276957 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.425016705 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.548667144 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.37825293 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.377393819 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.376421786 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.394663505 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.485852843 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.379288129 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.378429575 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.385604729 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.364295322 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.374806205 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.371004943 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.394178965 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.384472564 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.386839593 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.379893808 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.406938104 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.363993175 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.372107476 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.376320121 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.376093447 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.377044017 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.382881646 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.37609077 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.385425156 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403975152 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405500197 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.37990097 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.389351152 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.378012135 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.377755386 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.387895706 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.376608263 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.380482253 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.410180256 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.396119114 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.408667877 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.381566129 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.388124139 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.378131549 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.391111949 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.38308739 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.381301077 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.372723164 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.385879087 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.366521558 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.384700153 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.38069021 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.386172813 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.37909623 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.38978942 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.409699083 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.381798981 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.375832095 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.378994585 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.385570925 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.376383491 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.390485741 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.408334165 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.384662622 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.378449672 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.405883409 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.552212452 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.388773827 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.377924797 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.389729784 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.39798695 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.383297005 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.388959041 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.383000579 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.375303809 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.39025526 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.384311766 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.380482407 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.381329396 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.386235096 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.391375816 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.37797252 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.416143356 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.376451339 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.376360847 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.379589178 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.392855619 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.376264416 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.381131806 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.404367246 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.428155773 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.382323014 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.368016465 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.386803369 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.412899004 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.391361734 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.384320054 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.376366429 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.379542121 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.367470935 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.395706555 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.38181467 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.378418709 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.413912114 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.383109734 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.37773453 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.368258088 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.382574814 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.409829458 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.501363614 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.392997895 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.41508222 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.37992242 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.38561835 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.410514776 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.414284485 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.41379848 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.38589697 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.41428157 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.397644058 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.380336217 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.391659626 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.393956673 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.384282133 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.389361396 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.37717079 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.41109043 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.410619317 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.412377755 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.404692542 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.503554512 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.380208995 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.370347671 seconds)
done (took 229.244619997 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.440903776 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.378771928 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.471511399 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.378993968 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.481660463 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.480895362 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.37772398 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.376789515 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.379309867 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.756660992 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.378693774 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.376528135 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.377830692 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.378325659 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.460622372 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.379153561 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.376363623 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.717898801 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.379331599 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.450785103 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.37658048 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.378524149 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.379633112 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.761257316 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.378153142 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.375949032 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.450444144 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.380380712 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.754809728 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.374393657 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.378396144 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.726710324 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.471076332 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.398866902 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.390200953 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.3884584 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.48197289 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.400892867 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.461909751 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.461608881 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.474078385 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.419920483 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.375629549 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.377997954 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.383668745 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.381155745 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.379111211 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.408028059 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.38075082 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.379791518 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.720138223 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.392011858 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.389403026 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.380279828 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.379586847 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.401227429 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.380890171 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.382908946 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.474628897 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.384174465 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.444565024 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.764100797 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.758534629 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.38283948 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.379628095 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.381286984 seconds)
  done (took 107.614164744 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.450417136 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.459383933 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.501408567 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.383857378 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.434712005 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.506678303 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.384209802 seconds)
  done (took 11.41171339 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.389511819 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.385042764 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.434089509 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.432641652 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.384484504 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.597692715 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384123566 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.396031222 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.382244412 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.460398185 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.387333019 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.385874847 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.39096244 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.381071302 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.43226791 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.396131408 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.50013837 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.384986528 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.384526237 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.536628703 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382100437 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.393062778 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.460435575 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.396802844 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.386618211 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.390874876 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.294128362 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.385346087 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.384037289 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.385553323 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.38281678 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.48629501 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.387782616 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.383160562 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382866437 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.545096626 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.384550687 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382448354 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.387107958 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.385658141 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.386262552 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.38720502 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.386293458 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.383627245 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.385932944 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.407914942 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.386927326 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.38719299 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.388131447 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.387747687 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.460333326 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.388271653 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.384167954 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.384693665 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.464676442 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.395157274 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.387004111 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.384303548 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.387368664 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.384529456 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.539039433 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.435594215 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.387745619 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.434308519 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38844743 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.388084243 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.387088403 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.388072691 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.478686225 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.389202982 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.435819578 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.386205097 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.611790241 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.409795966 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.390444492 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.390457376 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.389979951 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.38817967 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.385985534 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.392735562 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.385745552 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.389395115 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.393420054 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.386070707 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.386212553 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.572029456 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.544794018 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.387098037 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.401070132 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.396073376 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.387147631 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.464484091 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.390380521 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.387013765 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.441325739 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.505857608 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.466400723 seconds)
  done (took 143.27775325 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.39411432 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.397844658 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.393534598 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.410729558 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.391536413 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.389862357 seconds)
  done (took 9.673819594 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.39322573 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.391054024 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.3898953 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.389501228 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.390347012 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.392800643 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.390040199 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.391274064 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.395440843 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.39074261 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.392564242 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.393116386 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.39383422 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.391481736 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.392301637 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.391669346 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.392100691 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.389722448 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.391566023 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.391125392 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.392886752 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.391558649 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.391795036 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.393628108 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.398256686 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.393413717 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.399527841 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.394136947 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.393200329 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.400770392 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.412999461 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.395080875 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.394803414 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.399246293 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.399782514 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.394089546 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398429874 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.394974934 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.389100171 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.394043122 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.395799199 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.393212293 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.392906211 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.394697889 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.39462645 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.398881101 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.399133501 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.400610581 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.393994978 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.395312319 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.395865743 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.393496712 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.395175809 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.395275056 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.397204509 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.41675585 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.400098276 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.395421827 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.393942204 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.395995987 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.39679655 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.395531727 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.39624081 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.400543921 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.392595068 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.395764149 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.396065348 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.399226387 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3948739 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.395584156 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.397370077 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.393095581 seconds)
  done (took 102.746477977 seconds)
done (took 376.008266416 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.400988082 seconds)
  done (took 3.703313396 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.507346367 seconds)
  done (took 3.809854381 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.53280495 seconds)
  done (took 24.841312309 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.50499396 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.42415278 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.417101009 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.396393063 seconds)
  done (took 11.045772059 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.713284338 seconds)
  done (took 4.015281486 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.398068786 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.396952453 seconds)
  done (took 6.098903571 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.745583788 seconds)
  done (took 4.048683572 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.823977816 seconds)
  done (took 4.132660125 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.408792178 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.404479586 seconds)
  done (took 6.124369217 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.373685956 seconds)
  done (took 3.676761941 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.253459868 seconds)
  done (took 17.557634586 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.3922165 seconds)
  done (took 3.697850978 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.420569059 seconds)
  done (took 3.724457285 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.351853118 seconds)
  done (took 6.653893215 seconds)
done (took 104.432147311 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.38958508 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.392255884 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.392341834 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.39052421 seconds)
  done (took 10.867819882 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.430493372 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.430967585 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.43208369 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.443032492 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.434787997 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.431398303 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.423993421 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.423473369 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.441330772 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.434264331 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.432859663 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.432554468 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.432315292 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.423091311 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.433768657 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.432955133 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.441662034 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.432069046 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.423990564 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.433735645 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.397910942 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.444197194 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.433886971 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.399413999 seconds)
  done (took 35.623939164 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.917359622 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.470097388 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.552231883 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.451275763 seconds)
  done (took 7.695781734 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.450372974 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.452298075 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.468289319 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.507646262 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.529972145 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.461998752 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.42659413 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.420926871 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.407188457 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.452575625 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.527579065 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.468733505 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.543815232 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.399817039 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.583656246 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.400385245 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.399158415 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.451927616 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.503423294 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.581410346 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.400516617 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.451818362 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.455798512 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.469374533 seconds)
  done (took 36.521780549 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.399908123 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.418060443 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.399354021 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.398060585 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.4084269 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.398952079 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.399690051 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.399850161 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.39888877 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.406110347 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.399508344 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.412998019 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.398816952 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.399092874 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.405778401 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.401809947 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.406881955 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.401065265 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.400927826 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.406679839 seconds)
  done (took 29.366972388 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.395361776 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.393833109 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.744800172 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.650957313 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.395083587 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.394809788 seconds)
  done (took 14.282422562 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.481462216 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.635785314 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.40294255 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.8227467 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.912040414 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.407210535 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.402615109 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.676311696 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.052445647 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.040517997 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.471036871 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.47894357 seconds)
  done (took 21.094680881 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.409452107 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.399811365 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.407206851 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.414980797 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.463894996 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.406290249 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.409564519 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.396426668 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.46967935 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.47155922 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.41018065 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.466122177 seconds)
  done (took 22.43442305 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48416829 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396991444 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.397167095 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462566496 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397604381 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609699679 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.454376994 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.157416281 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.422495019 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671912155 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407154158 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488864815 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.656251251 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39735125 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421357575 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.38415469 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632197917 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941197324 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400715963 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397807661 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429339843 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400301089 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403003344 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667027594 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399252024 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398663743 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.66116931 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39924579 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725709798 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419120387 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411044084 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399953021 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673979985 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111769348 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517825513 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.640429871 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401584847 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405917123 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.395795165 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.40382156 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433266968 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405652092 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41111693 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399919107 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400284585 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400136321 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173250143 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.426208405 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.398802308 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399938425 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707230814 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499921967 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.404321463 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400292821 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431494203 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400836728 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.404673115 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50234658 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97048894 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400522372 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425418835 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.427232861 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.423313842 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40690831 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122041497 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.411755365 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.407011838 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407001839 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402014415 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402010647 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423110919 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402544079 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.4277122 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402303035 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227682165 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.426286721 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407896531 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013190459 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405122498 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.409323192 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633172642 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401846983 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403207938 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.401787267 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402480068 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21756044 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416303906 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.390588698 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425229443 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.164756353 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.668519483 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42428276 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426926963 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.629222935 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.389589745 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404210378 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.418323743 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407821022 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425200819 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.171324852 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424956462 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.4079298 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663720561 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.616582472 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406731845 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.40408492 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938638354 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433340369 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.424294056 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416766154 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.652756754 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.072426723 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425350454 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41366666 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427205044 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404451751 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263662145 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411500455 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.509519965 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.412314054 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705418886 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.305610768 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409506843 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471644042 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409120432 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405947814 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406327656 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413257084 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.406062435 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.640371153 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430969999 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.421235135 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.407120191 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40633246 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.407654153 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410328379 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.411518182 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.631784578 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413778011 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685742776 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407707649 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407450197 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406640604 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.631797298 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.41639032 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.746970167 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673653172 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407861227 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412142685 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423178945 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426430874 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508395754 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431085135 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.417789862 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669926948 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.411787679 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.412759381 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409345601 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41275616 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415653493 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.415428354 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413466264 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104506648 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386238679 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411969476 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301698644 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.424165312 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477492108 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415507659 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.654936531 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.407868114 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435675479 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.41940532 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.406571623 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639411816 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420966682 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.41000267 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495398022 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.93737644 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098625417 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428448135 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.410553882 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.406780573 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.407102836 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410194419 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410524891 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409432939 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.65122506 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426518123 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407912872 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.103729405 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417148729 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409758712 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.420637754 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425066402 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.416890954 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412202501 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.407377477 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428709583 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425927251 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.426403389 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556163008 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.425925473 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410533033 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.929134285 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.419550802 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411295634 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411364373 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446406261 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410630277 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302653353 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674957999 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425780081 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.719862678 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417307488 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.432893212 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.41380597 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413850713 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44258416 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.433260423 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446695555 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.426793687 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415742631 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419134137 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981298241 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318685083 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041329912 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434286488 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.4217178 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417700258 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183935114 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434945929 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412956289 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681268396 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189030827 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434339969 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944469238 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.446207461 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.28941403 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721619659 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649158406 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422770088 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.415286125 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729582868 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633261968 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449802311 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421814188 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418294942 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.399379192 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023758794 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454519414 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49657749 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186096575 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436467122 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.419126244 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.498385025 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.415661566 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877218876 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.43637126 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41525625 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.427508034 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41945327 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287652156 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416897829 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413887501 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141138346 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.423569463 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.950643382 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438805683 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663160035 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.429714598 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.422549228 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.413641429 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.454588118 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.676556728 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721577911 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421341533 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416881756 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039260171 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.281273504 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.42297884 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417558298 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272177 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424917917 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.752800546 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.421299147 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.42944635 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422462231 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417952173 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417576223 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.414486984 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419050559 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38805197 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98199688 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.423856125 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46048523 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423141748 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273336279 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.676670927 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.431624234 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.089608734 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650549947 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425872078 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447514546 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.422366609 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421547127 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.410708331 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.418858268 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655159171 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421833037 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.643323379 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.427938786 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.406081158 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418060931 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630567974 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419887891 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420320371 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713692247 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.416974898 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.440634574 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342617298 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449007593 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.439783418 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424227899 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430977055 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449087943 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491478094 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666012239 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.432220567 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.431713396 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88184038 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440595729 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445273073 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.434971494 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514994863 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438281103 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.434277337 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.197640583 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099054155 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284671532 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.106757175 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.739703946 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.428245967 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423379842 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420676401 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570856858 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421149965 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695157617 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421727024 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.440419418 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44947229 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424816158 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426713123 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639355727 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699065294 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42248004 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425303531 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427377212 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.423096043 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.434043576 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.635072205 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979895813 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036135547 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42447208 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424078349 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.201996079 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719743031 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425459265 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423306124 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422955076 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.447902974 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.448054127 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.429291846 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431161653 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576825874 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728555407 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145773453 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.455631645 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.452047897 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.198889296 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427183158 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.684811085 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421686231 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.677322225 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103845192 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.241465074 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694644566 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493964613 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67363876 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.424564352 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572825271 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.422672858 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.428598858 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426133012 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27512936 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.421463957 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.435101718 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109003896 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696648245 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.429767698 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.424260112 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453575868 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.436277051 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.651341966 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.261329048 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.656012525 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.437183397 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.433616366 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.426056966 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10875098 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.743801853 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431433156 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.431230379 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.698772565 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.426486038 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452955298 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.880380441 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.424380999 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044112832 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.403342761 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449813516 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440483023 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.249379781 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115085256 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.447903012 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983913467 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429013296 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429868179 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706222479 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.432070784 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.441138567 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708321995 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.432087852 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.431502301 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681047443 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.106351477 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.317197548 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.453302855 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461274286 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.434640776 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427524769 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42976437 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428544281 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437026724 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.908314438 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.45040256 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429969542 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440833835 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.430041457 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448463549 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.432790867 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427868318 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.435332333 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.437691549 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.422932028 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.449121564 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535003736 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065007573 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45333186 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.107580024 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.762146753 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.688511559 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434189676 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.419348869 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.434970376 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429301859 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431256947 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432534098 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.429895931 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050039662 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.437104212 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.445868223 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435081961 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.647232746 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643022354 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.434632139 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685276665 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434997058 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450469656 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.416510012 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430769398 seconds)
  done (took 999.862980377 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.431604487 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.461698306 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.472705474 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.470341087 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.443511912 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.491798231 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.523663555 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.467080828 seconds)
  done (took 21.103979939 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.441836908 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.445468735 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.434645888 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.445041701 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.437142459 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.978712958 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.454698964 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.441606008 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.443679418 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.433041854 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.43691062 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.201769841 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.465635329 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.435997116 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.42488036 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.441260821 seconds)
  done (took 33.709947208 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.80205183 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.703909338 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.103934373 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.514692427 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.431964277 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.445191938 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.823936996 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.4641403 seconds)
  done (took 28.633668669 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.444859638 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.444087684 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.445684137 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.443720956 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.444237432 seconds)
  done (took 8.565047548 seconds)
done (took 1271.065652066 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.438244621 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.438934728 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.438471869 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.440415594 seconds)
  done (took 7.099244079 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.421304316 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.419120745 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.420462382 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.43368034 seconds)
  done (took 10.037519639 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.26269129 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.171610411 seconds)
  done (took 5.778876239 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.436085995 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.193872148 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.172576783 seconds)
  done (took 8.147937009 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.745817326 seconds)
  done (took 3.09008703 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.839706392 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.803154871 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.629713463 seconds)
  done (took 6.61704417 seconds)
done (took 42.114659084 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.450970189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.690805399 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.591317304 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.443150207 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.597281297 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.591902563 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.350340948 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.436378237 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.445412732 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.441205902 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.444806108 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.597932713 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.332060415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.691411844 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.333620671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.688177912 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.597277009 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.43563715 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.437848055 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.447370813 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.35083966 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.449818868 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.451461263 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.439011344 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.602413993 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.581149175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.44595219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.689289549 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.442759928 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.444742892 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.585601948 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.450212555 seconds)
  done (took 85.324281222 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.443261692 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.435577698 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.438086179 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.457215428 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.437680157 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.460222861 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.449832989 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.436216995 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.436046634 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.441039417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.436720523 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.44476427 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.437534075 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.470718256 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.43680783 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.472983839 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.451768877 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.453485609 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.44068533 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.438062575 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.45649116 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.459007544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.437158036 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.437569101 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.455802375 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.437681088 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.45679253 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.468120219 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.437302238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.458154117 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.443741376 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.456815305 seconds)
  done (took 79.671458431 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.455061062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.438280734 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.47022842 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.437473212 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.438326697 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.455185729 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.439987523 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.439135234 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.438242156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.451008455 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.444309318 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.439401097 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.458940481 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.438310927 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.443040563 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.440079577 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.4402739 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.454690365 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.445841326 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.443505476 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.440882533 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.439670304 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.459388481 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.440634752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.476395413 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.455587298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.448490663 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.439966028 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.441744314 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.443904972 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.461830149 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.443002497 seconds)
  done (took 79.651862674 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.644892785 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.4484816 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.448641673 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.401926277 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.448842318 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.448033398 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.441368773 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.644255878 seconds)
  done (took 15.277769868 seconds)
done (took 261.268967868 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.441136193 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.447297104 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.667316359 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.476235456 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.441070987 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.474634407 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.469084699 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.693725105 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.465737955 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.720567417 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.479574855 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.471184349 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.449954224 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.473188114 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.751969681 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.6086605 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.460467168 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.452729183 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.81817141 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.466736054 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.737173826 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.447715632 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.752180377 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.454987913 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.462637279 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.442603724 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.444040431 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.433089026 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.489553484 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.827059609 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.468356659 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.434432509 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.568374279 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.567094745 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.683915842 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.623796217 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.448489501 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.544673654 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.690921637 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.464085436 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.448994657 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.298971201 seconds)
  done (took 86.814865748 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.450961351 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.573423624 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.451984098 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.451975755 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.451954703 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.576107754 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.549682015 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.451750269 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.451912433 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.450271117 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.450818462 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.451462017 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.45149255 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.451607809 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.451384784 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.451911836 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.451169965 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.454232746 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.454928128 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.499123768 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.580557327 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.481231719 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.446878872 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.452585576 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.556410193 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.597894652 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.451795709 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.445955724 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.49727378 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.45365569 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.457088746 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.500440272 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.453556469 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.45369452 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.575023341 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.556208172 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.456467204 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.450326679 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.573527889 seconds)
  done (took 59.224697704 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.453187873 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.723821436 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.930524924 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.466605488 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.463179796 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.459412949 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.546259554 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.459658499 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.458232857 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.458254741 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.617185215 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.458196694 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.491756992 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.956839084 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.46320289 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.455504835 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.455600195 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.4555908 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.726177307 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.464575082 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.568477831 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.459411196 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.547715326 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.467852497 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.481745311 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.45732415 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.461139828 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.057253831 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.460199482 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.619270656 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.377414943 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.545386987 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.995317161 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.94049643 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.386496948 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.463681297 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.458048252 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.623666812 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.459259634 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.457336173 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.544274961 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.459204304 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.93681648 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.174191247 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.481925422 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.458730536 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.082786062 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.624088982 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.74754152 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470213408 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.965915749 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.465584975 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.458993178 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.460197071 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.749346248 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.469218349 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.458162307 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.1114757 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.487368037 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.548779397 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.465240884 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.45916249 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.735195795 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.458725427 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.732465535 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.46242559 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.465774719 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.482686165 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.936771034 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.465206983 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.196966605 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.484565969 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.459941432 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.62232526 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.725597648 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.118170611 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.463625841 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.740431422 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.012178162 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.547732341 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.465557758 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.048748613 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.550702048 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.465310318 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.463330974 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.461282243 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.462207447 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.506827809 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.546669917 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.123302974 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.179955193 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.134064914 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.569839139 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.475059496 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.460800167 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.106226968 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.481849129 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.462317798 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.931100939 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.195203778 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.483809296 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.468776394 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.1987098 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.486975594 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.551308443 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.466780708 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.946893223 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.468077539 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.507029307 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.462005919 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.468194135 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.486824934 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.55298939 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.466920961 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.463193902 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.163089446 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.655176721 seconds)
  done (took 193.188715454 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.455874641 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.47787559 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.454795287 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.477425867 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.454048785 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.46457943 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.454383296 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.457024935 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.462430307 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.456189874 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.454666796 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.456420515 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.455434768 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.465321446 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.469186042 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.464017031 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.455556568 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.457246247 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.45758983 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.458455992 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.456935381 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.479375909 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.457728511 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.457226974 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.456240561 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.459301051 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.465521792 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.459658076 seconds)
  done (took 66.26541345 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.464263527 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.13768169 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.470068287 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.616384042 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.492983802 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.46680439 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.617683797 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.534703377 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.465906379 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.462090214 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.463940324 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.810385964 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.465705757 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.075555112 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.694005541 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.623170027 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.082023911 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.491215725 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.462895746 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.464210676 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.618992177 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.482337021 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.808995023 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.112652286 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.467340954 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.111933477 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.456824927 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.466511607 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.464442748 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.121854177 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.468799428 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.811002169 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.554276228 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.533711474 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.136861796 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.090501783 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.111300909 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.642445084 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.466547147 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.46345753 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.464624402 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.456665672 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.149131184 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.474465843 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.468148933 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.145784479 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.49416042 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.470254358 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.473589703 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.465098943 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.53521858 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.5376602 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.835642949 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.157738353 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.559596901 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.479916212 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.617613731 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.905595392 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.4708673 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.085511653 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.479855048 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.152891616 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.495275598 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.457101656 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.467962007 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.472572973 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.639594877 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.618450414 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.070871803 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.494502629 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.056642755 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.661146899 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.467180704 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.468086327 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.469796287 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.15624054 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.064492658 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.660134381 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.622425216 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.695759994 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.463830583 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.470005088 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.459515394 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.557310789 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.469520625 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.156106593 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.086664223 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.490445953 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.470915026 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.471388664 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.470956213 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.672405929 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.176593239 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.566602924 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.065743875 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.862628133 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.846135312 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.475725342 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.536917592 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.490297125 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.84228784 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.481871798 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.536159873 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.939261622 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.841076466 seconds)
  done (took 176.939917862 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.736179905 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.493064575 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.573551341 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.643395766 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.135945439 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.10851389 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.465118292 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.60531912 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.5918485 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.755271168 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.476183967 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.586597692 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.712449981 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.555198672 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.231971684 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.549881072 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.577290571 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.639998498 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.625708603 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.466895199 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.18706511 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.797497904 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.672621906 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.489999983 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.586559952 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.347412047 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.098767024 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.005755479 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.658475042 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.486313376 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.0482816 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.482738039 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.486172502 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.240737352 seconds)
  done (took 68.492766398 seconds)
done (took 652.276834361 seconds)
SAVING RESULT...
DONE!
