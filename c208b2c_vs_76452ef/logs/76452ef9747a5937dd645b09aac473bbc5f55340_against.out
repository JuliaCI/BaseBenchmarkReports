cset: moving following pidspec: 31970
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.389246188 seconds)
loading group "string"... done (took 0.509056987 seconds)
loading group "linalg"... done (took 8.584236309 seconds)
loading group "parallel"... done (took 0.172317831 seconds)
loading group "find"... done (took 1.290994449 seconds)
loading group "tuple"... done (took 1.979215084 seconds)
loading group "dates"... done (took 1.384648603 seconds)
loading group "micro"... done (took 0.20411686 seconds)
loading group "io"... done (took 0.57875387 seconds)
loading group "scalar"... done (took 40.94871638 seconds)
loading group "sparse"... done (took 12.989287658 seconds)
loading group "broadcast"... done (took 1.038697984 seconds)
loading group "union"... done (took 14.142815064 seconds)
loading group "simd"... done (took 4.890649284 seconds)
loading group "random"... done (took 9.795590318 seconds)
loading group "problem"... done (took 2.075238262 seconds)
loading group "array"... done (took 23.561438652 seconds)
loading group "misc"... done (took 1.081644367 seconds)
loading group "sort"... done (took 3.536095334 seconds)
loading group "collection"... done (took 21.079141627 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.58213817 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.135208375 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146513053 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.17573265 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207191726 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137487319 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155021228 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.46110752 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.060995154 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213050747 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142953785 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525758212 seconds)
done (took 5.697618262 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224071265 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.073039422 seconds)
    (2/2) benchmarking "String"...
    done (took 0.126481267 seconds)
  done (took 0.903005532 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073671976 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.173532877 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092892137 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.108876165 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110005949 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.091740123 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.109646301 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108714539 seconds)
  done (took 1.501347653 seconds)
done (took 3.413524381 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.770505336 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.837623678 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.506614115 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.126415795 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154533744 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.130442875 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.303253592 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.157299224 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.107470356 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113222536 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17525563 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.346461827 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.482669996 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.924710215 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.10725007 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.12768123 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.079222308 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.699672731 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078804172 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130539551 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.494549548 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.107599098 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114352484 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124505863 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.205436858 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113382115 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.1811449 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10725142 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.670969496 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100490203 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182047494 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095833295 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158876231 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.22666284 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.076430393 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107168678 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674050364 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.188770209 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108870535 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.091797769 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675602698 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07604752 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.1922967 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106488993 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108577227 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.187983478 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114557725 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075747967 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09889298 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085695281 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.169379118 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.4706606 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106480056 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141075867 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094312386 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.703198371 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.093576298 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15383452 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124437099 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107597814 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095328647 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.091288714 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.171444243 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097631339 seconds)
  done (took 19.57600031 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115633964 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138511116 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09281599 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137132255 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139500913 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094904011 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082419465 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091869083 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.10794044 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182073728 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136351772 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.143773594 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072202658 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.095100381 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11456787 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231279686 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118366969 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118245313 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080022683 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10478461 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120123805 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10981353 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10657004 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092498842 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167933189 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204687968 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.120601949 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121104927 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076233508 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112618765 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141495791 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.158412585 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074569759 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091997955 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.179349986 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103226837 seconds)
  done (took 5.098721324 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194845057 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11904619 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.185173306 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.173245213 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149942261 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161244766 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115832392 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.262326561 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.153584953 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17833526 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126933126 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097119232 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093445963 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079514826 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09258898 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.762578075 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.142763333 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.166496748 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121605232 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100748129 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079944459 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.372654471 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098497098 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.076370674 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100194565 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068794822 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.183218101 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082545548 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.218640886 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098782418 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106687175 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128519641 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190965239 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.160747437 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126028835 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116987307 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102231711 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076912569 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.214573385 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08667008 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093407388 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101267111 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13208371 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134737408 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09593473 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088070501 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.241290983 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080287199 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113394884 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.020403467 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197508685 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093778309 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094217655 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.334386821 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.112475226 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082187272 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095467931 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279646308 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134065282 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.077140299 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076264182 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099811377 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076599611 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.404141513 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084626339 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.880885833 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095157216 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.152114995 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095428217 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084743783 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100092843 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083129239 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114621079 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077627852 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094551126 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078233145 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.075377396 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099687399 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111877163 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082421977 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094696828 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14386072 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095527396 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077310949 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117955563 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113131104 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107513389 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098014465 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076303018 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127583322 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096489609 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077752628 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098380208 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119304923 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102666365 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111916009 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096672687 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.124197112 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094133868 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.174110548 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079683967 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122599959 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096866244 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110372751 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115141815 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093542867 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081031825 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.091863572 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077853577 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155326869 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077286643 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076027779 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097233795 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107660816 seconds)
  done (took 23.118137545 seconds)
done (took 48.495409556 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.419454451 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108176526 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108807495 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10933761 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107025035 seconds)
  done (took 1.633450782 seconds)
done (took 2.388585175 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.320456151 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196149455 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08480296 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188031606 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085416853 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.176457458 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.178789946 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097945498 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204938636 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080205217 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164076635 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099429364 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101778401 seconds)
  done (took 2.759530635 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090206883 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113911131 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078570736 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087600551 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08949497 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087374585 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104354285 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108119444 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104220487 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081636865 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089931991 seconds)
  done (took 1.785201039 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088765189 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111815102 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077988114 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086550304 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089934867 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08724489 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104760455 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097694428 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104451438 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082246615 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091708452 seconds)
  done (took 1.774237809 seconds)
done (took 7.063490723 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.123709195 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.495114902 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120772363 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.16693608 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.328290422 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.196443807 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.619320125 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132090122 seconds)
  done (took 16.129474486 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.125545155 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097328969 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076275483 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094322844 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079926961 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095238421 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077314348 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096002604 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.080263431 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094194667 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078757969 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09272906 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07848695 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095672986 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076681972 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078397146 seconds)
  done (took 2.234080894 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.113379829 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111983185 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100169628 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.086388131 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098442699 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.081387486 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103293292 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099915387 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.079735983 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097118561 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.086269174 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.101610868 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.08518281 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094995046 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.083498729 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.103063695 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096613538 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082889863 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101141487 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08450906 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103107395 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.081441347 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.100770873 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.085592977 seconds)
  done (took 3.124320995 seconds)
done (took 22.239646883 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164484329 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082391786 seconds)
  done (took 1.003606421 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098847748 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116236839 seconds)
  done (took 0.979839229 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.104869721 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094008109 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134409805 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095119977 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094629968 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077685989 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127987798 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09474028 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078075482 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095298203 seconds)
  done (took 1.761904294 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082058626 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098197193 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.087368877 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115782779 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.089482541 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097323142 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082852709 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098982952 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08409873 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093229627 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102262569 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.09885991 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.101309385 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114926245 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.082586895 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100880569 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087558239 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098569995 seconds)
  done (took 2.478718175 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076557279 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079280874 seconds)
  done (took 0.921307318 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080096486 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092930553 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080894021 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096787972 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076338828 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092529881 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076020035 seconds)
  done (took 1.362660704 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.471958199 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.18014348 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.322152856 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.111266477 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.131491581 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.341753405 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.131385792 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.110531514 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108925886 seconds)
  done (took 2.716697232 seconds)
done (took 11.98931977 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087770814 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.130236727 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.480653696 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112081202 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.074970955 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.155499587 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.258428969 seconds)
done (took 2.067021408 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33597508 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12057627 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085775481 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075793936 seconds)
  done (took 1.384722893 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07621421 seconds)
    (2/2) benchmarking "read"...
    done (took 0.083175475 seconds)
  done (took 0.930271601 seconds)
done (took 3.08760779 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074806927 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.124490576 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07601847 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.091377502 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075242294 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.072321019 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091280292 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074822879 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.093432784 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.074721999 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.075278486 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091922776 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07285395 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09004625 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074992221 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09243736 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.193017201 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.072892599 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089341062 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07301088 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092015647 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074735661 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.072139103 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089883164 seconds)
  done (took 2.907761129 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10092235 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093781989 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082358147 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098316327 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080289311 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.098484572 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081857762 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094158007 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.098965607 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.077800043 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096831814 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.079367494 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094734643 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.079874385 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095410376 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081080333 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099221038 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07636999 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095462069 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.079903001 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.098710598 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076507459 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096143527 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082081847 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.097281669 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079098648 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.094964258 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.07594784 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098499313 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096517595 seconds)
  done (took 3.454682483 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081781839 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072959057 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090163067 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.084511852 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089569569 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078244802 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.090182525 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.073983281 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095591338 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.073175741 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079007309 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090684529 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.073209752 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094856512 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077608929 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098239557 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.091460247 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090708982 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.072973124 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077614445 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09713892 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.073474124 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093414666 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07348926 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091366652 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073448621 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.074080859 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.090230062 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073936465 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090521833 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078746373 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096514626 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073491298 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10381975 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08082203 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.072896367 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099298108 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.072401722 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09507355 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07371822 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.091096092 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.073462342 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090665811 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.084474372 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.075804268 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092117961 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.073440761 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094929067 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077144506 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097270687 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072237271 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090546817 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078574388 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078157766 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.096740433 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.073362221 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091649167 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072614123 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094968161 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073136627 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072042621 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08929307 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.080701103 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09133723 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096809242 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101628641 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.073164277 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095648169 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077839522 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098922095 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078930881 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109465347 seconds)
  done (took 6.867945455 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077922565 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102002046 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075359068 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074601206 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089041242 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073469232 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098367209 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073796053 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092200051 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092372378 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090704164 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075436665 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092540989 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077634613 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091539668 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.075730828 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102505466 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07180811 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091257586 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07739686 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073766484 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097797727 seconds)
  done (took 2.647391552 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.220664397 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102022295 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.13756156 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092593363 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112543222 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11078959 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080824849 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099530729 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080630628 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101938118 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102879527 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08188137 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111868878 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102313749 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084589233 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103611888 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081311712 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103172706 seconds)
  done (took 2.694272843 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090105134 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09480424 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100520606 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094124659 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07716375 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097113894 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083440439 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111109219 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07989791 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094887397 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087611884 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09657892 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.079835833 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093824289 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080036674 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094260423 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.080522439 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09416144 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088031618 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10102856 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100800522 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087915883 seconds)
  done (took 2.79115714 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094709259 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096249189 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09869849 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099554113 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076091485 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095303577 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085256453 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094905987 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089528481 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.096011528 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078060182 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096412376 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085067073 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095656446 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084467471 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095493403 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079699811 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095247215 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078999361 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09357631 seconds)
  done (took 2.5957604 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11929034 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108761414 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09461116 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12126055 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109436787 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091699394 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120448275 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091649474 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109132635 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123301639 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090954791 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109475962 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103799454 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115513118 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10887623 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103715835 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120546061 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120632915 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091878465 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109156421 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10514752 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108934362 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120997813 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091645494 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108153047 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091793065 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108895608 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099201371 seconds)
  done (took 3.787027732 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076205757 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075836145 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091893705 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.07453605 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092208826 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.073543089 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0737754 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091923356 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076537245 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091387325 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.076253088 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094152127 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076858812 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076057744 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093301288 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.076985594 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094414088 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.074239007 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073802775 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092237705 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.076604569 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093871455 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.076145406 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09249221 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074057505 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.07645004 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092261902 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074166885 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094787492 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074644857 seconds)
  done (took 3.263703959 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085587731 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105207779 seconds)
  done (took 0.983374953 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074260514 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111727921 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.074118239 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079132125 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101307425 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076397209 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10477493 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099939539 seconds)
  done (took 1.512304614 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.10138542 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114830913 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083606346 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.106831313 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095774628 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.114391725 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159325312 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083959655 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10369186 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078687193 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113855444 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.077442468 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103464179 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08268147 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104023741 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092408074 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09673126 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087499191 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103253132 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080526895 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101086565 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093883864 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106619225 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084661902 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.098320739 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089492534 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110222628 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.107250568 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083837166 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107485531 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085457509 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089147672 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082946513 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101392194 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078593243 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113923658 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096715246 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101504018 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08787177 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102038791 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086846729 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094360721 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08957661 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103777104 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090719121 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101466068 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08483774 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094511332 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080046619 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.100146255 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.077477358 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099428784 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.072662298 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105369213 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087973098 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115233893 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081295649 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10039161 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.082726591 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099406699 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.085518056 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099623979 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089668357 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098510708 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09000231 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105085859 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086077207 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09362517 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.071963592 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096454797 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.087416607 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120092964 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089355083 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101441332 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08418034 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09680023 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08372711 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101963751 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085719835 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10672515 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082178987 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103569312 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087610458 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100095374 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080644106 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103391802 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079087214 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.099536497 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079023022 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116319756 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079411016 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097046505 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078507457 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106248427 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081515969 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099466442 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079310126 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104757095 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071755243 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101587731 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083983099 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102398092 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.090399692 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101614744 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083830928 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104634064 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089371936 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100697423 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08112213 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091550624 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084574382 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09874773 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086470091 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089384888 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083042958 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100483641 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.08418457 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.106889078 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079955664 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101315428 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090084792 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106877808 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080171147 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092442218 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.083661081 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100607172 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088628307 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10861292 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081115972 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094667828 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077365015 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105453629 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083189957 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103320762 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084503366 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10214084 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07240683 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097684334 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082694141 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10813733 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082033379 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103037572 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.08898522 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103369142 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080926943 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106950322 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.080779935 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096381516 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088420558 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101378944 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077070069 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107312835 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.082737509 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098629775 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083694817 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106394337 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08368442 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101382106 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080837516 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101203303 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084973693 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09656841 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083212901 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098329858 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091547885 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.100762707 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076707126 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.074398366 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.103083596 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.078700153 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10085607 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.077510194 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101034101 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084719385 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097250195 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082824938 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.099876701 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09338472 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109736619 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084110044 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.104739063 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.089582329 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101120292 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085692292 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101055567 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083982017 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102775477 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087746617 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104029234 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084065558 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101386065 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.074391837 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102777234 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088918992 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.096979363 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079356555 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.096702211 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.082752343 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108330216 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.082385764 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101500009 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080176057 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103297938 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088477164 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100412977 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082505052 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.096966793 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.082688605 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104831597 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.083791686 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10225995 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.089648254 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101878195 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076540077 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106218903 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080088834 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105439018 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077409139 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078698746 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098178263 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084762437 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101708005 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.082244181 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090788565 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088237736 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107550627 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08443181 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.096328108 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08304177 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109996401 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.081446086 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104191031 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.083333426 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.103957473 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115966096 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079313736 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.081918963 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109302589 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101530573 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072534622 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.085525102 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099522549 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.077115831 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099552437 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.089838084 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102194136 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085248588 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.102653601 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07309552 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100195411 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080539566 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.097862271 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078039226 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.10577734 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.083963652 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.099893969 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091814502 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103001451 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.084456175 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103004962 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082587254 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102010175 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084658399 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101771805 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084551686 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.099536545 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.079194816 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101024639 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.078420309 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077951112 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101095427 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082612554 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102955932 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083967269 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100588955 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088340769 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.101809755 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083141741 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119900053 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098514537 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.078546352 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102547571 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085684876 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101045967 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.082753884 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095580758 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088596176 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10119071 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088660227 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100739902 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.07544371 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10188633 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.082963638 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.103105542 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085813888 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102780356 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.081811886 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082269982 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102492769 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110952799 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080120241 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.108331275 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08523985 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104101523 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.082523771 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103308287 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.082067077 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.096766013 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083033619 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102306087 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084388618 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099413864 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.085425255 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.101803034 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082233331 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099700828 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084355456 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102155743 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084828009 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.072096318 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.097541345 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.078659447 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102281729 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087832798 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103343924 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082114302 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099043244 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084443345 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100948882 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.075885987 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10446 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086477553 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102898144 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093123535 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.097324653 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083910772 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112058871 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.072634466 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099626707 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079544166 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098522512 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088838104 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102813319 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.089193569 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102476836 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.079496403 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094473675 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085205984 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080402974 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093102228 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079662507 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105371235 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081412924 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100107169 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084065148 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104443842 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085431115 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105341072 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081709942 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10188954 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084033394 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094334366 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080483981 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.09780103 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.083454595 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102503573 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080064551 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.074872742 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101181565 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082591488 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102951422 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082098429 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.100949536 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088905979 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101251232 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.083355068 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107599466 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.072580526 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.101946765 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082410506 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101425873 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.079122372 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.102799517 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085036609 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104199085 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.088320989 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10155339 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085587698 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101371913 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.079606346 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101363939 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083643123 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102461251 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.080294269 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103606902 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089778995 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098230208 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.083685506 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102572609 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.081008526 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.103170476 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084755596 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102536489 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087243696 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082561556 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103171663 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.105011317 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.083461058 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084229773 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105061399 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081183302 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10725853 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078054214 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110466506 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102475759 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086588857 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081260065 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099459437 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082447601 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101246983 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082833814 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108394133 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084033657 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.09859369 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.07880581 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099087981 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083410328 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107466394 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088796397 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102273178 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084198657 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096340284 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.075978277 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103743273 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080455391 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100438328 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.08670955 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106290508 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.084462623 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.099910348 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082000885 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.107209881 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089019633 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105363786 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080334434 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104856929 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.0855527 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.102082167 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.081971029 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101639912 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085322673 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.105075969 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.082476796 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.098733081 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092909289 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107505506 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0857281 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101465745 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087344781 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101790229 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078446143 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103889197 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084119368 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105492343 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084063556 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101271301 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093920829 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.098509803 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083424616 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108187005 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08252438 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107871598 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077494197 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103814602 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085994716 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104482463 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077565862 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.098078816 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080156575 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.102635523 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08055564 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076620372 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113877687 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.107415493 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084139395 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100546692 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082363818 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096682783 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078103271 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.078662845 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104980389 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.081450492 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110946937 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.078923821 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.098594857 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.077495844 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102396775 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085062591 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105168553 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077069396 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096415421 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080309981 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.102675216 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090782428 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101004103 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083873838 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103180938 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083955451 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099191633 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090434305 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094244541 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084810005 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113861056 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084659157 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105090248 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.087885783 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108819399 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084510168 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097198146 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085716801 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103129185 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085276733 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103636035 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087107753 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118273032 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084025866 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099090691 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081578368 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.102544741 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08065487 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11168889 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085740068 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104278941 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.084932822 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101534687 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085736485 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109779953 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085938977 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104652956 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083949584 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100791658 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082625012 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100562992 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083073727 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105238494 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085499494 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10270385 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.086919071 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.098466652 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094130084 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109969557 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085615046 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09530852 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.080226215 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098807133 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078701307 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104456427 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.078175188 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080785587 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101172784 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081715681 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.106074757 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085794564 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104186153 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084901989 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102450189 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.073351368 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106465457 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084023727 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10576244 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.076399914 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103148476 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086047396 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107899612 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089382195 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100910642 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085288112 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.101889474 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086014555 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097671611 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.087528537 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100714818 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.082523838 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098793909 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084330629 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084368027 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106054497 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084156428 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106524799 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.102772556 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.088599187 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10617765 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077143314 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.07575991 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.106799833 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079946732 seconds)
  done (took 56.198447757 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145460217 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085201232 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074131324 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095378856 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121803907 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07966697 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094412409 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079947775 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.0979931 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088604951 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093694456 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07548442 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116511413 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12292448 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119821758 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089474684 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094128257 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079182702 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09353102 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079743606 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115825393 seconds)
  done (took 2.885663857 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100070834 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113175669 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111499237 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097436327 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10601241 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11246364 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.091185601 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113431698 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116485545 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087726886 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117726838 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112739858 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087167793 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107138907 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107041626 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090070709 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116907601 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086145001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113900432 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111413055 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089671059 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111693896 seconds)
  done (took 3.141201917 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087921719 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081541489 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.108462568 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.073197288 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101895081 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.074627324 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.109082333 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.07699274 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106582122 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.084138349 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.09957959 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.08391524 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107453412 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.07461034 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.0803113 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097309859 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.087925554 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102870885 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.083740361 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096844097 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.122744768 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.077803529 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076267616 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.101602681 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091152701 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104810576 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.082177702 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10212462 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.080394546 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102764149 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.07673784 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105433122 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087627526 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.099827056 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.081055857 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101231682 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083084577 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.076748972 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100089432 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086417675 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098051583 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084278731 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.110612586 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.078982169 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.096399251 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085372606 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102913788 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.074787336 seconds)
  done (took 5.235975303 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114487191 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.151899884 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.081732127 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142882384 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119672106 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092291394 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104580595 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141273898 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.077378771 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.102584914 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121664429 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.096378853 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104475968 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088666394 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104196268 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082361463 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105947879 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096804221 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089142205 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102040078 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.089145277 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106264414 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11698649 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.095785524 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107436465 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.081381139 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.099625962 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108070621 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09496521 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109751116 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.08869147 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111497624 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118563865 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.080818824 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102317142 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.085878616 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120731996 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103225849 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08592576 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097276992 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085841139 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108343538 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.086867074 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120477249 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10446913 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.08480578 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103323824 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076274854 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116049377 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105601956 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093796954 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118419488 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106876855 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08454503 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109355479 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.098353103 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104707936 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080766498 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107980027 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113588767 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.077672453 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107241758 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11696743 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08567781 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112154425 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117842434 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.085302707 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106940517 seconds)
  done (took 7.936295258 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110915133 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10936564 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100850067 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121627019 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109574696 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08757999 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10904451 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.108470602 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088768259 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115898038 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089351962 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.156848161 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.105178852 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094734423 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109562844 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108753507 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.089725655 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108469606 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089033211 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109173013 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.088740001 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120880237 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108519114 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120473604 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101995608 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106253133 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088124522 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109111683 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120304406 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088856052 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124046153 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.108375318 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08911473 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121306723 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121236213 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089070886 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10286519 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088988628 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.109483554 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108831817 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086196929 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121166323 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088439082 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107492908 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087783724 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.10966576 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121508197 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123522528 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095911054 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117775455 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.108455719 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10141209 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109448076 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088690144 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121330668 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.131708037 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121828311 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121786087 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089072832 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121047342 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12133697 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130623532 seconds)
  done (took 7.518452805 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080209664 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07951636 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097785188 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077887163 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099996468 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077476893 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078751809 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101239079 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081946809 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099162327 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08012093 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097275166 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077934471 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079441187 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097935958 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078122692 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09685647 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077383951 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078203597 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098238586 seconds)
  done (took 2.591583164 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088556908 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121595517 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.081690707 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107983332 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082217545 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108106135 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081587691 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103291684 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080200213 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104355019 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093186373 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114300146 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100967495 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088086855 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113939786 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107489488 seconds)
  done (took 2.435457864 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101764489 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123343125 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12629058 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086609522 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.099445048 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.089581608 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103216382 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.076268932 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.074788608 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109498033 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085346295 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107333722 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082308484 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.099872592 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.080527686 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107125634 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075711446 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104797057 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.083383489 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125531039 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.083903217 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105339095 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.083200776 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104013255 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102988007 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.085776121 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106830456 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079408311 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098690826 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.084549083 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103264654 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.088047263 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096455213 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085583386 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098222563 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.078258084 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.082988039 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104626266 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.105904768 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083366815 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.0777389 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105033903 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.082729102 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103331582 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075503979 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105062721 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075467416 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106772151 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081828761 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105294188 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.083100944 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110524346 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08719958 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11404702 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089821221 seconds)
  done (took 6.066334002 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095722475 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105552151 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086085775 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098323806 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085055762 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109453104 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085591144 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10362663 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083296183 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097130237 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082959699 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105713089 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083755186 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105014522 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082946561 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104034992 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075838743 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081090441 seconds)
  done (took 2.536553958 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086245205 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079387141 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.109251327 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079685288 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101010375 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082050084 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097634576 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.079226168 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099261581 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.081091566 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100198282 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082771279 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098220478 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.083788737 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079367538 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10256823 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081812565 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100415087 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080059884 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096984748 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082377059 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098249711 seconds)
  done (took 2.848864592 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.09812727 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.132304998 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.094870981 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.144248223 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.10525623 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.084456972 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.114370417 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.084989588 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.123164201 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.084124056 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.104415886 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.08504184 seconds)
  done (took 2.119330276 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104463875 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139213792 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08126266 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104320162 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0941217 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108168394 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10645092 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086438929 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120314943 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120298844 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086011029 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121467994 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120381522 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097067097 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117318891 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116222578 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085107538 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106889663 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081211314 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130228554 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10760644 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121037028 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086550826 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105732138 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085979673 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119826437 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120213215 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120803906 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086553195 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121919836 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115426149 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086835732 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121492213 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120669293 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083420438 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121711063 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085407734 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130668214 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116074517 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117582986 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082974274 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115850736 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120969178 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093847167 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121216475 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106177217 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093446239 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107066832 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085629512 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136748035 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115833769 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119041258 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094747221 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122594256 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121091214 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136558716 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121141192 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119556026 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096032179 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121224004 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118468972 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095597969 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119739471 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121223912 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115518257 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098376186 seconds)
  done (took 8.074413679 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121466545 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104135864 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08574485 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120839853 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119273816 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106106083 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08669395 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106720592 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086074313 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10391338 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154087643 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08744924 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119190426 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118480912 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085842346 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106855402 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085923808 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119135064 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103065992 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138192634 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086316422 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120065391 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119440885 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119403098 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099656496 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116125246 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106761306 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086338693 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105894524 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086888111 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114606133 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085431706 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119785377 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103307641 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098004087 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107807666 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105723965 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094149726 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10758627 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09444097 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119621102 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130419369 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107293172 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086862855 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12242166 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106789602 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086597273 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102977514 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086298469 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103660032 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121573249 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10011436 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121699499 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119963919 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085570588 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10823527 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10693979 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087074235 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107275282 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095809668 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119963378 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107629313 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136849048 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086680091 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107391889 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119576593 seconds)
  done (took 7.898406259 seconds)
done (took 151.763962585 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099332498 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138109813 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095366989 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164711271 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081477105 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.137596616 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114952648 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.11789457 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.082079034 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101438202 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.082230946 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.104541078 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.147995641 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080624127 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.102779489 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.08370313 seconds)
  done (took 2.60668371 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.177669499 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.285244437 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10118753 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10922186 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087589536 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.106603261 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086062416 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.108984533 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.081774151 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.11538828 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.082981939 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.105273548 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.092164315 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106357575 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081796362 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106067383 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.113699164 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086627014 seconds)
  done (took 2.914050665 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113159996 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151650797 seconds)
  done (took 1.144287183 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117415617 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183762363 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.537708968 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157173174 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11076983 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126184222 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158307627 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.101090456 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.222858684 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127805486 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.106446399 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.110244352 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.134051724 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094626969 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111700704 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.08823672 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.137616132 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.08905287 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111003517 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088347572 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.135175274 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.109155394 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093946171 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.110765543 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18436866 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124747415 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088790246 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109548225 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.089617789 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.110364566 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09351923 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125009084 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.124813356 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.167368093 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.114814113 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.164952923 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118238855 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086550391 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110549192 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086276596 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.113574338 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.113474321 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102328926 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.108658584 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087650361 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.11748263 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087495716 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.110139774 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117295891 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097456478 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117613407 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113912297 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.163862781 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118104435 seconds)
  done (took 7.709117865 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.789196941 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149440574 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086541755 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.891130063 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139563122 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100815583 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.791299363 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130710349 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236459146 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.784749182 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127370525 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123550623 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.210019251 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.274243098 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.11990583 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.340227923 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.697947815 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101009172 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137728962 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151297319 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094442593 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138871484 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128937167 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.426820462 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.086801568 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109488698 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091795077 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12282874 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159635569 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108924663 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090730092 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203407349 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.265661395 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182863078 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111051854 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084493867 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108731738 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.16829431 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269790987 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196460701 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176895599 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105920804 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085234972 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123125896 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13024018 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083374995 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163590263 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.196674551 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.176380569 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090642528 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123682457 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118016306 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099643329 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.183267449 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.08479471 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.342837636 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.342796301 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086238844 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11817221 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107027352 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267776861 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108900124 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204914281 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137265582 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21537836 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085782604 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781263988 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166988349 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0849202 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120892365 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122314798 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09159513 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121662606 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167244536 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406105034 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124169478 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091895408 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107852793 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.209394866 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084993359 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109387094 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165067703 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111262868 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096136533 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126069583 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123690698 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172982161 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.249550034 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124816375 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095010324 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116413459 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122350469 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.088197813 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212207291 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222127396 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.15823491 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23484594 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100123795 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164601067 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189078072 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099532119 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193414196 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.095677537 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128919049 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121741696 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.195865957 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.141944977 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109143568 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092674401 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117358851 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.145363959 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089581098 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119107832 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170880001 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459468647 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188035258 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08439087 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08926974 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119214867 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162115335 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117574899 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238055463 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119808214 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168290604 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118230286 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.082358672 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119819154 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165193652 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12512804 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116943889 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100997905 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118495569 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.251529995 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222923841 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10259368 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246198095 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181730396 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096484088 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197957857 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094889527 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191332606 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097899792 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121747502 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087869911 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776721309 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123539399 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09460152 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115247273 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187154695 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08572351 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110681092 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08694345 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105361417 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756128636 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111813529 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08426605 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087092057 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120051603 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118514613 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092491266 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115263332 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162950538 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237531249 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122793379 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095090935 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.109086163 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162222012 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.087530129 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.11127871 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08635797 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.110133247 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.096927033 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115537461 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08830646 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196607343 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.160085507 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223363947 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.584599943 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.108747831 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087303775 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234656664 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086225216 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.308604536 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118021707 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.205077169 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192957358 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084455817 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.340900102 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168752601 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187838963 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088219206 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196805919 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083489695 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117040552 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16231778 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085070058 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118291581 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.159082448 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128604539 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123932882 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.132988098 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110338547 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228980826 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082221319 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.1939129 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088924131 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122454866 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.314734888 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086903934 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130944377 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162611805 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114460151 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08761434 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.841346207 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.111321015 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096426611 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120797799 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227891339 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.167278927 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118635869 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094211261 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12404076 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163362443 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234598703 seconds)
  done (took 43.918163821 seconds)
done (took 59.167045349 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309694835 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.261155787 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.291426869 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192430142 seconds)
  done (took 2.032395897 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175300135 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149361194 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120397878 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106316257 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150500169 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084166754 seconds)
  done (took 1.688807734 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.433987425 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.383351999 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.308886563 seconds)
  done (took 2.033203978 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.248697812 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.274197113 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.320885111 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.429176275 seconds)
  done (took 2.282897743 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.203435126 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097860283 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12127365 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.136664827 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.167833707 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.172589178 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137971117 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.148644736 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.10419421 seconds)
  done (took 2.243798499 seconds)
done (took 11.187067656 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.12569518 seconds)
    (2/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.272379384 seconds)
    (3/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.263416489 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.212913297 seconds)
    (5/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.165715136 seconds)
    (6/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.235434291 seconds)
    (7/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.176533794 seconds)
    (8/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.237844069 seconds)
    (9/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.188372832 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.103103523 seconds)
    (11/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.219831693 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122691452 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.091098447 seconds)
    (14/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129601481 seconds)
    (15/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.237806012 seconds)
    (16/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.147703588 seconds)
    (17/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096247983 seconds)
    (18/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.236345895 seconds)
    (19/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.220396563 seconds)
    (20/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.121079657 seconds)
    (21/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.195206289 seconds)
    (22/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098223356 seconds)
    (23/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.215123596 seconds)
    (24/286) benchmarking ("sort", Float64, true)...
    done (took 0.225841371 seconds)
    (25/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.203766947 seconds)
    (26/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.261496692 seconds)
    (27/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.122427589 seconds)
    (28/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100860929 seconds)
    (29/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.174328339 seconds)
    (30/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113113477 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.218746317 seconds)
    (32/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.136027845 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119211044 seconds)
    (34/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.21786191 seconds)
    (35/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116125103 seconds)
    (36/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.156186476 seconds)
    (37/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.096720666 seconds)
    (38/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.211880516 seconds)
    (39/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.164054374 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.145813377 seconds)
    (41/286) benchmarking ("sort", Float32, false)...
    done (took 0.173030723 seconds)
    (42/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.174011232 seconds)
    (43/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.227587249 seconds)
    (44/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.161066667 seconds)
    (45/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085356393 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116397056 seconds)
    (47/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.10043962 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123952534 seconds)
    (49/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113028222 seconds)
    (50/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.100325704 seconds)
    (51/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.096087895 seconds)
    (52/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.12038401 seconds)
    (53/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092290677 seconds)
    (54/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.137927223 seconds)
    (55/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.186175362 seconds)
    (56/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.159479193 seconds)
    (57/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.122267951 seconds)
    (58/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.101964758 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111356009 seconds)
    (60/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082254693 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114758096 seconds)
    (62/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.150823696 seconds)
    (63/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091052733 seconds)
    (64/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.199059134 seconds)
    (65/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.13465239 seconds)
    (66/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.087201504 seconds)
    (67/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.167725298 seconds)
    (68/286) benchmarking ("sort", BigInt, false)...
    done (took 0.227840677 seconds)
    (69/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.184947672 seconds)
    (70/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123552301 seconds)
    (71/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.162287885 seconds)
    (72/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.131205077 seconds)
    (73/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093982431 seconds)
    (74/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115875232 seconds)
    (75/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.07582229 seconds)
    (76/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.151374735 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.139391593 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.084711224 seconds)
    (79/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.170611076 seconds)
    (80/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.129847769 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.140867684 seconds)
    (82/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.104553856 seconds)
    (83/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.129678789 seconds)
    (84/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.149824641 seconds)
    (85/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.09665581 seconds)
    (86/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108825928 seconds)
    (87/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.150767839 seconds)
    (88/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.098385465 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.110729797 seconds)
    (90/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.091991256 seconds)
    (91/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.121328629 seconds)
    (92/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.11383599 seconds)
    (93/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.139410457 seconds)
    (94/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.179821389 seconds)
    (95/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09967105 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.19082907 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121201586 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091367471 seconds)
    (99/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.096393574 seconds)
    (100/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.090039572 seconds)
    (101/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.105315303 seconds)
    (102/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.125483781 seconds)
    (103/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.162601038 seconds)
    (104/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.221655467 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.140877286 seconds)
    (106/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.134249691 seconds)
    (107/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.102358396 seconds)
    (108/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.100089481 seconds)
    (109/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.174968577 seconds)
    (110/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.075635166 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.140052737 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 0.182602222 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119204055 seconds)
    (114/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.100375666 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.115575966 seconds)
    (116/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.182587116 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.113496027 seconds)
    (118/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.113634939 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089043854 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115048235 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.096116757 seconds)
    (122/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108976672 seconds)
    (123/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091547622 seconds)
    (124/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113247219 seconds)
    (125/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072099375 seconds)
    (126/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.178780455 seconds)
    (127/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.113520068 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096454145 seconds)
    (129/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115680444 seconds)
    (130/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096558867 seconds)
    (131/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.113659495 seconds)
    (132/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.07607874 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114250349 seconds)
    (134/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.072785884 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108701478 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092954764 seconds)
    (137/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.095085477 seconds)
    (138/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.108908391 seconds)
    (139/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.09583157 seconds)
    (140/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093626146 seconds)
    (141/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.181420482 seconds)
    (142/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.085368516 seconds)
    (143/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121945131 seconds)
    (144/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.088382142 seconds)
    (145/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115042264 seconds)
    (146/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.072697034 seconds)
    (147/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.099539628 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091023589 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.114787947 seconds)
    (150/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089145364 seconds)
    (151/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115631586 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088952998 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.114240145 seconds)
    (154/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.073301628 seconds)
    (155/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.122712723 seconds)
    (156/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.074347418 seconds)
    (157/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.1026661 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091568915 seconds)
    (159/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.074292276 seconds)
    (160/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.154734527 seconds)
    (161/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.11155692 seconds)
    (162/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092643921 seconds)
    (163/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.111227925 seconds)
    (164/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098763906 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.122350077 seconds)
    (166/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.091056942 seconds)
    (167/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120851703 seconds)
    (168/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.110493466 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.114619054 seconds)
    (170/286) benchmarking ("sort", Int8, false)...
    done (took 0.192103757 seconds)
    (171/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072926785 seconds)
    (172/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.096213979 seconds)
    (173/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099216481 seconds)
    (174/286) benchmarking ("sort", Bool, true)...
    done (took 0.217716319 seconds)
    (175/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111896445 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.076046935 seconds)
    (177/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115428903 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091321298 seconds)
    (179/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112446655 seconds)
    (180/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.08421231 seconds)
    (181/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.112756405 seconds)
    (182/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.122985629 seconds)
    (183/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.097432402 seconds)
    (184/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.073251562 seconds)
    (185/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.12346834 seconds)
    (186/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.072877694 seconds)
    (187/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120404296 seconds)
    (188/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100735966 seconds)
    (189/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.113482317 seconds)
    (190/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.245368976 seconds)
    (191/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.075753631 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.096423147 seconds)
    (193/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.089995664 seconds)
    (194/286) benchmarking ("sort", BigInt, true)...
    done (took 0.243884849 seconds)
    (195/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.111003385 seconds)
    (196/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.08012996 seconds)
    (197/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.109587324 seconds)
    (198/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094022079 seconds)
    (199/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.09638628 seconds)
    (200/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.157463134 seconds)
    (201/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.117428226 seconds)
    (202/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094131489 seconds)
    (203/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124000231 seconds)
    (204/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.120777085 seconds)
    (205/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.133361013 seconds)
    (206/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.11004121 seconds)
    (207/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.072619131 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.116450534 seconds)
    (209/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.10796979 seconds)
    (210/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.115864027 seconds)
    (211/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086064467 seconds)
    (212/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.177798537 seconds)
    (213/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.084845229 seconds)
    (214/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.135939765 seconds)
    (215/286) benchmarking ("sort", Int8, true)...
    done (took 0.217569961 seconds)
    (216/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.180855066 seconds)
    (217/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.082638366 seconds)
    (218/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.105793719 seconds)
    (219/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.154841122 seconds)
    (220/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108996907 seconds)
    (221/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.072563886 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.114922292 seconds)
    (223/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.192118941 seconds)
    (224/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.09968242 seconds)
    (225/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136228424 seconds)
    (226/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.073677161 seconds)
    (227/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.115272775 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084235873 seconds)
    (229/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.098836898 seconds)
    (230/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.076275449 seconds)
    (231/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.079355014 seconds)
    (232/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117285861 seconds)
    (233/286) benchmarking ("sort", Float32, true)...
    done (took 0.228647469 seconds)
    (234/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088013328 seconds)
    (235/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.11512714 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.090578396 seconds)
    (237/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.099216005 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097179063 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.116351918 seconds)
    (240/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.07559464 seconds)
    (241/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.120617926 seconds)
    (242/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162753054 seconds)
    (243/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.077212601 seconds)
    (244/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075631906 seconds)
    (245/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.098953739 seconds)
    (246/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.076801863 seconds)
    (247/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111502716 seconds)
    (248/286) benchmarking ("sort", Float64, false)...
    done (took 0.146681271 seconds)
    (249/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.115732182 seconds)
    (250/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075618891 seconds)
    (251/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.133642091 seconds)
    (252/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.086599248 seconds)
    (253/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.101006728 seconds)
    (254/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.130308125 seconds)
    (255/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118318665 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.072944569 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110018752 seconds)
    (258/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.1345566 seconds)
    (259/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.075150823 seconds)
    (260/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.072279818 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.112203478 seconds)
    (262/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088068559 seconds)
    (263/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.100968673 seconds)
    (264/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.072484777 seconds)
    (265/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.122068764 seconds)
    (266/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074432379 seconds)
    (267/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134186955 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099106245 seconds)
    (269/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130156626 seconds)
    (270/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.090339036 seconds)
    (271/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.136107201 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.180424178 seconds)
    (273/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.079918209 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.111804621 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.091116714 seconds)
    (276/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113930942 seconds)
    (277/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.081270854 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114697324 seconds)
    (279/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.146428977 seconds)
    (280/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117416084 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.088422941 seconds)
    (282/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.099779469 seconds)
    (283/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087674296 seconds)
    (284/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124477942 seconds)
    (285/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.073565276 seconds)
    (286/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.103977105 seconds)
  done (took 36.741084762 seconds)
done (took 37.656411919 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09953494 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148926373 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095541439 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.139820149 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.100250301 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126413698 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117215723 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098610348 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122261235 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.100776852 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.122682641 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.079103148 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.11945282 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.095514512 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.121041317 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113994964 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123759719 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.090909151 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.113186694 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086426466 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.112360578 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087787887 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11388738 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078884051 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.119925754 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093071134 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115533162 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.094631653 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.114391824 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.084906061 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.111352975 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.091337866 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.111701167 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.097726648 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.114404195 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.08833293 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.120500299 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093932971 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.114541706 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08829834 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117869388 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.089212539 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116331965 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094150275 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.112521199 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.087813939 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.111428274 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100239545 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139922243 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088772042 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.117459459 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.094390472 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.12061627 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.091013755 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.111367012 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.087393917 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.113217529 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114385795 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.112638427 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088830068 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118348855 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.092550732 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.112214379 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.087878316 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112650796 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.09490531 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.120617568 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.087783783 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.120364664 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.090330336 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.10777495 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.089155666 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.110893884 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087301704 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.118307663 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.096180302 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08203827 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.1140827 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091160728 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115215625 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.087727274 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111710742 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088986352 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113425202 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086411697 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.10446494 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.086044305 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.115087868 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.088377686 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.112623334 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.090770011 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.115300798 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090727843 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.120398467 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.088850414 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.113213209 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.089027972 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.113700652 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089803142 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110859459 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.084432412 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112057303 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.093755749 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.084761513 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.114350818 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122332609 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087170083 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.089537722 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.112863532 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.08591791 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126262442 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118737063 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.090040823 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088351172 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.109954834 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.090896062 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111329459 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.085731331 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111585017 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087449757 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114209353 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.088037879 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111644844 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.090678845 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123761826 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.083863265 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.129438007 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086533564 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113442973 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.090768868 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113573514 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.085929312 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111211331 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.083891475 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109980808 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087662007 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.115632272 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087761161 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.087128365 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113200945 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.087344711 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.114977745 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.088117387 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114060293 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085391742 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.106432189 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089041488 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110799831 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.090258461 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.113563009 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088815687 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.108288533 seconds)
done (took 16.633237412 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.096986719 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186815098 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.146614968 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.148708198 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.120663765 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.131348877 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124798982 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.14474362 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.097131791 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143832706 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.144612951 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109795393 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.151591165 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120891114 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.105172433 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.121401226 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.118647734 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.105972314 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.155154917 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.139112793 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121667264 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.121244752 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.143610221 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139183097 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095429962 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.149311469 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.097273335 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.120455353 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.12241705 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10496366 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.137058467 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.097938293 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.123608681 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131204136 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103289421 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11819956 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.106111431 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116436706 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.095098873 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.121021667 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133411822 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107447071 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118854261 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.126506417 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096322435 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.124261952 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.094909468 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119616564 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095978378 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115242561 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099955706 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.14159937 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118415679 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.097245177 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.121303578 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093735894 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122199424 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122873415 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.097349072 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.124259312 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094536601 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.123840279 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124220149 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.111583437 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.12089632 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120885 seconds)
  done (took 8.907396317 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.111298885 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.148067304 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.126592579 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10374264 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.122835403 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.084619827 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108143049 seconds)
  done (took 1.776466463 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087567014 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.140074049 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118885293 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143514955 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134663361 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.121476834 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130551542 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085501752 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136297694 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.122082025 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114650961 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.167051899 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085737931 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.124416094 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.146009522 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.086699591 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.146671049 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.085631128 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.121140946 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142738687 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091885021 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13310371 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.101853296 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113633507 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108122343 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113057951 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.176061634 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097672228 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109931357 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092129482 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116080017 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.1813688 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108478095 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.122434877 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083265642 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140515901 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130100443 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091338786 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.134771785 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.090526488 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.134460143 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.092283981 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118970469 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.091489101 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119571715 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100012767 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.123721914 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118859501 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093133279 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.138960709 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096991265 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13510423 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087459588 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115862919 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096412902 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119336493 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10125753 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117326697 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.139009317 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094854096 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13718606 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113314414 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.133958614 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.137358423 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104579307 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134055436 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10677439 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118678651 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093406185 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122216904 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137971503 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090632841 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.121680878 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102167941 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119902979 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114021755 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139430046 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090562367 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126182186 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089979553 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115296625 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.08597511 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.128112797 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089859341 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1148457 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102644129 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124872489 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116087159 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.091482977 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.133992597 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.09060062 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.124490909 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096350625 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116124229 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126286019 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.116009739 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.124134099 seconds)
  done (took 12.217753622 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091209002 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.088024609 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.119595052 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088215725 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.114112926 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088571633 seconds)
  done (took 1.573049958 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119380793 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116418096 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103006887 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12001702 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155687977 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111738082 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.136600678 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097118685 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.132844128 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126153261 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.113003548 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.138091106 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.117192409 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120222867 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.136016822 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095591039 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.136596445 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.091720465 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127481415 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092294577 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.131144045 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.094140276 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117523491 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13571491 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.096674512 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119452941 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.095572211 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127911762 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103431333 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123497596 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.094463912 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.121702807 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094722234 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123871145 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136553025 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095638629 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115481731 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.098007689 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121201723 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.096013265 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.138535596 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090712477 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126937269 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096290699 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12428574 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120902615 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098554032 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.119502594 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111551981 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123806353 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097395205 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120488231 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09494191 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123841036 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095461955 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124121919 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122080628 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.113844434 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.119898787 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09670386 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116548737 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.097031541 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123767606 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095907343 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.123012461 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096512288 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121102525 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090161494 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117824983 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.093474915 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12397634 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091520518 seconds)
  done (took 9.172066651 seconds)
done (took 34.612524163 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.66937802 seconds)
  done (took 1.652121608 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.84932626 seconds)
  done (took 1.834496682 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.840275179 seconds)
  done (took 18.852980808 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.473960052 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.571772503 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.994431996 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163293215 seconds)
  done (took 3.187997234 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.965854022 seconds)
  done (took 1.967940932 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.300555658 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.239854756 seconds)
  done (took 1.528542617 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.826492058 seconds)
  done (took 1.829924456 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.522686266 seconds)
  done (took 2.516053226 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.345530519 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.19806502 seconds)
  done (took 1.551137736 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.571955393 seconds)
  done (took 1.569866545 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.873287351 seconds)
  done (took 15.876487799 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240740514 seconds)
  done (took 1.255747751 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.293611357 seconds)
  done (took 1.296890401 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.631598926 seconds)
  done (took 4.634788061 seconds)
done (took 60.552622297 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098385709 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.099731655 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.127181081 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.097491535 seconds)
  done (took 1.420179581 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102570484 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120874371 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100120904 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119586213 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102816841 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.121007366 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.095013332 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.165343593 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120319188 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097279943 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120878511 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.096088806 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122184176 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.094730901 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118969139 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.097456945 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123535136 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095140789 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122649201 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.094997825 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118380656 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.095414506 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123694791 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092900496 seconds)
  done (took 3.673532353 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097855109 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090286037 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.119894253 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.091328723 seconds)
  done (took 1.411664226 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102230639 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133569473 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107626231 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126333132 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.107945245 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13422972 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114873251 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.090948839 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09287743 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126724393 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091028585 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138750602 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.134248364 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086013125 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129038207 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087820636 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11260839 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.107199946 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12593926 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102036127 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.116014512 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100229777 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123688697 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.10508952 seconds)
  done (took 3.710503471 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172122929 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129370778 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140082683 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096763265 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166447838 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142361574 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089373344 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142285624 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089925374 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.128997056 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093557871 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.169345569 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.125541951 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.093931539 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117277139 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.097129916 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12682985 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.100060042 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.119587449 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.131814697 seconds)
  done (took 3.48775528 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.0989832 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115769353 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088009763 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.08858541 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12425723 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092487979 seconds)
  done (took 1.620421721 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.087452658 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.086061671 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.112858167 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.086798182 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115950667 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.087393681 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.085289823 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113037474 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.087049189 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.112248489 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.086987946 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110706563 seconds)
  done (took 2.189952182 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.382383803 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117668955 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.117098667 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091365595 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095176243 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.116774482 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129455412 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.090615361 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.146328636 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089742744 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115122825 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093523948 seconds)
  done (took 2.598061937 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207321238 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095323965 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262486885 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.353407652 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154691901 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164494777 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280707329 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163418884 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.182095596 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137013497 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193374372 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156284071 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153286055 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178527797 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111702127 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.17689678 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173745678 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199736852 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148194411 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204112742 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162182626 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165598962 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178581106 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151368462 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134473077 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156497246 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.092254538 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126436047 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171902768 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16865876 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173764432 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147886331 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111061199 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226270487 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211571507 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176944466 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.306662956 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133491535 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.191427503 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.180719218 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255274288 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113070996 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222895831 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127775926 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128457897 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182195626 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157040755 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.181922185 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131053619 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113371485 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182284421 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17615718 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.204710636 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108120243 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.334453475 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121045651 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146879555 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182019636 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186757326 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189731681 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167476715 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121769434 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185164089 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181895978 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179182133 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.146121317 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.166895609 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096148755 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172723481 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221441208 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177850927 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164446985 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185267012 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133579816 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164199191 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168946034 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124373406 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178026184 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159942838 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12105789 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121158181 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137459249 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126478921 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.159947725 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121808036 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203094077 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134862778 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.189327623 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204090167 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158336301 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159808331 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163797078 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165771306 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117787266 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.119304967 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145379278 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158017025 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129290132 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131123412 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157129557 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142099285 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.100145835 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152013484 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.094182329 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158992124 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134499082 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167712518 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164027906 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100382546 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164342143 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149656257 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.158308677 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169598779 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184612717 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103734489 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131649928 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1923904 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16050997 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135789958 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173855592 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184549603 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.164531824 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108991177 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168577084 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219461342 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114467655 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18704433 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140073168 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132946252 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.121252864 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158250233 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15518173 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.157656574 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129365156 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.124149634 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217900359 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099022685 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135234026 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173900573 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0981551 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128256295 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141063348 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107115989 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140135348 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147566728 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.111208001 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15469583 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160124768 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153896554 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157957639 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112561983 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219890148 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103916318 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.160390911 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146388049 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.090355546 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204423343 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183139306 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09998962 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195454516 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.167570783 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225484438 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165309131 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102108816 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177109158 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128744477 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091105547 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164516305 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160772019 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161974891 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.182232172 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221647263 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.168847856 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122989989 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148841649 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164883428 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.172468772 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155105085 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144281842 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161436337 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167217386 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.093160309 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123217732 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.098051758 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141807294 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129643327 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103390542 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179478937 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163236829 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214709261 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133061629 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140738468 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180615796 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125888154 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163434489 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.172089486 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109937751 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.181610044 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20685826 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138660659 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14109599 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173562011 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119183185 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094239447 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132487697 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165136094 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103319015 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133209227 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141323254 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180361342 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174911721 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148186648 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200723467 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166112047 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190059227 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121718338 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.134951519 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168214184 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157721805 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182615635 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106425293 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.158951767 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176031675 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141039785 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187824805 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161463296 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168070846 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196800244 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.156810316 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128890306 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119528937 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164594683 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139314648 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164880017 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144487959 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1056472 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152005887 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133237286 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09624223 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179135501 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143054508 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177693754 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154830115 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171607974 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125621065 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141942848 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160975098 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117904027 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115533689 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168723746 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18584173 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143772148 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156033771 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171904394 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101001861 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308404237 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185249763 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181215965 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135572489 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140977472 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160481928 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157946256 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133928125 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177385506 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14357715 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178626573 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158510941 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141059723 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105933309 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14569257 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149640373 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.149238534 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103512152 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.153248652 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142289922 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182502926 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14140104 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128580556 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163926082 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146736523 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148000722 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113809617 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198357525 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157388912 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176015721 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.154937385 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165575205 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19775731 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123732215 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097756137 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.126128048 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177881694 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103070876 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158443985 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.213297413 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198319982 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159633014 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166656275 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1077938 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120965249 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159382098 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119466293 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225929034 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141002672 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108048055 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186909058 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.148949802 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128497921 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162000353 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285306149 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116845422 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171865373 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.116423688 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277291731 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095732071 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128091512 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158753214 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169268702 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138022534 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154527679 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163705911 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144650687 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158398524 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108183603 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2170365 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205890819 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170262303 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174063806 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141026377 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12720951 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160790694 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174675176 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143214539 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143469231 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160898265 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180794598 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.186363266 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.103234333 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163066703 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162591681 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160099903 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172748281 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13311874 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198790078 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129541306 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16498963 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110005605 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123674242 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157896272 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.185351827 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131632376 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173374366 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129315747 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131390885 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09714345 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150018475 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158681311 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140973029 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.097658959 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204436197 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.095393143 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163461051 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178994983 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10054203 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15405522 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145990356 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137013337 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112634429 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145173861 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135286957 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14395054 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177318404 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131125428 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175665347 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175331151 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1639263 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158246422 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142475163 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636020681 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127453629 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181389034 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115832144 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211320791 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119179283 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165779201 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160859026 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149699121 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16844116 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148648528 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.192720663 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164476797 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.158871926 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130612655 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144906947 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114031996 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.130830925 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149812054 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164126324 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111528055 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136828132 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.157223101 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14329271 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.11526594 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137060267 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182698996 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145021433 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181557492 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177310629 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107013961 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166349588 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173056771 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129034185 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159471694 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171021048 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109040897 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149487533 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.130449965 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132968624 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150098084 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123576292 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159960092 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159118103 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161497395 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133526699 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.133635518 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160111395 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141725484 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161346967 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100615993 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.154442115 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157666354 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10054811 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12742943 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156408704 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157930197 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127519177 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126036359 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.144291201 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204215632 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096364825 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131167137 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284532273 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157739687 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192177657 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.149816313 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104183471 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143427526 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153607059 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.124040332 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158841726 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128292358 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101840813 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129735828 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.182011366 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.15335832 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1554196 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185488588 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130811695 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228697885 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.105430573 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.266160319 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138268027 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125088097 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.12958945 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128220173 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112592594 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133803536 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141519339 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189994301 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178160866 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.151052249 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.114501692 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127304363 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.096064206 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133097917 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160118182 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15252291 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129988852 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143653396 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.1175027 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113087833 seconds)
  done (took 75.643027597 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160223041 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131203185 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146168296 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.19360339 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164158467 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242024328 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.204087977 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22451583 seconds)
  done (took 2.571511657 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.099508826 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155463711 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139102684 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.123102205 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.089833605 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.332411654 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.135458554 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121123375 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.11769363 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.1600821 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.091262718 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.535700666 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121654824 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.121843732 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.086921512 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.113270726 seconds)
  done (took 3.638679157 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.311624607 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538356918 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.129671647 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.24246617 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.223852365 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.149937251 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.746591947 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.156640765 seconds)
  done (took 12.60209008 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.120459039 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13904881 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.132496545 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.162157739 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.117065284 seconds)
  done (took 1.780819382 seconds)
done (took 117.346246443 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.094068535 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12378281 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096641254 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.125219759 seconds)
  done (took 1.533635641 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.106161334 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078106798 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109771569 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078285846 seconds)
  done (took 1.47266246 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.423224821 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.109811879 seconds)
  done (took 1.673771208 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114647386 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.1323862 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104689104 seconds)
  done (took 1.460033889 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.101957773 seconds)
  done (took 1.212123311 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096550039 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097161788 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.139497067 seconds)
  done (took 1.444480667 seconds)
done (took 9.906643928 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111153333 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436936038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383410302 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136475322 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.6998131 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.406986347 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.041244233 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.127046634 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166052265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118219085 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105796785 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.703533618 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.033601098 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374782064 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.019518341 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.469099523 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674741384 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120421259 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095286001 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119260625 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.992289804 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117653355 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089965599 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11960292 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668663545 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42321395 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089361502 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.482305334 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088082709 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123406477 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.3762135 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117037631 seconds)
  done (took 17.133065349 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095776699 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177751248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097394472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12014579 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092648818 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119600592 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099698743 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.132782246 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181606671 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088678889 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137590306 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.088030722 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123704496 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089343937 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13896466 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088774623 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120585904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091801213 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124842928 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090949778 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137866172 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088415969 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119490061 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091590955 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116555424 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10255447 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088836739 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.131516586 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120239432 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096135568 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09206077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118610101 seconds)
  done (took 4.712621266 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139553505 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186786557 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.125913015 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123732684 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169571305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090760099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.203181933 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.156898941 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183809702 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118372613 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107299917 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117734391 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125617203 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118970238 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109671251 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118580466 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.091241443 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120064161 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095798254 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119784304 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109920233 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117112954 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.091034284 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119971454 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089781041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132028758 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089958749 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.131769336 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089321073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124497968 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09303479 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118219921 seconds)
  done (took 5.047269051 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096673725 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125696284 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.106070313 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.135851934 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.091488637 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124452445 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098088963 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120193634 seconds)
  done (took 2.012590705 seconds)
done (took 30.018804339 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106885754 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093587569 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133452429 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.10095129 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127626942 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101975669 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.11777778 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100100453 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.130133935 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.098282448 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133344045 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.088496328 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089690082 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116621334 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.101894379 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12262948 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.104664629 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.128034624 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.109543348 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133674001 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.08981283 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.130336049 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098005102 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13893387 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109263022 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.138830036 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.132875341 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.095471284 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088969882 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118881375 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.103721447 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.141376354 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.09135095 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.135499994 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095839204 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122481982 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.089679618 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.120535526 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.104665212 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.129534742 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.095065773 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.12989813 seconds)
  done (took 5.849748436 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.11616858 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.162789288 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.089782627 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.120595015 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089629398 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.158471402 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.153511057 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.089598597 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089120842 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.143754113 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.14452362 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.090591 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.118612646 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.089771545 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.08885742 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.119958795 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.113598652 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.143465581 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.149311218 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.120657909 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.164654071 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.149756887 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.124040986 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.143378207 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.161252416 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.125846314 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.140369346 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.154957383 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.117664806 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.117385457 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.120643857 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.151918623 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.089005394 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.118973751 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.130174315 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.156195975 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.147302608 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.129971802 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.149942057 seconds)
  done (took 6.10879626 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098784152 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103336053 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.140622998 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183971729 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.126635051 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.133547059 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.099366461 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137899385 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10498605 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12012648 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090454981 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150415478 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106828923 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128224407 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090965994 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133725099 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.109572776 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.121402576 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093938557 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138785823 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.107798861 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131931996 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102071644 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130680023 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.089470396 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1282094 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.092373325 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135370799 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.094321367 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126400955 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.093891914 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124251498 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.092205072 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.130134023 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.09341822 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126664703 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.111756644 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128015372 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.100780749 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.151368609 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101111707 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124040279 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141140004 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128875372 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.119857656 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.097037681 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125973488 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.099271305 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.088132946 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137662695 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099642395 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.11992407 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134315648 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091002201 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088224816 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134402233 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090266431 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.122859353 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.097579167 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126452844 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.109539592 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124776545 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.104633223 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121143075 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.095310938 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119513436 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.090104122 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123815716 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.112475772 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121843518 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.130183742 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.121621866 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094904868 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.12811755 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.096120509 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129014651 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.090546262 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132435414 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101015236 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.094684078 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129787825 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092198356 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124394969 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106847367 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134314819 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126274209 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095908956 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12453248 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.094056534 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089394524 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133597515 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092332812 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124561855 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.105344005 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120191907 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092122974 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126343613 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093949423 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118910356 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102053722 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.125488989 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.089632307 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130459145 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09086678 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123491509 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.099179253 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.122415188 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090706122 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.093625667 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126690558 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.08930084 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123824948 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.094110932 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.122653274 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103330217 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128259358 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.092270779 seconds)
  done (took 14.42270347 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.237121288 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.219437761 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.193902861 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.304496082 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.14260484 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116829573 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.215642893 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.167364346 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090969396 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161378389 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177346142 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.188893711 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.176916214 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.188356171 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.175189487 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121407528 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.109758285 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.174751217 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.218544718 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.300998722 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.109326245 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.137866587 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163550315 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162070073 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.109995232 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.137892828 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11395175 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.143165514 seconds)
  done (took 5.905523957 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108770402 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157117563 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097760588 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147604948 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147755803 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091177297 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125874051 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.091778523 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102764134 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136907325 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.122573608 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.098821365 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.127432196 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10034757 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12064667 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.100775488 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132073103 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.100851284 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123726474 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.094704251 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133972018 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.108926215 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126584233 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.093290418 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139181598 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.092757393 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.124854674 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14352381 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.099224801 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.147601363 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.087290635 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130444445 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.10523981 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.12201208 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094180928 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.124665947 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.093836934 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.092184988 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12360032 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.088073415 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121578619 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081882174 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122963342 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106111537 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128170048 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088898825 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127417057 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.094448045 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128014009 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.087284572 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09229169 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124825646 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.094955756 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13307327 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.094045374 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128725187 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.094152729 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.124700495 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099095493 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124448838 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.088363077 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12251288 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.096958474 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.125791963 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.098974775 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127539383 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092974037 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124042119 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.095932436 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096703958 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.124291944 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.10198704 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.119127088 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.090690626 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131855354 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098915349 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125718158 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091950118 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.125099265 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.090164369 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078976345 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.120486199 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077643724 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125589234 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.089224692 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122638949 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094536533 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127076145 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.107714331 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130911947 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097928858 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121909467 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093576355 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.12579286 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088630562 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.12544687 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.109303834 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141093543 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089924413 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119098156 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106274079 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.123895708 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.088921609 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.082461529 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.133650946 seconds)
  done (took 12.842896455 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133599583 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.172317237 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122805934 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.110335302 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156509464 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.163066983 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099287873 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.097538106 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.122881228 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108819446 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125877565 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.099666901 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.125654073 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104685592 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16408171 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131327044 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.092858806 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104770067 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12675873 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.175674681 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110760741 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.161277943 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.162840906 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094292833 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12862251 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.158151246 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.136665127 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.135473396 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103423664 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.164494239 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.13500705 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.135656107 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.164800667 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127393763 seconds)
  done (took 5.615961422 seconds)
done (took 51.86052565 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.217412777 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.435501071 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.20786167 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.207009831 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.262066292 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.240454474 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.228612379 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.402655909 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.953751606 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.197702455 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.20822234 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.206330131 seconds)
done (took 27.91002632 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.300848263 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.37096847 seconds)
    (2/2) benchmarking "String"...
    done (took 1.541254372 seconds)
  done (took 4.053197768 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.212475241 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.209969609 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.460335918 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.2185623 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.214352067 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.230671951 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.209277199 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.211402703 seconds)
  done (took 15.89383233 seconds)
done (took 25.602090602 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.286239003 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.415704952 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.482193156 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.228446589 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.234237459 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.220003969 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.216086655 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.259455257 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.211805323 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.217488049 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.215214311 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.504946335 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.243637454 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.595876735 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.215975085 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.226810021 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.228314225 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.450847015 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.222915904 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.199947916 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.216795049 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.220790036 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.220354508 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.240012355 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.221057354 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.213280425 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.244360268 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.212014616 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.442998711 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.229062198 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.257054758 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.214406453 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.250469095 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.219166643 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.325440229 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.243049452 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.406315089 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.220302403 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.208515038 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.220713488 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.406246497 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.62264577 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.213052681 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.21522369 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.217514497 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.27971994 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.207960397 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.934216877 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.220624019 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.225469431 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.22573268 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.599764649 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.225240189 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.225743631 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.224439598 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.465406591 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.214708621 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.266001609 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.252111507 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.224683658 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.214492551 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.220349393 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.230528755 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.217532635 seconds)
  done (took 144.395070403 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.213575824 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.220797853 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.213887565 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.218114466 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.221981942 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.214642043 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.214094329 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.214145097 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.219505961 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.226471734 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.22076803 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.215945148 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.220505581 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.229222884 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.216199562 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.232534859 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.215647425 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.237167429 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.238857806 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.21567881 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.223171137 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.220796861 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.237659933 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.219955392 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.224445301 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.301900365 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.272832447 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.226398614 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.219429055 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.215041041 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.222829173 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.22770371 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.850909385 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.070574735 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.235750003 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.246356936 seconds)
  done (took 80.781499466 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.215446225 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.217732547 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.216041797 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.247911839 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.21647078 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.804646298 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.810249276 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.956085275 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.398545152 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.602161248 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.533830913 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.222420077 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311653814 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.232845233 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.218339866 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.233038924 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.243170199 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221736331 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.21618383 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787878155 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.23095389 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.387493704 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.411826047 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.233855606 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.251580485 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.617381547 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.218982838 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.250203691 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.556160946 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.267836476 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.2189454 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.633672556 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.785079412 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.218111569 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331336932 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.219686915 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.252153246 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.219167113 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.502977157 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.218000542 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.220286977 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.220825651 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.928767756 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.223286114 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.805529001 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.226230014 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.220551027 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.224497944 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.219457018 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.441589201 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.00247444 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.241553399 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.220263571 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.222420356 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.219691481 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.220709952 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.251888534 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.458087529 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.337193928 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.220514896 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.223755985 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252435663 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.220685152 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.255104496 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.222587416 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.650335247 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.285567861 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.323654729 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792564072 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.220926846 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317223354 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.341695047 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.220355701 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.221586304 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.220832676 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.218914931 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.331993179 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.220863873 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.643977214 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.398044988 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.23877325 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.59066023 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.224701375 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.221138659 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.318860397 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.221627869 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.635859174 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.22659554 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.222059292 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.982374088 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.221714305 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.812977082 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.222295768 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.222188165 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.222527822 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.650353103 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.813304242 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.502823901 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.227711958 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.001118041 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.228194171 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.657580907 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.788421192 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.947488516 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.227153205 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335592545 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.398951828 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.239765406 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.223086147 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.598613046 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.226349699 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.282791677 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.22319876 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.623070627 seconds)
  done (took 369.572315217 seconds)
done (took 595.890510124 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.95697047 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.908200821 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.040734613 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.931718152 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.899402875 seconds)
  done (took 10.88887957 seconds)
done (took 12.041973521 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.413205428 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.414554017 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285574072 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.415565597 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258798323 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.433570517 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.397296124 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.244269624 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.329740821 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.306591714 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.328835594 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.277357763 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.259460379 seconds)
  done (took 18.517448384 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.556153971 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.225175077 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.30701057 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.598596814 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.267187151 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.563260059 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.436938692 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.244387218 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.458074996 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239975951 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238078025 seconds)
  done (took 18.289370357 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.567642933 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.225724449 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.31279287 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.563617959 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.267528963 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.585160383 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.436423144 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.245064168 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.455971161 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241927254 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238296447 seconds)
  done (took 18.294865652 seconds)
done (took 56.255322422 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.269264054 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.396757676 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.252005186 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.239124305 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.235091701 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.237185533 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.240414693 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.237581916 seconds)
  done (took 11.263183438 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.234746058 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.234495352 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.232238554 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.233073917 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.233848144 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.23185798 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.232536646 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.234845719 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.234367688 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.232663095 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.234826764 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.232226439 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.23451421 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.234789314 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.232491117 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.232859822 seconds)
  done (took 20.892281509 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.237613004 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.241204302 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.233001165 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.232971853 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.232624617 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.233132646 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.234196825 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.233125986 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.232435386 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.232212739 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.233795924 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.233200428 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.232538928 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.233156689 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.23249139 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.233980081 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.232744233 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.23324733 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.237949079 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.232653966 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.233029371 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.233561466 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.2345401 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.234211818 seconds)
  done (took 30.772317322 seconds)
done (took 64.08192508 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.228553105 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.229689429 seconds)
  done (took 5.615597724 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.294535668 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.298835385 seconds)
  done (took 3.753067457 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.236500224 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.236579996 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.237046719 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.238401875 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.236219998 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.237049541 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.236866397 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.236809221 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.236639437 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.236048248 seconds)
  done (took 13.526657204 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.237990372 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.236959787 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.234498278 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.237258169 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.237387299 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.234227806 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.237718765 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.236919702 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.23832341 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.235932812 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.23736671 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.235959261 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.237402525 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.235607279 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.238265354 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.235304639 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.235874589 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.235760891 seconds)
  done (took 23.417454979 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.250922804 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.259106344 seconds)
  done (took 3.669562301 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.366250195 seconds)
    (2/7) benchmarking "second"...
    done (took 1.277187312 seconds)
    (3/7) benchmarking "month"...
    done (took 1.347018603 seconds)
    (4/7) benchmarking "year"...
    done (took 1.335018965 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.278432366 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.257788213 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.277693468 seconds)
  done (took 10.300704826 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.239829898 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.428634807 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.550877685 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.820433424 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.239932072 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.24458307 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.089635117 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.243448533 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.244875398 seconds)
  done (took 14.263617039 seconds)
done (took 75.704751434 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.233958164 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.251270522 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.242183385 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.248729864 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.534446714 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.26018948 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.23853943 seconds)
done (took 16.170654417 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.221856342 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.222682315 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.233956985 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.239953018 seconds)
  done (took 10.080384981 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.233655079 seconds)
    (2/2) benchmarking "read"...
    done (took 1.555562586 seconds)
  done (took 4.949705189 seconds)
done (took 16.191092326 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241126446 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.238393354 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.242196205 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.237780199 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.240162376 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.238863234 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.237975821 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.240276294 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.240912648 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.239453798 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.241167726 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241112027 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237738669 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239409151 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240122587 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.241027936 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.237882801 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.238946764 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238985333 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237727861 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.241384813 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241523778 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.23814793 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.238471852 seconds)
  done (took 30.912955867 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.243029082 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.238977487 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.241957193 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.24303243 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.239882423 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.242781145 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.241837949 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.239132169 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.243461788 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.243027966 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239898976 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.239831804 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.242440562 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.239015349 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241885882 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.239470927 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.242601133 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239695479 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242448867 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.240888669 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.242647657 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239459166 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.240307806 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242093691 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.241599686 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241068919 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.242107512 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.241318944 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243165521 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.242374996 seconds)
  done (took 38.404798846 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.248657073 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.252450469 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.243662651 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.243730517 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.243591145 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.242977057 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.244276677 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.244638608 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.243982858 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.243360456 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.243835075 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.244418065 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.243153613 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.244473799 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.244815108 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.244226669 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.245121938 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.244700051 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.243782773 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.244011221 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.244346069 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.243410078 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.244303948 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.24388888 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.244431101 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.244035721 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.244845128 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.244903511 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.245248791 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.244708299 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.244516022 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.244747903 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.245234997 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.245859548 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.244362028 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.246014293 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.250480095 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.251951032 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.245074475 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.245043917 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.245499469 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.246269131 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.244929961 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.246555082 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.246563717 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.244739084 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.247750705 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.245454139 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.246439719 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.245937494 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.24536808 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.246493851 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.245439364 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.246698202 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.246283846 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.2463569 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.247107326 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.246205207 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.247032242 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.24666513 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.247240934 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.246703517 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.246362626 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.246129306 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.247015668 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.24834507 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.246770816 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.246578719 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.249763577 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.246775936 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.246663176 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.248129636 seconds)
  done (took 90.858417748 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.248390921 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2442489 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.245170611 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.246129555 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244815659 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.247420652 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.245139021 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249399153 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246051598 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247701857 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24859562 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.246918533 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245316637 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.249994863 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248968062 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.24607914 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.24900233 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246505117 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.249133809 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24969154 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248370548 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.24673955 seconds)
  done (took 28.608050472 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249778987 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.253268741 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.247539903 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.251136473 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249000168 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250916613 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.249785424 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.250370509 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249125952 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24688885 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246379953 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249706001 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.248819071 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248116998 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2486649 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.247926425 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24986248 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248226646 seconds)
  done (took 23.654375649 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.246902462 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.246789131 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.249279327 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.249145511 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.24579385 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.249426062 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247374287 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249236123 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.24863795 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.247719046 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.249821671 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249950176 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.249031187 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246886294 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248557998 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.246905745 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.250131357 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246230146 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249316799 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.248319397 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.247892557 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249691397 seconds)
  done (took 28.632854688 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249708986 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249845744 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.247534599 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.247986096 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.246158693 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.249265565 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.249870173 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.247039457 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.250543073 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.24942497 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246128476 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250725583 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.250412236 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.247903445 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.248401159 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247342834 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.248882841 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.248194112 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249597201 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.247450629 seconds)
  done (took 26.143280832 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251462422 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250471129 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.251487912 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252118613 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250979729 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.251561306 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252591719 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.251644573 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251744194 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.250762857 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.250779457 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.250975455 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249883839 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252381412 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251572266 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250073968 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.250529741 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251129566 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.2513185 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251117957 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25108885 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251532198 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251686101 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.251486468 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.251457801 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251512458 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250290223 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251580368 seconds)
  done (took 36.208000359 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250816058 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251013568 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.248238628 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.249204456 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.247885363 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.247876328 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.248333368 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.247461651 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.249190258 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.248315021 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.25009289 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.252476542 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250567896 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.249356807 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249829284 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.250515306 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249092116 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.247252965 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248410182 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249931857 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.249775987 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250242366 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.249719144 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.247509369 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247725819 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.250000314 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247662496 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.249544309 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249497574 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247308047 seconds)
  done (took 38.64748072 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.289903837 seconds)
    (2/2) benchmarking "in"...
    done (took 1.293059004 seconds)
  done (took 3.752462785 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.248208496 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25067113 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.249728567 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247799901 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.248168426 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.250733113 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.250435548 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249289968 seconds)
  done (took 11.165016229 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.253666624 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.252938819 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.253174037 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.251579691 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.251539293 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.250472513 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257831746 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.270548184 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.251821505 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.252100878 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.258331034 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.258710339 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.253409785 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250939999 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.251046447 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254807032 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.251333179 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.252723372 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.253421721 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.254101145 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253445283 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254484477 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254570432 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.250533002 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.254552313 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.264280901 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.254712087 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.253439131 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252913785 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.255669953 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.252898826 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.24988295 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.252801069 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.253847123 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.252337872 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.253224442 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261251895 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275217042 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.258577381 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253381943 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254509911 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.251101212 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.254232053 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.254473491 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254673241 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.254854149 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.254791845 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.251324804 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.252182726 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.255976667 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.259149404 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252481357 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.251685883 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256686151 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.255234164 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260877752 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.273816371 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.258616585 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.263650977 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.265039199 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.268043271 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.278823656 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256071167 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.254192042 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266279443 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.279484003 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261440733 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.273294142 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.252343937 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.255235145 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.261013686 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268446164 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.282420244 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.255606161 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255757007 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.255884649 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255506538 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255993338 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263148168 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.277735365 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.256354332 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257226153 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265773733 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279564364 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.256634481 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.255917465 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.256326544 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.257101876 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.257452317 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267585841 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.276524875 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.255678285 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.256148249 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.256289806 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.256512322 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.257889834 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.256042572 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256411143 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.254474343 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.258321873 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256802469 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261965213 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.265873248 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258881125 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25836164 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.264321375 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.258120123 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257507792 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.262932799 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.258375302 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258111704 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.259993475 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.263856565 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.256439815 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261596908 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.26647553 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.258653533 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.259755318 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.25925779 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.260599659 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269077818 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.284041983 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.260225559 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.258698425 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.263649913 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.269749162 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258956925 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.262270228 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.259525976 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.255565837 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.257524922 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.259859197 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.259958142 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.259289461 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260182778 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260407034 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.256821138 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.259299404 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.25967246 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.26072594 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.260676561 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.260118447 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.261067772 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.262109679 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.259768352 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.26129739 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.265851405 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.259225408 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.259572478 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.259510009 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.257849229 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262295146 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.261883006 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.261258605 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.2605182 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261901404 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.260854909 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.260709731 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262518183 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.261989764 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262270107 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.259978505 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265447924 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.26159551 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.264517769 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.260068849 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.260525935 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.261012827 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.261362042 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.260245404 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.262182208 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.259716128 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.263574263 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.269480706 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.262611078 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.261224874 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.264695445 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261864673 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263507664 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26268446 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.267147617 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.270630943 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.26254028 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.269199274 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.263117919 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263855657 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.263649493 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.26357426 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.263803485 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264967886 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.265742181 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.271409293 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274354021 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28844246 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.263012565 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.266903297 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.265324891 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.266879937 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.266868973 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.263240694 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.265781501 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264179909 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263455346 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263624266 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.265845799 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.26456344 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.262250789 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.265874233 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.264529509 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.263615479 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264672711 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.264149832 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264403663 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.263291534 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265789077 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264347425 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.263664543 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.263152133 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.262726375 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.264705315 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.265766789 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.26451729 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.269637081 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.263076517 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265392174 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266047502 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.266356219 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.263452172 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.266014792 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266835041 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.265132453 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271699748 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.284583151 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.265518092 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271023403 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.284722638 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.265113637 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.267087839 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.266712487 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.262748106 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.269380617 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.275457776 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.266474216 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.265533866 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.26641981 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267414935 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267773978 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.272481399 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.263816685 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.266744108 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.267683906 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.26756924 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.264697344 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.266743649 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.26729506 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.267064625 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269027345 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268392141 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.269153326 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268659823 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.267532203 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.267487962 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.268791363 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270869832 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.275742918 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.272608017 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.26754817 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.269183536 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.269410009 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.271527029 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.267405762 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.268440674 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.268560792 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280888161 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.294465608 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27512051 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.288404358 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.269276305 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27294671 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.28958352 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.272339509 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268553087 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269548635 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.268682159 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.268140052 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.266730848 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270145986 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.270219764 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270859282 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.271481791 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.273295364 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.271162112 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.270365529 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.270265752 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.270090056 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.271352606 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.270094936 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.271381893 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.27100099 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271979167 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.270414145 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.26970523 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276485156 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.289953433 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.271515442 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.270258534 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.270391532 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.270306428 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.271130292 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.270218193 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.273958829 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.279682427 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.274649704 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.27906466 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.272530928 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28245958 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.270210948 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.275564952 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.280100148 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.269105741 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.269524322 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.271634474 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.271902534 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278668049 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.291184274 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.274171082 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.276338647 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272802397 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.27136399 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.272012476 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.271889805 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27236118 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.270994761 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280100557 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.295491705 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.275959117 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273626985 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.269867486 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.272750906 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.27283297 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.271686413 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274751982 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.272521961 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.274094888 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.272371904 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.271304617 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.273154239 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.272908753 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.274079576 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.271036984 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.273243154 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279902034 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.295507387 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276904924 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.274913709 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.279632535 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273686467 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280047021 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.294055418 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.272995451 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.275473595 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.275784779 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.275286981 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.273995077 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.275164135 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.273426548 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.276874902 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.27805348 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.273859494 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.275504722 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.275343797 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.274277192 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.275368735 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284945426 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297970684 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.277263151 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279181454 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.274056569 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.276928649 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.278758942 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.27521604 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.273582323 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.278227893 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285676533 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.283878685 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.27391608 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.275623613 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274548384 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275038499 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.276394944 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.275887329 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.276487661 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.276335397 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.275950462 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.275248811 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277545717 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.276489169 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.276091579 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277063269 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.277996631 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.286170883 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.276315607 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.27754219 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276485527 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.277569978 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.278084677 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.277095598 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.276298559 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277904403 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.277391783 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.278600809 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283915541 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.283911837 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.279009305 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.276731566 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.277258035 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.278748659 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.277530352 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277495113 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.278845352 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278396994 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.279086491 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.278446706 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.279482304 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.276104294 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.276949181 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.278344244 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27878632 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281493852 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.285088991 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277742793 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.276227604 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.277565716 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279189156 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.277724801 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.27832491 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.283736251 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282056527 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.28995167 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.287180557 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.283342173 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.27913525 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2810136 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.286483833 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.276594631 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.278653191 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.278931083 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.279131307 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.280859467 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.282270209 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278953164 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.285853497 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.278417086 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.278839759 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287047191 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.304328272 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.278783395 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.281120907 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.28362962 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.280557736 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.278770601 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.279951777 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.279756042 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286766496 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.301391897 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281072806 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281701762 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.279483055 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.282403625 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285495907 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281199474 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.281431303 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.277462833 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.281928774 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280816938 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281788225 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.278972315 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.280383744 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.279119085 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.284847534 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.289396379 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.278710272 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282529899 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.280565834 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.28091211 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281410416 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283384772 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.279305837 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.279710643 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.280240274 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281231349 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.2828388 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.282863896 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.281531183 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.283633048 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.285041464 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282868625 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286700356 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.29408751 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.290778318 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.281073792 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.28339511 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.282125417 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.284393262 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.283233428 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.283338006 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283665139 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.284322116 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.283675277 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.284114795 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.285540098 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.288009446 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.300287696 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.307393766 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283805299 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.284608056 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285437768 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.284181689 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.282578007 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.284536198 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.285530578 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.288142642 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.293776364 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.285249952 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29014768 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.303202153 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.284315363 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.28905569 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.28755449 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.29297102 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.287969266 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283579305 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.285648335 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.292060057 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.30371254 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286476731 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295279083 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.315851157 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.305806707 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.286109405 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.285196116 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285605667 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.285617568 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.287995915 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.284974659 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.287634276 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286339864 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.286399799 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.286813161 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.291397892 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.287081035 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.288808317 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.286697993 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.286677411 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.287092293 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.28338114 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.287514604 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.288411526 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.286665082 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.287039991 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.288342222 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.287706882 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299071913 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.316002221 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.288405886 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.286614577 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.286327013 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.290443769 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.290917158 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298683647 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.296232374 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.288139048 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.288107672 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.288422787 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288736801 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.288107625 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.287887339 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.288371064 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.286701354 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.286549836 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.301288806 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.315309659 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.294752372 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.288579623 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.288437536 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.291598656 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289709173 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288599078 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.288442431 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.29014003 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.290994139 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293767134 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.289435435 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.289312003 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.292266923 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.297933574 seconds)
  done (took 759.689902611 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287205145 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28757472 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286709681 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287044866 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287987591 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288096609 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288354367 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287769539 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288907258 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288965795 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287822693 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287136836 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.287825639 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286973009 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288315525 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28722075 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287714982 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288153073 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287436416 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288354642 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287946304 seconds)
  done (took 28.25064745 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.28998177 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.287714255 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28870841 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292328404 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29036042 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.290614431 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.28916184 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292787577 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292550535 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28865149 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.291830103 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291613893 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.289011434 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.289841699 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289698492 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29247781 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.291574942 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290495012 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.291258295 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.289595059 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292042065 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.290675169 seconds)
  done (took 29.600940637 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.292506213 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.292024574 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.292278128 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.290248921 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.291818837 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.289552727 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.292425962 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.29363727 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.293699172 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.295251552 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.292435304 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.293797456 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.299829966 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.2979751 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.293977674 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.293634045 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.293494648 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.293227807 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.29328947 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.291080939 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.296642725 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.292603876 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.290804169 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.292482644 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.294177334 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.295640753 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.29500667 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.29349787 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.295353875 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.298949648 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.294071156 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.293963627 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.295159731 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.293633174 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.297059896 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.29937028 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.294407602 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.292561058 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.293584554 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.304646477 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.315688385 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.294768441 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.299859244 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.314291785 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.294585852 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.297483814 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.302593192 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.293252463 seconds)
  done (took 63.392471252 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.295426349 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.295316825 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.292822729 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.295055611 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.296199244 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.296560909 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.29580207 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.296457937 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.292966195 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.293230449 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.296003441 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.293487732 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.292512055 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.295616293 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.298150366 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.294151589 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.293822745 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294672434 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.293981383 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.294205171 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.294046827 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.296413186 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.298068666 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.295694487 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.297352208 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.293941997 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294195988 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.296504267 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.295083495 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.2940732 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.297169331 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.297029739 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.297425396 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.294159077 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.295855573 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.296958672 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.297145953 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.295288684 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298413658 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.295173025 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.29796004 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.29778968 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.296838086 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.298009369 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.295276293 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.2954638 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.294834439 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.296162841 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.295177688 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.297135782 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.297334368 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.295806263 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.29844678 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.294822368 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.298316011 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.297890156 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.296461866 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.295475196 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.298149494 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.297511885 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.295734768 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.298756709 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.296540934 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.29905109 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.299454205 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.296866156 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.296041828 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300111982 seconds)
  done (took 89.348977221 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298264452 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.299245479 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299203055 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.299841126 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.300750565 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.299790598 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.300403426 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.300914045 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.29929271 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300480451 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.299673389 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301713706 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.300325987 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.300713309 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.300013524 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.300355382 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.300945395 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.299415051 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.301461301 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301141126 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.301167832 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.30118651 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.300845651 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29993418 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.301358484 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.300539086 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.300016272 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.301268836 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302832108 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302518887 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.300476742 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.300550797 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302168024 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.301366711 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.301377941 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.301574468 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302708653 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30158205 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.301518029 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.302445341 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.302239812 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303253046 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.302466453 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.302181145 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.301612671 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.301698474 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.301805448 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.303556766 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303391635 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.302622645 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.302990078 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.301704091 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302780104 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.30425551 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.303167371 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.302945904 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302409006 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303775337 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303515238 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304599817 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303385354 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.305134883 seconds)
  done (took 81.91380314 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303137406 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.303472657 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.301821846 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.301438683 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.303163578 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.303692257 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.303553698 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.303411441 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.303100854 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.304529551 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305730347 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301154105 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302276159 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304636817 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.30304474 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304146174 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301523943 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.301521668 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304209301 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.301425853 seconds)
  done (took 27.280361749 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.3018526 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.304505387 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.302713114 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302368517 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.303164406 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302281565 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.303825353 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303735128 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302539302 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304275178 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305539583 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.305514876 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303029454 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.302474248 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.305944959 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303393383 seconds)
  done (took 22.076495318 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.303172611 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.305707589 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.305080907 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.305357149 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.303325417 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.302750382 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.305422531 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.303699667 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.302374093 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.305732832 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.304773667 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.305537209 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.30502892 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.304710832 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.303674466 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.306110558 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.303780057 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.304183821 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.306423661 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.30664861 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.304127155 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.303829823 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.306464414 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.308228258 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.30444917 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.305262937 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.305343838 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.303799155 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.303695396 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.307377142 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.304529588 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.304914607 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.305231553 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.304819425 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.307436495 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.306664731 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.30818556 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.306709897 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.307490898 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.307913827 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.307677982 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.306679652 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.307352275 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.308471041 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.306051885 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.307863572 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.307345628 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.306382298 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.305962915 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.306617858 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.308031301 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.308279544 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.30888721 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.306944619 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.308457638 seconds)
  done (took 73.043247226 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308427516 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.308937487 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.306016444 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.309070215 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.308422629 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.308098139 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.309677761 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.308967582 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306799847 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.31073771 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.307351774 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310710435 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.307054981 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310636184 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30794856 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308571535 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.306836221 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.308717223 seconds)
  done (took 24.77758681 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.3074672 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.307279015 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.310722047 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.307367011 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.307719213 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.310508473 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.308399244 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.309909351 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31056752 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.30906495 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308855202 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.310468168 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310814734 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.310937077 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.309823023 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310057444 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.312007776 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311591406 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.309926689 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308978333 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.312021567 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312355052 seconds)
  done (took 30.042661638 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.310932245 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.31076921 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.311102369 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.327740175 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.330398858 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.310761956 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.310676013 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.310698658 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.334871852 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.363567075 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.35882437 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.3296684 seconds)
  done (took 17.136539843 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309957001 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313041657 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.311569112 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312730836 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312353099 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309167832 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30943089 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310952229 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31404989 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309846218 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310522983 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313469625 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312686459 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310891765 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313071435 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313353903 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310109675 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310577456 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311109054 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312721522 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310580113 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313087862 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310717827 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31077754 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311123725 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312305207 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313991937 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311563769 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310369147 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314088929 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314481414 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312949695 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314405489 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310885223 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314355768 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314161509 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311993323 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314209185 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314206485 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312209154 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.314373976 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314379705 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314552402 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312238552 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314775909 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312643159 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312811879 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31317774 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312119349 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315746622 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314408459 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313023564 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315939596 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315090489 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315244198 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315259731 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3134233 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312182704 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314891804 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313982086 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314558224 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323777769 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313573096 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313681874 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316629936 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315252168 seconds)
  done (took 87.890842985 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314312373 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314950062 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314759038 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314348378 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315014268 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315128601 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313991664 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313754098 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313895003 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314208575 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31726618 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315061018 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315049273 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313942145 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313882805 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315062994 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31512633 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314804809 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316050699 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31709498 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316077777 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315698015 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314507589 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315016108 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315238207 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318763122 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315508435 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314767589 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316196998 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315968743 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315537281 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316106142 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317134534 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.316410521 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315779863 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316880147 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317767355 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316651649 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316931169 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319070907 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315404643 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318043015 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31787175 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316465226 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317087105 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316942727 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317439531 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317823863 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317791063 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317030682 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317211719 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318230398 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318068479 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31787421 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318037759 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318449126 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318779497 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317366102 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317160643 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319607609 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317799742 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316729655 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320793674 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319553449 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319080094 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318000288 seconds)
  done (took 88.121420788 seconds)
done (took 1780.714501082 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.482803505 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.437243468 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.31905613 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.323741963 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.31866493 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.342367973 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.329149832 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.318398967 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.319682613 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.320334866 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.319515146 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.505530704 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.314924226 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.320196666 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.320223813 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.41603947 seconds)
  done (took 26.944573554 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.349898902 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.327472535 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.444811946 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.344277902 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.35028901 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.520296257 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.385573786 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.32520948 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.504972635 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.367315432 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.330281163 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.348750454 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.325212165 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.327296531 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.344397438 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.517815711 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.587961513 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.31593872 seconds)
  done (took 29.254999451 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.801835999 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.366038539 seconds)
  done (took 5.404685816 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.345762247 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.325726511 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.326679955 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.324120525 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.329296957 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.317850132 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.324309793 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.315561041 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.316265462 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.463691719 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.332264584 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.335485503 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.345256543 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.325112663 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.322561939 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.364113139 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.487761153 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.325662528 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.323008989 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.333267815 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.32530482 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.41309263 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.369980886 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.324801884 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.458618038 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.32098738 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.328330112 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.333779396 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.461432033 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.325792174 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.327920024 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.327422017 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.327569709 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.265987025 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.874261155 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.328191633 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.351851278 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.337137649 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.32319248 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.468020555 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.328406502 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.333198919 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.318648729 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.853945394 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.469840147 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.447140218 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.345968525 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.329547942 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.329290151 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.392018912 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.329064677 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.330162133 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.37315728 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.139578746 seconds)
  done (took 85.046803564 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.370778063 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.320586112 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.500188411 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.340295373 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.320997019 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.32083368 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.337692362 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.625131226 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.339026868 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.319677382 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.606167751 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.890461925 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.339353144 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.36638607 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.188917832 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.384483275 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.335175372 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.319719284 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.323708849 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.324375905 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88177185 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.323146809 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.322090888 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.481506959 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.361699739 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.836857133 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.330174008 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.322332066 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.322665917 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.32196185 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.854883895 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.352232428 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.373857203 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.323327641 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.593793549 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.723683321 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.688669375 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.325135443 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.335506153 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.324984782 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.332239326 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.833717265 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.698760947 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.323557922 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.339741792 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.840559966 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.323177425 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.323345401 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.332905124 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.571978186 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.322808456 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.325187666 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.353229857 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.32284986 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.323057958 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.410814176 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.38838795 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.841130111 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.323778318 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.334964581 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.364560628 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.325360739 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.325996006 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.324384498 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.326649543 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.699309727 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.457383815 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.332792144 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.700290137 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.843864775 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.345116183 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.933349183 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.342037103 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.352566547 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.392298336 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.323974787 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.323887988 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.855253606 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.355224579 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.325441731 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.683997327 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.327815256 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.613618187 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.34605941 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.325903381 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893520605 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.32995549 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.409976218 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.327625167 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.327263 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.343226274 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.331488923 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.602025609 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.368462223 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.325797189 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.326736097 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.336613549 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.326657041 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.328673515 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.330174948 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.92254651 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.356881678 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.326527022 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.329797429 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.327054245 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.327549407 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.327280474 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.329260051 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.600974038 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.327622226 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.330885202 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.327091611 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.327977768 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.331945539 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.473947062 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.335646921 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.653563287 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.329058908 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.327342954 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.331088078 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.328990324 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.353359805 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329365362 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.332760209 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.239621375 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.586698721 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.347904619 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.330340377 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.328210835 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.328917 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.359488661 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.330730454 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.361953555 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.330274375 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106469337 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.357310646 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.349219336 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.329958448 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.33866395 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.333373583 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.331167197 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.331893902 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625922354 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.606447 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.465611951 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.334271056 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.332554044 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.100115573 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.364695989 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.508984658 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.351989146 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.330064198 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.573303305 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.482460711 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.33447705 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.33059679 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.330754372 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.587692947 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.329730432 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.651981947 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.884533091 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.355980755 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.335312687 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.097136109 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.042141107 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.331328808 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.334943399 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.617843175 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.349294057 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.330681302 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.331376268 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.330113844 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.34917836 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.353802968 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.333721111 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.331376795 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.332180385 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.545237902 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.522532232 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.349875145 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.331308138 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.844506613 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.3407428 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.331172336 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.332836563 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.333701593 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.332033473 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.391530489 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.337240111 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.338150616 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.334992769 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.34390777 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.871190064 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.331981226 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.333899566 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.524345279 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03616665 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.358733786 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.332096072 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.349903578 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.237265435 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.873231062 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.36672292 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.661372379 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.340113721 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.373565914 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.333596207 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.394707474 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.874371416 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.33821542 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.333320284 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.999929531 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.34943024 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.999935896 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.33327499 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.335359547 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944188948 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.351519621 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.335011573 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.345743355 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.33527079 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.627171217 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.334169852 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.366052882 seconds)
  done (took 497.772075484 seconds)
done (took 645.657597459 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.333152745 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.345136329 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.330331284 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.34402933 seconds)
  done (took 10.607384467 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.344990847 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.342611486 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.342987357 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.341285524 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.343483782 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.342594134 seconds)
  done (took 9.312603036 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.334539977 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.343823151 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.343832692 seconds)
  done (took 8.277334706 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.558262887 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.367756826 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.692246929 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.365157497 seconds)
  done (took 9.238522246 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.34350717 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.342911933 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.343146297 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.344472087 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.347389473 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.347768589 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.345013569 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.345458177 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.347427102 seconds)
  done (took 13.360754099 seconds)
done (took 52.050702869 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.435704902 seconds)
    (2/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.337304067 seconds)
    (3/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.331403782 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.737287259 seconds)
    (5/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.372884986 seconds)
    (6/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.324004306 seconds)
    (7/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.341853332 seconds)
    (8/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.328593468 seconds)
    (9/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.44770441 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.592561462 seconds)
    (11/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.883022232 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.379564401 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.363912807 seconds)
    (14/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.225097983 seconds)
    (15/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.323878371 seconds)
    (16/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.345776545 seconds)
    (17/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.467446093 seconds)
    (18/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.849655695 seconds)
    (19/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.326424142 seconds)
    (20/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.583270153 seconds)
    (21/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.326489903 seconds)
    (22/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.364324478 seconds)
    (23/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.228161285 seconds)
    (24/286) benchmarking ("sort", Float64, true)...
    done (took 2.357905302 seconds)
    (25/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.32568909 seconds)
    (26/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.348362024 seconds)
    (27/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.344969365 seconds)
    (28/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.344755633 seconds)
    (29/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.325243695 seconds)
    (30/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.135892872 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 2.339313255 seconds)
    (32/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.982762636 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.454342499 seconds)
    (34/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.325554671 seconds)
    (35/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.366269227 seconds)
    (36/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.324432357 seconds)
    (37/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.840788229 seconds)
    (38/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.338606984 seconds)
    (39/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.335044749 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.364733393 seconds)
    (41/286) benchmarking ("sort", Float32, false)...
    done (took 2.340175861 seconds)
    (42/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.325276437 seconds)
    (43/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.173512625 seconds)
    (44/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.333946546 seconds)
    (45/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.226550625 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.451124244 seconds)
    (47/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.440483527 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.608151375 seconds)
    (49/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.381379553 seconds)
    (50/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.326545573 seconds)
    (51/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.444115729 seconds)
    (52/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.364599197 seconds)
    (53/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.422449099 seconds)
    (54/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.326714307 seconds)
    (55/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.346432075 seconds)
    (56/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.33361442 seconds)
    (57/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.543009608 seconds)
    (58/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.327191725 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.400757784 seconds)
    (60/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.32729675 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.431970067 seconds)
    (62/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.493878877 seconds)
    (63/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.150383802 seconds)
    (64/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.327496481 seconds)
    (65/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.2068646 seconds)
    (66/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.45003141 seconds)
    (67/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.472225783 seconds)
    (68/286) benchmarking ("sort", BigInt, false)...
    done (took 2.341274641 seconds)
    (69/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.328553226 seconds)
    (70/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.427258908 seconds)
    (71/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.32909149 seconds)
    (72/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.342761136 seconds)
    (73/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.378220772 seconds)
    (74/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.351715013 seconds)
    (75/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.328228196 seconds)
    (76/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.330957341 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.291033162 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 2.342099151 seconds)
    (79/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.37108164 seconds)
    (80/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.342613701 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.923103524 seconds)
    (82/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.214897573 seconds)
    (83/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.711077258 seconds)
    (84/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.014060139 seconds)
    (85/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.596641395 seconds)
    (86/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.148454785 seconds)
    (87/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.343992358 seconds)
    (88/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.351260239 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.334172523 seconds)
    (90/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.369158292 seconds)
    (91/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.112641047 seconds)
    (92/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.218951663 seconds)
    (93/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.377319538 seconds)
    (94/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.328998932 seconds)
    (95/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.396196418 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.330309354 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.54220109 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.227777185 seconds)
    (99/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.328927248 seconds)
    (100/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.352956791 seconds)
    (101/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.345185558 seconds)
    (102/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.525483321 seconds)
    (103/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.371110119 seconds)
    (104/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.335364246 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.344429814 seconds)
    (106/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.124304907 seconds)
    (107/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.700552634 seconds)
    (108/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.438614158 seconds)
    (109/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.17931632 seconds)
    (110/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.331791387 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.686198936 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 1.891590914 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.37458837 seconds)
    (114/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.343755432 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.739723938 seconds)
    (116/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.351259661 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.622080124 seconds)
    (118/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.365758996 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.826405438 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.14862148 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.625687241 seconds)
    (122/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.354140702 seconds)
    (123/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.371494488 seconds)
    (124/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.345091115 seconds)
    (125/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.842460673 seconds)
    (126/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.344051217 seconds)
    (127/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.362192058 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.447901446 seconds)
    (129/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.370736248 seconds)
    (130/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.355854761 seconds)
    (131/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.345722472 seconds)
    (132/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.331975962 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.367530764 seconds)
    (134/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.345869995 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.171385169 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.372563009 seconds)
    (137/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.343250135 seconds)
    (138/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.346367613 seconds)
    (139/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.163324035 seconds)
    (140/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.381604317 seconds)
    (141/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.339104232 seconds)
    (142/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.50730726 seconds)
    (143/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.370212005 seconds)
    (144/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.410079912 seconds)
    (145/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.373270101 seconds)
    (146/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.337704792 seconds)
    (147/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.33820877 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.295051389 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.358279883 seconds)
    (150/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.410410744 seconds)
    (151/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.373899425 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.609988063 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.775898243 seconds)
    (154/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.256741006 seconds)
    (155/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.500687821 seconds)
    (156/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.344561844 seconds)
    (157/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.333790757 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.993649409 seconds)
    (159/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.334281495 seconds)
    (160/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.74555439 seconds)
    (161/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.366975753 seconds)
    (162/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.37538405 seconds)
    (163/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.34035006 seconds)
    (164/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.434310263 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.236939834 seconds)
    (166/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.432025349 seconds)
    (167/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.390549856 seconds)
    (168/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.352563469 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.733620502 seconds)
    (170/286) benchmarking ("sort", Int8, false)...
    done (took 2.366704758 seconds)
    (171/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.334035589 seconds)
    (172/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.500332619 seconds)
    (173/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.116741252 seconds)
    (174/286) benchmarking ("sort", Bool, true)...
    done (took 2.372479621 seconds)
    (175/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.406577905 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.334708063 seconds)
    (177/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.474757178 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.356243618 seconds)
    (179/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.412452675 seconds)
    (180/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.852361199 seconds)
    (181/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.350977842 seconds)
    (182/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.706043006 seconds)
    (183/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.202587853 seconds)
    (184/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.340377728 seconds)
    (185/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.357725452 seconds)
    (186/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.500020075 seconds)
    (187/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.561144518 seconds)
    (188/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.347045191 seconds)
    (189/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.45506868 seconds)
    (190/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.348129278 seconds)
    (191/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.335048728 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.911761706 seconds)
    (193/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.381637259 seconds)
    (194/286) benchmarking ("sort", BigInt, true)...
    done (took 2.34879879 seconds)
    (195/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.375030574 seconds)
    (196/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.720462019 seconds)
    (197/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.373084854 seconds)
    (198/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.365631631 seconds)
    (199/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.337826175 seconds)
    (200/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.457186399 seconds)
    (201/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.349024988 seconds)
    (202/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.410829352 seconds)
    (203/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.352529121 seconds)
    (204/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.457426665 seconds)
    (205/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.344311426 seconds)
    (206/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.390139268 seconds)
    (207/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.994594749 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.36828822 seconds)
    (209/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.369254355 seconds)
    (210/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.485121549 seconds)
    (211/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.433315659 seconds)
    (212/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.33644322 seconds)
    (213/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.305831727 seconds)
    (214/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.350855028 seconds)
    (215/286) benchmarking ("sort", Int8, true)...
    done (took 2.350135111 seconds)
    (216/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.337673371 seconds)
    (217/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.338638694 seconds)
    (218/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.357153032 seconds)
    (219/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.338388915 seconds)
    (220/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.572394958 seconds)
    (221/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.369554058 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.30334071 seconds)
    (223/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.339225313 seconds)
    (224/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.380138863 seconds)
    (225/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.380045587 seconds)
    (226/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.338396713 seconds)
    (227/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.379551472 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.57915677 seconds)
    (229/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.36975686 seconds)
    (230/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.339082429 seconds)
    (231/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.395837858 seconds)
    (232/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.377397735 seconds)
    (233/286) benchmarking ("sort", Float32, true)...
    done (took 2.351712842 seconds)
    (234/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.363006925 seconds)
    (235/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.436783863 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.378450531 seconds)
    (237/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.343988611 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.740118586 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.004284994 seconds)
    (240/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.338666532 seconds)
    (241/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.453872612 seconds)
    (242/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.351026139 seconds)
    (243/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.338729447 seconds)
    (244/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.364041539 seconds)
    (245/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.372062683 seconds)
    (246/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.339061752 seconds)
    (247/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.354198199 seconds)
    (248/286) benchmarking ("sort", Float64, false)...
    done (took 2.352295959 seconds)
    (249/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.410908118 seconds)
    (250/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.339457216 seconds)
    (251/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.355922085 seconds)
    (252/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.461636855 seconds)
    (253/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.340078525 seconds)
    (254/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.350496581 seconds)
    (255/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.435241195 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.339634762 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.435021009 seconds)
    (258/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.357677972 seconds)
    (259/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.417985849 seconds)
    (260/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.743049332 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.474584625 seconds)
    (262/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.417668271 seconds)
    (263/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.340945152 seconds)
    (264/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.018876757 seconds)
    (265/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.353883613 seconds)
    (266/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.340596039 seconds)
    (267/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.427269644 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.354582903 seconds)
    (269/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.358216397 seconds)
    (270/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.466436645 seconds)
    (271/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.354890744 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.452458282 seconds)
    (273/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.342753287 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.416432747 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.313592331 seconds)
    (276/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.480137387 seconds)
    (277/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.347710341 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.695108479 seconds)
    (279/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.367509242 seconds)
    (280/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.383654013 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.377948274 seconds)
    (282/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.343308212 seconds)
    (283/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.378119059 seconds)
    (284/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.356796856 seconds)
    (285/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.342991513 seconds)
    (286/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.137184894 seconds)
  done (took 571.675219559 seconds)
done (took 572.931704119 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.390752678 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400906705 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.369180756 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.390090075 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.479315122 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.543637976 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.379612867 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.37072133 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.416229597 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.418392262 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.365797915 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.543386353 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.370603569 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.367855427 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.369054951 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398458178 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.37229483 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.368667621 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.385320044 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.379912019 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.385143488 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.367594627 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.418834996 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.543241065 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.3736007 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.370919268 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.373078898 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.388989464 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.481388968 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.372804673 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.374363495 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.380302735 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.372127466 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.368682758 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.36598304 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.389677377 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.380737427 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.381143259 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.37397462 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.400789653 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.359420837 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.369648995 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.372661176 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.370857557 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.371557691 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.376876647 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.372753044 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.379782608 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.399988435 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39931735 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.367966478 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.384799316 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.374693331 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.374627625 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.384318954 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.371801832 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.375866215 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.405263159 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.39070939 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.405427056 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.363830284 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.376761104 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.373555956 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.389079889 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.379734647 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.372661918 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.367173104 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.376588658 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.362084699 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.379003681 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.371931595 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.379557248 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.375197088 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.385261982 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.404463934 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.37553174 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.368464077 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.37310376 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.380322031 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.370779297 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.384005837 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.40312696 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.379612785 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.374559239 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.402578014 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.549442154 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.385906125 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.373560699 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.384001438 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.393829945 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.381317813 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.384341186 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.37860431 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.369730872 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.385157283 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.377976397 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.378067203 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.377072647 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.380377774 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.387042804 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.363214506 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.427633847 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.372345157 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.373597487 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.375774763 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.388898434 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.363575093 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.376053723 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.398561096 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.423414966 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.378258762 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.367880922 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.378888134 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.408401392 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.385471216 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.380231967 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.371972435 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.369671656 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.377212527 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.390484216 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.380262957 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.373913007 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.408699701 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.377908912 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.373953026 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.364176167 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.399670968 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.405786615 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.498604873 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.388109528 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.408504364 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.375864072 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.381486328 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.406819994 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.409964813 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.40902358 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.381616534 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.410459372 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.392725605 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.375010413 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.388604397 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.389778834 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.379311549 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.383544657 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.37282857 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.407594404 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40815303 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.407057992 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.400213959 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.498798681 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.377946589 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.372790086 seconds)
done (took 228.568123128 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.435478708 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.370800946 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.456471589 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.375509651 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.475298498 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.477952703 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.370281964 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.371577265 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.370638342 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.748219594 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.370690625 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.371383974 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.37376561 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.37168066 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.460884448 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.374175058 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.373043029 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.71168534 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.372758768 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.445472913 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.371102957 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.372304477 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.375174439 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.755773346 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.373054928 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.370035589 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.445977925 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.376080622 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.721888841 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.368162535 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.371548393 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.721712654 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.464777351 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.392461109 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.385637477 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.382662782 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.474990243 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.393670023 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.453839083 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.455664024 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.459547816 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.413050741 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.368829834 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.373645538 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.377292092 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.376349655 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.373527933 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.401929837 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.373066039 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.373541889 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.713872205 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.386179275 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.383693903 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.375061289 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.37445592 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.396279702 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.374533436 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.37698932 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.46775255 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.376803187 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.438466702 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.801307251 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.751047047 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.376348525 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.372279976 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.375922421 seconds)
  done (took 107.221941571 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.443325278 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.459068583 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.492899311 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.377875948 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.427909455 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.497345908 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.377660546 seconds)
  done (took 11.362153534 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.383016438 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.378713486 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.426499638 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.427748358 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.376594043 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.593446551 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378987188 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.389949006 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.376455425 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.45682888 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.379808092 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379999848 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.384702258 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.374504184 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.427564805 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.390223546 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.493046782 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.379408118 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.379706771 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.532540913 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377534236 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.386781406 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.453771459 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.391275501 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.380812093 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.386074102 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.302198918 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379569431 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377331767 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.38039949 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.377387136 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.480146601 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.380677352 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.376467832 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378715162 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.53917621 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.379853688 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378166304 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.380927466 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.379709822 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.381151991 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.381219463 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.382357956 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.377530376 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.381501779 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.404230373 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.381418838 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.380268038 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.380850972 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.382045675 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.455138539 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.382198226 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.379500717 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.378501362 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.459918983 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.388909912 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.381300091 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.379152789 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.38220016 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378450639 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.532216783 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.4296069 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.381537608 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.431710591 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.382147202 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.38953813 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.381820082 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.382487705 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.47464175 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.381945846 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.430822266 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.380948162 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.608121942 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.413547591 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.384251788 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.385868124 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.386270409 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383364084 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.379028514 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.390213759 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.379745238 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.382803085 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.389722069 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381099353 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380526916 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.569739317 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.539268686 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.380610382 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.39468862 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.390913377 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.381690925 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.457022084 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.383842776 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.380876304 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.436035804 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.497617923 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.461603691 seconds)
  done (took 142.762902689 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.388042191 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.392309749 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.387621787 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.406890603 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.38415333 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.38403569 seconds)
  done (took 9.635795362 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.386201076 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.386018602 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.384091509 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.384288641 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.38323985 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.385858338 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.385024548 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.386460603 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.38793291 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.385214126 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.385408032 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.385863973 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.38677339 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.384671571 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.386026519 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.386665522 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.384649954 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383482037 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.383868834 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384570682 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.384563146 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.385739698 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.385681556 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.388569981 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.390790881 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.386020798 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.394045412 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.386286783 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.385771837 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.390979936 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.406830426 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.387196308 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.389015395 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.393483908 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.391244667 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.389202433 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392239132 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.38739681 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.385588951 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.387819311 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.389181157 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.386987595 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.38720936 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.388251262 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.389974103 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.393742394 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.393829357 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.395716716 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.388277265 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.389453131 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.388745352 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.387716491 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.389383917 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.39026456 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.390682153 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.412021764 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.393852034 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.388191776 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.388811529 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.390153625 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.389703817 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.389481779 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.390608446 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.393965305 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.387691421 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.390012557 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.391869345 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.393959037 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388846625 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.389623585 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.389592487 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.387920438 seconds)
  done (took 102.296180488 seconds)
done (took 374.560805224 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.860916433 seconds)
  done (took 4.159420198 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.495488676 seconds)
  done (took 3.795772331 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.969015146 seconds)
  done (took 24.273344687 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.465083889 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.387541573 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.405522652 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.38302972 seconds)
  done (took 10.940695341 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.663368701 seconds)
  done (took 3.962563682 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.382428514 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.382438563 seconds)
  done (took 6.065359321 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.752310642 seconds)
  done (took 4.05106339 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.81260385 seconds)
  done (took 4.116379021 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.405543458 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.399567986 seconds)
  done (took 6.11409203 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.37099204 seconds)
  done (took 3.670060907 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.293918492 seconds)
  done (took 17.592351505 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.393977137 seconds)
  done (took 3.695189092 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.42616236 seconds)
  done (took 3.724885779 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.268655339 seconds)
  done (took 6.567888735 seconds)
done (took 104.028137048 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.382213882 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.391577364 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.391856754 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.391654918 seconds)
  done (took 10.855858695 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.423356829 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.443082794 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.426399584 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.435459854 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.427876037 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.42587632 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.417551961 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.417215026 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.435209337 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.428978404 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.44490035 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.426940823 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.42602551 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.416282638 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.42792743 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.42683163 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.436527234 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.426263914 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.417695251 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.42839341 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.392445629 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.436770245 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.428836804 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.392455076 seconds)
  done (took 35.510958709 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.890162097 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.466156949 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.54604415 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.447104085 seconds)
  done (took 7.650375646 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.443849297 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.44770208 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.461229851 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.503892191 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.526622287 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.455701476 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.421411277 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.415060557 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.400993262 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.448224609 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.521606745 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.462506915 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.5344845 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.393707714 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.582339634 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.393177498 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.393634159 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.445466746 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.496853451 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.515025612 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.394822159 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.444114004 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.459485081 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.463306172 seconds)
  done (took 36.327099012 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.392613466 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.412517866 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.39384358 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.391571583 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.400731353 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.392438817 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.393586299 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.394535827 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.393124697 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.398811309 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.392876157 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.406234346 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.394239767 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.392607605 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.400833088 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.396168748 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.39931246 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.393027089 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.395575681 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.400103213 seconds)
  done (took 29.238049434 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.386656713 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.386961775 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.740137356 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.64541463 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.3884873 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.396432486 seconds)
  done (took 14.248191445 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.472094705 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.620515135 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.395439442 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.796985876 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.874148746 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.397651015 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.396916393 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.663589497 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.017134308 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.008632044 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.466078044 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.469858824 seconds)
  done (took 20.884507429 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.401998827 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.397714948 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.407163607 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.41551393 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.456464279 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.400790833 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.40387187 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.391263042 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.464079656 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.461383797 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.401292595 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.457284447 seconds)
  done (took 22.365009038 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479113869 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39028105 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400573988 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453793566 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39258774 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604255017 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.461166663 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.14851544 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.414915203 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666851343 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405072863 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482624506 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.649372309 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391395588 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401619373 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.387695241 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628673208 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918075612 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393646046 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396992221 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428975276 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391986561 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403276253 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637178881 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393595866 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393506341 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.655482874 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39250467 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708487811 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415787211 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404533912 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393176084 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667146759 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090552733 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509739427 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.625817086 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391799154 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394244191 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.382009149 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.404669592 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405177099 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406740832 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40560977 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394545351 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394755809 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394326032 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168840474 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.421573155 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.392569292 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395533518 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686980025 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492126395 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.399411361 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394924451 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429128501 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393910931 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.399766246 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492710515 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967757632 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400161943 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396620667 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.404603367 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414539752 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396941605 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073260194 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.402784169 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.39997772 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400181574 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39594191 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39830413 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420741406 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396518686 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.422457759 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395913862 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166198778 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40370479 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400142267 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975173284 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403941171 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.396359445 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627697919 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397503302 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396489795 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.39636627 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396525894 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162483809 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413388919 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.382183649 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420180994 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.15476745 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652904317 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418860512 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421954688 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622271634 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.384762257 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399173898 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.397943133 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400207449 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421424105 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.159678983 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418829558 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.40284793 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657648332 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.610587998 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412138813 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.399649767 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923221241 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419316206 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.423089025 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397451019 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.658790011 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.036960127 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416073339 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403312165 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424417136 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399805289 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187831077 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410598631 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.499558087 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409720635 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68528904 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.228172584 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401086157 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46802005 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404810885 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400127101 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405606216 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410136009 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39987877 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.625669863 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422915983 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.420486374 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.402508626 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398992398 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.40307159 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40084699 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.421035319 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625532262 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400735727 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686282334 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40097512 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40255624 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401586167 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.62495125 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.398785839 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.737183139 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66230381 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404331365 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410169584 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420897916 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419994936 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500123082 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424644575 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.411535127 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.668277808 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.405898431 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.405626159 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413479172 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411591251 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410167459 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.408786326 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422654188 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042026894 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375197619 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405770858 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.297211121 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.416492555 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471516583 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40819639 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.6370491 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.413356286 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423021337 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.407557241 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.403141762 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627618974 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413755089 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.412442827 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492844148 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.917098669 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062666464 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418476952 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.402785598 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.402275519 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.401711016 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403723149 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40193809 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404251417 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.637079911 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419704822 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415646114 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.047069926 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405843912 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412146386 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.420352071 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417817846 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.412780585 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405240624 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.415666951 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419821812 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414898011 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.426080004 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549167226 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.419169246 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403560608 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.922983843 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410894405 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405461122 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405618652 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440270765 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416619164 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28276403 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665914034 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409227352 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694390924 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405474572 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.449390891 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.404532585 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414995035 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411000427 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.436659219 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433751059 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.418285326 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416934324 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417819272 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975640268 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194805457 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004007423 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422635298 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.414733466 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415036736 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.175346514 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428311526 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408028875 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661532913 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.173288123 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427743313 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926983466 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.42647749 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238993925 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697046741 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638765989 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408722837 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.426492286 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703924483 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621372537 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442976969 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415806571 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417554292 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.394276027 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007558833 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4410461 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494715149 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178434352 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441534372 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410861211 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.437200535 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.408701898 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866307183 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438437271 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409542096 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.418767773 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417210452 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298307256 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410592181 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407818227 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083452781 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409927193 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.935749239 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430916781 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.645619123 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.421978006 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.414342213 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.410165942 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.413377554 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.666399109 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.699944915 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412472297 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408747728 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014934071 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.269649494 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.416661257 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411558351 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198139719 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423296054 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.73411989 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.411951706 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.428562762 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421935851 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411205217 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410850399 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.407931631 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413042726 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383241232 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944734731 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.411622802 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453880063 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413401358 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2706624 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669697653 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.426428803 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.053880355 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639569842 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41490846 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43692065 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.41611727 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411775906 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.405650806 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411934004 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.648842228 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425569008 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.637091487 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412480872 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.397312401 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.444772444 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625425715 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412570234 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412014796 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676191134 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.411269703 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.429811349 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208144693 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440491859 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413451149 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432476392 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416568603 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434833908 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484389177 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652512303 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.426938485 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.426935296 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872399426 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443378603 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416658417 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.42785384 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509694015 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431541421 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.432126023 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.198339197 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061797404 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212608255 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.06609138 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711805338 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416533453 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417386495 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415918503 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564344885 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415422645 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688132577 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414193083 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.431221076 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439822472 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415745297 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43217672 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635451002 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691073458 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416043699 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432299894 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426003037 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.416356444 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427294887 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.628685563 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949490486 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000620642 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418679902 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420665007 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.196431312 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713240182 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41632618 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416616682 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41620306 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.435697261 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.439244617 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.423542294 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419382252 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575922203 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706761233 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127971526 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.44844331 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.445603426 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.191713704 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417352409 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.703894637 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416357566 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.686505955 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067611055 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.210388883 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692340532 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490406897 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659442195 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.426309314 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567776104 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.430587141 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419311948 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419074971 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26731838 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.416923431 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.428454596 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077705322 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691614941 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.423659771 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.431659017 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443389825 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.430752761 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.645539316 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210086165 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.653974196 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.431615211 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420944961 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420064835 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078209499 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.728275302 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421711185 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.423928388 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682949682 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421228469 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445645587 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.874847707 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.419785147 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010123336 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.396833251 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442754777 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419661173 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.242680318 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083498893 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.420078429 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954667904 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423539203 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427604229 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705468188 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.425813691 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42254127 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.728825922 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.425628731 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.430418662 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671697005 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.083416113 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270330631 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.425523746 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441882721 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.453409919 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422011523 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501887995 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421576053 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431653975 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.898271388 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.453002442 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421934221 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436144567 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.420468325 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439536528 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.431402542 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42314608 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.429863879 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.42512455 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.418829368 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.450199205 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53146755 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030160386 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445691925 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.097648509 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.756543125 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.682448928 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.431699345 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.419412916 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.428244952 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424511328 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42490965 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424390008 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.425249848 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032035844 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.432380587 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.444565451 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.430057072 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.642111063 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636971962 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.425271565 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666562658 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432880774 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448073738 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.411541128 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42534703 seconds)
  done (took 995.022961794 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.481244979 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.457164817 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.46033753 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.463283536 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.492633867 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.485981119 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.513876331 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.464338447 seconds)
  done (took 21.15847544 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.432002878 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.444622371 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.427587208 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.444230853 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.426211621 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.943152329 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.451091786 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.435134474 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.436162746 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.441781146 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.43249551 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.15943201 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.454610083 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.433342418 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.432010145 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.434798622 seconds)
  done (took 33.574465981 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.723798994 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.667956245 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.004221153 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.48117897 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.458743465 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.43688781 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.777428196 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.447452366 seconds)
  done (took 28.33835384 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.438783761 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.438254349 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.437153096 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.438143073 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.438768018 seconds)
  done (took 8.53233379 seconds)
done (took 1265.006629264 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.43289924 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.435577284 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.432780855 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.435240561 seconds)
  done (took 7.076614727 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.414836837 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.414165154 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.416373437 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.436773189 seconds)
  done (took 10.023609947 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.225385467 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.171292841 seconds)
  done (took 5.737658365 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.429005816 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.191073602 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.166261251 seconds)
  done (took 8.128095017 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.736800656 seconds)
  done (took 3.076839247 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.838429733 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.79683218 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.627107999 seconds)
  done (took 6.60484333 seconds)
done (took 41.989100262 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.442819789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.68245496 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.584786702 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.428169205 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.619564603 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.586743719 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.202070491 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.439785671 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.429159376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.451553496 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.436287055 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.606268854 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.254965815 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.684948 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.256825459 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.779321129 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.593090144 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.429566021 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.435889256 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.429730045 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.202551388 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.436267748 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.441617728 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.441399246 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.59306491 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.576001509 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.440439177 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.781239443 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.443227589 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.429827797 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.586769449 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.431543446 seconds)
  done (took 84.919834348 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.429153142 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.449094511 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.430978339 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.450859746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.435181676 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.431754224 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.459319964 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.431639583 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.444661834 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.430021477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.429042648 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.43062023 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.431492683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.450026791 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.431132496 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.454793872 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.430407957 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.448207726 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.432307172 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.44376885 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.442930853 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.430610997 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.42996154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.449816949 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.465747348 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.432859328 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.453047623 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.449261455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.439188761 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.430959889 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.451437432 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.45324815 seconds)
  done (took 79.447508743 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.439446557 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.43249398 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.431441833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.431584824 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.431195422 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.443601546 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.432985568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.432493714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.434282147 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.45246549 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.431820753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.437416688 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.43133917 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.447752219 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.433066543 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.432472647 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.432131179 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.452412405 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.432602876 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.432152843 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.435765623 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.43237477 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.444952607 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.436328723 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.440866107 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.44520462 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.433086006 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.451587615 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.466090117 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.437332313 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.455346527 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.433199429 seconds)
  done (took 79.384638711 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.630620879 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.441491488 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.443017672 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.387850974 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.441598335 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.443706142 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.435909979 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.634717096 seconds)
  done (took 15.206237992 seconds)
done (took 260.299636937 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.44564711 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.447422765 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.652877426 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.471817391 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.433961267 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.463399876 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.463810544 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.674653324 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.462439312 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.676336107 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.457949864 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.458660301 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.437217964 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.461022074 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.73132358 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.591649468 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.404669797 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.437479711 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.816511383 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.467601245 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.71664363 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.436105074 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.72546217 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.436270751 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.437417079 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.43582863 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.442035671 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.388305627 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.481931475 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.805403321 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.445580495 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.423992578 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.550686162 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.551720895 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.664093284 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.605059068 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.442792547 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.529105735 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.66943977 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.445680868 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.447701181 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.252451231 seconds)
  done (took 86.140098373 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.442793487 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.566752254 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.445566903 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.445702634 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.445257425 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.567219954 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.541909843 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.446094462 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.446165725 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.445379433 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.444915827 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.44564225 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.446929856 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.446761689 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.445855085 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.446887033 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.446059114 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.448380233 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.448290943 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.492185465 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.570891363 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.470688401 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.439004524 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.447205444 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.548876206 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.585698884 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.44555548 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.440264735 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.489224049 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.447460795 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.450126786 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.493305604 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.446148816 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.448260607 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.564430596 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.548847852 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.448339857 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.445748825 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.567558113 seconds)
  done (took 58.9541105 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.448286152 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.70355909 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.900782443 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.453876648 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.447458116 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.451604158 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.535052255 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.458556948 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.450732421 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.451836211 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.624368818 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.451361275 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.484462963 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.927601052 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.451634865 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.45052221 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.450146551 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.451186927 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.718357639 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.45839557 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.559465986 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.459747068 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.538534915 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.468372114 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.473972773 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.44872198 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.455882488 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.026749888 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.45441071 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.625204023 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.340199309 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.544603553 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.011176615 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.92102066 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.346497656 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.461418962 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.450857058 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.633681386 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.45301945 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.451029135 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.537600185 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.460052921 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.909395923 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.14936727 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.469843539 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.451925321 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.051159557 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.635281025 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.730510927 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470690155 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.935625562 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.454123305 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.45294161 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.45303146 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.723800316 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.458979597 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.450434011 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.084194369 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.475680932 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.538528099 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.454352184 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.452390251 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.720927109 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.452101836 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.708723577 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.454869938 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.459329803 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.475100625 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.912184473 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.455537821 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.175060138 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.47238223 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.453270702 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.629176031 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.711141514 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.084108137 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.457268744 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.72525332 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.017052031 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.536733592 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.458199927 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.016416192 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.541392369 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.457694459 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.457588517 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.455436845 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.454709294 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.528758163 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.537119065 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.114816105 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.164842432 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.1160536 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.560521705 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.466991128 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.453029964 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.088979364 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.474680763 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.454768786 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.91320049 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.177168558 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.475752188 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.462203261 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.18440028 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.477800587 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.541505307 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.461313795 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.924411364 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.456208215 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.506171984 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.456671189 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.46459736 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.480536653 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.541708785 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.460045967 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.456823958 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.152330609 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.658287954 seconds)
  done (took 192.004730598 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.461546024 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.45088331 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.457259114 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.449035161 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.449051805 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.457445353 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.449289469 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.450310573 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.455288634 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.448534353 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.449623691 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.462241366 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.451050217 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.453370951 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.461042333 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.457376614 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.450782718 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.450113827 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.449419586 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.469740617 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.450804907 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.480650902 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.451535157 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.468964872 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.450754468 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.451080387 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.456820661 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.453410724 seconds)
  done (took 66.108921727 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.458056708 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.110644224 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.470230954 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.602689263 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.482357711 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.461168428 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.60313911 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.521471619 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.46051292 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.456302314 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.458648548 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.80048816 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.47074835 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.025987661 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.672569146 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.603666409 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.02615335 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.480443128 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.457617432 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.458980554 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.605284224 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.473030592 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.793005006 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.080190513 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.460878067 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.099632477 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.461282566 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.460299526 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.459786201 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.114156012 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.468833998 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.802286016 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.554282266 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.525651223 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.116518576 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.055011475 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.058708692 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.624687747 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.459975679 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.459959171 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.459707711 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.451337265 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.11566011 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.47238633 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.461430801 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.112962168 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.491552221 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.463263082 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.466741831 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.461123041 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.526003059 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.527981925 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.799235452 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.119205034 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.555905661 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.475499154 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.610698734 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.860111332 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.46370947 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.065741764 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.468757695 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.090657379 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.483664993 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.451486859 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.462613924 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.468145404 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.627112115 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.611674929 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.041303964 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.480977323 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.031212962 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.645861378 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.461387277 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.462196891 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.464591336 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.08979261 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.032716351 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.646427791 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.610960255 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.680685744 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.453810157 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.462581475 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.453240291 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.547094597 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.46278864 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.091583804 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.053922645 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.483583686 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.465395034 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.465293549 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.465488143 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.660768579 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.110763672 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.548887871 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.029276417 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.819997021 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.802737686 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.466479753 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.527918346 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.482032467 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.804730867 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.465719741 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.52643148 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.915889414 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.804221911 seconds)
  done (took 175.226376204 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.723841565 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.482372818 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.573502502 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.619207053 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.101208211 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.086786303 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.477175489 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.594011345 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.581815782 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.737269544 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.463703391 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.563468898 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.695107648 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.547741802 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.221963097 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.539497754 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.563917946 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.629978994 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.61497123 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.45884912 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.15032439 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.78421282 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.671890983 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.482005039 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.575141526 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.285747797 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.07209405 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.993660401 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.658141825 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.469833612 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.02844287 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.469465589 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.467138525 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.182530838 seconds)
  done (took 67.938070912 seconds)
done (took 647.720327351 seconds)
SAVING RESULT...
DONE!
