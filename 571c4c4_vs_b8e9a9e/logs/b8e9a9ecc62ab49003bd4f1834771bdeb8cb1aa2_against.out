cset: moving following pidspec: 32000
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.41117473 seconds)
loading group "string"... done (took 0.593894027 seconds)
loading group "linalg"... done (took 7.705481075 seconds)
loading group "parallel"... done (took 0.174890681 seconds)
loading group "find"... done (took 1.160898145 seconds)
loading group "tuple"... done (took 1.923099243 seconds)
loading group "dates"... done (took 1.261182331 seconds)
loading group "micro"... done (took 0.239663335 seconds)
loading group "io"... done (took 0.951848596 seconds)
loading group "scalar"... done (took 38.796662448 seconds)
loading group "sparse"... done (took 12.740407289 seconds)
loading group "broadcast"... done (took 1.028582499 seconds)
loading group "union"... done (took 13.141921877 seconds)
loading group "simd"... done (took 4.930980948 seconds)
loading group "random"... done (took 9.87759426 seconds)
loading group "problem"... done (took 1.908247278 seconds)
loading group "array"... done (took 23.138538677 seconds)
loading group "misc"... done (took 1.850061533 seconds)
loading group "sort"... done (took 3.746437968 seconds)
loading group "collection"... done (took 18.985600465 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.561375862 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131621399 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.125142505 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.125499359 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154219532 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120055585 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131626144 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.091862804 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.849299231 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154213015 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123659452 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.441872404 seconds)
done (took 5.53628535 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.185509241 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091579155 seconds)
    (2/2) benchmarking "String"...
    done (took 0.091830667 seconds)
  done (took 1.350788675 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.073074872 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131573839 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.075008298 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07488283 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.075829148 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077116533 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074235737 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074432596 seconds)
  done (took 1.752493851 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.081180945 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.077890483 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.074446006 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.076433732 seconds)
  done (took 1.480128427 seconds)
done (took 6.024420804 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.803154427 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.223509298 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19380721 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.422419822 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.141711411 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.166800526 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642015617 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343242805 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.201276653 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.089944849 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.118667132 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.340280681 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.118434666 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.654746486 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080798913 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096515763 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.144895435 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454172449 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075535104 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088485514 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095833528 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133874777 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.09455315 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081169132 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153521694 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075593983 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144994918 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.088793367 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.072515394 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.22071883 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.181126588 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665961539 seconds)
  done (took 10.619810998 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.106386329 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.106084339 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077449634 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.131878959 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106216779 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078279318 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078867338 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075168437 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095279336 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.136265942 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096518553 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109255254 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074188325 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077549499 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.093833673 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.21414024 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.089250853 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.090071871 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078953689 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083389207 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.114816242 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.087728672 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088719508 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085950087 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.138610233 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185980033 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106544564 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.105704272 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074782231 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.088091496 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.123670895 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.134924276 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074045499 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074718017 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.133884104 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103195606 seconds)
  done (took 4.927289038 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.002212304 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.154380437 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.100343087 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145553393 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.073465451 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.119515979 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.074424879 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.090651254 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.219447078 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.438488603 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.618894138 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121308486 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114900443 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076512333 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.120935259 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076462314 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075378796 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.535576435 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103880636 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120133865 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090779158 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079339546 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.077878751 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363897124 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076679291 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072660765 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076877453 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065329782 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.135490342 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07712082 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.957217953 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.163709865 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074408766 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10946509 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.306417551 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100335121 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.154433162 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080374246 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073139996 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16526692 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.073709058 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.078654692 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074327212 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.093598666 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113048166 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124462062 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.074369016 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075776096 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172791518 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073019921 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090032262 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.105038808 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.161245058 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082959037 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070827773 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.262316433 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095236815 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077505207 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073058865 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.201963098 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137002384 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.076188339 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074727579 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079080557 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078658859 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.372413266 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.072389901 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.044810283 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076504312 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.086125355 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077737601 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077625891 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082143088 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081826051 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096362178 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075119289 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08396038 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074291342 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07451819 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.07501869 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093267429 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07238585 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.39525594 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072770628 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074120832 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.070543272 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.200767765 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104980636 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075574296 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074722964 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109040656 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076288923 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073924866 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116227955 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07286639 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.071538941 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.09124616 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074801646 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.119220843 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074989059 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.104162825 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074131887 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.106618678 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.083830919 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107362064 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09029398 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076640336 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.43786256 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071348247 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073254137 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073944292 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.071266759 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075381807 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.072860084 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.087324692 seconds)
  done (took 22.822848287 seconds)
done (took 40.542706904 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272608294 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083837542 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083580796 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080525289 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082475582 seconds)
  done (took 1.866506444 seconds)
done (took 3.112999339 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.131987907 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109558226 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072528655 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106897517 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07338859 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112197988 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110584319 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.090283313 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109544632 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072574059 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105738851 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071540495 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072437392 seconds)
  done (took 2.499990486 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092269248 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.095280863 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078409437 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.092290451 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071282185 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092016504 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090060825 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098703606 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090468269 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081049219 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072032094 seconds)
  done (took 2.191070979 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091445068 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09296301 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078010075 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090268567 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071348154 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091138447 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090435206 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095671651 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090711745 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082810702 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071660427 seconds)
  done (took 2.176928312 seconds)
done (took 8.099055758 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.086134579 seconds)
  done (took 1.305837014 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.604952839 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.142393303 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.087884166 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.117405681 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.201040798 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.125714146 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.280391101 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.093752745 seconds)
  done (took 9.065374311 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097699346 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.091834164 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076512284 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080255983 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077651568 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079930316 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078891646 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.077239007 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078613192 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.079214906 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.077056879 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.078399366 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080432203 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08056439 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077744759 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.077603587 seconds)
  done (took 2.587908058 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.101122868 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.099952787 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.082994267 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083192941 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.080547762 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079938424 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.082802523 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081866728 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.079446893 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080516914 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082614792 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082289077 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.079947184 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.072798645 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.082181588 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.083434218 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.079672357 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082575155 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.0826623 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083405879 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083186775 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.072245442 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.079956842 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.082128822 seconds)
  done (took 3.320157106 seconds)
done (took 17.511563205 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.124181838 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079885726 seconds)
  done (took 1.431965114 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.090309527 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.091989615 seconds)
  done (took 1.420019343 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.092013529 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.073788194 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.099599753 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.086908079 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.074587388 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.073947844 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.096957429 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.074237258 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.074059197 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.074070718 seconds)
  done (took 2.058247858 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.076712274 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.086207339 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.078361392 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.089595628 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.0821049 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.072358711 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.080811065 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.076651914 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.086678631 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.070566081 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.079294437 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.091789731 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.080396374 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092998029 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.080920099 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.076719188 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.078818067 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.075188173 seconds)
  done (took 2.698654663 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.073864897 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.075401741 seconds)
  done (took 1.393499324 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.074943573 seconds)
    (2/7) benchmarking "second"...
    done (took 0.072122876 seconds)
    (3/7) benchmarking "month"...
    done (took 0.074629829 seconds)
    (4/7) benchmarking "year"...
    done (took 0.07503676 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.071052224 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.070366879 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07149468 seconds)
  done (took 1.748370003 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.405625985 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122651958 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330546351 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079185288 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.090918926 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.272347837 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073787453 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.078980855 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.079056757 seconds)
  done (took 2.821181357 seconds)
done (took 14.819730161 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088186595 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.095256864 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.105347837 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.388582832 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10055116 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074027899 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.122342365 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.197289201 seconds)
done (took 2.430709647 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.221676127 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.665089076 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.417852103 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218840441 seconds)
  done (took 2.548052725 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356926427 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.096846621 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066871779 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075543561 seconds)
  done (took 1.851013123 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074457272 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07788801 seconds)
  done (took 1.402680411 seconds)
done (took 7.279047932 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07454505 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09173959 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074118954 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.071287933 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073803244 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071992694 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.071639347 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071388997 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07338578 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074319491 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.073733475 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.073842135 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073837393 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071717514 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071574047 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073939806 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07394585 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071890113 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071187415 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07148968 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074582364 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071444524 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071309118 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073902865 seconds)
  done (took 3.05375905 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.093848214 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.074234499 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079215915 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.079551091 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.077736727 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.079302386 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07951004 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073964037 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.079365479 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.076503535 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07735743 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07686899 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075361306 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.076636509 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076503273 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07750194 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.079464509 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07418085 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075963881 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.077524778 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.079252233 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073724271 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.077402369 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.194574309 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.076742033 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07690714 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07584091 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.074033082 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079731017 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.077052464 seconds)
  done (took 3.707364962 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.078225109 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.070651761 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.072102559 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078749941 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.071064804 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.072363924 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.071572783 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.071763313 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.072132493 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07116049 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.073441973 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.071524713 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071628255 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.072098501 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.072247325 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.075394375 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087714887 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072490887 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.072637617 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.072377325 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.075408826 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.071507532 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.07132597 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071451699 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.071643288 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071309629 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07128772 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071288814 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.072467201 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.071287558 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.074972629 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074854986 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071035085 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078207077 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.074945954 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.070888067 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075750047 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.070962131 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.071680743 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.070744611 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071348593 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.073734779 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.071584633 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078727519 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.071505088 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.073906887 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.071985345 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.072843345 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.072074326 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.07514258 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071509047 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.07158968 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.073795448 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.073577077 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.075774346 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071476259 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.071829717 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071022305 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.07193893 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.070974891 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071418865 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.070970047 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.073882371 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.072206544 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.086975989 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078422172 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.071761912 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.073495264 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.072498791 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.074128423 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.073405553 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.085706009 seconds)
  done (took 6.548625348 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098704399 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096170673 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074151953 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073256477 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069470668 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072223654 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078347794 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072085529 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073811622 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090402351 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072384077 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073237031 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073817246 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075934273 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072019408 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073893509 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080091768 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069853337 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071992424 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075701054 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072435475 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077456178 seconds)
  done (took 2.961452898 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.164902608 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077850632 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.114571633 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083591084 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078447898 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083220153 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077905696 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078424915 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077712875 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07548345 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075688481 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077819174 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07784061 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075279259 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076054194 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075935903 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077827629 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075292174 seconds)
  done (took 2.792671488 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.085347189 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.07417058 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.094918682 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073409586 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.073613529 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076672304 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078510434 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.082381431 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076687788 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.074504189 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.082183331 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076194881 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.076834956 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073786345 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076445163 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074363587 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07657025 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073961289 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082866395 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078622943 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.078236707 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082373338 seconds)
  done (took 2.991291312 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089085994 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076108799 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089357165 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07597782 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069598791 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.072133602 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.078840349 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073942305 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07774719 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.075630128 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073757042 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07245546 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.076995637 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074210483 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.076968753 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073438919 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075640832 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073682457 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07579013 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069708079 seconds)
  done (took 2.791112999 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094817738 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076404685 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076249417 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083645502 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075971566 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075711192 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083595341 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075783819 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0757442 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097070769 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075472959 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076037631 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083348338 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080840812 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07561112 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083946832 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083540391 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083346247 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076579475 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075797262 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097248094 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075644432 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084143948 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075405594 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076161619 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076005359 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075486848 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080294406 seconds)
  done (took 3.521660638 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074331844 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074229066 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071540647 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071241008 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071635954 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071039581 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071221451 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071589655 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074178535 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071737403 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.076684379 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.073782556 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074741268 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074036407 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073867393 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073772299 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074127311 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.071916431 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07138181 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07107516 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073839234 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074066334 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073893973 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071253107 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071753155 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.074051115 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07086052 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071434042 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073947723 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071378121 seconds)
  done (took 3.460648587 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083328793 seconds)
    (2/2) benchmarking "in"...
    done (took 0.082105862 seconds)
  done (took 1.441457697 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.071298289 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088196515 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.071210725 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078734455 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077934994 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074547528 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081993953 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077514327 seconds)
  done (took 1.892310049 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09100151 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.086246608 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.076395984 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.088444389 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.085901032 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.091827738 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144747387 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.07523686 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080449078 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.072360058 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.088605191 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073294756 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080041471 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073445882 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.080226745 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081741447 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.072192505 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.080667476 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.076599928 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.072740451 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075527968 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083603873 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076761883 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.069662302 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075970331 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097829237 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.086643006 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.074100139 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077593975 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.080720321 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077864863 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065856316 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.07216768 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.072772874 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.069937206 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.08205308 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087180563 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075260271 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080556626 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073835764 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081562109 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066880651 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.077026031 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.08008506 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083352119 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.073973528 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073169528 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.068270288 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070092822 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.077782324 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068091333 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072676584 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.066862865 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079145862 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075807819 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082674421 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071254046 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075877182 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.077706856 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.078033904 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.081913096 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07667544 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076987404 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.074524841 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08449426 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079191214 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083882586 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.069248046 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.068095728 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.071765224 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084940972 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098225836 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.080585222 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.075017696 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07546831 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.072073181 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078365217 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075575525 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07978124 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080944804 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.075064693 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081172837 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08249728 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075103061 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.077550937 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.083056992 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.072754235 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.077455487 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.072045617 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092037186 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.073483882 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071922324 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.072349922 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083182027 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.076988919 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.072159157 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.070060246 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078779404 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.065578693 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.071176589 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072477263 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071554999 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.081275023 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075342805 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075651899 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079438373 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078410558 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071398694 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.074666058 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.191476566 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07603237 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.07424645 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082691897 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.069056118 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078657567 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.07584551 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.075831834 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.084119473 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.073420926 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.075621481 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085890328 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.08049689 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.073387586 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.071286241 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.078224999 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.074788096 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078028743 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.082889928 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.073566516 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.069965165 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.069394211 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.078305649 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.074161772 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.078671903 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.079205995 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077367347 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.068481609 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.072199091 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.079975137 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.084097547 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.075192673 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.075328346 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080811654 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.075848228 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.073407658 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.081416052 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07717578 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073732252 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.080417921 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075625341 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06925167 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078008635 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.077427221 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.073096155 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07786539 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076892701 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.076478894 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.075940874 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07354923 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.082309582 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075413636 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073918181 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074419521 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.073196388 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.085352584 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075084287 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06903223 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.071731092 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.083929315 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.07202103 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.073570788 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073137587 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07714714 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.075188296 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.071993051 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.074412771 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.076169044 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084865391 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.078010959 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074928191 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.080114089 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086314486 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.074114659 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076960389 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.073688799 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075492646 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.075188515 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.084080208 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080809819 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078634114 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.077289049 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07089325 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080406188 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08291681 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073753173 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.072628153 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0737207 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.079154914 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.08023121 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.079748211 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.07532209 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073235878 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075412767 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.077757298 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.077527836 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.073657011 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.073436883 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.080206609 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.07226862 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.080884569 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074730781 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.084884428 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077208001 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.069214662 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076307465 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071967289 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.08000698 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.068443808 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.071742117 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072728121 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.074268392 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.073108508 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075888114 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.19580735 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083752514 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084152555 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.076754058 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.075161692 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074941754 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081816171 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.076916173 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078875911 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.078936514 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.081736748 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.086402331 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.074588259 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078514222 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.086164742 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.075221347 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.068853145 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08054158 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.073190328 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.074186311 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.074453259 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.073660293 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078289014 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083293562 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.08208286 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.068102059 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.077125598 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.073374844 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.074603252 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.070301684 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.079537637 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.077443038 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.075716833 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082001143 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075065701 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.075721846 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078892693 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.074528654 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.075128957 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.076298029 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077471164 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.075140173 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.076609295 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.074611063 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.078027702 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073440829 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.072334479 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.076626463 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.07475367 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.077781716 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080703017 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.074490081 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074837436 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07682972 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.075007859 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074708279 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.075280507 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.073827302 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078051779 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075370893 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.074660625 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076232015 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.069555889 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082292952 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.073783201 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08219895 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074545637 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.070837642 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.081344662 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.076760132 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07982236 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.075544334 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.075241496 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.076818079 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.074241287 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.077874196 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081937307 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.073513727 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084680603 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081722976 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073514759 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.075527823 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072920016 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.074567304 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071881964 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.074131334 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.075794833 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.075617481 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.074987932 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.079298514 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.078030313 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.075159597 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076420378 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.075391423 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074915674 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.075818768 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.069160806 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.074372615 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073802464 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.074237848 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084250447 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.073844124 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.073090354 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.073019132 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074974739 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.073155812 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.07137763 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.081027568 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081520185 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.073988953 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080405735 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.072762182 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.074889654 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084276534 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067410513 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.202971533 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.073692432 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07358678 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082326986 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.076896527 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085013041 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.07568072 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074235807 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.071458452 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.07539836 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.07380974 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.068981714 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.072884498 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078845922 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.074996477 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.074541869 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.075025972 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.077741389 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077392826 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085557141 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.074674922 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075875048 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.07621101 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.071849294 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.074396239 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.073696975 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07719151 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.076100055 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.072490068 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.071869616 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.075077059 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.075850014 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.076705689 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.074994941 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.076748931 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081631835 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.074813263 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077534425 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076931333 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.068929264 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.077901054 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.074994849 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.074321717 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.073858793 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.078178263 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077083792 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075919656 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.084577477 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.07311353 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075868823 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074710643 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.071836838 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.074519544 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.074951616 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.074459633 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.074217583 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.075903378 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082226507 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.072173511 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.078267936 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075368434 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.075617937 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.081424153 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.07506665 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.078103614 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080633174 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.074023413 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.076537568 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.083087225 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.078179026 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077927509 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074990933 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075822783 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080148853 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.073581938 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.081326111 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.075506336 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.07522731 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.076081849 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072493571 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07455954 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.074374827 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073787859 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.08133078 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.074588919 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.07637283 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073495551 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.072588534 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.075547924 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077920784 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082140036 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.077053377 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077953254 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.069513788 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.072042824 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075369731 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07262825 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.076355642 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07739295 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080515091 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.076691232 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.075015251 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.073631317 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083939956 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080104726 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07803574 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.072597568 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.078219606 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.075589417 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.076647944 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.074837855 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.074140906 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07541255 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.077533542 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.075214936 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.073269754 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080323749 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.208768638 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077722072 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.077673103 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.076754027 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.075345908 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.070240609 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.076028664 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.077556086 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080211998 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.077102267 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075491933 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086817226 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072987678 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.075190205 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.078036208 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073873928 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.079237827 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.069262969 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.076486909 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077087213 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076051908 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.070385404 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.0736164 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07264028 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.078133955 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.074684311 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.069248982 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085554619 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.084295142 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.077857641 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073710586 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073249893 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.069395319 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.069764962 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073897326 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07524848 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076723376 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.085626856 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.073131562 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.073261217 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.069212495 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074862186 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077631596 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077272956 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.072222513 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.069364285 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073863184 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.078299052 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.080800389 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074284575 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.074144614 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077576432 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07723684 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.072392469 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077863486 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.071136164 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.078188294 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.087992654 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.074883335 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075400843 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.081485135 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083463662 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.074620606 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.068952043 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.074767001 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.078190178 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07487164 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.076000147 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.076139998 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090369303 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077751748 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073935916 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072620689 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.077254089 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073922926 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.082764412 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075769086 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.075590253 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.079649952 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.076566593 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083262801 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077454493 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082498563 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.078135118 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.078418269 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.073749375 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074948723 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.072844239 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073870264 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.076464605 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.075596378 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07997965 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.083023399 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073973532 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086541792 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.084575489 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.076398302 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.07141447 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073914972 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073668822 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.069500787 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.07486329 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.072476475 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.072665224 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.072492108 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.073585356 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.075423765 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080077154 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.075529289 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.074263611 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.074135989 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06747388 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075989415 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.075935847 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074356711 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.070042583 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.205624495 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.077188469 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.079744224 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08151354 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.072886275 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.0764705 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.077201323 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076257275 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.070655017 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.081865834 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074330626 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.077084179 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.074577085 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075196852 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.075627856 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078556944 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.079447761 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.076039127 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.077526854 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078081366 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076863693 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.071706844 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.071926298 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.080870735 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.072204971 seconds)
  done (took 47.552792636 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108892362 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071355705 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069896714 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069486083 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081182111 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070440434 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069442658 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070805641 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071420906 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073279054 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069596607 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06975157 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078571707 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085926448 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081281021 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074179245 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069693894 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070725112 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069751434 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070578651 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078317975 seconds)
  done (took 2.933741996 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.081742216 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.085969441 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083088931 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090132915 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078983562 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077786708 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083370448 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078281336 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086663152 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080937248 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085490884 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077018518 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.078317753 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.078796422 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077666132 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075504861 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083461604 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076557577 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.078387367 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082093587 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077619352 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08202981 seconds)
  done (took 3.12835319 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.075510698 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.073911255 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075782238 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06864295 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.073240449 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.0685681 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.077166339 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.071480579 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.077268544 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.071073894 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070504676 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070452492 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073292962 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06710549 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071894268 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068704174 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.113366466 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.074748186 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.071718191 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.073040969 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066584454 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072889448 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066928412 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.067041182 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070666027 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.074664147 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.07412145 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.071398302 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.072738992 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.072615326 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.074124811 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.07122152 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075330959 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.074731674 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072060888 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072942268 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.074333759 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072723072 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068050489 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.070223862 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072854724 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.069695326 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.074785092 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.075720613 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.07287545 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.071555165 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075911919 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073580448 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068754396 seconds)
  done (took 4.930700131 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.0871773 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.117322175 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.074509231 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096992309 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.088026458 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.08042299 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.078239417 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.098352658 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.071401182 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.071777563 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.089380358 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.086902708 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.07370703 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.078099643 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.077329316 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.073818926 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.074849377 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.072184469 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.077349331 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072617617 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.077488729 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.080474468 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.087583936 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.085397614 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077279521 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.072520769 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072532612 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.077698546 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.085840988 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07758797 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.076421474 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.078386381 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087116431 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.076208253 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070398788 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074561285 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087150566 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.073700313 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.074527977 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.071453448 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.075513626 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.077213868 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.080525141 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.089348476 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.074003715 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.078227523 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.073097108 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.070903553 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.086098872 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.076149177 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.080785343 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.087418571 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.077211989 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.074047463 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.077899894 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.088141526 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.073268738 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.072001302 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.076256103 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08534197 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.071375028 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076748982 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08656366 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.075385526 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.080115283 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08689145 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.078392818 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.077044031 seconds)
  done (took 6.913606606 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084477909 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103729173 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091438838 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091105151 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083501205 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08370372 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.084141036 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.083649789 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092093721 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088199112 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083591798 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123736846 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.077273828 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.086014514 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082588258 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082544976 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.083958498 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083490645 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083738301 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083646933 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.083227202 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091012569 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082752216 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089966095 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08660081 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078653454 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08378821 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084094937 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092275336 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083795491 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086230453 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.081504247 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082529288 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089018288 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085575072 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.080421296 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070838844 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080493377 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.082517723 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084173611 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079017592 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091049336 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083282495 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078809412 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084002628 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08368146 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091298785 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.087921513 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08603998 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088000843 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.083950231 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091263998 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083908663 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083508852 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091299064 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.094385938 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091138635 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091158115 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083493303 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091380597 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09115588 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.094327994 seconds)
  done (took 6.735990156 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091942427 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.082515295 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.090032428 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.069043379 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072309832 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080297313 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071619889 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.072012998 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082247215 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.08226168 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084316924 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080090965 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082365093 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084154278 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078673336 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080610892 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077693861 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078887431 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082312259 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079606221 seconds)
  done (took 2.977950086 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.082589057 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091691215 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.074801034 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079001858 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.077052821 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.079639981 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.076591594 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077091996 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074704921 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077237044 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.084378864 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084306753 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075547835 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079413076 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.083996976 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078781564 seconds)
  done (took 2.643484094 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.092023456 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.080873478 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.088408124 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.074394128 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.074339768 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.070666089 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.073835092 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.069286014 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.070119725 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.086237342 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.073712253 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.083337653 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.073317587 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.072559491 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.070424866 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.077870155 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.070402729 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.07085719 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.073123289 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.086794808 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080770385 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.072020075 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.077059244 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.073583095 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.076417372 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.078204314 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.073222102 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.073614158 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.071046414 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.074053087 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.075866673 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077000641 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.071217443 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.071567876 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.072008952 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.070592485 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.073424501 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.074312566 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.079377683 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.074134098 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.072010795 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.076132027 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.073483994 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.074634822 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.070135974 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.074062528 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069910854 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07580379 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.071504423 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.076450754 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.073561749 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.07623576 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.074188531 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.081448658 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.076906567 seconds)
  done (took 5.505759769 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087659756 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077796296 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069634493 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.072509145 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076658928 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.075361823 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077682124 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075141493 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075372129 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071653106 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075390984 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077187218 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076471322 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077288065 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075191339 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076347636 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067343442 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072461936 seconds)
  done (took 2.737652474 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079193865 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073745887 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.081953423 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073631732 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.07398554 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07688419 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069919053 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.07297719 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072323116 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073790573 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073813971 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.076480817 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07277342 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.076101082 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07387274 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073359487 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.076554351 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072577381 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074084749 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069781172 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076369884 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072152571 seconds)
  done (took 3.007487912 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.102947092 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.091124635 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.151483621 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.087565148 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.093048574 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.080019228 seconds)
  done (took 1.981179519 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099217904 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109113018 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07439756 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077795502 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083742727 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078302702 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078259698 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078675671 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086355542 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084323264 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078350598 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086901079 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085879655 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085847651 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083426144 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083952818 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078532364 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078021884 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074163494 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091793723 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077879397 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087239741 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07816147 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077663695 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07706606 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085348973 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085206193 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082657253 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076226165 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086969419 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084041205 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077872002 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085697852 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083241516 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07727258 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086638554 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078367377 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0924215 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084073889 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085859464 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.077090939 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084071382 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086509615 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083144652 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086733599 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079024407 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082968085 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078893614 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07828468 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093887245 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084191642 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085457824 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084040567 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087132911 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08639606 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094314858 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084359411 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086158966 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084441101 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084414508 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086383733 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084856466 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086134275 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084065121 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084483224 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085553427 seconds)
  done (took 6.908089151 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112916125 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075061766 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077687424 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08448185 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088483969 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078405358 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079015349 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0783813 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078406984 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075136921 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117539174 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0788217 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086172821 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08573025 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07860669 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078215305 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078883931 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085959848 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075002078 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093815982 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078107827 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085417476 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085312995 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086094426 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084738194 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083971316 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078313969 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078882975 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078301776 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077693941 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082714512 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077271777 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084511611 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07454733 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085106645 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077530297 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076266062 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080127198 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076236989 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08447533 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086292464 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092103459 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077481945 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076256607 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082004206 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075872454 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078132497 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075112138 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078163164 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075132769 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084329945 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08456845 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0844389 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085766277 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079909533 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078964402 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07858324 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078413974 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078653146 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084620449 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086107119 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078513382 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094699238 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078828828 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078532065 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085926949 seconds)
  done (took 6.814419326 seconds)
done (took 141.187394568 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.193802908 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.170468998 seconds)
  done (took 1.731130253 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.077235933 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106847821 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.086034378 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.137646548 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071703045 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107810876 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104576593 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083957844 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072208702 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.074177117 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.074904824 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.077092182 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.141010341 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071641091 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071597091 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074762945 seconds)
  done (took 2.814939384 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.108311218 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.175160569 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110966507 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.073403306 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.108741733 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081602417 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073164382 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.083827418 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.079760838 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073738071 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.081595784 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079565271 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073630348 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078811185 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.079469693 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08139149 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073957983 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080915973 seconds)
  done (took 2.98316494 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108424491 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.100957963 seconds)
  done (took 1.59838475 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.166626707 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.115838753 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.153623813 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.355109921 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.172028611 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.158457008 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.154217065 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.153005378 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120523532 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.145186548 seconds)
  done (took 3.076391146 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10967288 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.164126905 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279342109 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.127532927 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.082242336 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.103587 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126881235 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08771578 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.089641452 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.089501066 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.089294418 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.085509146 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.109723185 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.082791863 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.08225304 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.084744624 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.112445254 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.081697438 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.082808454 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.084549488 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11127858 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.07414263 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.082226323 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.081590699 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.086591247 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.086394912 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.074057879 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.075182396 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.084491242 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082407457 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.085255815 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.101877812 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.086454545 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.11555465 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.0798276 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.116491315 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.085636282 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.084733852 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.083602971 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.082270169 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.086797445 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.086788477 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08191192 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.085291356 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.074087141 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.085693164 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.074163031 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.073711443 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.086440873 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075729628 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.086233594 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.085947183 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.115014523 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07594806 seconds)
  done (took 6.502235738 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.113174622 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11304726 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08026002 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.121298538 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111500665 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0806155 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111443277 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104903543 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112758049 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078918904 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076815099 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078924534 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09134857 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.093203035 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119927118 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112881411 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.079469162 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077150169 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.11188288 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111041312 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076640064 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105842379 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099744565 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.113268219 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075951646 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.079482555 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.076586334 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078478149 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.085632934 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087079014 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.078031145 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.089463758 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.096381945 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083526572 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073591325 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076510611 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07717914 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.088549411 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087553673 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.087323001 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.086326724 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076413723 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076820367 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.078541218 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.078421835 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07649756 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.087938737 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.089601354 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.0877048 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.078266528 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078654847 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.076483794 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.078345608 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.089299019 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.08606003 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.090017636 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.088963257 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076927783 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076811406 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.081126268 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.089943356 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08818476 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088332231 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078685228 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.088043794 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076661812 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.090177699 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.0952065 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.077138599 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078867795 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.077314857 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078719157 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07833056 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.086750994 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.087001129 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.078607004 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.078352194 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076930405 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.089035766 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087357066 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076990937 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.085510218 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07649822 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077106942 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076833388 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07612859 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.08504802 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.088029034 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077897755 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076489404 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077909439 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076874291 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074900447 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.084673713 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.087170876 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.086771137 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.086101203 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077344254 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.215962388 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088758455 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079450219 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.089000736 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.078073535 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079134264 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.078291445 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.088140394 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.086416646 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088478081 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.078799147 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.077299689 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.088030976 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090217559 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.077928038 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.087246075 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.090056747 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.088732493 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07717553 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.091416381 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077160719 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.087846975 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075645936 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085535454 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077359331 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087877554 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076648031 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.077556687 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.077475069 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.088129463 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079570029 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077422648 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.078282673 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078227041 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.085934507 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.088356841 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078246042 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084364748 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.08471084 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075583778 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084463207 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074477685 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085286742 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076265478 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.078962945 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07565336 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.089885789 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.077117268 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.077268064 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077815533 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.089438529 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076838509 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088517351 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086579714 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076773299 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.092931324 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088748504 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.086450349 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.088763787 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078961171 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.077209986 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076469882 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077028863 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.086155428 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.088365825 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078728639 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076825692 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.0867229 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.088672323 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075582289 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08658489 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086882703 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.087324836 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.077166201 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.078514923 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08946256 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.088831707 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.087632594 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.087442833 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.087634985 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.077819599 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086570968 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.087845309 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077333192 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095321903 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077733973 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.09256434 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.088706632 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08505553 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.087108581 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.088957032 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.088974137 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088770421 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.091195882 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07575447 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.075878018 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.086720153 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075736045 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076766117 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.085598224 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.209636273 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.078872086 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.093314561 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.076245521 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.086805649 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074845766 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.08867705 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076704669 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078867901 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093636614 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.076712671 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078384312 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088549586 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.080206267 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086940083 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.09073005 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087872769 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.077671677 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079090549 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.089746244 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.088532488 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077665964 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076741622 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.080421832 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.088202522 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.08594117 seconds)
  done (took 20.612261988 seconds)
done (took 40.718306525 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.223291198 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.1648652 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199811039 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.129053912 seconds)
  done (took 2.208934518 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12708738 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.112247677 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.102853819 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.073458927 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.109678952 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.073748864 seconds)
  done (took 2.029582577 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.327841433 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.222365709 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.197346189 seconds)
  done (took 2.169860571 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214518614 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.201453331 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.434852023 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.276101382 seconds)
  done (took 2.668630785 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.164693349 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.098701826 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.076127824 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.093301517 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.144335126 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.171662994 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.111162375 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.137003066 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.088533606 seconds)
  done (took 2.564133512 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.158261712 seconds)
done (took 13.227263326 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.28128931 seconds)
    (2/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.219008855 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.112917777 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.082968652 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.120202863 seconds)
    (6/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.168224702 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111958876 seconds)
    (8/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.098241603 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.241687598 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.060705024 seconds)
    (11/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.086554501 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.092810235 seconds)
    (13/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.199577058 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.1372638 seconds)
    (15/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.211871568 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.087534753 seconds)
    (17/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.212926709 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.082822557 seconds)
    (19/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.071030129 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.230496023 seconds)
    (21/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.086319308 seconds)
    (22/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.115479159 seconds)
    (23/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.217074151 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.183232274 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.168612389 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.219402609 seconds)
    (27/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.232069973 seconds)
    (28/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.208731607 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124135329 seconds)
    (30/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.112774463 seconds)
    (31/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.082951557 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.085490495 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.155462342 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.217448826 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.081230041 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.084439201 seconds)
    (37/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.059039074 seconds)
    (38/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.084967154 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.18736862 seconds)
    (40/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.083868378 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.099959145 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.082139045 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.109445183 seconds)
    (44/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.079017874 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.102143286 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.167763401 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107579904 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.082455239 seconds)
    (49/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.167667146 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.060582121 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095290492 seconds)
    (52/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.071633039 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075827235 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.100793029 seconds)
    (55/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.200349454 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.210515719 seconds)
    (57/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.11984161 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.196910048 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.059991021 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073972483 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168810785 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072906764 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.198373719 seconds)
    (64/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.085349454 seconds)
    (65/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.310624997 seconds)
    (66/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.059784125 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.077056242 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.165708149 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125352288 seconds)
    (70/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.207424365 seconds)
    (71/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.148996821 seconds)
    (72/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.212782763 seconds)
    (73/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.118062684 seconds)
    (74/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.085056408 seconds)
    (75/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.126556702 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.074481423 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.091820653 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.059030833 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.227960269 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.22186223 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.17049604 seconds)
    (82/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.091679139 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.141506622 seconds)
    (84/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.100695545 seconds)
    (85/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.082910672 seconds)
    (86/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.189601095 seconds)
    (87/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081159054 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09909911 seconds)
    (89/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.071226148 seconds)
    (90/309) benchmarking ("sort", Float64, false)...
    done (took 0.140576317 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.101342196 seconds)
    (92/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.085712912 seconds)
    (93/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.082315188 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.220124345 seconds)
    (95/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.071351265 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125792521 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194354757 seconds)
    (98/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.086703197 seconds)
    (99/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.214547247 seconds)
    (100/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095733406 seconds)
    (101/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074756693 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.15565576 seconds)
    (103/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.116138646 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073704325 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085184253 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085433825 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.099650328 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.100851979 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.150547486 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.155670064 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100545063 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.077616627 seconds)
    (113/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.059534976 seconds)
    (114/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.166275833 seconds)
    (115/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.081004401 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 0.147095424 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.08245891 seconds)
    (118/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078349182 seconds)
    (119/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.081218 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.080938647 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.186634503 seconds)
    (122/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076053313 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.079565101 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.080888635 seconds)
    (125/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.168295221 seconds)
    (126/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.063154438 seconds)
    (127/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19237229 seconds)
    (128/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.119032388 seconds)
    (129/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.08533406 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.134570779 seconds)
    (131/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.119430398 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.08083556 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074806729 seconds)
    (134/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.060380575 seconds)
    (135/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.081141519 seconds)
    (136/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.059905814 seconds)
    (137/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080515321 seconds)
    (138/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.081603576 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.073577423 seconds)
    (140/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07951673 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.059533871 seconds)
    (142/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.060214534 seconds)
    (143/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.167215649 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.074625261 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073667413 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081249845 seconds)
    (147/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098770926 seconds)
    (148/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.156176486 seconds)
    (149/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.077198576 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.098519277 seconds)
    (151/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.166087965 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.101354681 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.073984557 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.059055995 seconds)
    (155/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.123366782 seconds)
    (156/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089563786 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.082886259 seconds)
    (158/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.059535945 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.061670126 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.080696376 seconds)
    (161/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.077016692 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06102809 seconds)
    (163/309) benchmarking ("sort", BigInt, false)...
    done (took 0.199182346 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05925772 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073293929 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.059104052 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.073412351 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.099688902 seconds)
    (169/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.084361306 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.073563275 seconds)
    (171/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05966737 seconds)
    (172/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.102725687 seconds)
    (173/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080638445 seconds)
    (174/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.121045585 seconds)
    (175/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.081104665 seconds)
    (176/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.117032795 seconds)
    (177/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.059111252 seconds)
    (178/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.082255726 seconds)
    (179/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.058890874 seconds)
    (180/309) benchmarking ("sort", Int8, false)...
    done (took 0.151314327 seconds)
    (181/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.242951539 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.083105373 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.062427113 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.083000703 seconds)
    (185/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.089057976 seconds)
    (186/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.074143799 seconds)
    (187/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076505032 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.09863009 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.084187553 seconds)
    (190/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.061588807 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.101315466 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121831689 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.075998306 seconds)
    (194/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.058988364 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.073979484 seconds)
    (196/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.081526648 seconds)
    (197/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05975973 seconds)
    (198/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.059342541 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.059058198 seconds)
    (200/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.059679508 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072042125 seconds)
    (202/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.059226396 seconds)
    (203/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.061026569 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102461362 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075811753 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.076790332 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.077837115 seconds)
    (208/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.122088984 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061616955 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.104003815 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.083711541 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.082112687 seconds)
    (213/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.120318006 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.088241374 seconds)
    (215/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08868264 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.183563744 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.076538213 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086375939 seconds)
    (219/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.110520692 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.073681859 seconds)
    (221/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.188757853 seconds)
    (222/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07885853 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.101404306 seconds)
    (224/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.083704258 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079536788 seconds)
    (226/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082085666 seconds)
    (227/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.059444887 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.060804996 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.074438917 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.074825448 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.059044132 seconds)
    (232/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079859393 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07215806 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.0965422 seconds)
    (235/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.084275865 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.059482627 seconds)
    (237/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.070264599 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09695669 seconds)
    (239/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129170868 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.149412352 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.061246691 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.182216418 seconds)
    (243/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.059200598 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.081129402 seconds)
    (245/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07415517 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074422859 seconds)
    (247/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.097976853 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.073778645 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.083985693 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074053271 seconds)
    (251/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072548524 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07385728 seconds)
    (253/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.059972713 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.099340431 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.15708014 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.059180398 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.078411166 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111192985 seconds)
    (259/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.075393458 seconds)
    (260/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07961345 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.080882654 seconds)
    (262/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.076098942 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074214735 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.082652213 seconds)
    (265/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.070257993 seconds)
    (266/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.061158343 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.080652947 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.102369654 seconds)
    (269/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.119963089 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.074026983 seconds)
    (271/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.060011685 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.080856176 seconds)
    (273/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.082699566 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120602131 seconds)
    (275/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.058723765 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.059518076 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.097859173 seconds)
    (278/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.060761502 seconds)
    (279/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.058961279 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.059191572 seconds)
    (281/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.060348164 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.082837541 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.072863388 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072589775 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07540957 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07414942 seconds)
    (287/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.059304468 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139991322 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.081342086 seconds)
    (290/309) benchmarking ("sort", Float32, false)...
    done (took 0.139339497 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.192306182 seconds)
    (292/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073196303 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.074719218 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.073837938 seconds)
    (295/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.059698993 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07376626 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080028774 seconds)
    (298/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.059994355 seconds)
    (299/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.059139443 seconds)
    (300/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.089068803 seconds)
    (301/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.059350751 seconds)
    (302/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.060189047 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.060171289 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.268057984 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.161217176 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.083511795 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.076396465 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15150979 seconds)
    (309/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.076331815 seconds)
  done (took 34.12209468 seconds)
done (took 35.559958867 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090848149 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103146415 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.083781816 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.103137007 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.090272291 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.086253464 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.082058149 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.088768791 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08918529 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.091963081 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.087859894 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.063235287 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.084491202 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.086424594 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.083701081 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102684627 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08744246 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.081929555 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.082751357 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.073006494 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.082191297 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.074450633 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.076344614 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.062579668 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.087267755 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.080899475 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.08144866 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.083582631 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.074257975 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.073925793 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.077590905 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.082401078 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.074203085 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08802944 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.080932567 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.082427761 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.083868259 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.085821526 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.075703532 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.07423902 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.083564419 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.074282051 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.082290768 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.082463422 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080934858 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.080169874 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.082133988 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.086716888 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101500692 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.077088671 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.083545181 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.085427274 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.08491184 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.081877782 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.078175681 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.081794076 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.079597652 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101779084 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.082269684 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076800437 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.083407942 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.083299401 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.079899014 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.081961297 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.081605337 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.084642261 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.085232667 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080443197 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.083538376 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080125415 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073719509 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.081519419 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.077507078 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.07402338 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084815561 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.086241484 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.072729427 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.080099008 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.081733141 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.080017432 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.073172248 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076466606 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.075722965 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.081100291 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076369056 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.062469486 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.077880679 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.080716248 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072806936 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.081833279 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.080599937 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.08087004 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.075403003 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.084587538 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.073391843 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.079931478 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.074392317 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.074583562 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.07531113 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07817518 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.073865451 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.076243154 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.083785321 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.075238562 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.080091654 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.087400323 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.073774794 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.080074827 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.073273323 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.072743133 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.088485171 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.083523093 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.073394834 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076408759 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.072102812 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080932382 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.071931267 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.073000547 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.072951577 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.072918557 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.079076704 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.073131464 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075526878 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.217014167 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.088671592 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.07504016 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.079427369 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.077181971 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.075137136 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.08045898 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.073975266 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.074547353 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.075794352 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.071138132 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076784733 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.074219516 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.082502924 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076416536 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.082889188 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.076178807 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.082130237 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.079377646 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.080819375 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.079693357 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.072821215 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.068601506 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076703766 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07668171 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.075583948 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.074286916 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.075495172 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.073759298 seconds)
done (took 13.806817914 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074915969 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.152325141 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.106972292 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.105867262 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.095972981 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.074891017 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.085426171 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.111597425 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.076464701 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.112150222 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09736471 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.095362163 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.12779638 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.073186549 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.074382783 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.079145706 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075848086 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.091520441 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.112028234 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.096092166 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.125625112 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.074599746 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.102590964 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09958985 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.098170706 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104401371 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.075794172 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.078535649 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.077800748 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112386806 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.098430097 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.078417048 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07496688 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.108383984 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103803862 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.093031883 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.074747363 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.092579737 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.075327463 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.074337271 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.076204527 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109092359 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.090439774 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.090316794 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.078474345 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078565447 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.076231165 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.093364908 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.100289224 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.088552558 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.09611968 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.11128536 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.077440134 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.074199911 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.072984898 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.096392953 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.073645143 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.077767871 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.074749167 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077291531 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.0742306 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.078184283 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.090686829 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.09030232 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.079484403 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.089752312 seconds)
  done (took 7.44894815 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.093472337 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.100219053 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.093302797 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.093229711 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.074957971 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074697833 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.07497811 seconds)
  done (took 2.133759606 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07489123 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.097912302 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.099293303 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.099838282 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.090350353 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.097454417 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085326226 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07497734 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097860992 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.075797016 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.097564197 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110862245 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.078632022 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.083084562 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100949661 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074720867 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.100906286 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.075121169 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.078548013 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.100159294 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07862003 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.104774202 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078454592 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.075450709 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090415255 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.075061748 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123913173 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.080033458 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076945956 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.078257976 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073324395 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.11696607 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090445668 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083656698 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075453849 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090756965 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.090513949 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073667549 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.09240968 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.084663255 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.090028226 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.076734111 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.076545699 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.073058641 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.080004674 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.086823484 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.076117559 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075708879 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.078023393 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.097032812 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.076950739 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090111738 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.078671086 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.08167138 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.077146539 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.082186446 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086270326 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.076260222 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.096058093 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076672054 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.093435284 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.092688904 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08912462 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092980881 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077577422 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089563231 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.089919296 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.077753599 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077322949 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07837278 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092675115 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073840206 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.076845821 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.08662145 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07735934 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.100164859 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.099672824 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077177868 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.089877932 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.075856162 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.075652845 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.076276147 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.099833804 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.081420356 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075287568 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.079897801 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078516624 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072878441 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.07435248 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.081596416 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.073106386 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.076503988 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.078622741 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07878386 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078493284 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.09396821 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.077733366 seconds)
  done (took 9.738449274 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07750886 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.076255131 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.078095158 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.076070771 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.077045126 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.076222571 seconds)
  done (took 2.013823531 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103302062 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.077770473 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.090065921 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.080592398 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.114234488 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.097237913 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.096500178 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.088272362 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.093351218 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.088203381 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.096721772 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.097963468 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.10214076 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.081497786 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.096775001 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.080337211 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.097157069 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083921695 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.087333291 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08174907 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09630071 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.081020151 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081293805 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.09112647 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.08506529 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.081184482 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076035436 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.088110144 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.087530074 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.087979197 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.081194455 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.085255431 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079343812 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.087217 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.096982309 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.080266752 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080509158 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.086352126 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081366198 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.084803616 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.097813286 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081509492 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.08326841 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.086576838 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.087749618 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.079521842 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.085926254 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083843682 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.096135828 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.086263903 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.086881174 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.080290214 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.084854814 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.086798065 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.079382066 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.087502672 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.086399684 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.096896486 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.081564632 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07993497 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.077748578 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.085108599 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.087310962 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.084821353 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.088305742 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.086311138 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.079767153 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081401363 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082219928 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.080602035 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.086558344 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.0775461 seconds)
  done (took 7.778330724 seconds)
done (took 30.633188585 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546955106 seconds)
  done (took 2.058179019 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.630489219 seconds)
  done (took 2.169593886 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.491061319 seconds)
  done (took 8.025706866 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.425654654 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.52297022 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.740530481 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.143613177 seconds)
  done (took 3.412326594 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.724459714 seconds)
  done (took 2.272304798 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.229145537 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.215548561 seconds)
  done (took 2.001680136 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.389469662 seconds)
  done (took 1.928024969 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.159557232 seconds)
  done (took 2.699020147 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.272264931 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186582738 seconds)
  done (took 2.004785855 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.502341521 seconds)
  done (took 2.046239781 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.957434274 seconds)
  done (took 6.504532323 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225904899 seconds)
  done (took 1.812449102 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.246601167 seconds)
  done (took 1.791238175 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.752810527 seconds)
  done (took 3.298355954 seconds)
done (took 43.57410949 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09010236 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090347436 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090941573 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.087775801 seconds)
  done (took 1.887767227 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.086267946 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.081407636 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.085714106 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.081323759 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.086122822 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.081827567 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.083830057 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.084796379 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.081587095 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.081849605 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.081595813 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.08205387 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.084166954 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.083295624 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.080877253 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.08398092 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.085251769 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.081600057 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.08484248 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.081437556 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07989946 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.084470768 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.086898743 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.080887184 seconds)
  done (took 3.543464552 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.086871643 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.08160266 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.083636813 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.080557796 seconds)
  done (took 1.888309486 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.088082024 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.10198118 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.099201927 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.087029538 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.102567818 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.096720554 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.077760972 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.077777566 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07966546 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.087093749 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.076550239 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.106267775 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.098984759 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086579457 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.088687089 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.074930563 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.077798764 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.098047869 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.087177944 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.087579063 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.079065869 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.087506304 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.077173932 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.098980259 seconds)
  done (took 3.674998259 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.095725652 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.114965306 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.091053735 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.098400672 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.100280774 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.074343164 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.097571325 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.100687928 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.137119976 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.073982863 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07953805 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.074588364 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.082208538 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.074193994 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.091622815 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.117703571 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.122256083 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.078119893 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.107259361 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.074988848 seconds)
  done (took 3.448023559 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.081109382 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07802433 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.074557578 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07805985 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.08542701 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.081819731 seconds)
  done (took 2.042084584 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.077187899 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.076685673 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.076615764 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.075995382 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.08048556 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.075811451 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.074402726 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.076399142 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.076863682 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07587335 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.075666098 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.074956545 seconds)
  done (took 2.473999256 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.217713945 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.077436482 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.077868348 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.075346317 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.080605307 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.075539042 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.090672062 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07684477 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.102655572 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.076089215 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.076205601 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.077902736 seconds)
  done (took 2.664506839 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218344742 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085297509 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254247895 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162567493 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121770388 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126959962 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123522075 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125263987 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.153450257 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11169256 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181597068 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177156381 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118760261 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148547154 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098440504 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.112432545 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171746129 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175789594 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116208134 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179327064 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157322461 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137644546 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160966617 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112583316 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116944567 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133237725 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.080512503 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089972703 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181779114 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144248853 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155019405 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121911775 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102895486 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190001042 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183520693 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151256942 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158665055 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094445911 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.116689388 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.146025178 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2133918 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098196252 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.312367965 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121418538 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094810458 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144754392 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131654122 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.131134667 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.116177431 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099388507 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157198904 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195830802 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.148043311 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098350605 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135515027 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124353359 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.125285685 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123693762 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192487249 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16846111 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134288596 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.079444308 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118179975 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166072672 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143118928 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.118804477 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.135302314 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100697773 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14467315 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167002224 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131446816 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15616935 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127951476 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098830838 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130777846 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153128394 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138367605 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173063243 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134541869 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.081610566 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134876707 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112077238 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089582241 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.155410501 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084187175 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184661781 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108789639 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.119137466 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135213928 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119333875 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118666846 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.31294996 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158120594 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115706758 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.075188042 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115068534 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.132927647 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158232156 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097226931 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119462296 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12777791 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.087399054 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148364465 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.084549786 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131659229 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.087072293 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136601968 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139646042 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.086579036 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133120693 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113635425 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.110054201 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141900807 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170373633 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097646913 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092572242 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180646705 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13099387 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.112799093 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155314395 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169245427 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.111008172 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110494159 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158677832 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190977328 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099240874 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174988017 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11764659 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092672861 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.098327074 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136293911 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122247329 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134019612 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090733707 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.128591849 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179951063 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.083663756 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104597482 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143470095 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087273135 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088955332 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115126072 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114970671 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.105315526 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.109132988 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.257959872 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149589768 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134280742 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116229685 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134890975 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10869082 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181981242 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097981136 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.11145524 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114700237 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.078369969 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.145848668 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169424282 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089226912 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175030719 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.134814386 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127413941 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129871406 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092789052 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151270831 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089027395 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.079505092 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155472618 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120631167 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119546979 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.162478945 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123685105 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.134154007 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.127747372 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143197768 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141409117 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.140357035 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115309486 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.098531122 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122396678 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138127957 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.082447566 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.099797376 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.089333023 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115197993 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106138464 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092175322 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15255132 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134118039 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119349659 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122945998 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105885568 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156416197 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.084489928 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138029462 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.129637116 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104493842 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.162753859 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.309041031 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143416872 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110384426 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147728661 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.080017984 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083360949 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.099166231 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135036674 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092752478 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092559349 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126514654 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158667235 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140391449 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146642094 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133941481 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130135348 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166505416 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.079444832 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.126422304 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1588956 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133720484 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.114843557 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099435703 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.109496936 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154186319 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116205746 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192228359 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123858628 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134025155 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163952843 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.110076645 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088455973 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112723165 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146469616 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113948846 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155624142 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109007118 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097571352 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120883834 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083311085 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108762087 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137895576 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129239679 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145658835 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.12511599 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142647628 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086062829 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124925779 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130545097 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130493294 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.072462602 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129419523 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.314105396 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104643129 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129843598 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166164883 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088873655 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.144516139 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186934222 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157108284 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09494178 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119804712 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129917407 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139585494 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130123993 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151423637 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116709892 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144859084 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120455878 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.095307909 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09700869 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108337706 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113781417 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104883772 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.116286889 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.123009765 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.105368726 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141325317 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112981831 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119487562 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127028918 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.107522931 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.099989008 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105930147 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188292186 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128411412 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182226458 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.108786353 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.156027074 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174850446 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083911931 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088218025 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.087090748 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151800916 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0937436 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139347168 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.116949601 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127551863 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13250984 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153030816 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104750347 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.076479135 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118617482 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141904141 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27954083 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108327231 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.114208079 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175627148 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112226653 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089477185 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125173994 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12646525 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114352842 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186956943 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.070526121 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117208998 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085230506 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090862558 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139596613 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162920992 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.089795813 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.113369854 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130869595 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122080401 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138666651 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110361364 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122269541 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137215672 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160047337 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138620054 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09924388 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121828656 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139176548 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168089714 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114399909 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.106176095 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182086138 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163703584 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.17193862 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.097429736 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124726517 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124507384 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119220102 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151268957 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092760531 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176067427 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091203482 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146637959 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113034139 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098027109 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139073853 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.11746115 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097182239 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159082112 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273292762 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092902643 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087409841 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128702742 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129837089 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11648429 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.08472871 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151450335 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.082811518 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142656904 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17289002 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090715799 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115478703 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106272096 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089806268 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116785757 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111974569 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097768322 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.110069257 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184094318 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.097332238 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160334491 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142668085 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122268125 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147143898 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112089469 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.649226601 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.086673728 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163606231 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125722155 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185494176 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109834269 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127451719 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119601356 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132420858 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154500124 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113796029 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.191143331 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142349787 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.126355359 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088989977 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112271871 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114496343 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.097023516 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117868024 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124311464 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124686549 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.100969843 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.124650071 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133710723 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.090797527 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105373871 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166990091 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273460973 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155714353 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152594872 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095930214 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131847678 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148501189 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089742722 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.130984107 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162756366 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116740416 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109851479 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.090029733 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.110058375 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169886217 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.082604775 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171574968 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130287879 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120772004 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123604552 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.123122914 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141282051 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117183431 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130679792 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102364122 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.118387566 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120780566 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090528212 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.085437223 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114391555 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120843589 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.1081657 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106739772 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.108364949 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163984284 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.080858965 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109179681 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124986746 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155352616 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186364669 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.099357369 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092248842 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128934432 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124509966 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.123055989 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131821504 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.087724939 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090465541 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.090435067 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.087073088 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.116825039 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12234223 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124073232 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120020093 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171237503 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.090678819 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.239941878 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103349855 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111910717 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.077937931 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.085123939 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103621264 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105335589 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114832143 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117463453 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164930714 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.103378142 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.097699962 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098401065 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.08139528 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090856713 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135643448 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116838146 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121485143 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10210754 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066202698 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109054736 seconds)
  done (took 63.823772076 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12151031 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.089935319 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101582921 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.15166019 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.129194182 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209048778 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.16062372 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195794744 seconds)
  done (took 2.894484347 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.077893291 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.106609354 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.112574781 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.092837828 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.075521345 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.077162428 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.247818968 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.090677205 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.075973936 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.108911369 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08724708 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07804868 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.45348822 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.074597732 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.076274025 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070821441 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.076264123 seconds)
  done (took 3.646156501 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.404486805 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621672577 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.359054056 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.08124312 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.935474326 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095093945 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.138588503 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139331673 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08271222 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.55292033 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.410809138 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130361483 seconds)
  done (took 18.632323888 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086025527 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078905576 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09407868 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093738766 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082745491 seconds)
  done (took 2.11042116 seconds)
done (took 114.312177302 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.090380527 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.640628032 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.062521343 seconds)
  done (took 2.410061159 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092528682 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.095375364 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.094559135 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.092285234 seconds)
  done (took 2.060766791 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.084396699 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.085148243 seconds)
  done (took 1.849785003 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.246207416 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175998309 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.105899134 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.092329022 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.088278653 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.088599755 seconds)
  done (took 1.950839368 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.081026392 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.084151367 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.081710662 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.085769857 seconds)
  done (took 2.008161917 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.085080236 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.060536856 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.063079628 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.066591799 seconds)
  done (took 1.950816468 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.096022106 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088658143 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.088049127 seconds)
  done (took 1.950512936 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111656108 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09509843 seconds)
  done (took 1.884966787 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.090962947 seconds)
  done (took 1.76866826 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104847368 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.110248344 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.142899209 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.121633752 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.151432622 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.121039587 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.094293115 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.094937823 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.085580566 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.095813536 seconds)
  done (took 2.799970819 seconds)
done (took 22.929727013 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.087483798 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.475517466 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.369833384 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100662849 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.678318699 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.365489582 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992074056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.103222475 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1265539 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076857903 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094695173 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.657981933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983848582 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.428933444 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970253421 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332191306 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.659143519 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.077045349 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076952022 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076690729 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97671879 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076535351 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.077448947 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077241939 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.658258093 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.381547233 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077077166 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.332916623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094899214 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079152029 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.364473301 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076973511 seconds)
  done (took 16.666434307 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079248406 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13024275 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082936524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094508795 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.079629853 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077997692 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.08069672 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07792499 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131034259 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.079351063 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.095210868 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.076256001 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.080729255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.077462715 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.098620163 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076969952 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077921065 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.077486038 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07722507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07794657 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.097082076 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076750509 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.077798533 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077850278 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07739432 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.090025 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077823178 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.077889416 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.078191986 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079654765 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080320769 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.078529219 seconds)
  done (took 4.391543042 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124314624 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.135116748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.083259664 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113360038 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120686667 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078987648 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.154238156 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.103937785 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.137812383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.077093587 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.096032763 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.077354169 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112684399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.078343803 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.099269471 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077800122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.078392281 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.077884754 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077521272 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.078226654 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.098120725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077022129 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.077708226 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.078213777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.078166146 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.091676356 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077999909 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.077692469 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.078170951 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079774196 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.081268927 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.078925822 seconds)
  done (took 4.650569602 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.081862449 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.083980112 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.093137253 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.094002442 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.077883154 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.080553653 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.081602901 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07855134 seconds)
  done (took 2.368711402 seconds)
done (took 29.764804343 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.087991768 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.077869367 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.081522876 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091708375 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.082807729 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.087981226 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.075933188 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.084383187 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081298418 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.081770803 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.083899944 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.076483013 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.080368071 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.075908052 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.082769524 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.076366734 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.089383048 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.08118751 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.089418288 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08962972 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.078982954 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.08264967 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.083834034 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.089009552 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.088858805 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.089296397 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.087349687 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.081727781 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.077894065 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.079281334 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.08687698 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.093817721 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.077767411 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.088308404 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.076413618 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.077132412 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.080356163 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.076038693 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.088465144 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.085679702 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.077840245 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.085027065 seconds)
  done (took 5.160950737 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.098077284 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.102785902 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.094864426 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.070464121 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.075935146 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.074502315 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.099252027 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.068806341 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067796922 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.098078424 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.064031343 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.068344677 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072411436 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.062338006 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.069033431 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.065505676 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.070965603 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.064020755 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.069077001 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.068983066 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.099160396 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.06229375 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087040642 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.072711791 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.064574453 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.070757372 seconds)
  done (took 3.683948736 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.083558033 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.094463731 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.099315969 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141533639 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115799273 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.088269582 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.088418492 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.105090206 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097632995 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.076210557 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.079925536 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.102356445 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099500548 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.084131355 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07677216 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.095711556 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.092758638 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.078214163 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.085075842 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104354333 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.095790339 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.095441502 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.105489656 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.092824878 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.075281874 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078503597 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.080023733 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.091485193 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.081379266 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.086308848 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.080928601 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.080225413 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.078829941 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.088289797 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.080444553 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.077952116 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.101718243 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087144257 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.088515982 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.077527011 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.085218046 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.077229187 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.101699802 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13512685 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.07663894 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.083719196 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.080555092 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.086276724 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.075736655 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097576158 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087713434 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.076483256 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.079079403 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07552791 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.076385154 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.090018351 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.078888439 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.079267635 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.085978532 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.082587299 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10199594 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.080529263 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.0927102 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07603636 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.084243657 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.074914643 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07750381 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.0755317 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.106018221 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077555207 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.120770763 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.077594471 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.079158321 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.086099454 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.084984235 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0831811 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.076869085 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.092227269 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087379352 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.079924908 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.085155636 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.08064883 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.079714932 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.10096492 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.078582417 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.077508711 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.077110841 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.082970685 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.079859267 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.078215827 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090511957 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.075627736 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.079942984 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.094059648 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.075979165 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.077858245 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.082896772 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.081428061 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.076165444 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089290062 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.081291296 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.077026633 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.086510108 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.076307131 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.079403542 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.089007876 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.082856053 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.075136775 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.081027453 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.082506327 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.077084892 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07809627 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.079206085 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.078200716 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.085030002 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.083080303 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.080941714 seconds)
  done (took 11.762434357 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.178163861 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.170981052 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.080111749 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.159623219 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.087092417 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.089066797 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.162364609 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.106088202 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.076780157 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.077414293 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07772942 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.123122119 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.117157321 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.129907427 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.088346864 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.077104685 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094404711 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.126957015 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.164795438 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.159531583 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095038291 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.087036033 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.079045267 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07894009 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.079827586 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.088461874 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.097962034 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.087215336 seconds)
  done (took 4.779520669 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08972978 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.116071609 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.08416826 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.101151729 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.099864061 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07656767 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.079564982 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.079086293 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.091291299 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.087820994 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.076301193 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.082902402 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.083906885 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.080382698 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07857107 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.083973457 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.084932505 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.078388316 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.080771644 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.082560498 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08768819 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101254894 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.081290979 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.079293788 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.081989378 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07715459 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072954172 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.094320163 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.077310952 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105524941 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.074985039 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.083026372 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.092714401 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.078574001 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.076948295 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07715136 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.076731599 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076776667 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.078974827 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.075446734 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.075315082 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.066992644 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.076054803 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.088242905 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084257759 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.065484956 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.081730566 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.081688439 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.082257123 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.074416714 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.079573686 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.079848083 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.080286345 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.084484726 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.080548022 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.082359023 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077949333 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.084551437 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.086453199 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.076875442 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.073408185 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.074927036 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.081548236 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074185101 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085920625 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.081604099 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.075237481 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.076863867 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078284341 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083952897 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076708008 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.080862251 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.074234819 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.078699822 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.081691727 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.079068898 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.078177748 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.075311125 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.076409006 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.078022338 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064808219 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.076343098 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06260613 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.080238066 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.074452609 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074945825 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.076822352 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.081576746 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.088555945 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.077951453 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.082896894 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.077784477 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07585097 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.079720678 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069583202 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.080408471 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088470478 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.092041453 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07643759 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.074352283 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.090870289 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.081814823 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.075565854 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.064897837 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.081659291 seconds)
  done (took 10.203828675 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.099571257 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.079381474 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.093689438 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.100149058 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09680459 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.084233123 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.087020151 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.078115928 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.092817116 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.082918743 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.085785341 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07684487 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.087159329 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.086336203 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.079189928 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.087341795 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.081230964 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.094589842 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.09221481 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.076949219 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.08548037 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.090494122 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.10067118 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.091589609 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.090336423 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.091485624 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.100411229 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.087158838 seconds)
  done (took 4.223420962 seconds)
done (took 41.505138028 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.808673041 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.956606177 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.781179342 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.19669917 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.010252126 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.893684731 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.878660268 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.777852581 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.067721409 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.81949981 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.016096348 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.911493655 seconds)
done (took 65.965767978 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.854516994 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.921303832 seconds)
    (2/2) benchmarking "String"...
    done (took 2.009710009 seconds)
  done (took 5.639197767 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.040129624 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.405083875 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.025005288 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.780711907 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.783351868 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.11100747 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.59056195 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.291351914 seconds)
  done (took 30.699580984 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.943626461 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.011207 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.491607391 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.527150038 seconds)
  done (took 15.740085535 seconds)
done (took 63.776510676 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.815868323 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.786355216 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.81631184 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.762779358 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.840731422 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.799125261 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.054409068 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.782990345 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.779539822 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.767790958 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.779989695 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.211781693 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.784959884 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.152595901 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.782031816 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.788347809 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.77907288 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.292529978 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.935946518 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.788750461 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.799281155 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.982723326 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.78232866 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.797531548 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.838172324 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.787855132 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.226924709 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.785233114 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.404415327 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.783999861 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.812537555 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.437749481 seconds)
  done (took 204.649875364 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.782635731 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.824864448 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.895054177 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.821311644 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.215453579 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.964079897 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.902958342 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.254230019 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.787678631 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.80173414 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.069186407 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.780247918 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.091891078 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.810640215 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.824566875 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.798992838 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.019920173 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.092654838 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.828799369 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.954541727 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.802118541 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.934002245 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.91246562 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.040655542 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.823470825 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.812713402 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.806178826 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.801360514 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.952815378 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.999544148 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.807876143 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.789356041 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.98035536 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.656255612 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.805459135 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.807842819 seconds)
  done (took 170.966920512 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.94658249 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.787384247 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.783470237 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.782950435 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.789421436 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.785455709 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.906879121 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.911742079 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.378485559 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.612004685 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.83597125 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.62020312 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.781876061 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.851538565 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.780699952 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.796076569 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.784823402 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.798561661 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.81207591 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.784317859 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.784780833 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.910354255 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.795718281 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.957863208 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.788463581 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.78382614 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.792381482 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.158909778 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.785052198 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.790882156 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.029519805 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.780749137 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.78497446 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.683695167 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.014390724 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.878280914 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.784101401 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.791578021 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.786686757 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.010147678 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.782195675 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.787599538 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.786470925 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.791012575 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.964683775 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.782592157 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.910287969 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.781188452 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.283510038 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.781891217 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.785869592 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.801213701 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.476348258 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.783619008 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.786851202 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.790272285 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.786386797 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.7875946 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.792335013 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.461135837 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.859148352 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.790366812 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.790047604 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.792598683 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.787034341 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.794570607 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.781608842 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.473258976 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.844442263 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.029056738 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.90825281 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.788858958 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.856725715 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.876986209 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.784601811 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.786590047 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.788859338 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.786615725 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.869714698 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.782835827 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.908804099 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.784154741 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.79452198 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.788728483 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.840577849 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.860402908 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.783251336 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.683780403 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.789882105 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.786996115 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.104221345 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.852871078 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.784944564 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.788553614 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.787352784 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.790078414 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.9117898 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.906767504 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.577070787 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.788818826 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.477044023 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.970406261 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.985561079 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.787249602 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.056207309 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.784265181 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.88293451 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.789867339 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.791948764 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.78886496 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.824015182 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.790393098 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.849781477 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.787494826 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.163911961 seconds)
  done (took 404.523749686 seconds)
done (took 783.859125551 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.444791288 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.4149907 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.522296736 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.431291715 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.409395311 seconds)
  done (took 13.939381618 seconds)
done (took 15.657290035 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.882702237 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.885548456 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.816006488 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.884495469 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.811562076 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.88242361 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.865037201 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.818558308 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.848881282 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.816834655 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.851219483 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.818723315 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.803080881 seconds)
  done (took 25.703487753 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.025806861 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.028965412 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.864951733 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.029044953 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.840084278 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.026823599 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.953374925 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.943079216 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.941944919 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.809499794 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.805821676 seconds)
  done (took 22.989872991 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.029243131 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.035981883 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.8697841 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.034237799 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.84433175 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.03176149 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.958881647 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.946371157 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.944919646 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.808273249 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.804679218 seconds)
  done (took 23.02916956 seconds)
done (took 73.441045145 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.800727846 seconds)
  done (took 3.519956931 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.826971108 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.981686491 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.808796739 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.806243355 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.800550243 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.801632767 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.807058563 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.800902715 seconds)
  done (took 16.355944323 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.797480248 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.801517909 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.798306357 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.801861804 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.799644167 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.8012371 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.801777476 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.797567822 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.804435574 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.80299836 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.799884764 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.799418036 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.80010908 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.802434178 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.799645443 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.798167674 seconds)
  done (took 30.527487211 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.799707201 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.797514496 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.79975119 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.800379859 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.799791633 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.799999504 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.800721233 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.799601781 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.800096126 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.799277603 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.799970241 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.799721852 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.799720573 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.79985358 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.801226416 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.801549885 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.801313287 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.799858276 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.805598149 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.800582795 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.801939314 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.79965457 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.800651503 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.802162613 seconds)
  done (took 44.934870305 seconds)
done (took 97.059135333 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.781615881 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.198282617 seconds)
  done (took 8.702958014 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.804523989 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.804580312 seconds)
  done (took 5.375303783 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.803590473 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.804148107 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.804175511 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.803286908 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.803153876 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.803362263 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.803530203 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.804776839 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.803520607 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.804931389 seconds)
  done (took 19.763874183 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.803752274 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.802676397 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.801796445 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.803824642 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.804778915 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.802044264 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.803574579 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.804294871 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.803410637 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.801015252 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.805506627 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.801245233 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.803891167 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.802635561 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.805058365 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.803289649 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.804274218 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.802141734 seconds)
  done (took 34.184663506 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.805735052 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.805513791 seconds)
  done (took 5.335984985 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.801707377 seconds)
    (2/7) benchmarking "second"...
    done (took 1.802794967 seconds)
    (3/7) benchmarking "month"...
    done (took 1.8021524 seconds)
    (4/7) benchmarking "year"...
    done (took 1.801711637 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.802623652 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.803443302 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.803127049 seconds)
  done (took 14.342791745 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.807997029 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.96448062 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.035075932 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.490251535 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.807226511 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.808330052 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.765637601 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.809128434 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.810762837 seconds)
  done (took 20.024069704 seconds)
done (took 109.454208742 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.641810249 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.794775807 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.15578183 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.85250257 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.846141189 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.09454416 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.81500759 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.09900862 seconds)
done (took 43.025728903 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.842050299 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.352454241 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.381400016 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.635944093 seconds)
  done (took 13.09637006 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.786081252 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.329991929 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.834449859 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.379351002 seconds)
  done (took 20.103833619 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.167540305 seconds)
    (2/2) benchmarking "read"...
    done (took 2.14950649 seconds)
  done (took 6.047336433 seconds)
done (took 47.819006729 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808734864 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.804818344 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.807484913 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.80517718 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.807171084 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.803362694 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.804047661 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.80488954 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.808358387 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.80640207 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.808349266 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.80903962 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807908185 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804793606 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806352265 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.808276819 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807755066 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.806424143 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805769391 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.806135834 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808173914 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.806061895 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.808287943 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.809856796 seconds)
  done (took 45.0905196 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.807011877 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.807255445 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.80971935 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.808895517 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.805610363 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.808034973 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.810613021 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.806296095 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.810758105 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.809717782 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.806006397 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.806922878 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.808687728 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.807867314 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810058606 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.806283315 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.810514647 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804216446 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811055091 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.807095678 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.810604856 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807178855 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.80772974 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.811061819 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.808573782 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808569414 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.811392702 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.808617745 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.810905988 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.807877593 seconds)
  done (took 55.98463167 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.816193901 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.817879311 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.810156811 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.814217959 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.810144458 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.810435035 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.809440277 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.811615545 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.811639343 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.811421565 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.81091304 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.809429135 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.810429276 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.810194049 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.811514112 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.811080771 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.811575165 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.811616285 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.810539218 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.811248972 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.811088516 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.811434623 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.812252779 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.811729082 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.811492052 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.811975559 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.809724738 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.811974885 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.811482015 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.812479701 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.813790893 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.811641194 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.812181135 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.811157501 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.812016967 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.811836397 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.817740531 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.820581193 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.813314253 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.810115897 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.8122936 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.811757847 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.812660758 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.812251185 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.812082138 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.813793254 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.812142412 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.811768546 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.813742746 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.813912455 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.812189685 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.812911114 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.812239913 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.813375847 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.81418839 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.812722566 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.811510152 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.81357768 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.814601058 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.814302797 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.814071437 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.811741004 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.813809147 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.813550814 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.812573151 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.813246086 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.814292619 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.813757917 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.814795625 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.814789188 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.81410156 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.815197116 seconds)
  done (took 132.239154928 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.814550658 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.812975729 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.81153953 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.812538694 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.812115513 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.814590161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.811802181 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815181904 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812549809 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.815876448 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813642136 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.812016981 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812364954 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.815875522 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.81434633 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.813069542 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.81587134 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.81113573 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.816152698 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.815501473 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.815099279 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.812945935 seconds)
  done (took 41.636649905 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.815264274 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.814318383 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.812696235 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.815521479 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.813565494 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.816478932 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.814937654 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.816609405 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817734029 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.815433871 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813481432 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816657878 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.814394752 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813172639 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.814415215 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.814267871 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.81717504 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.815068551 seconds)
  done (took 34.407184521 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.813799922 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.814902984 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.818369286 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.813786106 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.815850719 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.817608657 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815772383 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.817019331 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.819330158 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.81532882 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.81872642 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817931695 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.817499584 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815252983 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817253817 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.814891904 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.817475161 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815321722 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817079846 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.814056984 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.816364912 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.818335573 seconds)
  done (took 41.699808208 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.81832872 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.818490888 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.815142762 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.816025166 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.816362686 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.817555124 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.8188294 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.815236152 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.818844518 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.818363963 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.816091984 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.818723929 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.817075581 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.81585818 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.817156894 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.816274663 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.819303682 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.81817804 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819632588 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.814603395 seconds)
  done (took 38.082924277 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.819738817 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.821071079 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.81935436 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820955034 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82061899 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.81923883 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819803643 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.820543469 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.820315148 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.82068479 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.825428901 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.82087664 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.821301508 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.82086456 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.821584662 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82074927 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.820369544 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.819441391 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.820522496 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.82140667 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.820759155 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.819089497 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.822682026 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.82104456 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.821568254 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.822187519 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.821929138 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.819647764 seconds)
  done (took 52.723048915 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.820965874 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.819694747 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.81742224 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.818314352 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.818444461 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.818397214 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.817908137 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.817967316 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.820979979 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.818146034 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.820754085 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.820007114 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.820884848 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.820650984 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.821617783 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.823610514 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8216991 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.820149043 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.818716162 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81906565 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.822157799 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822262778 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.823271545 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.818885511 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81981558 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.822076894 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.819484739 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.819469277 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822645946 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.819984352 seconds)
  done (took 56.345841973 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.84008992 seconds)
    (2/2) benchmarking "in"...
    done (took 1.840922937 seconds)
  done (took 5.423336898 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.81970943 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.82061407 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.823830248 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.820188304 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.822226692 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.821602683 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.823922151 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.819382874 seconds)
  done (took 16.313950677 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.821413873 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.822981006 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.823430852 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.82273663 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.822843643 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.823306919 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.828239395 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.824804322 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.823489566 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.82431009 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.830299561 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.830057614 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.825266181 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.822133 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.822753218 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.823875759 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.823824088 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.824091771 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.824671379 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.824946704 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.824325593 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.826264319 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.825433165 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.822287172 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.823776854 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.833824759 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.826944501 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.823579705 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.823296125 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.827608944 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.824104259 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.822169748 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.823976337 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.825408025 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.824046781 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.825625386 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.829813386 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.825660143 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.829638946 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.826743881 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.824817422 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.822816234 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.824124612 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.827507545 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.824962168 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.82612985 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.824676047 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.823224694 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.824090515 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.82980737 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.831703572 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.825050243 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.821877044 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.828742307 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.825993669 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.830136039 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.826339566 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.827588012 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.836663466 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.833992426 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.837514068 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.834444543 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.826375029 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.825460265 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8358376 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.852938532 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.829823193 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.824000748 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.823794322 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.827854261 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.830951219 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.838030297 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.83620324 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.826561606 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.827341713 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.827596122 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.825556099 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.827103709 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.831214981 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.82869015 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.82819984 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.827744534 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.838073318 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.851272827 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.825243763 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.826709234 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.827906879 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.828037784 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.829079541 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.837448691 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.827127708 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.829141605 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.826345588 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.827209445 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.828009644 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.828878041 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.826105328 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.830276193 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.825810753 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.829283226 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.828959684 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.831174392 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.838078507 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.82900005 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.827136107 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.834240716 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.829548432 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.829122454 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.8346671 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.828143006 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.830358601 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.828651457 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.834125891 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.82679691 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.830796017 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.837784111 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.829650259 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.82967798 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.830279879 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.828209867 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.838334952 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.85851579 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.82952637 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.829236525 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.833420342 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.844491238 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.829931167 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.832254476 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.829497106 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.827712376 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.827569805 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.830854937 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.830770602 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.829736054 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.830872373 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.830542695 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.828025437 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.829994894 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.83199105 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.830627714 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.830588871 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.830088801 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.831510507 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.832317253 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.830888121 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.83067402 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.836149232 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.82852055 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.831023108 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.830745179 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.827581051 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.831636697 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.83059789 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.832340683 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.828967588 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.831906288 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.83010462 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.831838995 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.831692198 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.831366743 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.831518222 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.832645505 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.836228751 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.831374437 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.834282083 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.830499972 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.827991334 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.830994856 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.830728497 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.831045301 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.833702387 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.833031555 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.834273224 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.841779508 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.831133164 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.833349567 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.834403521 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.831303996 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.832898147 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.832538114 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.835360785 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.84053318 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.832665642 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.837542546 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.832555222 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.831966803 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.832834511 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.832356403 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.830704152 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.832777544 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.834537965 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.841608716 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.846133268 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.841383945 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.83303466 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.837374544 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.832970788 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.838678678 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.835529457 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.83320963 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.832705236 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.834154676 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.832003364 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.83523514 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.834041527 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.83280447 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.833184036 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.831523392 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.834665157 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.834184879 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.832352531 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.834021142 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.835325763 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.831439202 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.833416523 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.834802787 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.833559908 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.831513938 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.831960495 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.833530214 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.83423315 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.83372155 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.839826837 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.831788619 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.833483938 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.834513747 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.832927345 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.833396701 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.834696271 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.836489105 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.83460103 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.839434913 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.832711595 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.8356986 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.839728967 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.834290803 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.834859275 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.837317637 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.836173221 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.831703441 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.836319614 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.846263311 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.836019802 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.83561011 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.835445201 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.833905342 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.835688505 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.841205863 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.833239131 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.834261806 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.836177572 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.837761449 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.833591167 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.836206497 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.835784707 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.836034605 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.838289581 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.835729216 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.836000518 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.834767896 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.837426475 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.836441412 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.837119277 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.838065111 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.845394261 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.83970948 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.835962554 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.839642398 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.836938907 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.841377953 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.83706674 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.836186886 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.836358698 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.848422599 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.845027776 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.842155005 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.838087278 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.8371349 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.841338655 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.837569344 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.841085275 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.835916298 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.836895537 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.835567218 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.835764973 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.835427645 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.835959628 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.836741635 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.839023507 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.83767595 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.841882311 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.838197026 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.836260745 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.838416042 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.837463619 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.837483325 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.835432828 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.838449231 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.840460411 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.839838267 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.836712546 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.83748126 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.843495232 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837637607 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.837605449 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.836204336 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.835814119 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.837398014 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.837662373 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.839872825 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.842583454 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.848725991 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.84244641 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.848937302 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.840893337 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.847832357 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.83934304 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.843903703 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.850806587 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.836708209 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.837551456 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.838827806 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.839884118 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.846154211 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.840299009 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.8411938 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.84492676 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.839877472 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.841098917 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.841880827 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.839584901 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.839548161 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.840879748 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.84635032 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.840162164 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.845067313 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.842613579 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.838769397 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.839609799 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.841340889 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.837813646 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.844342554 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.841275691 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.841679067 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.839188453 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.841109858 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.840809178 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.841075223 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.843126186 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.838643949 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.841549763 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.847172185 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.842234183 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.84592199 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.840931507 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.847433124 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.840683413 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.846317908 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.842701155 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.842864474 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.841689547 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.841707398 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.842712142 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.84019562 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.841036657 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.841906458 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.842269649 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.846997302 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.84323899 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.84295888 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.843355938 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.842502091 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.842770671 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.852639273 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.87001853 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.844223727 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.848598743 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.839983024 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.844302686 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.847044176 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.84322963 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.841545113 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.844968966 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.853708493 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.852467414 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.84220485 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.843242217 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.843116098 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.844231622 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.843605123 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.843482368 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.844303416 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.843845774 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.841498981 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.844452115 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.846417082 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.842868594 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.844717056 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.844893199 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.845298266 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.853623877 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.844761815 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.843477271 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.844276541 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.842822625 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.843637635 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.842057804 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.843815333 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.842658561 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.843381039 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.844935066 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.851323811 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.851180782 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.845739435 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.843656792 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.844030877 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.843688501 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.845856311 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.844911841 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.844516518 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.845978605 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.844263991 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.845836269 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.845875968 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.843779386 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.845425836 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.845109341 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.846270968 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.847782714 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.853913631 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.844551482 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.842071925 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.844571936 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.845606294 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.844777408 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.845989932 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.851725402 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.846953729 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.856609838 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.853812019 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.848800718 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.844266812 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.849292542 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.853786236 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.843287473 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.845585461 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.846038504 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.845847412 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.846475307 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.849617355 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.847704975 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.851900933 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.845840718 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.84654286 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.854043457 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.846859631 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.846887039 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.84634257 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.850045992 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.847178984 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.843878613 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.84636505 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.844686448 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.852075808 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.847582664 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848634006 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.848796177 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.844332884 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.848513041 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.851381962 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.846938314 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.847791217 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.845415389 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.848048377 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.84818227 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.84793398 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.84389561 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.846630807 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.847127633 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.850631245 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.855789166 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.845187568 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.849074866 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.848052315 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.847239481 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.8481544 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.847925435 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.844795256 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.844909884 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.847395803 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.848742364 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.847853689 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.851039525 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.847031447 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.849358365 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.850099767 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.849127678 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.85137665 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.859045064 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.857626546 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.844714845 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.846679251 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.847507427 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.849108576 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.849413685 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.848105045 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.848938873 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.84999979 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.84867477 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.848360236 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.848877388 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.850169057 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.864623592 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.849452929 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.848392789 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.848762403 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.850738255 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.850005512 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.847726904 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.849669205 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.850667423 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.851806708 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.85757046 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.850801439 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.857085523 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.849464898 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.849911278 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.854715285 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.850544775 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.860647277 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.852971704 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.850014958 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.852072719 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.854243008 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.867910098 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.852709678 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.860225454 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.881664423 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.849840297 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.851314938 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.850116821 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.848913163 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.85164836 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.851633482 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.850975784 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.850042309 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.848911434 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.85326769 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.852083881 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.856348651 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.852054626 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.851448621 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.851877978 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.852371413 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.850587215 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.848202562 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.851758908 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.851087102 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.851717772 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.85159188 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.851347472 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.850340602 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.863686345 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.861941 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.851898197 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.852687403 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.848304738 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.852329921 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.855644145 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.861712644 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.861984534 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.850539185 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.851418273 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.851752935 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.85328859 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.849038774 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.852231698 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.851944465 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.850126819 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.850065534 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.864531366 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.862266768 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.857269144 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.851981689 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.852468292 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.85203872 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.853047706 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.853855782 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.852138392 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.854976827 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.852759211 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.861460557 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.854028097 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.852052541 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.857219076 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.862769696 seconds)
  done (took 1098.342541173 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.851497461 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.851445621 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.85112032 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.851328476 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852417565 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.850250238 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.85065082 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.850969338 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.85085294 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.850669109 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.851772216 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.851819448 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.852122575 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.849869226 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.850568188 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.851458241 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.851175008 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.850902791 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.851268245 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.85221126 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.852629775 seconds)
  done (took 40.648341616 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.85421731 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.852395949 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.85252545 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.855830749 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.850816742 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.85314936 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.851616538 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8538104 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.855351777 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851216118 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.855703969 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853190813 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.852816085 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.852599202 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.851924156 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.856234193 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.855348847 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.85158024 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.8545715 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.852862694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.855933917 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.85523058 seconds)
  done (took 42.55283348 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.856698107 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.856554611 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.855879957 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.853384632 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.856572677 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.851697115 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.857204832 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.856461347 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.856420108 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.856981581 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.854297377 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.857653125 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.863029738 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.86067263 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.85737635 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.856377804 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.998299532 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.856930874 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.857245574 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.858512625 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.85436899 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.860355422 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.855546056 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.853877508 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.856413793 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.857515198 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.858160344 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.856291084 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.857874829 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.859719955 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.863214901 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.857515939 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.858018334 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.858567067 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.855695513 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.857884749 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.864364768 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.85976246 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.855305207 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.857302535 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.867621267 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.88082321 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.859926315 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.86326505 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.858637387 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.857143825 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.860743038 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.869581625 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.856132558 seconds)
  done (took 92.984493726 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.85722909 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.858732879 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.856486788 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.858940623 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.860356599 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.858114041 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.85942735 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.859408174 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.855787287 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.856076801 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.860697168 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.856357993 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.856798242 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.858577432 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.85879119 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.856397136 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.859069162 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.857066134 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.857728692 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.85726162 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.854488162 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.85744654 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.85915074 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.855319419 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.858154618 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.85538507 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.854741342 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.856937521 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.857704915 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.854789186 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.858632759 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.85791006 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.859775249 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.855918182 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.856425143 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.86074062 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.858415888 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.856101637 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.857369855 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.854638599 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.858811432 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.857904976 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.859954275 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.859215819 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.856282972 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.855022232 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.855956807 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.858045084 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.856790895 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.86016228 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.860269461 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.857507201 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.860541943 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.85706014 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.861112563 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.860853859 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.859248955 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.856499042 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.861033116 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.858885636 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.859983517 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.862808561 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.858567193 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.862157628 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.861805593 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.85905969 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.859978414 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.861630476 seconds)
  done (took 128.136574164 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.863032427 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.862360749 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.862848234 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.86107547 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.861893414 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.861750883 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.86246532 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.862930248 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.86189143 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.864514746 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.863275841 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.862573412 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.862320918 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.862943665 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.862897473 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.862783358 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.864421299 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.862644116 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.862650503 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.861559232 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.86356614 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.862916376 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.862803126 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.864156214 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.863821318 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.863730934 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.862974567 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.863351951 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.86478759 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.86303825 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.86529735 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.863797084 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.863987041 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.864399673 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.8642803 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.864605323 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.863514547 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.86331536 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.863626681 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.864251311 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.866133939 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.865648362 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.865300039 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.866737238 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.864271284 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.865088101 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.865421785 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.866539523 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.866348977 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.864788168 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.86421758 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.865827288 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.866336451 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.864619301 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.864117508 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.864316369 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.865224711 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.864023628 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.864733466 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.865091923 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.864794735 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.865629725 seconds)
  done (took 117.346119251 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.863969473 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.865307163 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.863277216 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.862443716 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.864861908 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.862415343 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.863133567 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.865101158 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.865115683 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.865998977 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866781173 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.863395743 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864252436 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864187458 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.863774381 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865235012 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.862497748 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.86244753 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.864012654 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.863537165 seconds)
  done (took 39.064329194 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.862479696 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.865365274 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.862686914 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.861667891 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.86730368 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.863913085 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.865635924 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866664264 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864777704 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.866087086 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.867977629 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.867311822 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862298713 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.864396237 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.8669409 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.863685297 seconds)
  done (took 31.623160709 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.8617737 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.866312299 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.866743837 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.867726977 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.864355025 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.86603997 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.867476166 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.863726739 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.863530176 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.867766844 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.86688772 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.867518938 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.866548379 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.869081556 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.865538317 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.866780299 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.864114815 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.864901783 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.867936603 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.868126031 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.86544547 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.864107416 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.868454988 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.867715268 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.864870986 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.867186868 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.863378418 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.863945892 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.86514122 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.866168959 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.86384763 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.864721298 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.86383936 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.862297373 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.866309523 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.864943095 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.868028525 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.867084485 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.867541411 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.866526898 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.86470257 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.866097153 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.86729077 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.868087429 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.867391065 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.868357641 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.863730922 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.868533427 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.863468723 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.864282933 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.867612343 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.866484674 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.868459197 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.865844107 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.864776385 seconds)
  done (took 104.415823751 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.867027803 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.868332391 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.863191482 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.866186883 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.866469956 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.863579378 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.866602617 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.863975382 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.864045065 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.866215902 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.864471053 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.86798997 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.865544912 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.867021183 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.864539686 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.865922802 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.863928366 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.865217503 seconds)
  done (took 35.364179555 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.855451016 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.856460928 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.85879309 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.854060227 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.858297159 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.856845147 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.854350176 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.857250658 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856377977 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.86094668 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853023426 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.856563478 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854867848 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.855632089 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.853497136 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855333292 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.854687816 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.853555473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.852111722 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.851944435 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.855743628 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.8539516 seconds)
  done (took 42.599278515 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.852969976 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.854228471 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.870342199 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.880037966 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.878234523 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.894788116 seconds)
  done (took 13.001452534 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852718727 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857032731 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.851043365 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855730122 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855517092 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852997978 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853462182 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853030351 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854785624 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852729304 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852582648 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855877477 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856357751 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850971296 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855362437 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856850834 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851506208 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852963488 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853116106 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855596958 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852981813 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855907189 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853094799 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853975244 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85309047 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85430964 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855697859 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854780788 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854385872 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855615316 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856998515 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853867461 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856879102 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854782586 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855660962 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85544573 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853918102 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857255196 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855273878 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85594079 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.855687504 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858449388 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857088427 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853786941 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857912888 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853700327 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853740019 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85465057 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85430801 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860006344 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856466392 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853164358 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858146253 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856784563 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85757338 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861986075 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855513487 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855001231 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857992674 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854531641 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857315528 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85996925 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854569089 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855340355 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857611756 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85485287 seconds)
  done (took 124.22199864 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854902731 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853479427 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855866181 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856758517 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856486679 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854649798 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856276811 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856068784 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855107585 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858015161 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858178851 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853016051 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854814908 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855552269 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854864122 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853704152 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853773802 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851855216 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853427916 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855957205 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854035801 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852071547 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853933677 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853847667 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854761338 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8570629 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85493135 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853562263 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853450418 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85264099 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85350939 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854250332 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852858997 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.853299275 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854250232 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853541142 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855185812 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854330307 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854085427 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854940697 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852770698 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85894995 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854768162 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852332047 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855132366 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854337424 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853806236 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855848275 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853361224 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853603319 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854788133 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855687678 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854860449 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853095652 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853172266 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852947516 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854527539 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853751973 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853135033 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855387291 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853548032 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85327411 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857359271 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853528398 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853552482 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853671257 seconds)
  done (took 124.174976136 seconds)
done (took 2556.155185575 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.921060109 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.914096582 seconds)
  done (took 15.608499541 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.014823043 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.969932639 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.854572547 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.850297619 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.849510419 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.877117492 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.86724281 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.849943228 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.85488934 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.85498817 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.854519846 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.041518309 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.907627383 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.849741382 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.855836507 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.947925799 seconds)
  done (took 52.079242709 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.858611493 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.859639886 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.871764562 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.862100768 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.857498913 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.871906535 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.894252793 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.864826114 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.892223571 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.873529171 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.929396384 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.87010476 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.857275935 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.912600208 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.872131952 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.874548803 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.955966027 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.930219209 seconds)
  done (took 35.682662556 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.935299598 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.863836924 seconds)
  done (took 10.584776999 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.869305627 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.861173095 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.841995082 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.874165646 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.847113629 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.873209304 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.862604458 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.86544299 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.867247295 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.858156329 seconds)
  done (took 70.396046993 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.853551762 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.847797997 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.848798485 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.846095758 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.841289339 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.838987196 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.847090641 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.842256566 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.533356101 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.878421926 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.854781642 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.853425704 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.849293261 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.848706839 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.844006781 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.870989324 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.983569795 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.845910961 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.845835317 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.854220676 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.848663684 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.924706768 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.863910893 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.851527708 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.879238029 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.541457333 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.853270094 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.854765762 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.990412043 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.846778603 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.847203062 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.850207532 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.85209927 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.23278185 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.124289672 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.849502609 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.851479586 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.855177713 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.844885541 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.996000851 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.849620043 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.855676652 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.777160646 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.098783281 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.958797753 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.895328104 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.23507135 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.84873415 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.849816331 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.88073327 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.850251933 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.84997604 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.862283139 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.357537116 seconds)
  done (took 131.527815522 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.842876008 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.107850828 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.001068118 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.84341603 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129864957 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056628849 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.845394301 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894809297 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.847702266 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.0786212 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.006681158 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.957993362 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847006826 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.840699645 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.8377374 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.837433046 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.010832911 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.923329383 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.845124575 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.843136786 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876834647 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.095092067 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.973311551 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.84607965 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.867344288 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.059871251 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.973400759 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.955486377 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.139907116 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.843079111 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.910026754 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.847427998 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.845119886 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.842628939 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.003972145 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.945786813 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936650025 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.844835353 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846183573 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.844958464 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.519711511 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045862479 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.944532543 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.987955798 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.096499047 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.054947632 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.635024584 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.844824636 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.592294978 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.007453497 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.082596454 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.084078349 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.96681703 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.84772648 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.107559741 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.844321424 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845541507 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.084895956 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.072859089 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.954652617 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.845848067 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.846830807 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.845262648 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.095630134 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.84274563 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.940216068 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.846887745 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.841614294 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.945948526 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.954542033 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.080454421 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063003186 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.887223338 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.157476062 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.325887664 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.098472113 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.918999517 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083637743 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.849370978 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841834735 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933772082 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.691450201 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.009448987 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.104141512 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.113254174 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888835154 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.589378741 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.845290866 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.081402747 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.072344256 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.104619617 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.093491586 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.002906345 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.058013398 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.847876996 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.848218516 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.171749534 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.982974161 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.851140497 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.212747353 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086826623 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.429994156 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.87810635 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.163556275 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984864319 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.850534655 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.493006087 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.847442834 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.078097899 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.894612666 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.849587779 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.848125456 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.072619965 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.837923304 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.847597845 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.693958517 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.91504591 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.853229968 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090036724 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.850220171 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117556638 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.852897283 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091231397 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.173951271 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.884444897 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.021386947 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.095781589 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.852830023 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.096929026 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.103627686 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.970930431 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.127163145 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.779256956 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.848698311 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.142502397 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.853462415 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.848020201 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.026392921 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.85133375 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.029396142 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.852001622 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.142293961 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877499332 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.007771257 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.852405785 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.119387861 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.890631087 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905037156 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.851976955 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.977440072 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.85102037 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.858129745 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004859522 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850080666 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.850496946 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.411638594 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.851053708 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.007105157 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.088399102 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879445793 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.928123502 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.529542739 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.851302766 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.939290904 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879872129 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.20609077 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.850633252 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.011363328 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.85566989 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.381574202 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.850869678 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.099957057 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.09020387 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.856851337 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.84776543 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.774173404 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.852545861 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.850643947 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.014818671 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.34986643 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.84900058 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057344871 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.856106067 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985769873 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.849860208 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.935452156 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.206605682 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.851518196 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.851564188 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.852804728 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.851849407 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.852087536 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.064317405 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.888075882 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.389375795 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.99234464 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.127660914 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.173950702 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.119579408 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.903697018 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.855048461 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.098269811 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.854128095 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.918559571 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.855791392 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.877636728 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088859875 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.855769738 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.068826368 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.148950784 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.782639912 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.90298486 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.856006394 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850540431 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.776030221 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.011379732 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943957697 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.856797138 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.85243779 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.973368686 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.980135013 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.070123857 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.855282292 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.998740995 seconds)
  done (took 899.786655369 seconds)
done (took 1217.439718154 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.852918704 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.848310159 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.840178405 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.855250058 seconds)
  done (took 29.173837138 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.862719567 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.861865519 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.862979321 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.861876954 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.863957297 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.859885765 seconds)
  done (took 12.952319147 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.879170685 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.851413493 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.855295813 seconds)
  done (took 21.364415256 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.930656689 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.277645342 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.970410079 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.304018618 seconds)
  done (took 10.26408484 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.870582413 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.864220529 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.862450626 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.864886176 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.866016418 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.866999867 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.864461779 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.863383602 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.864925111 seconds)
  done (took 18.56933329 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.232920194 seconds)
done (took 98.335130534 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.847476544 seconds)
    (2/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.966770419 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.016310705 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.939167244 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.545212859 seconds)
    (6/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.987085616 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.182962464 seconds)
    (8/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.906024465 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.850837023 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.83834137 seconds)
    (11/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.940796076 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.014395159 seconds)
    (13/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.063792007 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.495510612 seconds)
    (15/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.943752116 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.897086148 seconds)
    (17/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.841842379 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 3.216646678 seconds)
    (19/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.893728032 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.163540886 seconds)
    (21/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.759662926 seconds)
    (22/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.202410824 seconds)
    (23/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.197522514 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.970435831 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.858148099 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.848397519 seconds)
    (27/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.34330933 seconds)
    (28/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.053342813 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.93719867 seconds)
    (30/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.777739482 seconds)
    (31/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.979992366 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.027141821 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.96351848 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.147029332 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.975017177 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.968227836 seconds)
    (37/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.581082205 seconds)
    (38/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.982535163 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.118423982 seconds)
    (40/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.983828975 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.259450555 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.190058332 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.921692406 seconds)
    (44/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.97601779 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.783935097 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.890822741 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.899469889 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.970553362 seconds)
    (49/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.930121003 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.73892095 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.203010736 seconds)
    (52/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.405647116 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.914597353 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.970615956 seconds)
    (55/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.228568603 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.174223812 seconds)
    (57/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.046139165 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.861756597 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.201930905 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.130976514 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.951620459 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.949931887 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.052031761 seconds)
    (64/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.871732338 seconds)
    (65/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.548862155 seconds)
    (66/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.759112318 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.018870305 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.846040112 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.988266056 seconds)
    (70/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.462963264 seconds)
    (71/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.03708916 seconds)
    (72/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.4254753 seconds)
    (73/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.874442057 seconds)
    (74/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.869745577 seconds)
    (75/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.845168473 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.616082574 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.691058747 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.125843408 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.886434799 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.845600532 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.964900894 seconds)
    (82/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.376642812 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.901807657 seconds)
    (84/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.888352433 seconds)
    (85/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.886349567 seconds)
    (86/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.231083919 seconds)
    (87/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.995540504 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.883639529 seconds)
    (89/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.07306291 seconds)
    (90/309) benchmarking ("sort", Float64, false)...
    done (took 5.609900024 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.665670141 seconds)
    (92/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.955715378 seconds)
    (93/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.88833234 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.847703532 seconds)
    (95/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.50914016 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.933373244 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.242072741 seconds)
    (98/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.967617514 seconds)
    (99/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.416569564 seconds)
    (100/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.061634962 seconds)
    (101/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.582757713 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.329902035 seconds)
    (103/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.851645046 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 3.568485674 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.141190286 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.155234329 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.16851123 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.6730477 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.866751322 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.859958418 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.186546244 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.926163261 seconds)
    (113/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.168919815 seconds)
    (114/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.176041218 seconds)
    (115/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.983083891 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 2.304247621 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.887862538 seconds)
    (118/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.344942258 seconds)
    (119/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.277318012 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.115827996 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.864240305 seconds)
    (122/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.39365371 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.221015918 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.124450036 seconds)
    (125/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.963303548 seconds)
    (126/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.852010839 seconds)
    (127/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 8.049793717 seconds)
    (128/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.055626793 seconds)
    (129/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.891078767 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.850167233 seconds)
    (131/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.836401987 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.990620426 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.963059154 seconds)
    (134/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.427336833 seconds)
    (135/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.987875886 seconds)
    (136/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.851865784 seconds)
    (137/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.992334574 seconds)
    (138/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.892206217 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.252029625 seconds)
    (140/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.886541157 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.180967599 seconds)
    (142/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.35426472 seconds)
    (143/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.082222576 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.86963641 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.187322244 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.889760142 seconds)
    (147/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.949812649 seconds)
    (148/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.209874649 seconds)
    (149/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.935383717 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.100530861 seconds)
    (151/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.067581938 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.573318994 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.260139707 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.475324729 seconds)
    (155/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.033497881 seconds)
    (156/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.0302881 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.884579606 seconds)
    (158/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.850875339 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.881511043 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.160975623 seconds)
    (161/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.006057633 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.851871133 seconds)
    (163/309) benchmarking ("sort", BigInt, false)...
    done (took 6.944275306 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.058856254 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.008977114 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.04002311 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.249580173 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.808060387 seconds)
    (169/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.030936934 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.108679715 seconds)
    (171/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.029001358 seconds)
    (172/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.214225453 seconds)
    (173/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.989912169 seconds)
    (174/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.082704669 seconds)
    (175/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.897976631 seconds)
    (176/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.078438119 seconds)
    (177/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.029442941 seconds)
    (178/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.881394969 seconds)
    (179/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.966132096 seconds)
    (180/309) benchmarking ("sort", Int8, false)...
    done (took 4.871901165 seconds)
    (181/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.872262059 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.943927865 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.854210526 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.341457494 seconds)
    (185/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.383558061 seconds)
    (186/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.232151655 seconds)
    (187/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.086499543 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.820953939 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.915787079 seconds)
    (190/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.256908055 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.511385448 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.235537415 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.046577474 seconds)
    (194/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.796376345 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.165670276 seconds)
    (196/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.890144026 seconds)
    (197/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.004721368 seconds)
    (198/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.987031494 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.06619045 seconds)
    (200/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.166681374 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.924874104 seconds)
    (202/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.948235938 seconds)
    (203/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.253617435 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.870981695 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.675229671 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.862856856 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.311902762 seconds)
    (208/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.160878736 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.849292259 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.182474068 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.678419124 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.07199251 seconds)
    (213/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.15768463 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.567425267 seconds)
    (215/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.45400185 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.133085335 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.872263023 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 8.085947607 seconds)
    (219/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.068720285 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.207737722 seconds)
    (221/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.865575506 seconds)
    (222/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.95056751 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.987515983 seconds)
    (224/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.21161879 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.97693624 seconds)
    (226/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.886822197 seconds)
    (227/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.092949263 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.855213814 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.540158454 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.193840358 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.247481743 seconds)
    (232/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.386772789 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.920985206 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.817205898 seconds)
    (235/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.879645543 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.204835961 seconds)
    (237/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.219396646 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.824185001 seconds)
    (239/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.873596584 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.868898047 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.856870999 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.870011028 seconds)
    (243/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.10883628 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.902061578 seconds)
    (245/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.869040906 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.830476317 seconds)
    (247/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.970415727 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.315804042 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.869192436 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.918723347 seconds)
    (251/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.054318548 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.960463004 seconds)
    (253/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.008004961 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.83299627 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.874707661 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.184789432 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.888365154 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.942998084 seconds)
    (259/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.870448704 seconds)
    (260/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.429212054 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.903819976 seconds)
    (262/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.952499613 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.718437184 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.348206357 seconds)
    (265/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.159594894 seconds)
    (266/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.345404625 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.204787185 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.971368691 seconds)
    (269/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.37399123 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.166530852 seconds)
    (271/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.005173576 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.901176302 seconds)
    (273/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.880448186 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.793544621 seconds)
    (275/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.172058625 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.041677823 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.109903733 seconds)
    (278/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.349523042 seconds)
    (279/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.07028246 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.252150693 seconds)
    (281/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.012261983 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.964457156 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.953387032 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.991537413 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.955072744 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.093255583 seconds)
    (287/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.297850946 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.978110387 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.619526257 seconds)
    (290/309) benchmarking ("sort", Float32, false)...
    done (took 5.579667176 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.875230897 seconds)
    (292/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.130483672 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.869476621 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.647213085 seconds)
    (295/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.201259368 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.870656123 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.963112289 seconds)
    (298/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.344216626 seconds)
    (299/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.803413275 seconds)
    (300/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.711271616 seconds)
    (301/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.029335652 seconds)
    (302/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.385992111 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.450464274 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.855827244 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.905660083 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.894886923 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.113411127 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.870589654 seconds)
    (309/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.271360783 seconds)
  done (took 1021.378553794 seconds)
done (took 1023.223893696 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.903625485 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.896749259 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.87995413 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.902439005 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.99308844 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.908841286 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.890783745 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.882649301 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.927120451 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.930802544 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.879395086 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.906328766 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.881763031 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.880215653 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.880404429 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895575506 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.201925372 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.911424206 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.898003299 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.89018275 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.897257936 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.880381357 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.932026127 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.909066493 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.884737864 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.884501491 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.886748753 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.900550274 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.993982206 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.885292686 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.884797856 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.891807849 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.202189766 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.908205041 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.877515842 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.900656357 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.89394901 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.890349574 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.885025121 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.914644428 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.352049149 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.88538356 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.886719067 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.884201137 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.882138741 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.887768316 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.88387502 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.887097092 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.897346146 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894912041 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.345241061 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.90183493 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.886991314 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.88387275 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.892375762 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.88125255 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.885112037 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.897138839 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.903424396 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.900439488 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.193235099 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.920537107 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.884952252 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.900525677 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.88971726 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.381978992 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.884134931 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.889669917 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.351208467 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.892111898 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.385134119 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.896693312 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.886897802 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.898935252 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.916789779 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.205253923 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.907154059 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.884030908 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.892782088 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.882934745 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.896694054 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.896531727 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.888866042 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.884590218 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898466702 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.913211346 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.893182875 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.886363585 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.893141253 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.904120039 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.89352667 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.895304524 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.888753925 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.879579126 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.89636328 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.889360079 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.888541695 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.888517449 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.890826195 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.897462123 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.351650166 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906538125 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.882462454 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.882790348 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.885255589 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.900647558 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.351835532 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.890172631 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.90908697 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.934534909 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.887250604 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.194697576 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.917263616 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902902767 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.894811685 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.889597703 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.881430498 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.198193565 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.37855433 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.904578297 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.888955228 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.886452817 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902221982 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.888176692 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.885066304 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.208561126 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.916299152 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900465086 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.006922836 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.896975184 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.919498526 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.885992571 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.892407145 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.917144219 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.904265318 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.919455455 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.890185867 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90288069 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.904994699 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.883876279 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.898628664 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.897075336 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.88846743 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.893278282 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.882051501 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.917682625 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905667278 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902677457 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.910582388 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.010077007 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.886820429 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.200591003 seconds)
done (took 296.515589555 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.967757402 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.8855192 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.002097096 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.889939457 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.977338077 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.987620253 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.886167092 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.887117916 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.88586915 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.259593796 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.887701934 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.887228081 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.883023098 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.887226801 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.977868581 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.890998434 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.889651329 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.22373284 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.891023448 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.966644071 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.885900355 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.887470553 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.890051107 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.264023701 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.88217426 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.890030579 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.965794247 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.89014584 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.252106024 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.880934798 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.88194412 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.229971932 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.988407234 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.919978841 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.891450736 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.896805008 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.979417595 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.906156262 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.978033312 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.977997612 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.996724921 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.922189857 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.89168252 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.884806865 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.895649898 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.893724768 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.890394233 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.920551468 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.88318211 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.888840875 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.225545231 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.902282686 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.898706791 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.891494216 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.889837182 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.913724221 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.8914726 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.891993336 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.990824265 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.892108383 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.964153325 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.263269606 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.264264065 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.892265567 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.893629056 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.889283415 seconds)
  done (took 185.779739585 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.960400268 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.982829417 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.959803777 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.897503529 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.945047954 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.959038923 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.896556085 seconds)
  done (took 15.407747305 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.896330342 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.893494193 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.953624729 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.953657804 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.892669618 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.064981719 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.892612294 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.904186917 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.890694193 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.956306638 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.892888538 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.894630319 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.900751551 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.889087092 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.953686289 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.904214035 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.010082055 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.89484943 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.895444721 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.047680262 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.891437366 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.901750126 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.946707944 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.905959977 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.894103775 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.899904476 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.536962895 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.893678303 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.890824122 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.893209455 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.890763251 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.93583847 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.895131602 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.887261171 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.892530389 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.030337551 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.895210846 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.891987107 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.895876136 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.890741107 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.895000743 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.89487683 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.894797889 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.891480583 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.894670394 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.91780124 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.894753111 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.894616688 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.89446862 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.894518995 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.95195806 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.895387417 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.891406224 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.892783843 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.960907501 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.901935988 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.897621336 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.89328661 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.89545898 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.891433404 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.049762582 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.955313862 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.896170202 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.954507611 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.896167036 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.896485019 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.895766066 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.895989058 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.989701549 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.897096875 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.955439284 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.894191043 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.086097207 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.9191008 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.898627128 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.899518498 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.897519513 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.896834412 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.89250418 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.90229743 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.894587807 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.897028371 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.90215391 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.895742695 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.892672828 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.033177418 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.009047863 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.893532752 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.909845332 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.904642288 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.895121946 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.958653964 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.898046883 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.894316398 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.967968988 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.014297895 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.953239709 seconds)
  done (took 208.574621626 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.901536462 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.904917413 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.899127087 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.914034741 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.896854555 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.896784528 seconds)
  done (took 13.224710499 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.899387954 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.898744694 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.899434803 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.898471981 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.899311195 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.899715979 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.900197031 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899308472 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.903497504 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.898756811 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.900490103 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.899247581 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.89955665 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.901105648 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.899801824 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.900753942 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.899364083 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.895326325 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.897457172 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.897718404 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.068365752 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.898079545 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.900972904 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.899159622 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.903449771 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.897897082 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.907959824 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.900521278 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.899577122 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.906844592 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.904398134 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.90055977 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.900214961 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.90421526 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.902863734 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.899103505 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.905122633 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.900387428 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.897588181 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.899840475 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.901039893 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899605183 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.899082305 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.90163171 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.903345646 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.905746754 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.906102542 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.906874476 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.900244545 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.900672678 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.901483503 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.901991844 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.900431044 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.901906562 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.903499297 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.906703186 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.906433801 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.901183499 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.90245516 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.902195227 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.902239725 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.901891312 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.903616056 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.907544035 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.899287122 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.900911138 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.902044748 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.90633981 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902159477 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.902265034 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.901902033 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.898941621 seconds)
  done (took 139.881288166 seconds)
done (took 564.690159773 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.99345689 seconds)
  done (took 8.808421656 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.901911104 seconds)
  done (took 8.804717212 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.612154506 seconds)
  done (took 10.427843235 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.959846248 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.920450609 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.902570648 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.892999194 seconds)
  done (took 29.503209756 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.096789145 seconds)
  done (took 8.912917948 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.909919091 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.891681162 seconds)
  done (took 15.653785292 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.950288424 seconds)
  done (took 8.767416247 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.138730858 seconds)
  done (took 8.958991082 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.918881127 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.929205535 seconds)
  done (took 15.678509234 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.881825459 seconds)
  done (took 8.697931877 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.759392014 seconds)
  done (took 11.582248337 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.905003694 seconds)
  done (took 8.735267394 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.962773207 seconds)
  done (took 8.77980681 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.020113934 seconds)
  done (took 8.836833866 seconds)
done (took 163.963701989 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.903721122 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.896014149 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.896274301 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.895874668 seconds)
  done (took 29.408412481 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.936099703 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.936007605 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.939341796 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.947167523 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.939685645 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.935491798 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.929851848 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.929302971 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.947481018 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.945054986 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.93857669 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.939250913 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.935942819 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.930581716 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.940644986 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.938605696 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.947209844 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.938962574 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.92987337 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.942128033 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.905540826 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.948923601 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.939862996 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.903326791 seconds)
  done (took 48.283121443 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.102491047 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.975018769 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.056737598 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.95606257 seconds)
  done (took 9.909398514 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.956727466 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.956580476 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.968663506 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.008302368 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.031959457 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.969010759 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.932280088 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.926470007 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.913274028 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.958669156 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.033534702 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.95337274 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.046297988 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.90553183 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.092453317 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.906331201 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.904983375 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.956560368 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.007190554 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.022649762 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.906758893 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.956914097 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.96087938 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.954295435 seconds)
  done (took 49.048156092 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.90518803 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.911164711 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.90943351 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.903106911 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.903899404 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.903734067 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.90962126 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.906620555 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.925861287 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.904990384 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.904927503 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.903183851 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.904141684 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.904725386 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.903231249 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.917159185 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.919133776 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.904965779 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.908796817 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.910244324 seconds)
  done (took 39.983916696 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.90002116 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.752507562 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.250564748 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.155457669 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.899797741 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.894583427 seconds)
  done (took 31.672822472 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.920157746 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.911852998 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.906666901 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.964006485 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.042436568 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.911556216 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.906140353 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.918207914 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.957150181 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.971868135 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.923166749 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.935634972 seconds)
  done (took 25.090745099 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.906347247 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.900447791 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.898968368 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.914383937 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.916758703 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.915249603 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.912968011 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.899497509 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.917811912 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.926194493 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.915851332 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.919642257 seconds)
  done (took 44.770323021 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991031681 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.818546033 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.986953865 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.620404621 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37669681 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109372006 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.43246901 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.248182612 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.902922755 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17684371 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.041297583 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010571873 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157239202 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902021164 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.967504506 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.388835329 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195167819 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150101597 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931298894 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.682003591 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956442982 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.531372955 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.753823249 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.966098089 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116852832 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.037468431 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.164490513 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.868274486 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039171794 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942896566 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913876965 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903424302 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178161279 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287099114 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003915 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916290236 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562881485 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.621490592 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.897731619 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.704996259 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.747097171 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.027160032 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915766852 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906930006 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.83956417 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.530091921 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288001627 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.903921729 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.615314341 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.906995014 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915453677 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994827018 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.908993334 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.723868298 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859131563 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.18747466 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.902381336 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911855229 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.472074906 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.021883865 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.559679081 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.88142159 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.100953238 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.734867889 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306171255 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.058555997 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.909706674 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909033923 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842725549 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.67460349 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960510806 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.07741064 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.921755512 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.549353046 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21568665 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.105542655 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.850585257 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199561659 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.804548683 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.88347075 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136001441 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.865246224 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8427543 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.765764612 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.841265464 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177970576 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940855164 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.554057523 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94922826 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.248890822 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.918298446 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924329998 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914719035 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.131170678 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.475860525 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90812957 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.798352451 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062792279 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92566437 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.25204731 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843362921 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.906714016 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164786539 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.119952769 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.25036539 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.429562367 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069943439 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904731719 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.982383429 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.911073846 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.957543202 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.186425126 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970368555 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.030167914 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964922873 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.867987836 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216355563 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932066369 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.070677188 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.067615835 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037059616 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.242806614 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.198886423 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975361513 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913872539 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.911018665 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.709714737 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.46585024 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.177344889 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.910572363 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.498702678 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959463653 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.911600561 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844840431 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.531059736 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.070843505 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.877942853 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.133575513 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.910014145 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220263928 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845481781 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056280316 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.018044918 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.128941654 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.575990862 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.978248172 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167827077 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.50066967 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.293966479 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960544981 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930654886 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006123378 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931762797 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.423890328 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.203171917 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.915175413 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.913980452 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.706333215 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.910680716 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911664727 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.917188891 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.709489477 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192927265 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.939960097 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.910025904 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.80007538 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.924653317 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978146123 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916510064 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922657012 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.468869141 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.661334188 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.923608371 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.565447505 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134982009 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922389964 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.6958569 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027326657 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.995365755 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.190539349 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97548497 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.846279529 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.623781044 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.606845705 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912496936 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848458096 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.912229863 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921376652 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922684542 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.293343228 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.197874437 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958109977 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.684093259 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.957966494 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922344295 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.918115641 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913872593 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.457846698 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.037887299 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.56243901 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.961056355 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05117161 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.926314837 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.848361167 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.91744286 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918256588 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.914331542 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.870329803 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96607269 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.699455106 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309591403 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165703262 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.608055271 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931297794 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.816540625 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.976273998 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.935818054 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.831292165 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930510272 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.955498145 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92610752 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.92684161 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.699179909 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.61376583 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475757902 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231396351 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22727126 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36435348 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.529700115 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.224451245 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261020297 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149035818 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.443484047 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976863701 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267311015 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859167481 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996517762 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.560921176 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258147074 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931071893 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145283671 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311802397 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.740886878 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085318288 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.128236532 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951538504 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.915200803 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.876172784 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.11479138 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05988485 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.724125524 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114662871 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255329173 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.680824391 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.00017501 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.916013126 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.656022523 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004773077 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.630054513 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.279875575 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.594259144 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.952108202 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39960661 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.914310217 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.363145041 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27508403 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352354439 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.043257138 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851521991 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.929362581 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.928779301 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.916315315 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.916041061 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.785632865 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.168519674 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929091067 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152139517 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291090811 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222274214 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.825479137 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.922790776 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917763165 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226253953 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.812077224 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091269538 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.459185252 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.451876061 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922001276 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852479159 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852705151 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.611086226 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924319203 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.896269238 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140207057 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.108921045 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.875513622 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.510646182 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169336848 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.172228083 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.931820589 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.19864115 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194977454 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.654401882 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947891631 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.019688633 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.672041132 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.024006128 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.188214268 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154902785 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.720904779 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144607072 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.017583502 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.731493596 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.917975647 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134094785 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.189199262 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.965658721 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150203377 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.641541065 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.932125914 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24122118 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981781599 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.941099317 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.073906382 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.115317776 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930639607 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005074487 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930771062 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.931814324 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.932111524 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968729015 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.937856187 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.042175169 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.935711955 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00845199 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.048461516 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.453440898 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.928257116 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206380345 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284225259 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257984881 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985600608 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924421062 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923330717 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857043869 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051637839 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.378820574 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192008234 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.050774564 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.215949903 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94506436 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.696030895 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402304276 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164628163 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193546081 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.822814503 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921428102 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.001114474 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.196873987 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931912558 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.131497447 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157815036 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247831047 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394760409 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.261781877 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.293761337 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194020227 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.29145615 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920870972 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.42580829 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.043433409 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.655379185 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.959016815 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.946818341 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195896061 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931800973 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306673318 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.938842508 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.12212365 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.438815401 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.720496324 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.21752326 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.916780773 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.985059838 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205136117 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325373412 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233277014 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993258902 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932631465 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.626173281 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057542841 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.793329249 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.188018233 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.922642814 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138588065 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.6294778 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.929664551 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209366329 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235386139 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.92006722 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.803768795 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925946071 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.929622098 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.145246246 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192667169 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.17808328 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932229254 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.92832788 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.736686484 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20718376 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991314015 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85397447 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.920965193 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021291149 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.172512752 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938970294 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.440419381 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.630176122 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24293713 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.844961919 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940006979 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.528453699 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.296134952 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25688565 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.469461202 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160688182 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.482069084 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.919885465 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214230904 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.925437352 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.500998587 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225331479 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.923891109 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.600964259 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959381973 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.201942257 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246894226 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.926665752 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886733841 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.887997197 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147026353 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.520731114 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862952398 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.924161307 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.983001985 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.916099961 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.048017588 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927685659 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.804290006 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920478616 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.740432086 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410966356 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.920144056 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.906578953 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.771212639 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.638233141 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951930548 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065680484 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917660248 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.645965673 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.214601425 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174756146 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.603015161 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.925497683 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.925569347 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923198572 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84842356 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.115440395 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.303461305 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232439419 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.443815839 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.954600704 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926483523 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.136967142 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133869639 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.993180931 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065364351 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477075207 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962558398 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.692448947 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.600624157 seconds)
  done (took 1712.682656018 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.931643654 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.934078986 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.932931152 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.95829099 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.921039116 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.966062742 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.965699849 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939230967 seconds)
  done (took 57.389029114 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.927894476 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.119716137 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.936727828 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.925474095 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.92975312 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.926134255 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.097436595 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.933668026 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.930670139 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.936296814 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.92538579 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.920012456 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.239202803 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.943640853 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.927792084 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.912443066 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.929265912 seconds)
  done (took 75.311577429 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.927122336 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.143651258 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.968699095 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.954879372 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.874127177 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.934912128 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.931035903 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.949142189 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.926299766 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.147808864 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.264091962 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.947770828 seconds)
  done (took 90.817394366 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.936789339 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.933581741 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.935502465 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.932568767 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.932342205 seconds)
  done (took 11.522228334 seconds)
done (took 2227.773625639 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.174340409 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.1599715 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.157482701 seconds)
  done (took 6.166242782 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.072083666 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.12360402 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.282494713 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.257157897 seconds)
  done (took 10.584225988 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.218580869 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.314752017 seconds)
  done (took 6.377097788 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.331965132 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.918631091 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.317828577 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.926883973 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.922280825 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.92438724 seconds)
  done (took 22.621864989 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.936145209 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.931135449 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.928851262 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.929390413 seconds)
  done (took 9.572297714 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.912772107 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.645916447 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.91529123 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.924916723 seconds)
  done (took 21.245141021 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.675918975 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.326588626 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.673413535 seconds)
  done (took 9.520258759 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.549079458 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.152081265 seconds)
  done (took 9.546472382 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.186744329 seconds)
  done (took 4.038473273 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.964521158 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.20864742 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.49020018 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.506614415 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.582467885 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.135678207 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.306314188 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.197342345 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.353386324 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.413767682 seconds)
  done (took 26.012497074 seconds)
done (took 141.275351385 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.473595139 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.316156085 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.145171418 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.314910857 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.160304233 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.145434761 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.132408182 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.299994599 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.793199871 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.80145247 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.332011933 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.1608472 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.083925709 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.320882444 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.096959968 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.9402893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.169073286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.364348171 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.991691602 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.191935623 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.148529304 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.921539312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.183616008 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.936297544 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.16507924 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.096647475 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.496943451 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.946880798 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.142361758 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.510711238 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.097340782 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.342988433 seconds)
  done (took 171.07917063 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.691423258 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.935135632 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.930966705 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.931933211 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.339413958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.932952285 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.934148381 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.938656991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.940735896 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.908684861 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.932049638 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.289175724 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.932701691 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.93376757 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.932411133 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.931896974 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.121389555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.732179873 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.936994564 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.939399749 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.940009206 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.146084935 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.942009094 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.192530251 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.11267259 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.946349301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.888418322 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.946621674 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.930729141 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.898036137 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.940234007 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.934605281 seconds)
  done (took 208.84387117 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.935629215 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.932631479 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.929611323 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.932756566 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.931931418 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.93595493 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932457698 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.94075284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.603477417 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.595866444 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.939812481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.937090572 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.940777022 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.936818748 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.934107788 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.932541867 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.940072914 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.943391345 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.938431874 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.943262449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.949901553 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.883569191 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.945234425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.875725917 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.937216272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.941557343 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.938124721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.945297367 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.949469154 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.951655467 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.947323655 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.935265129 seconds)
  done (took 223.12245511 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.145619239 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.94523347 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.945535697 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.888554679 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.945105345 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.945786762 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.90604102 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.143903339 seconds)
  done (took 19.744348135 seconds)
done (took 624.660654308 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.393256052 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.250990509 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.12393242 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.967543685 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.194398606 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.006771501 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.966199235 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.036471031 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.698419499 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.033950403 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.667816377 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.986384713 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.754313996 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.989813354 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.094282293 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.022835417 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.566245203 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.661035746 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.149152382 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.031438498 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.139278957 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.940220044 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.044025796 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.73109115 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.767521979 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.982569241 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.147456396 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.566177286 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.971879282 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.134204912 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.692533272 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.391417276 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.975605923 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.966275165 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.023538637 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.000467939 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.332447161 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.975582385 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.086309012 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.743554556 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.015712876 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.576512356 seconds)
  done (took 106.658397489 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.939218521 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.936737247 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.935513297 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.935406994 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.937487885 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.934450448 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.934103028 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.934320295 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.935146632 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.934505098 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.937029654 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.93863025 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.936523427 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.936523155 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.937715789 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.938071121 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.937344923 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.941639458 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.937055341 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.937222049 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.93751537 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.936447729 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.949917373 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.935910094 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.938221822 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.937333589 seconds)
  done (took 52.24454218 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.951561272 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.100426272 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.212475179 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.96886742 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.950590621 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.951543171 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.968532862 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.95511571 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.951693245 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.952752653 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.047423956 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.954133814 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.968703083 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.214710565 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.962483555 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.950332635 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.949877155 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.94838149 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.108098189 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.961550127 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.967215849 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.952628266 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.969285995 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.959421499 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.950716115 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.949782002 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.954712613 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.425541691 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.955508797 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.041584118 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.003316608 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.970158826 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.367980867 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.225031541 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.00052154 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.952896956 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.949437366 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.044230792 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.94974908 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.951015737 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.967275076 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.950353562 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.212086073 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.457966776 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.961383683 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.952514586 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.440455884 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.052673286 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.991284157 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.95655687 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.215567955 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.964753968 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.953795738 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.948308216 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.986729711 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.955463555 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.95093325 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.272419422 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.960883495 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.970792868 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.954137741 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.950996469 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.116134713 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.955584288 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.10292077 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.955608794 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.958641166 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.951666189 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.213982711 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.965626259 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.465742867 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.962979837 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.952946522 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.04593695 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.105343112 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.462083429 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.962449738 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.117430837 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.384794592 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.974283579 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.956448759 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.415774917 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.976980664 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.954568499 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.954555249 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.955033128 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.959035338 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.997452695 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.96796957 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.382199624 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.466381566 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.288317766 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.977292906 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.966293867 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.953146438 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.272967222 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.958574743 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.951469936 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.206705592 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.476849502 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.965816968 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.9610009 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.449626059 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.965495462 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.973376423 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.958547382 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.22178226 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.967521696 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.003199963 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.953238725 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.961404736 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.954314347 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.970120683 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.95736851 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.953315462 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.441351938 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.061969623 seconds)
  done (took 241.87797694 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.94743184 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.94280906 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.947754913 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.945149339 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.94548137 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.952019127 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.946653545 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.94836409 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.955313672 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.946419441 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.946171491 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.945822166 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.950026319 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.951118216 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.994682566 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.95387709 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.560431526 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.949166575 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.949630183 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.952896695 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.598414226 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.952414379 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.947229265 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.958751876 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.949916855 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.952693524 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.957800919 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.987458363 seconds)
  done (took 169.805183043 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.956401242 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.072494265 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.97111653 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.984168764 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.960246534 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.954222955 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.980385575 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.973298871 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.959292842 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.952054002 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.954763556 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.017024745 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.966159711 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.056591169 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.981983586 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.986297172 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.057523891 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.96157233 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.955762485 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.954478071 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.986489417 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.946611429 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.022208283 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.080832916 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.975803048 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.073097805 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.959573652 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.962372228 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.958233397 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.078330117 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.969514383 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.020469313 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.983474652 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.975400647 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.081077703 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.071557139 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.060116106 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.984042457 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.95797402 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.958403693 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.957790776 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.947345773 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.077512928 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.976954529 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.959166062 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.066533837 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.972935053 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.963734542 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.968357911 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.958068971 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.972341155 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.977836874 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.027081116 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.085075377 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.989498645 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.982211204 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.983136019 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.241427763 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.969973471 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.059604826 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.946990443 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.078081551 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.981283911 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.944902195 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.957083094 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.963777313 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.987714644 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.985067315 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.061018915 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.960449599 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.061894722 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.989199303 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.962279109 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.957404734 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.961045709 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.075924564 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.073196699 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.99069313 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.992010644 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.983815032 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.951857324 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.959969746 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.952723507 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.979192484 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.958697082 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.080499041 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.076040465 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.965219093 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.963857016 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.963122439 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.963267812 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.985867087 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.08679415 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.990783133 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.053548255 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.020821881 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.028548792 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.97300024 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.973061577 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.962508392 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.023843343 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.969105034 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.972833053 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.300062109 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.03083352 seconds)
  done (took 211.870858784 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.415510629 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.016392725 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.019875962 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.285386535 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.381648933 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.823276858 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.005580595 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.00847067 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.03392435 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.191118628 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.082507978 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.031215389 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.991113782 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.981109327 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.01279021 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.034377057 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.025909147 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.316747693 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.130170849 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.13257536 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.984221465 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.299743878 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.325418538 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.407404359 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.04180406 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.337303136 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.694464178 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.147330272 seconds)
  done (took 64.038354576 seconds)
done (took 848.353704307 seconds)
SAVING RESULT...
DONE!
