cset: moving following pidspec: 8067
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.40376107 seconds)
loading group "string"... done (took 0.583746353 seconds)
loading group "linalg"... done (took 7.711740383 seconds)
loading group "parallel"... done (took 0.176538436 seconds)
loading group "find"... done (took 1.17467808 seconds)
loading group "tuple"... done (took 1.931414937 seconds)
loading group "dates"... done (took 1.2709086 seconds)
loading group "micro"... done (took 0.242258171 seconds)
loading group "io"... done (took 0.956570425 seconds)
loading group "scalar"... done (took 38.56720316 seconds)
loading group "sparse"... done (took 11.906746884 seconds)
loading group "broadcast"... done (took 0.958647844 seconds)
loading group "union"... done (took 12.548126879 seconds)
loading group "simd"... done (took 4.547848099 seconds)
loading group "random"... done (took 9.314607268 seconds)
loading group "problem"... done (took 1.692615118 seconds)
loading group "array"... done (took 21.39732206 seconds)
loading group "misc"... done (took 1.704858744 seconds)
loading group "sort"... done (took 3.371207738 seconds)
loading group "collection"... done (took 18.272752196 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.558659873 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132925841 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.127244515 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128309213 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.157497827 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.121357095 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.133942299 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.094193058 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.905062748 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156490398 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.126189035 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.444716801 seconds)
done (took 5.64518315 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.18020842 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090448755 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094090714 seconds)
  done (took 1.382692794 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.072526833 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130229582 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074133221 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074405704 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.07408565 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.075933622 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072711795 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.073105705 seconds)
  done (took 1.77368266 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.080025341 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.076135357 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.073927201 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074963516 seconds)
  done (took 1.504912152 seconds)
done (took 6.124797198 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.807490246 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.22160365 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.195682386 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.424966803 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.139041398 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.165412021 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642373026 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.334599048 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197265516 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.087595303 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117376868 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.340316073 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.115651253 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.648241766 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081462375 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097713581 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143595322 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.429014105 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076061326 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088598144 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09536993 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.135452291 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093832645 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080779768 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153480613 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073997773 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144746 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087288884 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.073100422 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.222391705 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.179498804 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657630247 seconds)
  done (took 10.589622857 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103551228 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105222384 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076379548 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129561789 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10291223 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076698337 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077754053 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074798318 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094288447 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134518608 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095755526 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109389056 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072174774 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.075392614 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.09267872 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212270394 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.090591241 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.090507373 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.077138167 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0827057 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112112959 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085566228 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085900512 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083596357 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13570046 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186793561 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102417817 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103964568 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073637395 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086178568 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122157239 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131608795 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072013945 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.072445177 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130908928 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.100811244 seconds)
  done (took 4.895998858 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.008642887 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15231828 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097600301 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142738004 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.071738229 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0921937 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.116671756 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.07268494 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088389393 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.218785935 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.414468243 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.073246994 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.629448244 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.098352875 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118045258 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113301631 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074832036 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076145416 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073999193 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.570633556 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104226825 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11506317 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090090952 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078303115 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.076579633 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361829919 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075423313 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.070983563 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075686724 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06436167 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.134094461 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075126908 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.978368511 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.165792064 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073398286 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107657558 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.307451584 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099448359 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.151491356 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07581717 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.071293033 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161660625 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077955165 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074706901 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090743812 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110451072 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122499835 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.072596373 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07305513 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170155889 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.071037245 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086567303 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.112718411 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.159160806 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.083404073 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071992896 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.267467391 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096091473 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07673826 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071245707 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.185821182 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137089307 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.074521287 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076487858 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074730632 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076108978 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366906559 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.072994455 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.886832775 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078370634 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085952534 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0767686 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075392023 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080119812 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078979898 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094219559 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.072853938 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082293386 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07260133 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073330001 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.074215862 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.071636028 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.090264584 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.394116251 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074089308 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074663594 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.175045089 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096571741 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104413198 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073609481 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.072943978 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106386836 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074481964 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073000533 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115156483 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073809406 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090659497 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.076344435 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.119957831 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.076226684 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.09963696 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072212165 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.107701889 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076405455 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10551484 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.087677737 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074720802 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.436002362 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071951231 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075250991 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075361113 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.072854037 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07465802 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073104622 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08640283 seconds)
  done (took 22.591357805 seconds)
done (took 40.285336231 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.262326757 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081448996 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080999252 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081502699 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08169296 seconds)
  done (took 1.882446286 seconds)
done (took 3.159680803 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.130993545 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107740959 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070675321 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103754135 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071667692 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110108905 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108845236 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.088359855 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107671599 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071263936 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105187385 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071180865 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071015854 seconds)
  done (took 2.507876189 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091247947 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094486322 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07716337 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090624202 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070913931 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089859261 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089946341 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095902522 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088456863 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079323545 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070537496 seconds)
  done (took 2.201509533 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089921979 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091558331 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076270633 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089561132 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069975734 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089015015 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089133526 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093311138 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088857795 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080747816 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070559924 seconds)
  done (took 2.186326784 seconds)
done (took 8.153133372 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.085282553 seconds)
  done (took 1.337068409 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.608061459 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.190929155 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.089628675 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.119581432 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199522986 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.127573545 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.286729798 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.094658332 seconds)
  done (took 9.152839171 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097754723 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076445606 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075095314 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075694157 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089808091 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075852895 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077666418 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079286858 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07771068 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080136186 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076262817 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078359344 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078230398 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.077722145 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075527017 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07529893 seconds)
  done (took 2.59179452 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099292208 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098127689 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07981414 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.081798827 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079293074 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079040343 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.08093964 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080526953 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077780337 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.078778917 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.081504653 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080226483 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07891498 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.071398257 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.080473159 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082868 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.077508045 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081511868 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.080934711 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08255483 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.081003174 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.071172742 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.078291957 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.080648036 seconds)
  done (took 3.305454071 seconds)
done (took 17.648579113 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.121767213 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078155879 seconds)
  done (took 1.460100001 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.087948527 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.090125538 seconds)
  done (took 1.445689481 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.089947052 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.07266812 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.097584125 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.085159063 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.073082918 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.072201026 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.095325677 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.072896968 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.072441369 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.072764406 seconds)
  done (took 2.071924665 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.074778573 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.083966883 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.078169935 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.088002214 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.080637609 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.070845022 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078776231 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.074234555 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084402742 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069073981 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.078412923 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.089650974 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.078252064 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091739945 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.078866224 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075007144 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.077810796 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.073846744 seconds)
  done (took 2.696668962 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.072365887 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.073501782 seconds)
  done (took 1.419506276 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.073807169 seconds)
    (2/7) benchmarking "second"...
    done (took 0.071416584 seconds)
    (3/7) benchmarking "month"...
    done (took 0.073506921 seconds)
    (4/7) benchmarking "year"...
    done (took 0.074123305 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.069992666 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06914157 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07075855 seconds)
  done (took 1.773059361 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395550439 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120478609 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.323896294 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077866273 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088847723 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.267002853 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.072397831 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.077475936 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078153408 seconds)
  done (took 2.816720448 seconds)
done (took 14.959474055 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.087263313 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.093120381 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.10329583 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.386118319 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.098313516 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072682643 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.120908412 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.196618904 seconds)
done (took 2.441783793 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.221484872 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.655598549 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.418129159 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213132922 seconds)
  done (took 2.558948324 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355312884 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095440585 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065826319 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073905306 seconds)
  done (took 1.873794076 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072789874 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075833406 seconds)
  done (took 1.433001484 seconds)
done (took 7.364106918 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073594593 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073421166 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090518804 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.07001436 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.072745532 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.072654822 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.069747005 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069930958 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.07245523 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.072459984 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.072404542 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070103058 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.072705464 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.072757505 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072147257 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069718491 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069900378 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072642654 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069757844 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070202139 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069654144 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072652976 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070564732 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069844804 seconds)
  done (took 3.053181601 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.091942844 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.072500901 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.078060402 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.077792024 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.075871193 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.077405785 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.078048645 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.072424824 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.077836081 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.074536134 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075123058 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075500358 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.074403561 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.076222953 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074538274 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.076083974 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.077799072 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072436941 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075093141 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.075670055 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.077265103 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.187330199 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07567453 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077350305 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07521289 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075640339 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.074604789 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.072517518 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077587569 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.075566186 seconds)
  done (took 3.692337725 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.0758857 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.069967509 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.070251 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076252423 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.069736228 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.070799004 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.069629774 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.069706919 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.070577674 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.069745631 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.070848961 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.069598605 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.069465284 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.070604348 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.070631328 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074125142 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086049221 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071030053 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.069799912 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.070839126 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.073288473 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069833198 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.069487526 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.069810785 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.069961282 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.069748284 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.070137059 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.069719765 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.070189658 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.069405954 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072863989 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.07354223 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.070203306 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.077137018 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.073326336 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.069620908 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.074007068 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.069474034 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.070769546 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.069283265 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.070600676 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072612723 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.069262375 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.077421472 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.069616772 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.07134963 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.070104764 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.070896944 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.070253066 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.072108777 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.069396785 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.069714717 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.072075351 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.071076636 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.074275982 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.069624243 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.070650001 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.069520457 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.071167021 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.070227913 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.069501814 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.069852791 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.072710015 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.070648179 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085428867 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076973342 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.070217949 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071822653 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.070387747 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.073430681 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.071693113 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.083694924 seconds)
  done (took 6.462378992 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098647137 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093953267 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072120638 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071663922 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069792246 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070769665 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076155562 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070048245 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071273929 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088259824 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069998485 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071543977 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071642967 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074198654 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070583245 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072098799 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078684321 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067811528 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.069961581 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07342086 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070727115 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076271876 seconds)
  done (took 2.953754051 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.164875316 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077550279 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112616062 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082191345 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076127617 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081622048 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076291678 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076221203 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077409871 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073710164 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074073242 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076287705 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07688489 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074566682 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074247686 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074502077 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076516822 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074425013 seconds)
  done (took 2.797810772 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.083613854 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.072663956 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093015347 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072074557 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.072107667 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074718726 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076477905 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080595395 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075853599 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.072803097 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.080764992 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075287674 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.074858647 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072783669 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074675286 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071710028 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.074620387 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072350314 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080773982 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077190473 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076708839 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080354032 seconds)
  done (took 2.98420757 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086024425 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074908961 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087714674 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.075223427 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068658663 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071593816 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.076768836 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.072805694 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07696776 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073750762 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072005219 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070168812 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074923082 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072171721 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074922522 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071692154 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074010405 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071877006 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073889953 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068290454 seconds)
  done (took 2.788718964 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092189917 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074292551 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074683693 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081754848 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074141512 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074221548 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081629306 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074520835 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074277851 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095652504 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074474478 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074424159 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081381709 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079308685 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074068332 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081698107 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081666559 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082039044 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074241112 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074369773 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095761762 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074673624 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081363887 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07423626 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073767695 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074170289 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074693329 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078576403 seconds)
  done (took 3.50361154 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07298612 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072527872 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069702915 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.070800454 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.070410888 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069538418 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069899913 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069799955 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072978214 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070139447 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.075107469 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.072608676 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073035248 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.072395396 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073080035 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073812374 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072423601 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.070526813 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070403732 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070239107 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.072878589 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072858348 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.072832144 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070092439 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070438806 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.074070675 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070961277 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070971618 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072429779 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070620269 seconds)
  done (took 3.4558822 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082691763 seconds)
    (2/2) benchmarking "in"...
    done (took 0.080111665 seconds)
  done (took 1.468677348 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.069689063 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087120632 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.070587759 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077532494 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076633398 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073570186 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080429067 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076146053 seconds)
  done (took 1.913821672 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.088984924 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.084203385 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.07434092 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.086710462 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.083976428 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.090570706 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142482478 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073921126 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.079635264 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071617707 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087762611 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073138437 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.079481502 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073531542 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.079562868 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080679563 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.070994493 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.079489582 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.075443543 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.071481237 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074481147 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081882702 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075899682 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068733003 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075156004 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09642909 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08498166 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072564681 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07668426 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.080441432 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.079525846 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.067772304 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.07283295 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073416437 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.070441873 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.08307632 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089057217 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076467987 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082008243 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074245455 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082924396 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.068491311 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.077812514 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080043352 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083530352 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.073440531 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073764388 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06833422 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.071167925 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.078112376 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068940918 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073653352 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.067883136 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080562669 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.076550713 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08476927 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071986008 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.074649648 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076616183 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07710829 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08076115 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07631126 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076157879 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.073380508 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083360887 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.078320117 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081561673 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.067854219 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.066780557 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.0711225 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083128741 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096077302 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.079200427 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.073798984 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073684262 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.070488544 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076461448 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073572919 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07894449 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.079295295 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.072981127 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079247627 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080543782 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073485721 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076059412 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.081400262 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.071815961 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.076799645 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.07085108 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090259122 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.072360058 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.070765922 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071308425 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083801499 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.076120346 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.07226893 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.070907435 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080161133 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.066584242 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.073503302 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074425746 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073537578 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.083744305 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077313532 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076710471 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.080394194 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.0792539 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071921468 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.074818705 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.196715358 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075463863 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.073206592 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.081743213 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.067345577 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077109813 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.074333244 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.075105025 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.082607541 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.072702345 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.073911675 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084456333 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.080823825 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.072571576 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070874048 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.076610549 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.073201751 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076412873 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.081494766 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.07218567 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.068023 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.068354071 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.077561642 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.073665197 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.077577093 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078785326 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076855041 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.068203258 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.071007592 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.078280532 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.082975274 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074075937 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.074127794 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080159813 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.074817371 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.072558851 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080913579 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07580251 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073632395 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.080043138 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07400733 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.068574543 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077044632 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076122535 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.072404185 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.077043477 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076873946 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07585388 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.074733929 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072493648 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.080245282 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074269811 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071944174 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073510838 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.071943343 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084033674 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075580051 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068021532 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07062027 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.081115174 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.071452588 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.072505475 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.072119068 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.075747163 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073805217 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.071084105 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.07221609 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.075228477 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084356467 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.078337531 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073973893 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.078259514 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084604562 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072472578 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.075945622 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072657468 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073984969 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.073357367 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08183717 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07937748 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.077686867 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076328433 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07024149 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07863402 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082012806 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.07225271 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.072045839 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.072829924 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.077418356 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.079664545 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.077407325 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.073336121 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07144905 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074504834 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076505541 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.075626375 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.073318603 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.072829679 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.078866831 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.071833067 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.079765993 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073397348 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083016259 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075999754 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.067177943 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075842253 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071857387 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079240692 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067183448 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.070075775 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.071662851 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072739607 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.071440191 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07455741 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.197166224 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081561435 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081881365 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07512812 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.073168902 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074040814 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080904509 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.075955727 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077524644 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.077518939 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.080500954 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084782004 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07273062 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.077311744 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.083957081 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.074324045 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.066832677 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079473149 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.072043455 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.072272908 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.072733405 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071231568 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077036296 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082146725 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080185546 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06710216 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.076155776 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.071838549 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.072690681 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06788628 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.078052816 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.077129861 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07430076 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081047214 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073542585 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.074037695 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077616427 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.073079965 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.073681767 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.075641911 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076683454 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.074071783 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.074728642 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073013818 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.076786469 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073672145 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.070830908 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.075600485 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.072608728 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.076701865 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078900909 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.07335473 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074077497 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.075171467 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.074427647 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074341527 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.073145869 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.072693931 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076732119 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074879124 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.073493275 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07553908 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.068077521 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080231383 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.071812421 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08163084 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.073598978 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.069931251 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07927779 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07583202 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07862746 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.074364791 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.074153235 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.074976955 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.072981792 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076141764 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080285487 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070588831 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084101315 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082060757 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073992278 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.075887927 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.073454124 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.074985115 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071736638 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.073884326 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.07400389 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.073315434 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.073764449 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.078399501 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.075628696 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.0739108 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075040281 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.075103305 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.073858005 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.074790507 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.0675685 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.0727663 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.072494211 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.073082664 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082897845 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.073389651 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.07286766 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.072603965 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073431914 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.072173464 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.069818711 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.080494936 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081679117 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.073297748 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079674215 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.07212422 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.073807466 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082650385 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066279323 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.204529063 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.07246283 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.072358114 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081978642 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.074876422 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.083624816 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.074495224 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072969698 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.070996006 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.075047921 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.072450556 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.067397488 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.071775495 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07728054 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.072980108 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073306523 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.074065947 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.076790417 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074233572 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083026698 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.072743591 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.074933192 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.074437839 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.070101065 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.073399503 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.073071512 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.076875969 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.074285165 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.071742347 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.070554526 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.074463383 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.073973682 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.075862638 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.073781716 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075698685 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081353456 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073275368 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07603996 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07609252 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.067919113 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.076406788 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.072579958 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.073664099 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.072802869 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077049514 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077443157 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075108166 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.082686653 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.073720104 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07379304 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074080745 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.071281786 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.072970138 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.07285959 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.073638567 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.072589327 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.075158981 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081542934 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.070281397 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.076968435 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073202853 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.073281056 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080396563 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.074399831 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.075870035 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080293033 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.073264075 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075179635 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08113666 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.078260795 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076533053 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073659386 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075716109 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078938077 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.072347719 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07975194 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.074985892 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.073680399 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.0752888 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070919762 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072925619 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.07267116 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073158119 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.079271233 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07430888 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.074999075 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.072048935 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.070553367 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.074135025 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075851084 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080711266 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.075298316 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076592602 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.068824667 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.07001039 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074350743 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070975909 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075764036 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076057382 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079898334 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.075632334 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.073939343 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.072709118 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082312008 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078885163 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.077265286 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.070904028 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.076716863 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.073728901 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075510609 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.074506651 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073522219 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074150839 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.076929777 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074170185 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.071393223 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079258352 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.075323826 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.206893789 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.076438101 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.0752199 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.074228501 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.068445878 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.074767684 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07604559 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079114921 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07576171 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073736754 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084608829 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072098746 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.073846038 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077220214 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072212737 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07856338 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.069265479 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.075061487 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07433619 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074415776 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.068937608 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073074589 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.071202711 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07642396 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.073369961 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.068176816 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084296542 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083408124 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.076905987 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072215159 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071504912 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0683734 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068021142 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.072941819 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074892961 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.077006033 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.083531498 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.073263294 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.073005173 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.0684095 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073341652 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076856313 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077307401 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.070731803 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06807992 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.072869946 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077595696 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079187775 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072251973 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.073355625 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077259307 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.075388349 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.072012595 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076516918 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.070297453 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077165036 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085892821 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.073699977 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074262743 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.080116006 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081215748 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073187131 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.068629321 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073830152 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.076496394 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074443965 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074834179 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074479097 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088006478 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077126708 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.072862943 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072056199 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.075680408 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.072309047 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.082044764 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074094792 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.073820602 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.077871636 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074795993 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081686896 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076090861 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080778015 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.077609368 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.076683718 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.07230774 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073892215 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.071616856 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.072900378 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.074216404 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.073415934 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078507251 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.081748137 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.072964637 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084355698 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.082613131 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.075423989 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.070149315 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.072390807 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.072903346 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.068316952 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.073726102 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.071407994 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.071098203 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.071093655 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.071973392 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.074276448 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077862868 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.073519629 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.073276959 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.073525005 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.066675595 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075591557 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.074908721 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073074587 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06886447 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072577589 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.207657548 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.078718466 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.080191233 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071560463 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.075422265 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.075900481 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075129715 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06842023 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.079866079 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072583501 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.075854967 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.073553352 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073667721 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.073970133 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077275017 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.079529539 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074494518 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076014776 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077841231 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076682866 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.071277255 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.070478849 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.079500417 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.071046077 seconds)
  done (took 46.962643492 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107741396 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06960916 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06837619 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068326104 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080619233 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068920048 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06782856 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068953718 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069381917 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071045814 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068243555 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067662201 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076473565 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084433005 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079204442 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072657423 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067909201 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069664307 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067993698 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069013485 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077233483 seconds)
  done (took 2.928281905 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.080383531 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.08394784 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082360784 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088313849 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077419243 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076698158 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.08176291 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077128082 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084171369 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078719962 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084603016 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076695023 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.078632171 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.078514051 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079242654 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077108815 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084915045 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077348976 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.076526167 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081728149 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076869562 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081195142 seconds)
  done (took 3.141122129 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.073769014 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.072403684 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07464978 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066990102 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072278428 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.067291306 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.075420636 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.070127579 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075210979 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.071514489 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070874066 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.071487386 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.074584787 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067624236 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.072459306 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.069822478 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.114558045 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.075951493 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.071957501 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.073598745 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.067462373 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.074369024 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067584865 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.068088937 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071919837 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.076215549 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.072902428 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.070124681 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.072664217 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.071725925 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.072530755 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.069869658 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073694596 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072762484 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072699603 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.071673552 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.071984404 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072116509 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.067460521 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.070385816 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073224048 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.068304549 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073207145 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.074573697 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.070589255 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.069682596 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.074492714 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.072750486 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06766391 seconds)
  done (took 4.937096858 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085872797 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.116264284 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.074584332 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095774121 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086692367 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078922736 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.076265555 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096493538 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.069537325 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.071033516 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088761534 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08542916 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.07163379 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07669202 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.079074593 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072301238 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073207074 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.072576572 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.076428369 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071163332 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075852499 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.078426948 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08638822 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084517786 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076114432 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.07161684 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071147734 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076492487 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.0847129 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07633671 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07654663 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0780632 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087336482 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.077432185 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071420634 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074407266 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088144144 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.074583613 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.074073324 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.069853064 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.074201501 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.076031743 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.079744945 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088085278 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072215447 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.076803212 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071867363 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.069671723 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.08492926 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.074913686 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079754979 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085681102 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075852676 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072490633 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076433115 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.086500234 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.071842032 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.070376509 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.074771958 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.083857234 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06996567 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076311723 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085371609 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.07443963 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.079767719 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085631595 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.077511186 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075970693 seconds)
  done (took 6.862389739 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08262435 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101655259 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090619902 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090839917 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083287464 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.082453534 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090518717 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.081674898 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082042674 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086973808 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082303829 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122481829 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.077630012 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084526897 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082258179 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082598906 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.082282388 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082209141 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083014553 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0821213 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.082587321 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089264047 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082970291 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090301325 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086783483 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078143079 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082415905 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082929426 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089960748 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08216452 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087258983 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.081953199 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082421925 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.090034661 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087212445 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082172052 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072053537 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082078911 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.082579028 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082426305 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077942994 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090100221 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082287087 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07804885 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082479504 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08256191 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089870984 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086553385 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084570973 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086672635 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.08210039 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090134769 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082061584 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082727684 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089937346 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.092945372 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089804588 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090584509 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0824649 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089983591 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089879666 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.093089224 seconds)
  done (took 6.713160535 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089867126 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081645004 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08856865 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.067665478 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070700366 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078255837 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070836697 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.070758496 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081544658 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.080849882 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083443193 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078421122 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081049575 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082943426 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078367852 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081197289 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078497375 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07844931 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080761405 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078221796 seconds)
  done (took 2.986686127 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.081131136 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090313336 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07382332 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078896833 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076190434 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078572202 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.074926843 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07564282 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07367207 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075974218 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.083406402 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082755774 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073617546 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078024504 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.083114386 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077953128 seconds)
  done (took 2.654581587 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.090844986 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.080493207 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.087091612 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.074029638 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.073413748 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.069837288 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.072404472 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.067616986 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.068817986 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084786993 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.072262921 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.082530259 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072332301 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.07114535 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.069010961 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078672633 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.069023035 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.069916113 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.072824134 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.085183532 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07843233 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071902727 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07595066 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.072679645 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07526239 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077853952 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.072137683 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.073315664 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.070243831 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.073530642 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.075542467 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076409465 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.07007516 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.071091039 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.071312333 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069857039 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072306531 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.073508284 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.077769203 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.072147072 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.070591331 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.074417145 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072937835 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.073408972 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.068534625 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.072878259 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.068761842 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075008824 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.069980801 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.074900795 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.072499704 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.074773727 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073287679 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079912296 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.074783585 seconds)
  done (took 5.478214177 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086428115 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075569225 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068331388 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071299978 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076197099 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.073474698 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075872606 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073382274 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073583071 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070119669 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073587665 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075494733 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073931615 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075968975 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074320031 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075818929 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068197801 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074021466 seconds)
  done (took 2.743453342 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077913162 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073407527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.079902576 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072624186 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.072304839 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075608484 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068300248 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.071734299 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071063023 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072742468 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072944285 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.075268715 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071187748 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.075403593 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07224186 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072890008 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.074872645 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071107243 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072767115 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069006071 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075424861 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071356671 seconds)
  done (took 3.011918915 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.101251954 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.090269469 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.148104315 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.085800989 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091224112 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.078201275 seconds)
  done (took 1.997371875 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098117118 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107882698 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073780509 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076985123 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082241855 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076847733 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076503325 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076884236 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084885945 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082928441 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076684358 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085513626 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084879647 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085029239 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082483897 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082408291 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076877823 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077095301 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072500368 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09121876 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077509119 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085489203 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077082883 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076795533 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07685246 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084457913 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085459425 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08287757 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076521892 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085391025 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082561284 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076896251 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085290132 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083193366 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075699655 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085369491 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076935671 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090877679 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082468812 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084307482 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.075612751 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082593095 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08554898 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081375325 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085692228 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077257607 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081602811 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07683286 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076726283 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093413959 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082891078 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084236138 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08279663 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085832738 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085172564 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093162337 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08324925 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084106348 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082199444 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083517484 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084538428 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083602389 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084552028 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083002153 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082597188 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084679547 seconds)
  done (took 6.854678672 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111588328 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073768269 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07763425 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083079579 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086930497 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077002718 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077144321 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076870161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076966606 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074145359 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115879351 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076937944 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084977116 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084506701 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07757561 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076625311 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077518433 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084834259 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073527087 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093103897 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076818341 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084893953 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084597844 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084582521 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082798699 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083617689 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077287805 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076405172 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077254738 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077365209 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08201835 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077857997 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08436186 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073841042 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08497711 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077262202 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076867444 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081315329 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077047574 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082087569 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0846004 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090717631 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077128589 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076867802 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083508658 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077154652 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076856069 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073514298 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076876859 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073439805 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08287088 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08321331 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082904161 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083994995 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076706458 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07683884 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076597856 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077161832 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0767357 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081924798 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08416436 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076270501 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093210447 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077691988 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077123641 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08469169 seconds)
  done (took 6.76876476 seconds)
done (took 140.402341285 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.190993394 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.170955682 seconds)
  done (took 1.760182882 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07574688 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106187477 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08400522 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13452569 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.073473597 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106614336 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.106134214 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084551908 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072783902 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073182595 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073150408 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075567957 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138240877 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.073056322 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072728872 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075496958 seconds)
  done (took 2.836095546 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107167908 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169898122 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109831031 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071336205 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105994328 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079625566 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072068468 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081819125 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077529342 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071986709 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079940086 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077404027 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071638965 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077552167 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077953137 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079450053 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072177681 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079507621 seconds)
  done (took 2.97933094 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106742118 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098477552 seconds)
  done (took 1.62355874 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.165416185 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.11241449 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.152705056 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.360295344 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169167804 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.156453061 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.152265403 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.154211744 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119950035 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.148252458 seconds)
  done (took 3.105123619 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107161052 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163662218 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278388849 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.125108697 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.079464417 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.101253288 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126596789 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084930023 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087652653 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08775433 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.087258177 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.083608286 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.107263257 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0801541 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.08152939 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.082666452 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.110913507 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.080369662 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.081195242 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.082904903 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10787022 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072639331 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080178313 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079877535 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084119054 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084219399 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072774523 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072090698 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.082591182 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080921336 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083117806 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09983268 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084306681 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.112956548 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.078180739 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.114501129 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.083884726 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.082546132 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.08141961 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.080231258 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.085329346 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08482985 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079898273 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.082964265 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072215295 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.084110637 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072626077 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.07235339 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084966481 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.074131222 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.084289814 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083653585 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.11340486 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073836629 seconds)
  done (took 6.421790734 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110588925 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.115208959 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077104639 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.119726861 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109483234 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079059992 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109597609 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102685095 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111972789 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076825661 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074834877 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077194316 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088964543 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.090074814 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.122434535 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.114194625 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080573847 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077693694 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113907576 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112788657 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075059873 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104045485 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098302005 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109889268 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.07432308 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077017078 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074595768 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076723859 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083620245 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085565886 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076562349 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.087268231 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.091384029 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085468018 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073533215 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074492662 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075222259 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.086526173 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086229599 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085738791 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.084429744 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074903637 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074778767 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.077443369 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077280782 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075034896 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.085621809 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.087201764 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.085376113 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075862546 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077257073 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075081115 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076415544 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086790065 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.08531662 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.088375306 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.087098199 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074997081 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074846973 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.079663646 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087592467 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086370696 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086715621 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076189907 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085619294 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075593938 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08710789 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091500991 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075352752 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076571564 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075508026 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075786225 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.077026287 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084439653 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.084786227 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076118351 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076688263 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075299593 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087078563 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085940778 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075230042 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083532477 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07407153 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075198652 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07626676 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076574342 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.084268266 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.087470598 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075988291 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074466663 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075826541 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076058205 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073863118 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.082844832 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.086406475 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.08502947 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.083958633 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075229057 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.21494583 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.086490519 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077531988 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.087819335 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076021213 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077794514 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077118515 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085960444 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.08414101 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087481264 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076787687 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.075940702 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08554897 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089067488 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075490142 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.086000619 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087233691 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.086622514 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.075537869 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088129572 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075111611 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.087455374 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076419205 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086193279 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076542605 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087449354 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076074214 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.075253771 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075910641 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.086779164 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078084054 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075363907 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076551422 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076723752 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.086765465 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.089932967 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079765656 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085861974 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.085247101 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077297184 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085618375 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075854788 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084823295 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07677384 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076859098 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07363014 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.089328082 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075301989 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075239185 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07538376 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08793303 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074682925 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087387957 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084776776 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074985036 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088483084 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086801168 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084293926 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086536864 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077353116 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075013211 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074494399 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075849744 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083808302 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.086770859 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076693215 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0751958 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084435013 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.086108064 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.074426012 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085090641 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084959367 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085235822 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075555311 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076165769 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08729942 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.088295718 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.0853421 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.084926599 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085222283 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.076017967 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084093498 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085806129 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075140505 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092364128 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075087502 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.090412169 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.085601704 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08368305 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085800835 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.087421207 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.086575423 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086600614 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.089434723 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074796634 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074385333 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.085032719 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074168716 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074938975 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.083269703 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.208652827 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.077527773 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.091544957 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.076767427 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.087355339 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.075335077 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.086751506 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075697642 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077303485 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091548607 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.076378115 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076940045 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.087442064 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077086183 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085447873 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088588228 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085081818 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075039763 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076793945 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.086862735 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08603918 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076093444 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074959045 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077076076 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.085610277 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.084237161 seconds)
  done (took 20.291932048 seconds)
done (took 40.441442794 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.220033437 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.160414709 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.190944472 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.125205004 seconds)
  done (took 2.212611263 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123955163 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108059132 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.099483905 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.071237492 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10754012 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.072180821 seconds)
  done (took 2.038179194 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.321225507 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219558572 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196117952 seconds)
  done (took 2.185854923 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209430602 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.202582143 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.435960757 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.272078473 seconds)
  done (took 2.680575527 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.151564653 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.095716507 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.0735801 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.090567217 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.141453736 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.168381732 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.107420162 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.134049408 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08511909 seconds)
  done (took 2.548550222 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.157434222 seconds)
done (took 13.276033552 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.247245444 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.249573122 seconds)
    (3/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.216549515 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.177693561 seconds)
    (5/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.101055262 seconds)
    (6/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.08808208 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086405974 seconds)
    (8/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.106686453 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.237919339 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.090114118 seconds)
    (11/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.165321289 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.180240517 seconds)
    (13/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.235089624 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.088099751 seconds)
    (15/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.181872567 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119886817 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.080430383 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.09484168 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105427626 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.110125752 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08982891 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.078606841 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.096588167 seconds)
    (24/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.161224573 seconds)
    (25/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118638235 seconds)
    (26/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076441136 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072069628 seconds)
    (28/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.210511269 seconds)
    (29/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.218860785 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.080163987 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.070375236 seconds)
    (32/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.079365248 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102716941 seconds)
    (34/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.083801343 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146870213 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117780781 seconds)
    (37/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.219701417 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.223686299 seconds)
    (39/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.084062239 seconds)
    (40/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157873023 seconds)
    (41/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.162316528 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.190563071 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.057062797 seconds)
    (44/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.155751058 seconds)
    (45/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.084230108 seconds)
    (46/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.186793666 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.072533882 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.16311646 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121258145 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.073753654 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.080093778 seconds)
    (52/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.070405836 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.16096208 seconds)
    (54/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.091581043 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092106334 seconds)
    (56/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.083490877 seconds)
    (57/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.081724883 seconds)
    (58/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.079400049 seconds)
    (59/309) benchmarking ("sort", Int8, false)...
    done (took 0.159009569 seconds)
    (60/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.081649685 seconds)
    (61/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.068625502 seconds)
    (62/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.109416253 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074010072 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077911426 seconds)
    (65/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.32006935 seconds)
    (66/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163414237 seconds)
    (67/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.123988606 seconds)
    (68/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072507883 seconds)
    (69/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.199231606 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.11150029 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071594946 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.220721813 seconds)
    (73/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.08302126 seconds)
    (74/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.058060153 seconds)
    (75/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067787347 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.071425407 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.18161706 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087675523 seconds)
    (79/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.103592664 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.243386438 seconds)
    (81/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.1714118 seconds)
    (82/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.058276376 seconds)
    (83/309) benchmarking ("sort", BigInt, false)...
    done (took 0.198265757 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.162140352 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.073723608 seconds)
    (86/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175434849 seconds)
    (87/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.109422157 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.097518783 seconds)
    (89/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073546255 seconds)
    (90/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07825726 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.097317986 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.079407699 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.072566119 seconds)
    (94/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.058991815 seconds)
    (95/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.193278063 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.193836843 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059654789 seconds)
    (98/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.088825146 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.097683299 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.191722567 seconds)
    (101/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.08020242 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.150901104 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.1009077 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.181333269 seconds)
    (105/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.122011663 seconds)
    (106/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.058982434 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.098608289 seconds)
    (108/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056971686 seconds)
    (109/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.116999752 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.182846117 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.081809658 seconds)
    (112/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078974803 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.057072433 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131673974 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.080087713 seconds)
    (116/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079350066 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.057290953 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.083500876 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097838652 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.152417497 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.057734682 seconds)
    (122/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.076134981 seconds)
    (123/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.100645795 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.128876869 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074772666 seconds)
    (126/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.079932726 seconds)
    (127/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.086277347 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.071529005 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.099694201 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.143731651 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.080658817 seconds)
    (132/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.189284687 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.079758449 seconds)
    (134/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.078172835 seconds)
    (135/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.056872951 seconds)
    (136/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.203984117 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.071875072 seconds)
    (138/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.223769259 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.078061191 seconds)
    (140/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.163082759 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120983124 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.078792115 seconds)
    (143/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.078735397 seconds)
    (144/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.123728868 seconds)
    (145/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.057799765 seconds)
    (146/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096173597 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.078434192 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05893145 seconds)
    (149/309) benchmarking ("sort", Float32, false)...
    done (took 0.138776495 seconds)
    (150/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.107394216 seconds)
    (151/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.083776965 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071883139 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079351983 seconds)
    (154/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.118680558 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094907185 seconds)
    (156/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.057061971 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075943504 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.057106711 seconds)
    (159/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.204973745 seconds)
    (160/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073900246 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.057354038 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.080649884 seconds)
    (163/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.17049193 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.057090788 seconds)
    (165/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.085038144 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.071711442 seconds)
    (167/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094774251 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.204029684 seconds)
    (169/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.082544989 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.104754006 seconds)
    (171/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.072594883 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123812546 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116499431 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.056874706 seconds)
    (175/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.058208071 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.077915639 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.097188698 seconds)
    (178/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.056646949 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05730668 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.228685535 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073732954 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.172950563 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08750508 seconds)
    (184/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.124093912 seconds)
    (185/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074381656 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.083269897 seconds)
    (187/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.057191242 seconds)
    (188/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202221783 seconds)
    (189/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073703467 seconds)
    (190/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.058534342 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.061058153 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078663659 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.081499188 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.156905957 seconds)
    (195/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.058672499 seconds)
    (196/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.070623719 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137727548 seconds)
    (198/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.058492293 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.096503441 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.083110896 seconds)
    (201/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.069440251 seconds)
    (202/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.163252118 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074153049 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.072892724 seconds)
    (205/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.097475211 seconds)
    (206/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.074698306 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070821123 seconds)
    (208/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.056921466 seconds)
    (209/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.115543375 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.096707555 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.154899526 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.096066696 seconds)
    (213/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.080856941 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.059385781 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.058861925 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.08214213 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.080217909 seconds)
    (218/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.059588656 seconds)
    (219/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079570896 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.078577693 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.058458997 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.101874528 seconds)
    (223/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093659333 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072286861 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099497408 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.078239128 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102811478 seconds)
    (228/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.119415971 seconds)
    (229/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079967356 seconds)
    (230/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.127306956 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.071147232 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09695585 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.072245901 seconds)
    (234/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.068025 seconds)
    (235/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07813499 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147692801 seconds)
    (237/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070900825 seconds)
    (238/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.058080527 seconds)
    (239/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069828276 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.075785295 seconds)
    (241/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074527039 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071622634 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07852743 seconds)
    (244/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.057801315 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.073821279 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.073328507 seconds)
    (247/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.057782427 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119229709 seconds)
    (249/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068332855 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.07234644 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083307533 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.058300159 seconds)
    (253/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080816578 seconds)
    (254/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074557628 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.093772368 seconds)
    (256/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084438135 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079564979 seconds)
    (258/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080015373 seconds)
    (259/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.075263225 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071378584 seconds)
    (261/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.058167603 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.058045119 seconds)
    (263/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.057253362 seconds)
    (264/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.117203507 seconds)
    (265/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.058533503 seconds)
    (266/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05828255 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078997705 seconds)
    (268/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058789374 seconds)
    (269/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07898503 seconds)
    (270/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058367032 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.071983651 seconds)
    (272/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.072263886 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.058117014 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.081100233 seconds)
    (275/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.069188184 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059394989 seconds)
    (277/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.057662055 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.184361148 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.071931688 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.134891096 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.098079174 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071754457 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.072063052 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.080251989 seconds)
    (285/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.059589794 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.070207214 seconds)
    (287/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.057313769 seconds)
    (288/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.080055584 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.070757559 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.09354002 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.079172078 seconds)
    (292/309) benchmarking ("sort", Float64, false)...
    done (took 0.137481151 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.190628893 seconds)
    (294/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.073223573 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.070858353 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.059529288 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078312624 seconds)
    (298/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.057943227 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.057293072 seconds)
    (300/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.058321189 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073358256 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.247086003 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080853848 seconds)
    (304/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082034887 seconds)
    (305/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.089201012 seconds)
    (306/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074923563 seconds)
    (307/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076151744 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.058868764 seconds)
    (309/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05896348 seconds)
  done (took 33.373815401 seconds)
done (took 34.837670018 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088906814 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100568165 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.081830408 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.100893464 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.087496547 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.083002418 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079345762 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.085351648 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08676778 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.088510708 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085289661 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.060536614 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.081594659 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.083785434 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081842278 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098287065 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085845089 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079847615 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.080333917 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070836952 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.080768368 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.072301594 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.074068611 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.060612446 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.085798688 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078375079 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079496458 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.081501714 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071918761 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.072417738 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.076059879 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080589632 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.072402108 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084955425 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079074733 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.0795718 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.081667327 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083155684 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.074119738 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.072020225 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080779094 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.072139249 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07961086 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.080935085 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.078356142 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.078253893 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.080075808 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08452991 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097910165 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074287577 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081668975 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.083073552 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082882337 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.079242817 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075930711 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.080127909 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077793121 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098539182 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.080682158 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073987268 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.081029709 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.081129038 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07794763 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079962892 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079766993 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081717189 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082043045 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077889353 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081415177 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07879697 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071544236 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.080246007 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075393029 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.072109991 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082438551 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.084059525 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.071090111 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077829169 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.080267693 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078170319 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071249828 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073762572 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073770577 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.078549512 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074099688 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060258117 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075971384 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078838269 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.071265446 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.080539832 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.079183747 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.079259765 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073378161 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.082406384 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.071306512 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077548958 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.072093296 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.072401364 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.073727695 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.076215632 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071919905 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07360364 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.080890605 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.073381309 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.078834004 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086078901 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.071478198 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07889664 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070606694 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070709283 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086444448 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.08162432 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.071765735 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073999409 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.070367363 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.079092852 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070956831 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.071845995 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070834197 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070353441 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.077017981 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.071010596 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.209318239 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.080974754 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.086140381 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072430821 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.075834328 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074059935 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.072524763 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078313988 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.072244463 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.073275631 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073882117 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068661977 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074060456 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.072596473 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.080687522 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074381084 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.080912809 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.073882007 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080809559 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.077272883 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077583361 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.078189533 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.071579029 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.065823433 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074396167 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07413357 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073932683 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.07260018 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.073502949 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.072071512 seconds)
done (took 13.503247807 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072581956 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148266218 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.104630301 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.103013733 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.093304386 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.073393267 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.08250726 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.108416121 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073847598 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.108985641 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.094426147 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.092409156 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.123422838 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.071071565 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.07257581 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.076234256 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073390228 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087908267 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.108603704 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.093381729 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.123128387 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.07215497 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.099662582 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.096023877 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09510177 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101342957 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.073334176 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.076056308 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075769856 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.108982577 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094448746 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075957749 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072802658 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.10573513 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101101479 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.091595165 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.073261237 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090620873 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.073067046 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.072528218 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.074181737 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10658561 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087326739 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087739378 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.076598024 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.076150748 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072965498 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.090968458 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.0973 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.086352253 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.092851672 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.108552569 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07567248 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.071845801 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070554641 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.094065998 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.071868397 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.075996088 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072849201 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075779091 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.072384873 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.0755811 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.087767407 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08837927 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.076996513 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086455715 seconds)
  done (took 7.311188979 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.091093448 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.101337262 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.090121576 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.090901167 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.072440596 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.073085941 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.073565369 seconds)
  done (took 2.149788351 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.073533021 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.095985671 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.096708023 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.096761857 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087943508 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.098091456 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082143378 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072703683 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098510046 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.07405953 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.094900482 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.107960441 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.076312845 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.086586946 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.097669657 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.073376649 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.097785189 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.07271239 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.076101991 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.097518464 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079100716 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101884168 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080190945 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.073425522 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.087185135 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072762608 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121229054 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077818585 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075065949 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.076440296 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074334681 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.114554944 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087747419 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081648372 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073479157 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088364674 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.087713274 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075585229 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085358955 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081783245 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087535183 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.073943847 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.074606514 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.074735237 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.077652373 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.084467477 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.074607782 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076760652 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075724206 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.093307237 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072496563 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087359543 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.076195599 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.079454665 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075507625 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080135 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083692586 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07393627 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.093379073 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075188809 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091487703 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089818343 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.088004703 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09005782 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075293183 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087250284 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.087473491 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075558453 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075261664 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.076890963 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089846575 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.07176916 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074513244 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.083910751 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075113076 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.097322157 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.096724755 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074960479 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.086926742 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073695245 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.073784487 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.073194775 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.096702729 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078474654 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072791441 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.077422016 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076477694 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.076292026 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073124528 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.079539404 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070894187 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.079054648 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075756273 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.076332553 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076234938 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.090374395 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.075327439 seconds)
  done (took 9.573218812 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075224169 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074595352 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.076118377 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.074176968 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.074524445 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.074618307 seconds)
  done (took 2.032648495 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100994447 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.0757085 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.087280743 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.078665072 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111248622 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.094414521 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.093755361 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08487751 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.090832619 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.085594672 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.09379297 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.0953493 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.099387413 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078843302 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.094288805 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.078437052 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.093521023 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08173426 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.084826812 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078687643 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093851491 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.079590817 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079756221 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088773921 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083025336 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.078151628 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074052283 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.084783638 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084730494 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085211976 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.078792918 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.082547482 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077780069 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084338377 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.094336601 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077610527 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078515866 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.084301791 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078843908 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.082632857 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.094931503 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079029711 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080566433 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.084276658 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.084674863 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076989952 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.084047203 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081696721 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.093627907 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.083704621 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.083806298 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077793135 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.082903025 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.084011715 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077175687 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084825673 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.084071084 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.094054437 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078586757 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077155703 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.075422151 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.082631876 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084435401 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.082373128 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085845175 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.083800514 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07677076 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078575643 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079305056 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07828676 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.083928167 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.074795488 seconds)
  done (took 7.627922639 seconds)
done (took 30.23988148 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.549647578 seconds)
  done (took 2.100584408 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.62873954 seconds)
  done (took 2.204007757 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.541200075 seconds)
  done (took 8.103572191 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.419767239 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.528242067 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.745962216 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140367694 seconds)
  done (took 3.443010086 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.707408377 seconds)
  done (took 2.284998231 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.224759642 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.213752911 seconds)
  done (took 2.029987048 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.385507651 seconds)
  done (took 1.95586185 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.166973604 seconds)
  done (took 2.738567492 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.267323853 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183212988 seconds)
  done (took 2.022737132 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.492632771 seconds)
  done (took 2.061268954 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.896967656 seconds)
  done (took 6.471307078 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22022999 seconds)
  done (took 1.837884623 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244195092 seconds)
  done (took 1.819675941 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.751764822 seconds)
  done (took 3.3278073 seconds)
done (took 43.98245678 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087434049 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089287243 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088821037 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086415113 seconds)
  done (took 1.9144295 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083760013 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.080483417 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.083824962 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.079114276 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.083889636 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.079813285 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.081023096 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082496197 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.079050682 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.079670529 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.079122947 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.080113921 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.08194251 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.081199929 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.078826665 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.082585282 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.083634118 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.079285723 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081816163 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.080111005 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.077591176 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.081753982 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.084220282 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.078720713 seconds)
  done (took 3.522416083 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084748815 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.08007218 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.082259234 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.078214888 seconds)
  done (took 1.906825405 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.085214197 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09985474 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.0979009 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.085632974 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.100234945 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.093673924 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.076330659 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07546372 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.077644731 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.085216342 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.075177738 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104468362 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.096243027 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.084524962 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.0867034 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.072845188 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.074645623 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.094330882 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.085526799 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.085482363 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.077042884 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08484877 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.075300494 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.095852905 seconds)
  done (took 3.648031591 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.093007172 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.112761255 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08876993 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095820318 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097923971 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.071830037 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.095103198 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097985996 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135006649 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.072638348 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.077816937 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.072175345 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079448548 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.071929922 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.088701566 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11479866 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118962885 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07577159 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.104613773 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.07304536 seconds)
  done (took 3.424755125 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079916435 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07689444 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072493028 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.076476451 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.084323826 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.079776832 seconds)
  done (took 2.059941386 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074784284 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.074852783 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.074668427 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.07367974 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.079681517 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.074124267 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073479409 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.074128038 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.074835283 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.0739754 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.073671359 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.072739681 seconds)
  done (took 2.476987575 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.21049307 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.075265141 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07546336 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.072587428 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.078063934 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072777944 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.088535687 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.074809866 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.099366794 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.073212517 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074254327 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.075837449 seconds)
  done (took 2.653268668 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219372521 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082261103 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25250241 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160246657 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118724488 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123545355 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119965291 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122073273 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.150881274 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108735026 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179160198 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176871427 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115868455 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145178463 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096344329 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108029328 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168261455 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173007381 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113588383 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177091585 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155003479 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134563811 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157257209 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109700621 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114170088 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130233424 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.078712637 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087219607 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179736086 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141408253 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153171487 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118569669 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099229235 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187475165 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18366266 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153701613 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158501867 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091337606 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.112488777 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.145173975 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213898011 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098030134 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318365663 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122891926 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091544114 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142055179 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128533628 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.127942022 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.1137589 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097286318 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154208926 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193838656 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.14604952 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095252717 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13277672 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122145221 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122076205 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12084886 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191756557 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170275736 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135591407 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.078393323 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116668846 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163502275 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142176207 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.115877545 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.132656816 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099135561 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142834158 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16420295 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129006633 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153385527 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.124463723 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096341272 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127902048 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149404708 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136075778 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169013411 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1336549 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.080038584 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131528515 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108815108 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087934355 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.15232519 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081125082 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185322381 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108516134 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.117725155 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137344731 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120344499 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120791673 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319734206 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158502715 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112369807 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073586943 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113137272 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128943915 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154486762 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094065125 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11654353 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125441045 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.084589412 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146173611 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.081939799 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130643463 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.084550228 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134108349 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137954404 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.084013699 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129706418 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110762941 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.108008645 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142131862 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16947579 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095194549 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089260262 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178458847 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12922702 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.11121276 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152395817 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165364561 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.108408872 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1077517 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157571873 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187884237 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09726623 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171478573 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114137401 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089887262 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.094250355 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132928745 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118921391 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.13150874 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08829946 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.125374084 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177339073 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.081547827 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101607271 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140582143 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084715735 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086945031 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111509332 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11129642 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.1024978 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.107017253 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.258617087 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148128816 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132531272 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114867579 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135086633 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106836672 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180108313 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095100736 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109310148 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113296874 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.076419299 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.143203929 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166226667 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086396333 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17233958 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.131246754 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123629252 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126356859 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09063866 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149149446 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086294938 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.076717013 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151444486 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118143452 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116626073 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.161204082 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123683802 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.133103541 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.124888516 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140604449 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139202451 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.137763762 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112171686 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.095383522 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118892029 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13416919 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.079219471 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097336038 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086506596 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11159816 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103370809 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089207359 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150473308 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13170488 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116416249 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119604949 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102937395 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154751748 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.082317372 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135067331 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.126192415 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101404605 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.160506718 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.308551985 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141361313 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10724895 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147091436 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.077449513 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081253647 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.096393449 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130794791 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09043755 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08994906 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123589955 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155414896 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13794047 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14427572 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130193782 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128807821 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163970201 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076291423 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124629345 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15606727 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132537899 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.111249621 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096351347 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.105691113 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150264934 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11542953 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191588073 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121307324 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131311682 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162022615 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.108218408 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086123404 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109859006 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144329904 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111111793 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152493786 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106645616 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095393792 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117098063 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081095642 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105734548 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134844794 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127222043 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143242185 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122047912 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14046882 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085834774 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123254966 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130574675 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128041073 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069394219 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126694372 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.317694504 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101812839 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127078445 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163581337 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087357268 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.142428019 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187887542 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154769918 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093464959 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116928234 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127134004 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135350626 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127351864 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14917621 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114846448 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144976825 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117665316 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.09237424 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095088063 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104206094 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111958158 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.101967814 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.113639572 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121039996 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.102535055 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140428679 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111442169 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117962372 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125313571 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.105532114 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097565052 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103703949 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185457948 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125107967 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179097434 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105964104 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.152163271 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171599147 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081627425 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08585407 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.084632276 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148476886 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091898363 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138376242 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11408486 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124119361 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129644448 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150707579 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102460634 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.074593115 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116978134 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143480518 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131739552 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254385722 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.115898674 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179646605 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113467214 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090582309 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12771777 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12669036 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110560367 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18588736 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.069229773 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113645363 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083512923 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088555618 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136185694 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162167315 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086919425 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.110164005 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127599666 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119556445 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135918297 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107458503 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115993142 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134867963 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158228795 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136421598 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09657128 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119281904 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136799626 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166853615 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112209023 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.103428662 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181119977 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160529518 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.168264653 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.094049949 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121799589 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121540353 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115973372 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147030127 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0901007 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173959645 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089197512 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143686312 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11024007 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095236967 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137291247 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.114795019 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094369202 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155126535 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123829774 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235772117 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086205679 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126989734 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127426169 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11381648 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.082384473 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148100375 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080396858 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14032181 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169016647 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088598593 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112042941 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103955186 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08717218 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114824753 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108645304 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094416464 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.106117465 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181854211 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.094788825 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15771298 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141160449 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119554562 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14479796 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109185449 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.646893167 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08510396 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161114187 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123514042 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184789693 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106828958 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125447712 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117168381 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131402846 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152526052 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111308032 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.187005383 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13933166 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.122639878 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085741884 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109698485 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111901661 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095644225 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115150057 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12151416 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121914253 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.099484208 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.123045869 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133189254 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08852627 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105528968 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168956286 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27257194 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152527716 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148851375 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092948803 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128451275 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147008615 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086263812 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.129854928 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16211974 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114256094 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106346804 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.088330411 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.108835343 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16904511 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.079946082 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170665801 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12756509 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117294067 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12109617 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.120786218 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140419208 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115458504 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129307674 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099606112 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.117229235 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120217169 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088185957 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083802612 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112125817 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118809895 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104693308 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105633315 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10575517 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16038972 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.0788885 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106175599 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122109419 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151791869 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182762907 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.095515648 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089957558 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126493876 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121837901 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.120380473 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128437884 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.085588378 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089026868 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087345183 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.084677364 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115635249 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118784147 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120467901 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116946572 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.322216536 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.093769782 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.238506698 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102780088 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112645212 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075968859 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.085396121 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103534263 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105425048 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115287438 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117464272 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167912147 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.10169843 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.097108861 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099229941 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.080291039 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089798728 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13726341 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117354051 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125720464 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107419708 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068511806 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116921203 seconds)
  done (took 62.989975018 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.114425113 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.089050244 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100484312 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.151640101 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.129218715 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209505119 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160772526 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195404117 seconds)
  done (took 2.847942042 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075516546 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.102582431 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.109154688 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.089851785 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.073747333 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.075032658 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.240303007 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.087279495 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.073426405 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105641711 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.084811776 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.075611432 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.439142161 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.073073773 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.0745818 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.068508148 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073265189 seconds)
  done (took 3.606276813 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.400391131 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.614679911 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.361855418 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078754276 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.95131305 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095873578 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.150958207 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138771166 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081146239 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545328496 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.412004611 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135025629 seconds)
  done (took 18.663623956 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085093305 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076952421 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092309294 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091017444 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079839853 seconds)
  done (took 2.116881953 seconds)
done (took 113.447487758 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.089439543 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.638392871 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060057065 seconds)
  done (took 2.424183189 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.093868001 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092959389 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.091798009 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090373648 seconds)
  done (took 2.06948905 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.082537534 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.083318536 seconds)
  done (took 1.857109707 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.243768 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171497493 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.102775458 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.091001678 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.086166454 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.086624281 seconds)
  done (took 1.968115803 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.079964988 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.082452686 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.079901617 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.08322471 seconds)
  done (took 2.022451862 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08494174 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058586312 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060972736 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06422936 seconds)
  done (took 1.968115671 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093745595 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085598145 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085694877 seconds)
  done (took 1.966000161 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108783422 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093235123 seconds)
  done (took 1.905344328 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.088580894 seconds)
  done (took 1.790663647 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102827995 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.108693881 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.14059793 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118607171 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.146817368 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11684418 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.091067094 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.09241637 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082942951 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.093702468 seconds)
  done (took 2.796201595 seconds)
done (took 23.068931559 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084945253 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.471735703 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.366889637 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096943644 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.676559705 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.362837017 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994433561 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099268505 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122414704 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073867562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091739852 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654128651 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.984153218 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.425672515 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969629252 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324823444 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656436954 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073937738 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074119109 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073749856 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.978506928 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073658899 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074035015 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075029663 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655635148 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37916772 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.091244818 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325173969 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074905768 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076135092 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.361934515 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07503083 seconds)
  done (took 16.603187708 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076740923 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127315661 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07993043 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090413149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.077845751 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076092595 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077469699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075972163 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1279546 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07658562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091064087 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074059315 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077835251 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075058176 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094100332 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07453283 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075296603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075024017 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075090811 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074695055 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093613112 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074102913 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075678095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074797505 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074772806 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087454123 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074959066 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074130898 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075941617 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077294842 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077912873 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076063634 seconds)
  done (took 4.323393592 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122397027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.132300896 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.08007674 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110597225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117938022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076820597 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.15042114 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100517906 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.134288823 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074865882 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091560716 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075178887 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.110063837 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075286731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095161715 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074405667 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075698971 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075710092 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074896401 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075007678 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094423822 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074483823 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074930098 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075493042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075229047 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089163033 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075353156 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075126548 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07492563 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077022096 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078640287 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076525016 seconds)
  done (took 4.580578112 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079589656 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.081390749 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.090494005 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.091438417 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075797916 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.079304096 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079551389 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.076582566 seconds)
  done (took 2.37012728 seconds)
done (took 29.581648985 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.087622559 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075312072 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.079763598 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089352225 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.080080538 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.085663729 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.073199629 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082329222 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07905632 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.08034674 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.081501576 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.07424939 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077991962 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.074491614 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080810336 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074431334 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085999901 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.078397083 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.086967431 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.086519209 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076598016 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079949865 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081686483 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.086378507 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085904662 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.085627317 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084166615 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079327933 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076129038 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076849679 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.083797521 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.090682 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.075457158 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.086302095 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07379634 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.074433364 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.078157226 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074042067 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085877853 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.083344817 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076035366 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.082816164 seconds)
  done (took 5.084276646 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094049674 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.099213159 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.092170819 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067975773 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073329656 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.072158523 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095868865 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066739043 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065937205 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.095118201 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.061686832 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.066043164 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07020065 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060441773 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066235021 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.063073734 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.068272248 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.062102651 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066198268 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.066006605 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095694022 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.059829274 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.084200486 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069631778 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062154707 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068004841 seconds)
  done (took 3.634319961 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.081754093 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.091863186 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096265787 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138250675 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113068804 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.085930737 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.086342367 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.101687273 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095212077 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072968506 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.077550293 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099683153 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096754882 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.08077 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073692832 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.092958534 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090263406 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075574554 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.083086619 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101230329 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092565161 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.092547632 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102391578 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089917331 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072853599 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076106348 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077646347 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.088195682 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.079525257 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08349622 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.078262432 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.077897347 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.076271536 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085642079 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.077817241 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075708869 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.099495812 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084595484 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08534691 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.074727297 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081920739 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.075682528 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.099423179 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134378909 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.075935051 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081673276 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.078502172 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083712783 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.074240579 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095160617 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08528805 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073355983 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.077023791 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073056259 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.074184208 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087632097 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075967057 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.076475231 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.084321488 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.081100558 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.098883082 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07866942 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090001292 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.073621282 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.082350067 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.073852435 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07596343 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072796638 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.102594671 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07567296 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.118258699 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.078290023 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.077467172 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.085766615 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.0822363 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.081171478 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.075132746 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08990054 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.085076864 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077696821 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.083447265 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077277895 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.077618381 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098485225 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.076281807 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075599475 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.075222845 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.080106825 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.077010856 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075357947 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087740174 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.073375323 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076938782 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.091372598 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073601455 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075699033 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.079558888 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078245334 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.074128507 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085240874 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.08014509 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.075081836 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.084374402 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.074444623 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.077518339 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.087164726 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.080492234 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072681303 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.078670237 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.079749589 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074694176 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.076467054 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.076590039 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075877963 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082599712 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080273844 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.078060782 seconds)
  done (took 11.502375041 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.173380565 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.165604508 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076766072 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.156243355 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.08339378 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.086331779 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.159023714 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.101921003 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.074763321 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.075796116 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.0753303 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.117799022 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.113548404 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.123547262 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085148205 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074118498 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09157548 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.122491865 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.16113664 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.155765823 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092505007 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.083953744 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076659163 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.076058949 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.077961193 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.085384603 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.092328389 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.084439996 seconds)
  done (took 4.696793763 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.090064743 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.113052515 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.081397134 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.098136377 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.099246862 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.074224394 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07739222 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076993987 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088084318 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.085631165 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073697692 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.079765976 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.081610997 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.077462283 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.075597458 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080865341 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081512342 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075782379 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077980938 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.080611078 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.084913945 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.098814067 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.078848655 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.076233505 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.080114611 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.074639069 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.070387611 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091251389 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.074832764 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.102480997 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.072789603 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07965032 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.088999752 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.076112443 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07485129 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074742741 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.074624813 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.074579006 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.076436754 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.073176592 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072955949 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.064460335 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.073720164 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.086203564 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081647348 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062812927 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.079425085 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.079767438 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.080323614 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071810688 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.077060515 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.077514432 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.077686768 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.082287607 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07875285 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07942953 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075902958 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.080934782 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.083784787 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073996577 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.07145086 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07292353 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079197553 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072648729 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082802609 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.079601838 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072880406 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.074288642 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.076362359 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081583543 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074239908 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078820142 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.072157816 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.076811887 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078979017 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076779721 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.076248741 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.07306371 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.074602288 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074483644 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061867366 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.07464425 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.060470211 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.077964098 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.072533175 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072612376 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.074840948 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.080141135 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087101346 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.075899395 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079961235 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.075546445 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073412964 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07828944 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066963731 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078098119 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085797529 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.089416742 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.074302979 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.072003085 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.088174052 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.079090134 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.073529954 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062342636 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078709286 seconds)
  done (took 9.970927695 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096744277 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.076665197 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.091002504 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.097622938 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093146484 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.081322629 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.084874756 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.076045544 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.090129349 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.080603656 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.083797017 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074814083 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.084458988 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083885276 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.076390425 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.084606043 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078914149 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.09146899 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.089941063 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074589096 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.083370314 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086891337 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.096751418 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08831362 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.087644534 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.088907063 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096934209 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083908704 seconds)
  done (took 4.162346239 seconds)
done (took 40.761783779 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.81930147 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.974808424 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.798144936 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.171530496 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.978217295 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.91361851 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.903281073 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.798072042 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.064739255 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.832838334 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.029505126 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.949329313 seconds)
done (took 66.095639779 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.816589576 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.942482791 seconds)
    (2/2) benchmarking "String"...
    done (took 2.026346048 seconds)
  done (took 5.697357419 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.027720636 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.360765144 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.047589215 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.797251501 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.802445184 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.138678644 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.606225739 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.30653409 seconds)
  done (took 30.788203886 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.965034923 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.031959498 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.513916349 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.549592405 seconds)
  done (took 15.841535425 seconds)
done (took 63.987121785 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.804386985 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.855566529 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.813337729 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.779505014 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.855565822 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.802252897 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.057368096 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.025009958 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.793945442 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.788939756 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.797192742 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.239954335 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.81123636 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.172700355 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.799112693 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.80819716 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.88590438 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.326120772 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.957136581 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.816158636 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.80544474 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.801385749 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.799523541 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.808039408 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.827865084 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.799608854 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.232348456 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.80288468 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.621456673 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.801634211 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.85136297 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.321676478 seconds)
  done (took 206.38925079 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.797860031 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.929141373 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.970709049 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.837740302 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.484935577 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.975922723 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.914559079 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.221034785 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.801039158 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.825806997 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.01460867 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.798077499 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.043677993 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.746019793 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.823770164 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.797356332 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.971157799 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.050665033 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.826850262 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.964335957 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.79156923 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.803222758 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.754995539 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.998784453 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.800167285 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.800138491 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.800046892 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.804967625 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.979381281 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.937726661 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.799523205 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.803580984 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.993136104 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.659613128 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.79420995 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.79976671 seconds)
  done (took 170.845090375 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.954874051 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.788902227 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.786965719 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.788662192 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.794511015 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.789135524 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.799651723 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.913136103 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.916161524 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.386509356 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.476064377 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.793334692 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.838493198 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.787753629 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.607701268 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.788588319 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.8560297 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.801222095 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.789612634 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.804344511 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.81541326 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.795008734 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.788958682 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.916522484 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.800625808 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.846060782 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.802861462 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.789645218 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.793647065 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.160597695 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.788552336 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.795042538 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.02540783 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.784707983 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.783292622 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.67277248 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.405077195 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.866051496 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.784850957 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.788598405 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.782811852 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.002370667 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.782468566 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.781986798 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.785219011 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.943818139 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.778091042 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.900900123 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.781816079 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.272712859 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.779175788 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.77750608 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.598654361 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.452998255 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.780905857 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.779358766 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.781129202 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.778633808 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.778939117 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.783996342 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.604625583 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.856048345 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.779151155 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.780022344 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.783481205 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.778490729 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.894634475 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.777218241 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.501847993 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.835446875 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.002014987 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.89421348 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.775247219 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.839411888 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.866260099 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.773197813 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.770750502 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.77151913 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.77156517 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.8528983 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.772751601 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.773592477 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.895198965 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.77933042 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.772123486 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.823870617 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.840752104 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.771193621 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.657641766 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.775787155 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.77095233 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.072537197 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838552537 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.772494858 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.770287973 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.769761548 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.895905418 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.895408632 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.54641692 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.774702058 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.56803488 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.958311233 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.971769777 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.774396557 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.033280167 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.773453465 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.865686134 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.778161135 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.776208809 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.772124974 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.805312917 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.772546565 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.828527527 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.772429929 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.146594777 seconds)
  done (took 404.0251447 seconds)
done (took 785.007054517 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.445540954 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.41644826 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.516028037 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.430107208 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.406362142 seconds)
  done (took 13.920846578 seconds)
done (took 15.626479509 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.865240122 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.866541972 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.795252784 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.864192654 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.795515351 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.864688982 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.847471181 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.797679174 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.830027962 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.798234597 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.833565867 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.798291893 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.784026018 seconds)
  done (took 25.447055257 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.997307147 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.010476963 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.844231599 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.003745445 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.821848092 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.999180553 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.940175114 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.923314047 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.924028822 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.788326616 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.784670127 seconds)
  done (took 22.743878025 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.004509633 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.011563923 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.853463921 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.012431678 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.824500928 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.008060793 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.938987253 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.926276504 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.924775526 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.788613792 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.786304724 seconds)
  done (took 22.784635645 seconds)
done (took 72.680838385 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.780581948 seconds)
  done (took 3.486683035 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.804713199 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.960744082 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.787364739 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.784873821 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.782842539 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.781046288 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.784433911 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.780980719 seconds)
  done (took 16.174844315 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.777006197 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.777085377 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.777340795 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.776704677 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.781200792 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.777842719 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.780744039 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.780026152 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.780048466 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.779340325 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.776486494 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.779618617 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.780071868 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.779645821 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.777356883 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.778798902 seconds)
  done (took 30.165440609 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.779703961 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.778182236 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.778098428 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.779236947 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.777144754 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.777425424 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.778724035 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.777631966 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.777473858 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.778778226 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.779326909 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.77720963 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.777982367 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.778165007 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.77937164 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.778844264 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.777669135 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.77918051 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.782161074 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.7783568 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.781090191 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.776977395 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.778480168 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.779655672 seconds)
  done (took 44.396221775 seconds)
done (took 95.928889188 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.668139365 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.169588669 seconds)
  done (took 8.545727855 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.781836354 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.781286147 seconds)
  done (took 5.309700767 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.78055214 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.78452897 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.78217915 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.781668136 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.780994372 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.781597833 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.780728346 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.780344343 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.780886419 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.781214307 seconds)
  done (took 19.52123616 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.780094322 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.780671657 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.777903263 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.782767249 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.780922002 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.778189266 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.781211025 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.780998831 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.78121581 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.779402463 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.780499055 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.77804088 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.781386582 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.779055593 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.780982501 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.779770869 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.778792849 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.778663368 seconds)
  done (took 33.747344039 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.780962652 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.780838227 seconds)
  done (took 5.270011812 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.77913236 seconds)
    (2/7) benchmarking "second"...
    done (took 1.779680477 seconds)
    (3/7) benchmarking "month"...
    done (took 1.77956446 seconds)
    (4/7) benchmarking "year"...
    done (took 1.777989364 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.7794764 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.778946781 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.78016291 seconds)
  done (took 14.163053175 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.784549664 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.941979909 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.016080685 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.423143128 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.782611613 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.784729549 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.700881946 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.78458407 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.788049926 seconds)
  done (took 19.715742511 seconds)
done (took 107.980706822 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.613360204 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.777342104 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.109556962 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.832173806 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.83198754 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.11709444 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.794288359 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.06986755 seconds)
done (took 42.855013966 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.823280142 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.32736646 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.358112081 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.049068079 seconds)
  done (took 12.444761479 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.764197936 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.306430416 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.821700016 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.368103959 seconds)
  done (took 19.981319212 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.149969224 seconds)
    (2/2) benchmarking "read"...
    done (took 2.131351463 seconds)
  done (took 5.994576857 seconds)
done (took 46.954112066 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783981157 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.784535982 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.781776194 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.781980655 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.783327194 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.783981027 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.781227005 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.781250677 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.783794825 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.784792298 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.783131051 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.780865898 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.784520276 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.783994838 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784351771 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.782700077 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781249266 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783990945 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.782202522 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781077565 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782354148 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784450524 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.780529008 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.782675886 seconds)
  done (took 44.498885489 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.785667427 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.783061546 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.784161383 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.785691923 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.78430617 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.784824175 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.784172274 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.781635103 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.785268522 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.784806666 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.782182262 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.782507529 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.785628105 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.783145073 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786577056 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.783915963 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.785625649 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782587463 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78541471 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.783111586 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.785040571 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782923623 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.782700577 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784959671 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.783067403 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.784287349 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.787177104 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.785283571 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.786224495 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.784009331 seconds)
  done (took 55.242028987 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.7897544 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.793226825 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.785571515 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.78622523 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.786214798 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.786912913 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.786966797 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.788480463 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.787293363 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.786888169 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.786795714 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.788114278 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.787308103 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.785920946 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.786172491 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.786430331 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.786614773 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.78546632 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.787373299 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.787314225 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.787252254 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.787608621 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.788404783 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.786923144 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.788051386 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.786097007 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.786013707 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.787212442 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.786917422 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.787535056 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.789731177 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.787926501 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.786717483 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.788247631 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.78912435 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.789520049 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.791524826 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.794232488 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.787263254 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.787306578 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.788668457 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.788144998 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.787560784 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.78898499 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.78827803 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.789415264 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.789735643 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.789538112 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.789304253 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.78820772 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.788267759 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.789679662 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.788652202 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.789529385 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.788699722 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.788990531 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.788493883 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.789870184 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.790148802 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.789782212 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.789193788 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.789787553 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.789475226 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.790874171 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.790204868 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.789701625 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.789753465 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.790018145 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.790314361 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.789531816 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.78983061 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.789414648 seconds)
  done (took 130.481850466 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.789845155 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.788874575 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.787349008 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.788763913 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789009113 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.790390912 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.787494917 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792493337 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787495791 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.790848416 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790207746 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.788302003 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789530662 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.790866259 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791464959 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.787847618 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.791103236 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.788538803 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.790820391 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.790362375 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79071463 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.788692463 seconds)
  done (took 41.087628636 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792069829 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.791625261 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.788328543 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.791376934 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.787603139 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.790977779 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.791701042 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.791928139 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792439002 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.790678957 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789278468 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7915706 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.789522034 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789380918 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.789264266 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.790787745 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.792950143 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.792205062 seconds)
  done (took 33.951815974 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.790175809 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.789543642 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.792111653 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.789113262 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.789783001 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.791978932 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789521036 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.791705404 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.792440696 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.790538174 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.792152279 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79199182 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.793060417 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789578974 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791084785 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.791343662 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.792717235 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789125029 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792543558 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789489204 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.790650683 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.792948177 seconds)
  done (took 41.122555614 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792521296 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.792944526 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.790964819 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.790919053 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.789830907 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.791647272 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.793600014 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.790603971 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.794687027 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.794309955 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.79041825 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.792909123 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.790551444 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.791488596 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.792330565 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791419137 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.792907327 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.792436534 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.793954285 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.79243749 seconds)
  done (took 37.562883511 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.795674467 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795633523 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.7953952 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796308657 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795461582 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.79630695 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.796741033 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.796881426 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.795900624 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.797056442 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.797617396 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.795989499 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796365809 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.795821417 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.796189385 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796349987 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.795789421 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.795475427 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.796719716 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797220796 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.797063376 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.797486354 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796142974 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.795505272 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.795770561 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.796069552 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798385427 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.797712945 seconds)
  done (took 52.02155903 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.794678896 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.794945549 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.791847835 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.794924284 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.791916315 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.792978938 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.794190563 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.793814374 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.796154036 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.793749952 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.795817149 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.796033338 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795879761 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.796193027 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.796031075 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.795417855 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795469245 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.793196677 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793553695 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793255573 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.796786675 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796317863 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.795526927 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.793294141 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793869996 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.797075997 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794895909 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.794390608 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797213421 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.793396906 seconds)
  done (took 55.564816761 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.816027395 seconds)
    (2/2) benchmarking "in"...
    done (took 1.814612408 seconds)
  done (took 5.35337044 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.793877804 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.79670159 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.797182124 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.795225542 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.794450408 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.797388257 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.797755692 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794641204 seconds)
  done (took 16.090036037 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.797685378 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.796914886 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.797962031 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.797036252 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.798621277 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.799885543 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.803094498 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.797389677 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.798323992 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.798397508 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.803683334 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.804434431 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.800543924 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798826512 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.798050815 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800657002 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.800518893 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.800539641 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.79840546 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.797819969 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.79980354 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.799846703 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.801487147 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.795837835 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.80039757 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.805955512 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.803007029 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.799570409 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.797583665 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.803189742 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.798518404 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.795538041 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.800101882 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.800282904 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.799205961 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.800506843 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.806629011 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.799015675 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.805480503 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801262131 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.798746844 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.797935499 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.801042687 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.801178162 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803019044 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.802230843 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.800377968 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.798345917 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.799052445 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.804810194 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.802930237 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799686264 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.797367663 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.804450199 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.801575145 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.806823982 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.802802736 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.803428527 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.807798523 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.808995765 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.813627215 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.806587133 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802810864 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.802051084 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.808900411 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.820547325 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.806817914 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.797312173 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.797679415 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.800643638 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.806832082 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.812940785 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.809430139 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.801989621 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.802392433 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.801152028 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.801282295 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.802237784 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.808160798 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.80393179 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.803237478 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.802383624 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.810250574 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.819748741 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.801342193 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.802064611 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.80345302 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.802674965 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.803627928 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.810703175 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.802118495 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.801216714 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.801770512 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.801679699 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.804468993 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.803273015 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.802309499 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.803001988 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.799652628 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.804511923 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.804427228 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.804864373 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.812038582 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804523151 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.804248982 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.809561127 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.801949723 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.802982027 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.80947535 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.803319889 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807104296 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.802195415 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.808508634 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.800207063 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.806849781 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.811371768 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.810411209 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.805384554 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.805230882 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.802911736 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810929045 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.826245141 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.803134189 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.803402466 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.807672245 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.813007587 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.805920707 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.806355129 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.803636624 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.800867136 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.800338744 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.805144129 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.804545607 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.805024259 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.805018498 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.805535836 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.800870987 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.803370478 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.805364634 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.805391855 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.805860963 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.804922888 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.805998604 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.807373194 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.806522869 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.806190541 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.810007079 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.804920187 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.805838911 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.808042973 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.80122191 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.805462126 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.806811909 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.806081696 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.804626528 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.806958041 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.805894033 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.806020216 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.8051679 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.805674445 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806733355 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.806066319 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808607267 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.808037968 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.809866743 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.806114277 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.803735612 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.804220296 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.806770871 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.807287421 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.80614077 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.808079304 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.809369905 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.813368864 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.806981904 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.808105451 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.809485644 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807295281 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.808022145 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.807569213 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.808870925 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.813786315 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.808818691 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.812518248 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.807515869 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808528132 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.806284329 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.806768675 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.807682283 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.807563026 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.810082283 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.812906268 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.818387804 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.814154775 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.807550439 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.808789156 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.809570421 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.811592699 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.812213669 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.808936323 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.806779948 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.808493348 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806854396 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808631233 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.810250548 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.808775088 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.807252978 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.807867144 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.807893342 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.809127229 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.80813456 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.808800352 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.809519904 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.805662911 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.807864858 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.809819832 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.808510161 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.805589304 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.808133168 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.809198557 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.808327763 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.810540693 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.815057152 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.805658121 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.81050098 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.809362436 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.809689797 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.808612335 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.809596883 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.811881005 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.808659593 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814071537 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.809928927 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.810337646 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.815832707 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.808649041 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.808353301 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.812073663 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.810232383 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.8062616 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.812622199 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.813950678 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.809301657 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.813621027 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.811160734 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809703919 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.808835599 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.815807831 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.806951982 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.810987651 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.809741905 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.811531864 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.806643236 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.812540041 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.811510686 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.812358863 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.813216445 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.810351784 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.811540431 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811771559 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.813394309 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.811330156 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.811211873 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.812759253 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.817653827 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.816407322 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.81202834 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.813687873 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.812430985 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.814220365 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.812298778 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.812496061 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.812593872 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82264238 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.819072622 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816926535 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.815293972 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.81131894 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.816118521 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.812373511 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.814396275 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.811678821 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81231726 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.812404673 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.811399696 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.808869781 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.812104169 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.812801155 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813753192 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.812740798 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.814567604 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.812544459 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.811649025 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.814056757 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.812739345 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.811625839 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.812254561 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.812284531 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.814851097 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.81394773 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.812024588 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.812276798 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.818415092 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814036837 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.813905992 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.813084425 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.812888885 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.812056822 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.813771584 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.815268049 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.815543073 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.819486048 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.815395651 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.820605504 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.814435541 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.822240616 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.813311474 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.815321027 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.820954864 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.810588919 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.81483109 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.813965264 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.814860216 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.820710515 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.81582053 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.815355951 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.820079008 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814802431 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.815478029 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.81402929 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.814715785 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.815873052 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.815656561 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.823116441 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.816494848 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.818436132 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.817019953 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.814395002 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.815578963 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.815220965 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.814127813 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818788149 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.816474248 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.815260077 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.813571274 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.815821807 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.814593517 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.816502081 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.816388368 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.811849453 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.815148955 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.821936046 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.816604444 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.820889353 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.816018619 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.822499488 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.81768136 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.822680056 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.81665501 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.816698572 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.816632287 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.815187563 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.817312605 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.81670917 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.817906807 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.817057114 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.817457633 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.818137081 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.817365284 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.819432484 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.817175652 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.817769969 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.815746418 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.825044491 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.836162846 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.819462237 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.819652094 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.814056186 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.817797233 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.821183685 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.818778011 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.817689814 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.819248005 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825855484 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.823689661 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.818503849 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.819282116 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.818223762 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.818145276 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.817868291 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.818094013 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.818955386 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.817758225 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.818791806 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.818533998 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.821012796 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.816918403 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.819896567 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.819046631 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.818103288 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.82695079 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.818339609 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.8197549 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.820623336 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.816944501 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.817847689 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.819189973 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.819446025 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.819863452 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.818115996 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.819021599 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823723178 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.823783902 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.821124624 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.818987173 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.819086128 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.819915324 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.819878023 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.820090072 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.821114684 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.820766983 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.820504002 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.821070673 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.820464036 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.819085339 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.819674711 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.819535611 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.818819082 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.821887904 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.823939478 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.819480465 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.816116691 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.819213911 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.818607862 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.820034855 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.821453461 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.827923934 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823135813 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.827897657 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.826631325 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.82431166 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.822285011 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.822421262 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.827401445 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.819464865 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.822177009 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.825602306 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.82585269 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.821921635 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.822558807 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.822780843 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.82823324 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.821964651 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.820401341 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.828329962 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.822767176 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.822362203 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.822261633 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.824573028 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.822025519 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.817164373 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.82166636 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.820582418 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.828280095 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.823637833 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.822722394 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.824115049 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.820548541 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.823544149 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.824752973 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.822182884 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.822610264 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.818048009 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.822059378 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.823308633 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.821673073 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.818686201 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.821606241 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.821426696 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.8251517 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.828639132 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.819363126 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.824185527 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.821732862 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.824339422 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824108893 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.822261582 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.819645734 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.819566828 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.821533292 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.824221603 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.823434444 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.825062083 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.822451058 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.823355404 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.822678212 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825841883 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8259729 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.832550627 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.828432876 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.820056543 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.823619142 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.825693243 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.825670936 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.824611029 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.823696975 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.82377189 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.825783962 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.82324873 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.824012557 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.822972542 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.826126193 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.837655805 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.823815468 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.823170969 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.824697278 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.827059607 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.823855863 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.821292597 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.82294038 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.826778046 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.826742511 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.830324894 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.826148711 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.83009501 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.824725217 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.824440994 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.827369756 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.82622673 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.83167603 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.827953388 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.826211793 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.825339412 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.828740389 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.839036025 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.826455056 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.833587579 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.848893719 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.826929217 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.827747796 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.826150112 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.824672255 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.826381748 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.82804538 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.82688427 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.826281158 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.825532131 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.826889029 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.82906704 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.830508608 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.828213266 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.826179262 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.82514967 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.825437704 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.827618893 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.821339601 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.824713915 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.824270999 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.825097015 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.825765027 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.826164006 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.825481189 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.836515607 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.833241197 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.82455054 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.825307085 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.821039361 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.829115215 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.826850967 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.832974947 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.830153712 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.826215838 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.826447706 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.827886569 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.826621129 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.821440129 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.825541789 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.825474081 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.826373212 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.822666471 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.836917649 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.832925189 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.830638302 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.826126242 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.826568626 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.824759656 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.827410859 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.826315005 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.82636699 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.827989749 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.825658461 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829886113 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.825026707 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.825381077 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.828417016 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.831766676 seconds)
  done (took 1083.179553279 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.823370927 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823981583 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823531484 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.823815761 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823624074 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823209493 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.823240521 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.822522753 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.823118185 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.824157517 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.82376518 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823548219 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.823493559 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.823616884 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824057247 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.822849737 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823536931 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.824116455 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.823714292 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824534435 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.824105196 seconds)
  done (took 40.047066441 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.826581126 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.823315732 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.823599921 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.827261377 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.823735085 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.82615269 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.824787845 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826609262 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.828109856 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824078123 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.827108794 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827421229 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.825332072 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.82464491 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825278372 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.826749458 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.827111443 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.824400942 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.826801977 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.82463816 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.827540683 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.82479582 seconds)
  done (took 41.917800129 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.829488013 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.829388785 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.828463591 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.824866374 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.828326871 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.824628061 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.828854801 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.828676966 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.828228005 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.829133976 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.827969444 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.829046581 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.833732839 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.831369608 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.831486286 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.828588402 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.972108842 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.830237731 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.832218767 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.829857502 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.826855581 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.834454043 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.826622215 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.82700223 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.828807098 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.830526326 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.829969231 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.829174346 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.832054333 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.831156642 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.833310889 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.829553873 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.830596138 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.831598846 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.830346113 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.82966298 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.832824026 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.833149792 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.827093779 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.829741166 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.838235227 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.845540258 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.830633545 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.835423353 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.829821443 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.830051908 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.833026258 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.837490664 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.827334921 seconds)
  done (took 91.593240766 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.829268547 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.830539606 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.827675132 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.829526455 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.830474042 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.83030897 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.829822917 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.831514731 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.827684482 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.827179841 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.830321373 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.828324891 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.828305022 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.829776723 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.830312297 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.828175406 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.828175128 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.828578181 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.829219552 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.828839097 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.828864494 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.831482502 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.83165657 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.829815577 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.832035546 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.828431871 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.829191509 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.832224437 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.828893212 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.829398003 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.8315798 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.832101535 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.832049082 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.829515521 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.830432328 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.832662763 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.831742463 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.829176316 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.832295221 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.830107517 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.831976609 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.831367374 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.832115131 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.83316578 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.830250452 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.830234872 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.829611121 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.829374075 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.830480165 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.832594136 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.832733869 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.829438782 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.832504728 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.831532338 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.832445869 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.833662315 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.830797081 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.829604763 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.832854483 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.830353541 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.830996992 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.833836284 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.830278001 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.833351353 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.832539992 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.830848836 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.831687379 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.834604452 seconds)
  done (took 126.24021534 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.834409786 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.836021651 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.835032273 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835991133 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.834619793 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.835569559 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.835807259 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.836300589 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.837062795 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.835797715 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.83647988 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.83506375 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.835518614 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.835042956 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.837861622 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.835411898 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.83673663 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.835333231 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.835815868 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836516142 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.836668961 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.836067065 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.836776727 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.836603843 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.837261168 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.836317441 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.836927061 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.836302428 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837099497 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.836314717 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.839077055 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.837315762 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.83592467 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.838097249 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.838240138 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.837509021 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.836679404 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.837040011 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.837619541 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.837565859 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.837524634 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.837845988 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.836599256 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.837374681 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.837522716 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.837417699 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.837905761 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.838176898 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.836470606 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.837023195 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.838137589 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.837596515 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.837870921 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.838059105 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.836996675 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.8371627 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.838626787 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837895873 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839276998 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.838599385 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.839426808 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.837419748 seconds)
  done (took 115.64947483 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838084666 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.837378202 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.834285856 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.834316963 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.837415189 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.835327562 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.838484259 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.837522672 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.837815367 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.837565461 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837877355 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83580283 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836273063 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838560789 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.834636972 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836747952 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.83582452 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.835728325 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.837399593 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.835396166 seconds)
  done (took 38.495113638 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.835581583 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.8380222 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.835101727 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.835226157 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.837912099 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.835682726 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.838683039 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838441554 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835211733 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838952561 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.838070524 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.838593843 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837830295 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.835293732 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.838637243 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.835685533 seconds)
  done (took 31.156113778 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.837135617 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.83862971 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.839410143 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.840439705 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.835258174 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.835896905 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.83975425 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.836846353 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.836394 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.839538617 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.838512461 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.840249123 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.839607341 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.840496712 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.837316277 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.839481354 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.83680752 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.836855357 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.840151207 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.841971359 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.837860813 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.837652506 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.840911276 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.840119786 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.837272367 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.838647814 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.837171765 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.837450291 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.836421236 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.840687534 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.838222834 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.837343704 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.837719107 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.838257812 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.841368606 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.837225194 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.842261941 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.839939554 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.841200465 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.839793983 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.840117427 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.838896546 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.840890748 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.841186818 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.84059747 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.841160426 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.837654125 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.839147324 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.837678902 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.838836489 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.840223432 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.841913209 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.841566891 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.842845532 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.841347374 seconds)
  done (took 102.917748117 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840937622 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.840944629 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.838859964 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.841790555 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.841789555 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.838690989 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.84108569 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.839173689 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838590593 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.842224137 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.841587758 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.842315131 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840242172 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.844202194 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.840743883 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842709912 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.840314002 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.841101142 seconds)
  done (took 34.904082882 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.840826507 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.839170611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.842169348 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.839627126 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.839863678 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.843307807 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.839506175 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.842422539 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842992929 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.84141051 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841237163 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.843024185 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843983939 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.842787774 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.840345758 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840896036 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.843578564 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843062252 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.840879962 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.840549682 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.843122365 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.843318602 seconds)
  done (took 42.286292718 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.843824655 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.84335714 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.857606033 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.861272017 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.864126669 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.873693849 seconds)
  done (took 12.912609718 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841692105 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844192391 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.840211417 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844140053 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845557824 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841999363 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841562861 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841682517 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844340182 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841759236 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842331116 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844366245 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84468936 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841918781 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844518159 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84566365 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843074206 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84267188 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841722338 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845841141 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843170519 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844828671 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842109668 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843248778 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842262439 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842361379 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845703716 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842172289 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842273696 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845882296 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845901568 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843172641 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846020933 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842598296 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846254658 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845088006 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842666902 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846316472 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846365757 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842962741 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.846131069 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845498363 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846523922 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842695497 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846582376 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842785635 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842758342 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843768132 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844328763 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846594957 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846996952 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843796237 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845805081 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846695297 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847817624 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845657839 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844284572 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843734086 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848004157 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844472252 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845113144 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847201979 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844362434 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844179512 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847702083 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844025823 seconds)
  done (took 123.494720127 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845250732 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.844471278 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84642385 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845185419 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8443637 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84584007 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845303207 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846158866 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846028542 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84620688 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848539085 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844093 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845154536 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845870878 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845971975 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845221001 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845942027 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84581653 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845871706 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848883926 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84581761 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8464679 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845968181 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846508101 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846455284 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848023073 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846599703 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846674503 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846379614 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847670188 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846459482 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84540461 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846209654 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.845402371 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846148607 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847081977 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846806541 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846361687 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846579219 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849394732 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847699222 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848397487 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847542218 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84725928 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846978546 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847327777 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846863536 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846796326 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847245095 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846781119 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847474359 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847825781 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848275033 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847121587 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847936689 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847544215 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848701879 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84694114 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848686989 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850392241 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849061696 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847770882 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851080802 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847699712 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84800475 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84917865 seconds)
  done (took 123.669706776 seconds)
done (took 2523.155801593 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.881057769 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.913380637 seconds)
  done (took 15.570042813 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.013514322 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.965940408 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.85011842 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.873234342 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.850433405 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.874820594 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.872867133 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.850154733 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.849612146 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.849890381 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.851527118 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.035330388 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.857146854 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.850475309 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.8507023 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.944300393 seconds)
  done (took 52.018852106 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.853334211 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.856569837 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.864938447 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.856584404 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.853787783 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.865018732 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.887438497 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.857292421 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.887080694 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.866495499 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.921796826 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.862265411 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.852952342 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.903511911 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.865519342 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.868451032 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.9496216 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.926375558 seconds)
  done (took 35.575269769 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.929267941 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.857819723 seconds)
  done (took 10.570831766 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.847539565 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.878115537 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.881357925 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.86180039 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.846144112 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.879314723 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.887090987 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.888899162 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.858507 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.863214285 seconds)
  done (took 70.47320254 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.860960225 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.856438967 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.856387314 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.853563924 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.847201484 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.852849473 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.85412378 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.848703062 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.527385569 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.890008947 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.861244395 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.859898393 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.854221086 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.855651142 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.851239167 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.879346413 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.002261264 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.851764259 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.851833792 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.860575149 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.855038948 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.920418638 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.868422042 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.855181654 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.883395077 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.529531984 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.864318357 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.860953403 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.998060684 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.852594202 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.853931745 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.85799232 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.856875601 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.233020067 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.127389539 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.854247976 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.86418346 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.864352935 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.853007412 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.00842548 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.856870973 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.861819483 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.819880438 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.103416733 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.962061326 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.898965492 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.241909093 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.858953882 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.857075125 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.887423744 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.860409697 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.858178166 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.868974213 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.368988749 seconds)
  done (took 131.925065535 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.849978427 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.127770209 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.006971053 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.852977664 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.140223018 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056531705 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.853019317 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900624851 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.852708571 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.080997326 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.012760164 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.963530683 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.852582094 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.851715423 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.853386694 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.851427353 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.018898679 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.925719677 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.853126417 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.850975063 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884903918 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.096851757 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.977942378 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.854946728 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.87630255 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.067215436 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.976098658 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.960315924 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.048513118 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.850432036 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.918827305 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.855111699 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.852787699 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.851808392 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.009432575 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.949190624 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94174063 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.854206979 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.852365904 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.852600256 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.52821086 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050809105 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.950595604 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.99783832 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.101660393 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.059981309 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.644721391 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.8539721 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.601733401 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015887103 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.089245632 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.085215966 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.978571632 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.855495792 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.122784021 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.85423137 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.854678467 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.090583275 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080584679 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.956158097 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.856724361 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.855090891 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.854941481 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.099810886 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.856549032 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.949049937 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.85638821 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.853798929 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.951416371 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.95940543 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.085215163 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067687041 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.893070826 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.153976771 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.334598125 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.103833933 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.924659075 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08672455 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.857085414 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.8540919 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.939860061 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.706058991 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.014397203 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.107197547 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.115362982 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893447145 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.591775554 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.855050295 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.084979886 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.077868061 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.110317431 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.09684695 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.005516814 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.066951548 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.854335199 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.855282239 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.145884882 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.993735205 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.85948894 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.219626377 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093055603 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.435814586 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.885845564 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.168397383 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991715333 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.857999721 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.502203812 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.856291255 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.085196169 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.901846067 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.856814499 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.859344131 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.078377402 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.847894398 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.856983461 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.663537493 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.920736426 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.858003554 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.093118879 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.860050047 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.126692481 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.858189818 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.095192781 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.249543916 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.892358994 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.033179645 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.098662887 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.860528344 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.119722992 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.10551857 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.975299942 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.133872576 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.784867601 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.858165114 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.148391135 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.859820837 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.857441462 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.030976998 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.859005189 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.035198587 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.859741604 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.148328543 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.883700601 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012655364 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.860144511 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.119332678 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.894087579 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911949323 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.85919277 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987391364 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858974413 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.746834868 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015113544 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.859060496 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.860013936 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.401437943 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.859134591 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.015097678 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.092103043 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884334722 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.933676002 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.533039488 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.857722277 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.945567308 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.886413383 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.207512673 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.858218568 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.014062438 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.862022193 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.3998578 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.858378846 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.103423538 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.095332808 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.860908846 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.859906087 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.780387617 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.85948661 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.860177072 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.021851646 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.693426321 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.859167773 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063984124 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.863512927 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.990861696 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.862035551 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.940570768 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.213359912 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.8598002 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.860103691 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.860426504 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.8594587 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.859720865 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.069195731 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.891701414 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.398489919 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.00105486 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.132256019 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.182073223 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.118704274 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.908747875 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.864812581 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.109327089 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.863394699 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.926485309 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.862301091 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.884615602 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09586274 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.862766471 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.072920616 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.147448782 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.787080166 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911902844 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.862875051 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.862050979 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.786142738 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.017176948 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953425771 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.864524134 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.862320712 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.980123948 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.984823869 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.077777256 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.863571941 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.987702256 seconds)
  done (took 900.462979455 seconds)
done (took 1218.371658577 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.863761364 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.863514916 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.853394348 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.867642366 seconds)
  done (took 29.241609621 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.869924662 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.867540561 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.869096668 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.867601981 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.871148531 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.868333976 seconds)
  done (took 13.004603787 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.908539865 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.865733825 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.866214435 seconds)
  done (took 21.433431254 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.935996962 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.268759517 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.977080662 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.302764811 seconds)
  done (took 10.275304484 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.870574716 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.870509169 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.870726212 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.871039319 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.87062508 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.872361913 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.870495213 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.871154012 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.872467191 seconds)
  done (took 18.631671208 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.288136805 seconds)
done (took 98.666199655 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.237195032 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.85232064 seconds)
    (3/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.574631171 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.978422723 seconds)
    (5/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.988085868 seconds)
    (6/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.985688051 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.85847586 seconds)
    (8/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.597345384 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.406633006 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.014509675 seconds)
    (11/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.99587404 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.861792714 seconds)
    (13/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.996662138 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.979304311 seconds)
    (15/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.951516382 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.639579438 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.89531207 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.961689777 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.85939962 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.380567219 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.998758041 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.078043311 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.247593769 seconds)
    (24/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.203178655 seconds)
    (25/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.888142302 seconds)
    (26/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.942126886 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.07364457 seconds)
    (28/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.417995261 seconds)
    (29/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.002447596 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.965300938 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.239828561 seconds)
    (32/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.35886484 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.562284368 seconds)
    (34/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.975643399 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.858547992 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.839743696 seconds)
    (37/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.448064661 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.940161382 seconds)
    (39/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.026396155 seconds)
    (40/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.916021475 seconds)
    (41/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.954898961 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.159363603 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.046543077 seconds)
    (44/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.031775236 seconds)
    (45/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.862889967 seconds)
    (46/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.94711117 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.502114628 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.846225813 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.941867929 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.860136582 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 3.752171185 seconds)
    (52/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.941019093 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.043069337 seconds)
    (54/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.693074869 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.137785093 seconds)
    (56/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.869377044 seconds)
    (57/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.327755085 seconds)
    (58/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.98749798 seconds)
    (59/309) benchmarking ("sort", Int8, false)...
    done (took 4.830721066 seconds)
    (60/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.696734109 seconds)
    (61/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.030946615 seconds)
    (62/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.003411465 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.920763868 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.876036976 seconds)
    (65/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.860811636 seconds)
    (66/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.019784297 seconds)
    (67/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.849549882 seconds)
    (68/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.409930727 seconds)
    (69/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.125688867 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.506214582 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.057084705 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.181301149 seconds)
    (73/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.878659977 seconds)
    (74/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.216905914 seconds)
    (75/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.139351723 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.243371502 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.784604723 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.024553332 seconds)
    (79/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.833054284 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.200967359 seconds)
    (81/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.337733039 seconds)
    (82/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.166921718 seconds)
    (83/309) benchmarking ("sort", BigInt, false)...
    done (took 6.863139771 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.885926167 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.554301445 seconds)
    (86/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.073758708 seconds)
    (87/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.017400123 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.067754501 seconds)
    (89/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.730576684 seconds)
    (90/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.357119204 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.158957667 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.139165319 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.108566167 seconds)
    (94/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.198606932 seconds)
    (95/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.062841331 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.869246751 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.853349439 seconds)
    (98/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.506853012 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.252775999 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.052209077 seconds)
    (101/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.894251306 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.8663157 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.508909011 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.873839755 seconds)
    (105/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.201696004 seconds)
    (106/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.342637072 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.815294305 seconds)
    (108/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.191149543 seconds)
    (109/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.037629417 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.102854127 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.955126994 seconds)
    (112/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.974545119 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.790094909 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.897621737 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.069251863 seconds)
    (116/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.893213073 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.126557292 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.886565318 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.658561144 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.876965683 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.241968883 seconds)
    (122/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.932737083 seconds)
    (123/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.770982904 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.861529344 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.956975484 seconds)
    (126/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.402698081 seconds)
    (127/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.646381937 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.202563823 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.556909167 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 2.326748457 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.891161499 seconds)
    (132/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.868953255 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.134511969 seconds)
    (134/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.948885284 seconds)
    (135/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.15474977 seconds)
    (136/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.303438106 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.565739955 seconds)
    (138/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.843756652 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.089631279 seconds)
    (140/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.982694706 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.97463463 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.121563703 seconds)
    (143/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.970492319 seconds)
    (144/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.078866607 seconds)
    (145/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.999962885 seconds)
    (146/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.954843662 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.980209739 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.342587183 seconds)
    (149/309) benchmarking ("sort", Float32, false)...
    done (took 5.570777488 seconds)
    (150/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.04879747 seconds)
    (151/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.874653659 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.146125719 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.901182108 seconds)
    (154/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.079914831 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.796762412 seconds)
    (156/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.973639135 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.897061665 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.06126684 seconds)
    (159/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.860191311 seconds)
    (160/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.985272657 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.041052728 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.89302695 seconds)
    (163/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.064196166 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.182289911 seconds)
    (165/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.390379021 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.150126443 seconds)
    (167/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.890326707 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.295356196 seconds)
    (169/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.959342296 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.858304554 seconds)
    (171/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.910824954 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.404011787 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.513104982 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.282534165 seconds)
    (175/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.383577202 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.211451612 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.980912141 seconds)
    (178/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.192755474 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.055386581 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.16737453 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.132109466 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.357781575 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.389089965 seconds)
    (184/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.135698017 seconds)
    (185/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.898153235 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.649124972 seconds)
    (187/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.375642687 seconds)
    (188/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.863985317 seconds)
    (189/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.479279582 seconds)
    (190/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.752963519 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.938306694 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 3.239193035 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.90416006 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.872523456 seconds)
    (195/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.919106435 seconds)
    (196/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.422130381 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.980245383 seconds)
    (198/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.006795853 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.095560271 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.963464859 seconds)
    (201/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.157427856 seconds)
    (202/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.11394744 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.984442368 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.109949707 seconds)
    (205/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.930658555 seconds)
    (206/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.110986226 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.930612061 seconds)
    (208/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.473120537 seconds)
    (209/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.050006923 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.836341348 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.879145121 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.836731473 seconds)
    (213/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.904084617 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.858967354 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.947051897 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.648954714 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.095138006 seconds)
    (218/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.759112677 seconds)
    (219/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.983643829 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.029954053 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.183657089 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.895753329 seconds)
    (223/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.898053635 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.211382273 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.977983621 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.891313915 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.873037213 seconds)
    (228/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.246080626 seconds)
    (229/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.902094188 seconds)
    (230/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.873989746 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.916122804 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.986351753 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.166536162 seconds)
    (234/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.377520823 seconds)
    (235/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.896217973 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.874737594 seconds)
    (237/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.961541095 seconds)
    (238/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.860311678 seconds)
    (239/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.229994405 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.943939507 seconds)
    (241/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.936919573 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.274291025 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.010546021 seconds)
    (244/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.019720478 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.878691529 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.256656261 seconds)
    (247/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.087591594 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.954257254 seconds)
    (249/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.078903511 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.271780486 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.879604819 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.310148326 seconds)
    (253/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.987484159 seconds)
    (254/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.261142533 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.941230273 seconds)
    (256/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.974654902 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.901517771 seconds)
    (258/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.900586077 seconds)
    (259/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.938667847 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.962873363 seconds)
    (261/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.863972525 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.255775222 seconds)
    (263/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.076211159 seconds)
    (264/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.067923201 seconds)
    (265/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.22447183 seconds)
    (266/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.015627217 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.904492294 seconds)
    (268/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.444459403 seconds)
    (269/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.906197834 seconds)
    (270/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.442095379 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.210859408 seconds)
    (272/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.881068622 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.91884415 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.250202345 seconds)
    (275/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.182599294 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.868022628 seconds)
    (277/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.310345521 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.87974357 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.205346277 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.00226553 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.270918759 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.966363293 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.178353122 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.961934954 seconds)
    (285/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.862891546 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.607736722 seconds)
    (287/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.154521964 seconds)
    (288/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.890962478 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.019750626 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.804933214 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.639463583 seconds)
    (292/309) benchmarking ("sort", Float64, false)...
    done (took 5.650741158 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.872511189 seconds)
    (294/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.873142046 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.883700298 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.865620208 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.997074856 seconds)
    (298/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.033436599 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.486866999 seconds)
    (300/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.358922629 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.960174889 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.875286598 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.982866474 seconds)
    (304/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.894487603 seconds)
    (305/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.72730828 seconds)
    (306/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.883561066 seconds)
    (307/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.041525188 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.258259621 seconds)
    (309/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.948676062 seconds)
  done (took 1018.63737036 seconds)
done (took 1020.506011711 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.91438464 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902760717 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.882436959 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.903666417 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.994642957 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.909772041 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.893105192 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.882524897 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.926616701 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.926937075 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.876592712 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.903801412 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.880254185 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.874863493 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.874908896 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.888541326 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.185893206 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.903096739 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.889305591 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.882400186 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.890145374 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.871478282 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.92550392 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.896081305 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.87374695 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.872496878 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.872597426 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.889976423 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.981356983 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.871690857 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.870880728 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.87857221 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.17746427 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.890331947 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.860784318 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.885445686 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.877512726 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.875519745 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.874041816 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.896253418 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.310285766 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.870720114 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.866324405 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.867216213 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.863404264 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.868067882 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.864992978 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.869124198 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.876504587 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.87725938 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.30384539 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.882306088 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.865107218 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.862843962 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.873272539 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.859581123 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.863647755 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.875046126 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.879732755 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.87671481 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.15832808 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.886067278 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.860499779 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.874804952 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.86790951 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.335895604 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.858208119 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.860330686 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.301793634 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.868999949 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.333190775 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.868048825 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.856823533 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.86881425 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.88804335 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.162916962 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.871515001 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.853527709 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.861041723 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.853735536 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.862167365 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.865389796 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.85800448 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.852636541 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.866784905 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.879880907 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.86175946 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.853197564 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.862035189 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.871711243 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.860585381 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.861560341 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.854959856 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.847293268 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.85991673 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.85529399 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.853494266 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.853542716 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.855027215 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.860969259 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.291029315 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.872680471 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.84704692 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.84689558 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.849038605 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.863198939 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.292468605 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.854080602 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.870900938 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.896417418 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.850228118 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.150321113 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.874455258 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.864249363 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.857467168 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.851052652 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.846101632 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.14799397 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.313501051 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.86730749 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.849198251 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.847155797 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863208965 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.849151981 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.843572929 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.156082778 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.871598812 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.863488436 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.967846698 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.85742383 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.877977143 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.84463027 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.852431516 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.874282213 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.862102548 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.877674524 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.849391002 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.864027203 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.861123357 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.841612745 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.856553554 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.856415875 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.847055305 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.852781845 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.839576596 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.873121795 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.858601747 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.857981985 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.868973237 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.965603672 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.845417594 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.145394739 seconds)
done (took 292.253560398 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.915788456 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.841336901 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.943942663 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.841884802 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.92400851 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.930238302 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.839140214 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.84256922 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.839782459 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.215497723 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.839431077 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.839604879 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.835678097 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.838745637 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.92485381 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.842278189 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.83841665 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.177039216 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.840976427 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.912999681 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.834841697 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.837781349 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.839590451 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.212716421 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.840081871 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.837057713 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.914354462 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.839525561 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.177053231 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.838546366 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.83611851 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.17309349 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.932622852 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.858723206 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.846645619 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.845546452 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.920000994 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.842075617 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.920227335 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.920618652 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.935184649 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.878826028 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.837577085 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.831600465 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.839178864 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.8382587 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.833493347 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.865616009 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.835138216 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.836752664 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.172756327 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.847875744 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.835976698 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.833387798 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.834002012 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.867737087 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.83362431 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.837400387 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.932641354 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.837540358 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.899612488 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.207787607 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.210917256 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.835955938 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.829168035 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.834946468 seconds)
  done (took 182.245331995 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.901808152 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.909528522 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.90182907 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.83937086 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.885273552 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.904123815 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.838446028 seconds)
  done (took 14.939496389 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.842492432 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.837646421 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.885367212 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.886670924 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.836390033 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.989469042 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.837742194 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.847169103 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.841886978 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.888780825 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.836689575 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.836046379 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.833504005 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.826750173 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.885070577 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.842256906 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.947981051 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.83245259 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.831862308 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.985911919 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.831008113 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.837545931 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.866756204 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.842123845 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.831697204 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.83887472 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.413013356 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.831297547 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.827041887 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.829216824 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.827784544 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.871312882 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.830481014 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.832635825 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.827393208 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.946119343 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.830951188 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.828879239 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.83149261 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.830914431 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.8310158 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.831301058 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.83027641 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.828503322 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.830845622 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.856450106 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.832045418 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.832982099 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.832003756 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.832018594 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.868225512 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.831469625 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.828678375 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.829421652 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.88673017 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.83853931 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.833548128 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.829248972 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.832024667 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.828952766 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.985782827 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.87974684 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.830899782 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.879380502 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.8311126 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.832342021 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.831194326 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.831386526 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.927476667 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.832344913 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.88003632 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.829055537 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.99051932 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.856836587 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.832974792 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.835810923 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.835814808 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.833798968 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.828226572 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.838880693 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.829407789 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.834367771 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.83897598 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.830171444 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.830345032 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.94646084 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.940291569 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.830792866 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.845767454 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.841779759 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.830219348 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.867930831 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.832787766 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.831136747 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.887797821 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.950544368 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.89143538 seconds)
  done (took 202.149569819 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.839084317 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.841767624 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.83536346 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.851025722 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.834354735 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.833723538 seconds)
  done (took 12.792530365 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.836335614 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.833500944 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.833859887 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.833051744 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.834996524 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.835226394 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.835008429 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.83562121 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.83723991 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.834153409 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.835200046 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.834961473 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.835323994 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.835024054 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.836552466 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.834746668 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.834790423 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.832375065 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.834831555 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.834845059 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.005532947 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.835148449 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.835762844 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.836727483 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.839083748 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.83518941 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.842948951 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.834919756 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.835435633 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.843790507 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.839695383 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.836067553 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.835666316 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.840228478 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.839095375 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.836574804 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.838492649 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.836560836 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.833736081 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.837723417 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.835876187 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.836988618 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.836089455 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.837753501 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.838506986 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.839508806 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.840165976 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.843865559 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.837447147 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.836896366 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.836656248 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.835654042 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.837435502 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.837687894 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.838679414 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.841043994 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.841286735 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.837616466 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.836996794 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.838400727 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.837023993 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.837783219 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.838894522 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.84090465 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.835438194 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.838444569 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.838980459 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.841486921 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.837463701 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.836588487 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.83821402 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.83472027 seconds)
  done (took 135.196550156 seconds)
done (took 549.102788764 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.866630679 seconds)
  done (took 8.627655311 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.012959091 seconds)
  done (took 8.934689491 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.276374248 seconds)
  done (took 10.097689208 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.911667888 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.917300862 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.89964402 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.904344988 seconds)
  done (took 29.463532367 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.948009357 seconds)
  done (took 8.769501384 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.904380569 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.892254577 seconds)
  done (took 15.651904383 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.891851965 seconds)
  done (took 8.713413563 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.968881038 seconds)
  done (took 8.79198368 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.907666119 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.923778068 seconds)
  done (took 15.665115294 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.880268333 seconds)
  done (took 8.700673849 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.612310788 seconds)
  done (took 11.439920555 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.889991654 seconds)
  done (took 8.720546148 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.944160364 seconds)
  done (took 8.761859872 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.0686563 seconds)
  done (took 9.887914606 seconds)
done (took 163.98777777 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.890490721 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.890098877 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.889310736 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.887430352 seconds)
  done (took 29.373113303 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.925194797 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.923771502 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.925272331 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.937749667 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.924958177 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.927924368 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.927194001 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.915556198 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.933270101 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.926723071 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.923422825 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.924851689 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.922693114 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.913511828 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.924826622 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.922767806 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.931516616 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.922387149 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.913546274 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.924647099 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.887337284 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.931694795 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.923895867 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.887490176 seconds)
  done (took 47.934526904 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.088217794 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.957901756 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.040261728 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.940109003 seconds)
  done (took 9.836673146 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.936041341 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.937745253 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.94935699 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.989384376 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.014386323 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.945486109 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.909858983 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.903756284 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.889904521 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.935464266 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.0127578 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.929226455 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.021674237 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.880930983 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.060250051 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.881843615 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.879915388 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.931498678 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.983860851 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.997156456 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.881669087 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.931035285 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.934616088 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.926577459 seconds)
  done (took 48.475049662 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.878472299 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.885356413 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.88356691 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.877014111 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.877115468 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.878829313 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.882784435 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.876897928 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.897156563 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.877656862 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.874973647 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.87651453 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.87398354 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.874422291 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.874861383 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.887852433 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.889852841 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.873414427 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.876908288 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.880082792 seconds)
  done (took 39.399900816 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.869688913 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.723874725 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.220923567 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.120048167 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.865506589 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.865861872 seconds)
  done (took 31.462584854 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.884857123 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.870456149 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.867178718 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.923324914 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.000771245 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.875246262 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.864325987 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.875736559 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.908779876 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.92636979 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.88233136 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.888891452 seconds)
  done (took 24.559615864 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.857155613 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.856905039 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.856629778 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.87008592 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.86823976 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.871686465 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.861970276 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.849211928 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.869041325 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.868761963 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.859948879 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.865227054 seconds)
  done (took 44.14247349 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939437391 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.734450774 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.917408504 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.565383473 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.319986925 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.057437355 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.374107351 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.189126467 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.848909908 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118298481 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.97028979 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96496369 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.113156066 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86178267 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.864560103 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.3398727 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151560127 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089802627 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890679109 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.647702885 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915169583 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.289984677 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.850980421 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.917492451 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069667726 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.993982844 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.119626556 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.820839159 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995721906 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895535014 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864999592 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.855403133 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128394821 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241213373 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960001655 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866099447 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.552989035 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.576486679 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.847097268 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.640001381 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.703611196 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.986001518 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864357181 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856396318 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.790505186 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297019931 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230773329 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.859944272 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.566290108 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.855127495 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866272782 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944060343 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.85927927 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.673659853 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845048021 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.135803235 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.853026197 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863153743 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.424064303 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.032777456 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307312781 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.823514387 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.049459428 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.712823806 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252524041 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.005962582 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.859975524 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860236449 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790895269 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.659090028 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907475404 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.002444813 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.876473495 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506504566 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161973708 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.048880015 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798380026 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1470464 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.560176887 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.823748914 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084378346 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.809141213 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792534226 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.717199817 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.793002003 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175559819 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898057428 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.503145656 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901087185 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.198800112 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.868423886 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875183472 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865065201 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.082061303 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.425773777 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859243512 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.790075743 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010045794 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879696805 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.201699999 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793661022 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.861203682 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112579719 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.069779825 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.990312496 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.375198249 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017374612 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903673074 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.872629395 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.673065924 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.899227379 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.1328869 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916083666 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.990035351 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919544669 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.815334325 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174872744 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936784641 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.960733389 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.050335509 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.985192335 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19238582 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.148435848 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924607319 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.864561717 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860583077 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.67669049 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412358289 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.128497919 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.863719965 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.263305245 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.900199323 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.862799457 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796158099 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.479540802 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.990174275 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.839822241 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.085441872 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.724061865 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166533989 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79669045 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007445606 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.97551522 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.085233987 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.512065563 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.944344319 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119377145 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.24479475 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.033641572 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902230072 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880318128 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956545789 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883340011 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.185093425 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.145894211 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.865737332 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.866548928 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.707552972 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.859740885 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86779727 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.867086864 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.660532557 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143722115 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.890976939 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.872126397 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.751639133 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.87672796 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929967501 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.868760363 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.874422835 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.420751438 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.613814148 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.873545484 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.506032624 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087982914 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873622709 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.669371136 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977249803 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.94638173 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138657541 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922783178 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.798153409 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.576671098 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.557758701 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864409155 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.799776405 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.864081352 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871793779 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874951789 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.2397561 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.139410662 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904548387 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.659730828 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.900299873 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870545245 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.864963067 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859597591 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.39598587 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.039409086 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318583543 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.898628823 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997169194 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.873892779 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.795049378 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.863706047 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.865196882 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.85987686 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.81656023 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913610323 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.662690178 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235337254 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118217291 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.558800448 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879565136 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.776382018 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.915468394 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.88171076 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.622867412 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871012312 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.993701278 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874934751 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.874213605 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.674451862 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.557077876 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.428404794 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179130123 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174368937 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30406656 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.262789553 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.161179256 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.205107064 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100541213 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.394783871 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921342924 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.214161242 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808468875 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945712982 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.509837149 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216701639 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876358889 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089023173 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245147644 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.687524329 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006203415 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.071550281 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894296276 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.694782647 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.814304014 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.066154763 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000383479 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.725538087 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063069576 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199356413 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.656972544 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.954127581 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.85975958 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.573850743 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943594769 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.569247782 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.22216884 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311909982 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.894998251 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339582374 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.863022741 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.305891329 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216016866 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.138725744 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.974162419 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797319297 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.871855105 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.871030219 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.862424712 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.852111096 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.731336047 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.112471101 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872432661 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096119636 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.034835726 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151173541 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.76663678 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.866392365 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861699152 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175215693 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.568049218 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024505504 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.220258038 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.381892635 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864625594 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.795088197 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796596216 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.554044266 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.86538371 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.832204735 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083926137 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.04687751 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810527775 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271115986 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092204111 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.106855538 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.86777043 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.127583225 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128063355 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.591181907 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881607988 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.954554384 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.614884354 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.969119844 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.1242812 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.090400082 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.655818401 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086702597 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.919631751 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.637825711 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.854040169 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.068390002 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.123805542 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.866113061 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087843135 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.577730518 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.972271055 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176194776 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919459844 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.901244834 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.015002956 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.054716386 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870346451 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943705527 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869784597 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.871795578 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.872868897 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906494343 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.886194691 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.989143366 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.873240203 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948794246 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.000743676 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.388770108 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.865732995 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138046736 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217843118 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.187845935 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91896012 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860560646 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87098111 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794582866 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99740469 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.30761379 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13537172 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.991561917 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.160913901 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889369777 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.626466411 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.147911767 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090689397 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129484373 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.752226105 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865124336 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.863642967 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.120050109 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864039914 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.063473336 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083476967 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172096276 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326516651 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.991412158 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.223004035 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.127042245 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.220003503 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.852834096 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44220462 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.862411671 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.688830077 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.904697556 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.904724743 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127324815 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87052724 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240507607 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.881325867 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.057991332 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.376233431 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.704402545 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.148137925 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.852040575 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.922578039 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136948065 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.249369154 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170459689 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932190306 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870563334 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.574737384 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997014742 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.731143142 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.129730888 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861648741 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071683273 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.571969114 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.871430418 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139579606 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170800983 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.858802687 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.738771844 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869015453 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.869950705 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083944702 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132202829 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117418427 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872267995 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.867146927 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.680262724 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13892931 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920820661 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796736855 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.865628313 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960888882 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10994832 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884169016 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.550216373 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.57359416 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160711208 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.784109084 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883652447 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297538995 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.224308464 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188419242 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.40476462 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090747927 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.424257746 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.742460077 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159304103 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.869504345 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.28863395 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163128523 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.866429854 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.386482004 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896962374 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.1352727 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181083418 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.877992093 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797186332 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.844593108 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096425998 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.472111766 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815311744 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.882665809 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.935147304 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.875129923 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.00442104 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883887624 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.767508396 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.709818871 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.620192347 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365653736 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.878671907 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.866307224 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.682127659 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.446528484 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903300869 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016243486 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88067944 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.587085505 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.16532515 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.127672922 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.404148265 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.880196888 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.878750682 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875058607 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802578538 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.072960647 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.255628297 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174646907 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.241421693 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.907847675 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87805651 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.090267599 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086293359 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.900279755 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017596269 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275221305 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90922736 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.646004647 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.554394115 seconds)
  done (took 1681.29053409 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.879980615 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.88937539 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.879752499 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.930757132 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.902947663 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.930123456 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.931492084 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903563236 seconds)
  done (took 57.051560842 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.874951348 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.077810249 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.884890048 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.875326833 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.885962005 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.876180717 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.045259458 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.884224436 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.885165218 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.886643737 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.876583435 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.875035209 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.188365113 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.896492951 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.888912577 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.862398171 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.885533553 seconds)
  done (took 74.458008745 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.878806648 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.07521071 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.917515681 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.903962464 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.823179244 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.87760096 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.822494407 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.920120748 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.883029215 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.09069687 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.214240028 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.888930092 seconds)
  done (took 90.101847306 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.886694363 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.883250866 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.88400663 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.884076831 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.884260257 seconds)
  done (took 11.231687569 seconds)
done (took 2191.164182328 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.178068389 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.107903899 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.116013524 seconds)
  done (took 6.03028285 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.028189066 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.076109916 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.197263615 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.202031201 seconds)
  done (took 10.313071232 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.173768833 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.253542829 seconds)
  done (took 6.234735485 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.276519622 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.888639788 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.27329375 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.877574737 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.882363165 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.880944587 seconds)
  done (took 22.453515943 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.882496956 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.88645906 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.88225557 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.88607312 seconds)
  done (took 9.345479525 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.865025421 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.618611737 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.869921554 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.881358785 seconds)
  done (took 21.04431983 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.631593117 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.315498933 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.626824144 seconds)
  done (took 9.381887627 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.464491856 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.105140873 seconds)
  done (took 9.377718447 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.142915027 seconds)
  done (took 3.959803362 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.920412374 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.16266879 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.426152528 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.458025788 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.526468247 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.07010363 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.269959127 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.157384749 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.316076702 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.37032439 seconds)
  done (took 25.494228796 seconds)
done (took 139.057888963 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.43550133 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.279005128 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.093071122 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.271057732 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.129525485 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.095677734 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.088299383 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.251859316 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.761641089 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.761230886 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.299864173 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.120988598 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.038480942 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.269089814 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.045354681 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.892216216 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.122475126 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.317768287 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.952336948 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.153447206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.097218624 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.884713583 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.139833824 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.893772298 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.123229961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.045730781 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.45806891 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.892425858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.098830688 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.468503794 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.047596258 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.298566847 seconds)
  done (took 169.645634222 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.891174304 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.892253422 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.891736738 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.892065475 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.307330036 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.893233101 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.892650461 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.892924739 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.895779771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.878968246 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.893557119 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.301204837 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.897405935 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.892845491 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.89815077 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.892329875 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.089861003 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.90196448 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.905463108 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.90495437 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.908787106 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.169102403 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.909170102 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.21451575 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.089933732 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.914773215 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.892458009 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.916122082 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.897969126 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.901658721 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.903636247 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.894116394 seconds)
  done (took 208.33946328 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.893740243 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.89645686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.893969294 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.893763335 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.895598838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.893048364 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.894589837 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.894017756 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.559364103 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.558933438 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.900161314 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.89957341 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.906425348 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.893742111 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.895049443 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.89446503 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.901329283 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.90205053 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.900442452 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.904534371 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.908294067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.750548192 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.905971976 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.752690241 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.901224249 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.89988143 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.895491385 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.905931078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.908923543 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.912020898 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.912956054 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.89635878 seconds)
  done (took 221.653110554 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.08983982 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.90179208 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.902813798 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.82940482 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.902071018 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.90172675 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.856661558 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.099325187 seconds)
  done (took 19.324010343 seconds)
done (took 620.794489473 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.360361765 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.215005689 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.084218753 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.926633462 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.150353884 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.964274398 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.921830915 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.994758059 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.658715003 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.996423488 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.612458399 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.945386327 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.704849377 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.951958573 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.048233128 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.984861517 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.472278017 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.565093069 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.106149316 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.977480465 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.102485009 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.890733677 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.009390851 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.673354117 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.726299674 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.936484753 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.112469875 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.475599148 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.935103506 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.091123464 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.69849547 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.328933488 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.938212061 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.925998474 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.983913175 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.961410616 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.280246368 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.936143086 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.046913185 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.690624028 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.986808808 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.53095431 seconds)
  done (took 104.726561412 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.894138651 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.893024313 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.892438458 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.893579446 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.894363536 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.893768064 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.892448109 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.892006832 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.893376934 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.892671335 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.893071288 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.894515688 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.89279708 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.894845182 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.892912315 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.893257725 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.893921336 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.89597161 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.894040992 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.892700524 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.894553388 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.894102779 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.908464085 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.89439577 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.894881618 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.894740706 seconds)
  done (took 51.088343902 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.905990058 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.059647039 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.171578089 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.929100781 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.906742866 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.909981303 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.926025841 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.911930864 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.909003273 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.908186802 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.000699752 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.913842044 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.927137406 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.170438137 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.9280685 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.90713097 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.906994828 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.907183785 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.06669991 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.925196637 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.927611019 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.911408159 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.927670819 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.92198529 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.908724252 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.908590714 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.911596583 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.384329381 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.917104491 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.000106594 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.970463319 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.932150199 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.331008887 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.182999193 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.965765544 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.918033356 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.907915688 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.003360086 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.914400199 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.90850601 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.927386755 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.914188436 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.170026225 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.409056174 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.92446926 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.909051421 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.397132471 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.014085971 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.95049124 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.920769269 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.17346121 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.92769985 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.909893633 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.90967924 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.946254953 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.919791822 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.90903442 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.231291363 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.922894949 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.928308092 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.914329001 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.910550693 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.07318804 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.919317903 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.0605113 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.920474498 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.916247095 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.910095635 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.172289482 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.928748997 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.413647935 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.926143163 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.910182227 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.002504643 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.067880193 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.422054509 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.923602347 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.075285753 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.349888149 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.935560446 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.91795431 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.374295112 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.940661767 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.919000202 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.912084411 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.91332985 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.910627378 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.956620752 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.927366681 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.334743178 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.422612617 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.25038947 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.939270863 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.926969087 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.913070167 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.233495037 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.920803576 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.911009961 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.166687054 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.427274782 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.928256236 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.91983719 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.401296289 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.929211918 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.931989981 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.922098468 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.177266474 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.930744519 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.957628684 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.912561057 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.919059402 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.914698847 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.931218846 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.920021867 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.912565718 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.39344448 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.026401071 seconds)
  done (took 237.09107912 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.90728922 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.917556029 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.905473257 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.907013174 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.905799808 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.91234954 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.906340926 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.905553309 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.911585268 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.907035371 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.905668099 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.908495089 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.909821331 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.906186263 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.94772439 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.913569884 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.517850606 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.906838054 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.907739471 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.90775351 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.558126547 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.914633238 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.906381109 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.921905138 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.906985571 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.908740447 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.917102327 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.951175924 seconds)
  done (took 168.639171684 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.913834529 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.031963622 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.933896989 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.942246721 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.92257289 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.911067265 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.938405147 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.930693391 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.920848768 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.911687978 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.911173093 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.976652735 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.928733377 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.012697597 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.944754664 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.946964599 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.019434993 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.920903113 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.912010514 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.912353597 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.944226709 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.910913511 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.976124319 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.044389425 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.933981325 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.03468367 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.924310066 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.915577873 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.914205031 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.034028381 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.930582329 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.976519463 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.948489364 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.933414972 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.038956144 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.032308198 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.019585607 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.943809525 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.920219083 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.91371662 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.912278569 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.903658691 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.036195027 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.93428904 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.916288189 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.027965697 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.935419533 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.917254776 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.924749896 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.914350126 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.929861056 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.935281589 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.985873386 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.054469924 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.949944156 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.94061622 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.942754379 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.195753242 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.926469218 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.016072945 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.911192454 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.037051676 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.936765056 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.904554534 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.916178517 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.920831467 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.945287231 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.946874446 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.022545047 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.924258443 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.015822361 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.950745279 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.922671829 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.914819742 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.918236047 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.03445853 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.035358727 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.950608067 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.95453671 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.947883505 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.913631281 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.917291165 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.906831912 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.934855796 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.920539007 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.034886534 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.03486177 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.923842289 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.917649538 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.91765028 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.918412061 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.943612337 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.046044405 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.954163538 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.015138613 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.986232975 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.994875701 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.936293466 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.9302574 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.921649247 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.983065344 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.933813049 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.928798284 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.243450438 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.991238646 seconds)
  done (took 207.531712872 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.386041052 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.973982121 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.97762297 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.234009303 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.353285978 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.814057795 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.969221223 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.966793307 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.990953146 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.154818019 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.037842703 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.985924111 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.954193307 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.941332075 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.968304768 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.991612841 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.977991601 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.302944793 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.101031445 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.102204117 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.950309746 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.230767732 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.291974696 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.362965305 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.004601457 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.296134231 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.650093835 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.111101536 seconds)
  done (took 62.929462009 seconds)
done (took 833.828472803 seconds)
SAVING RESULT...
DONE!
