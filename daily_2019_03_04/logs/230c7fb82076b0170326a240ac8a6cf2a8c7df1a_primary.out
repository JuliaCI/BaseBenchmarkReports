cset: moving following pidspec: 29328
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.345735095 seconds)
loading group "string"... done (took 0.594609358 seconds)
loading group "linalg"... done (took 7.56855998 seconds)
loading group "parallel"... done (took 0.175955287 seconds)
loading group "find"... done (took 1.219854854 seconds)
loading group "tuple"... done (took 1.893263992 seconds)
loading group "dates"... done (took 1.282725954 seconds)
loading group "micro"... done (took 0.239161918 seconds)
loading group "io"... done (took 0.983913757 seconds)
loading group "scalar"... done (took 39.782051927 seconds)
loading group "sparse"... done (took 12.699989617 seconds)
loading group "broadcast"... done (took 0.999147584 seconds)
loading group "union"... done (took 13.8352719 seconds)
loading group "simd"... done (took 4.674286212 seconds)
loading group "random"... done (took 9.442688448 seconds)
loading group "problem"... done (took 1.952525654 seconds)
loading group "array"... done (took 22.279640562 seconds)
loading group "misc"... done (took 2.003116972 seconds)
loading group "sort"... done (took 3.400685108 seconds)
loading group "collection"... done (took 19.264494426 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.560649142 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14533552 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137626272 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12640171 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187676078 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134368707 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143635277 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087833809 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.901505677 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162597121 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141859857 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.51891425 seconds)
done (took 4.963549677 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.19394144 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090052027 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099317087 seconds)
  done (took 0.851531983 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06646719 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128645673 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08270927 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068665041 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068067223 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082456427 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067595927 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067353604 seconds)
  done (took 1.235645968 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07607408 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071061325 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084551786 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070003865 seconds)
  done (took 0.972904556 seconds)
done (took 3.99647067 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.939269425 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.256903154 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194907028 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.489956315 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133815404 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.192010053 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675416093 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326516865 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.218258069 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103230921 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108400041 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.393599178 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10774957 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672972153 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077064952 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106928892 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.162741145 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.420899181 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081589122 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083951004 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105381107 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141213976 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101082915 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079130107 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.171232227 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07099608 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.153468284 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095318073 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069156639 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.252025883 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189592029 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68552176 seconds)
  done (took 10.569692599 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102475633 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.122483383 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070155392 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142163778 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122586042 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07308555 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074133974 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083671978 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095389266 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163971384 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.119228869 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.126168538 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067325571 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072836312 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104005416 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231934067 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.094168328 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103952377 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072220855 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091657851 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111206758 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099674301 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082969085 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097092103 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152849443 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193046346 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098645521 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111977908 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069916177 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097219054 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130910123 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133348085 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067788974 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08503469 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.160153006 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096661953 seconds)
  done (took 4.601749169 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.107572182 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100620535 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.177456251 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094920144 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156339802 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08595846 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1142504 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.08364495 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100866732 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25327043 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.097796979 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.492864913 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113497414 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103974572 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070394135 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088256029 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069375609 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.629863329 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147637217 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.124140913 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086983385 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093202911 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072599437 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365517618 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082517473 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067644656 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070157686 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.076650594 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149800778 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070197371 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.27864914 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089878553 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089844747 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121179294 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.179591967 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097533187 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125180923 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084168982 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066854428 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17585995 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091893025 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069172207 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092024967 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122694105 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121584176 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083964137 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068766668 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.187133913 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065596093 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083727011 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085355389 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.948406826 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097094439 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167620088 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095231143 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082567421 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.300072699 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086632983 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067936421 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.08707618 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.265989149 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.187540278 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085245748 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068963086 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084302727 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071015737 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.3719899 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068020423 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.751978434 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073181994 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078066458 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086574933 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069536386 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090655291 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074355444 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103710038 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068169721 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070304126 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084454783 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067419588 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086829375 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.089090592 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.2088025 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.088814251 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069532607 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083685892 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088914782 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11445584 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072463789 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067644937 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117775085 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066170354 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086343077 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069706014 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122360016 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070660894 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105304986 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086063145 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115495835 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082923215 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.125938595 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070307102 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116069081 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077579424 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115930159 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097570413 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070848691 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.160451418 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066486914 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08289632 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068814723 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084095617 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069617763 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070687698 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100686389 seconds)
  done (took 21.49582595 seconds)
done (took 38.443135628 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.313906215 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095990181 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095808028 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.094494107 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078386187 seconds)
  done (took 1.428486402 seconds)
done (took 2.148909815 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152596748 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103664928 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082294189 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098550195 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082073982 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104328461 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119393508 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082498095 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120527754 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065152073 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115794083 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066053413 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081865918 seconds)
  done (took 2.025483065 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084426515 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086029191 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087540797 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081941144 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080280615 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.0825169 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081087198 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106603515 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081008521 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089631374 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064800973 seconds)
  done (took 1.640448333 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082560703 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084140356 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087216461 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081598252 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079887681 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082176115 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081069142 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102914716 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081540002 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090065476 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06464049 seconds)
  done (took 1.63611744 seconds)
done (took 6.014354134 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081025691 seconds)
  done (took 0.792094114 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.751920822 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.492111833 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085673105 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.138873492 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.226544835 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.161019589 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.464004824 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113202316 seconds)
  done (took 10.357307667 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.116474563 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088747659 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070302429 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088291271 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070582888 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.090193695 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070818892 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074731918 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086963531 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.0733372 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087990844 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071122554 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086000668 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069825641 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084418857 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071500712 seconds)
  done (took 2.09069703 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.106097578 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.104273564 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092675709 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077013652 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090277911 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07420104 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093323428 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075318167 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088485709 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075070051 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.0922257 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077594932 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089241218 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068037469 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091265435 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079673165 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087533959 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076818593 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091392444 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077579433 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092622378 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066446397 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088877952 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076813141 seconds)
  done (took 2.868219843 seconds)
done (took 16.824981418 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.134074495 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079353903 seconds)
  done (took 0.934769221 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084273241 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09942584 seconds)
  done (took 0.912498637 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085644208 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081759392 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092553884 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094744333 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083343172 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067663921 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102940393 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069005116 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082480615 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06919027 seconds)
  done (took 1.557780643 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07187844 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095314937 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072939337 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098309435 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076870041 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082123997 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076197829 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085014875 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081684094 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080541184 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072765744 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098834032 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072898661 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101008962 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.091019617 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071040564 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087839605 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070258996 seconds)
  done (took 2.21673468 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068420637 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068684787 seconds)
  done (took 0.867540157 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068249398 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065589423 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083423426 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06838614 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080466355 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065267893 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07958401 seconds)
  done (took 1.240940234 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.414611938 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110373575 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267523213 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074031516 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.107350423 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.296668131 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067772711 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072607044 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090103711 seconds)
  done (took 2.270881126 seconds)
done (took 10.728416741 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08132999 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087363627 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111943963 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.442289898 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107246892 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066967798 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144733443 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.214500476 seconds)
done (took 1.987550982 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.130046508 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.630820198 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.418402216 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.232470131 seconds)
  done (took 2.019815856 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.386542229 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093612246 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073459474 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067663615 seconds)
  done (took 1.360118714 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067144117 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072558114 seconds)
  done (took 0.882803551 seconds)
done (took 5.130065724 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067810377 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067664426 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081078418 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068858275 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06598235 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081103542 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067414966 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06947483 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.083972519 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.068137693 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082479637 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066757652 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066386169 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083707166 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065755396 seconds)
    (16/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066777528 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.10067893 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066037372 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081583059 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06780143 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.082027052 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065765455 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066168529 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084826344 seconds)
  done (took 2.562296429 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088177939 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083822345 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073403263 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088563253 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072311288 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08885531 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.076118526 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069854039 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088404131 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070207646 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0864396 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072253343 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085500801 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071498487 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086064397 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072430254 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088409361 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069073022 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085231953 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072260033 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074094266 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084098086 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073144199 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088285604 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072172426 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08673219 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070635863 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083499461 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072991429 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086957124 seconds)
  done (took 3.123282982 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073148777 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064960366 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081358588 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072779668 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065273926 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082799172 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065465685 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082090687 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067458334 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065577305 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082534484 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065273861 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066201551 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081433244 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066389513 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084902567 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083002457 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066696259 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082102866 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065874792 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084386663 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066499145 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065274276 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081490317 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06498132 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066656114 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080980975 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066264741 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082000404 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066053153 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068203075 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084877883 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065192649 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072038437 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084888998 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065272104 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08464587 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06628683 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065751197 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080596726 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06532392 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065063211 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081204531 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073134886 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066255973 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08249533 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065301086 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.0827711 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066092539 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069261252 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080503143 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065722168 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082429782 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065906393 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06927935 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081015158 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066149911 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065286352 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081922819 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065081113 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080356947 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064813956 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068646988 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081653695 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081799808 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087970054 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065441586 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066685454 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.082648568 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068236524 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067097416 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094727094 seconds)
  done (took 6.022533535 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.121766672 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094282694 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083592617 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067175135 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080881508 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066784462 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070313667 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082055317 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067725619 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088443056 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065722716 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082667873 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068224494 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080662764 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081575749 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067680209 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086982318 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064530598 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066502593 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08481562 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067291006 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084861671 seconds)
  done (took 2.47300082 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.192836193 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089298019 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113268388 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092173544 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086054102 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074940177 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08913439 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072608602 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073067897 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085970471 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070707041 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087829269 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069562738 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085537074 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071009051 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085818674 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071521285 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086160912 seconds)
  done (took 2.345986387 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08130755 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067861546 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106394113 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068881754 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085022746 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071437663 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090344476 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078146719 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086622035 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068173408 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093076113 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180707597 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086667769 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069137439 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086348262 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068985535 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071068601 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084105715 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07816304 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089738593 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072720992 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09234432 seconds)
  done (took 2.626543212 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083708591 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069940974 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103128678 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087143669 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065705445 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066714003 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089772258 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069886805 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091713638 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070445873 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084050052 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067918939 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074833655 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08362544 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074866776 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083640154 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071650912 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084444492 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069655825 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064289845 seconds)
  done (took 2.308430172 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090615986 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08648606 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069572963 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094011781 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070245363 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08628831 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078870628 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086219094 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069538543 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10990298 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069972829 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085699351 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079264362 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091755329 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070634663 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09425856 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094545928 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079187234 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08562519 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069873764 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111966294 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07072617 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093519171 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069697282 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086721233 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069550488 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086223666 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076022039 seconds)
  done (took 3.082459303 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068568652 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067755814 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082050004 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066624065 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067168613 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081634273 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06518497 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066059849 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083400319 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065761694 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084187827 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068084151 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068270836 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083774362 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067537659 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068016186 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084045106 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065803438 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065738676 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081069806 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069114082 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084288151 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067862055 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065749943 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08181178 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067947731 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065467047 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081036246 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067824665 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065116593 seconds)
  done (took 2.923900694 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078497255 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092214152 seconds)
  done (took 0.928998634 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065573934 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083304821 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081878774 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072013058 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090240729 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068724272 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093257909 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07306952 seconds)
  done (took 1.380730454 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084828808 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080773039 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08595051 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097088506 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080546438 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085473131 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160135989 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087080542 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075322393 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083547048 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082339501 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084924582 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074283131 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068222648 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091015822 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075188894 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083069211 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074300874 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071718151 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083264814 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071256779 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097420742 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070391645 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.082154273 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069702856 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078437859 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097795516 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070229686 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087340947 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075768836 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091301151 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063144985 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085569213 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069758211 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066670469 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095695952 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085133114 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087736246 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077692481 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086404171 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079965347 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080673344 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072961677 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092194902 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078961686 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069418348 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085718339 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064578145 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082607087 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070527321 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063830811 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085241519 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064012369 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091800796 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071578804 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095850744 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068262488 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070454864 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088002865 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072443656 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091833229 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071403918 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070769108 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085447552 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076812799 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089461784 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077779509 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079788679 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063066985 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06660885 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095955575 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091784963 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092111287 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069539966 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087208134 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067042739 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087654791 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071062497 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074459386 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09079693 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.0701683 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090874468 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076060427 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084694166 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07231951 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092497179 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067914573 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071488345 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083522885 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085298817 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08350274 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066757855 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082654655 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078878833 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072003766 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085569577 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06637406 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093191905 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063060465 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070000856 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087094137 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069152463 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095950913 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075064383 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090860576 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078027107 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092724782 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068774363 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088110765 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065280297 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069884661 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08540612 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076623238 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079245445 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072593301 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069139512 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085706014 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078115576 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082824056 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068993019 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09321337 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075647692 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06686725 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080985813 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071640527 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084971446 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072008377 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093663614 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067035225 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064253898 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080243133 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072097363 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08506201 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073232867 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090459244 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072004178 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063706239 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083185545 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072829177 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095398802 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068806532 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085450562 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074590897 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069667515 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08382051 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074731174 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088481983 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067588813 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073732053 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085975622 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065313559 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088708731 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071469549 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084262684 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072884474 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073362698 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087937248 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070522592 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084363256 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074430138 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085750199 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067335605 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068801465 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084021451 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079333325 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087710671 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06352997 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065890337 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093610654 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066396008 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084895401 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067288507 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071511326 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086778974 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066731877 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085189182 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071712877 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097384485 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0730848 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086861402 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075358702 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097338253 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068348751 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071813114 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08548834 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071385228 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085920778 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07850541 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074855836 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090865037 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070952272 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082919604 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075340092 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094545335 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068578833 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068110659 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084851333 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074153743 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092321004 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073830308 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.087435583 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067456379 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070114824 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089069232 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071387845 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085992116 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068358872 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090937209 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06897209 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092114273 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07052007 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080186304 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089199606 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064684335 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088311352 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067373016 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092356357 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065296542 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067297816 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084297567 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070964803 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067378001 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088667523 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063759486 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092887155 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076399559 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086445218 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067806551 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069039795 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092025403 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070320418 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089324516 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07207568 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092190684 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079093464 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068416401 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087946267 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080908444 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086084358 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064680107 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090803075 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066863187 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069853211 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084317419 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06669904 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088454083 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077236194 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092969203 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062702851 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072627086 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083773345 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069113632 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080916791 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074750662 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072701884 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086712552 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076072346 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086811803 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069206496 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072803122 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084615073 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069467321 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085977897 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073086906 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087538802 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072365825 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068974399 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089416038 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067328353 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083310372 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070273109 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068373978 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086626936 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074262879 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084735769 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069894476 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071274403 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086270465 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069709448 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086476677 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067941133 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088892196 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070585092 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070045468 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087648106 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064646831 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093236026 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068088411 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076442312 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085522091 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065834272 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09193675 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071663751 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089927209 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070467211 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070304644 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087488959 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068026859 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089308041 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076703143 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067204193 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098075722 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079525328 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085807749 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071509621 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086479346 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070781031 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068329474 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086602819 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069662012 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086720126 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069794777 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090988498 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073626722 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06905603 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08851456 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070731422 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085968066 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071455067 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063522077 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08510429 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068410031 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085084774 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080221053 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069514555 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086198897 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068535539 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08671305 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068316852 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065623605 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094016312 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096286034 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069710472 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075945228 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085417728 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071488635 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09719005 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.065910339 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083869136 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066591299 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066446948 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093702724 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069438399 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095978763 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068815114 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067724693 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082870581 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070671594 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084865486 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063394307 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067406361 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090318192 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067801082 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08476129 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069584242 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072523023 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087917743 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079529901 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084989532 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069227123 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086390732 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065949855 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067614294 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086403197 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07301626 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086417343 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066597937 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06611142 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086283886 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069925627 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070213763 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086632445 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07084549 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094016561 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069568091 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088568685 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073424275 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063650304 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.088670443 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069965003 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086051009 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067978861 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073114195 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089396584 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071148627 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095472892 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068304324 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086717348 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070174809 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067443427 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087179649 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068591821 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086924762 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068055282 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070361785 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095400177 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067519726 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090457564 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069026235 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087342933 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077702112 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070931197 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090150899 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077401825 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086617095 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070596203 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095082915 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073329764 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08987458 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071320155 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070131264 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093016573 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06908509 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092951067 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069302901 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069855267 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087106246 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067091228 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085601879 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069848918 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067823703 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093606535 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071051613 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086014666 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067834594 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067637154 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087564634 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07361969 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093111869 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072356633 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089656127 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065669653 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066020083 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087157897 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06684855 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.0878473 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073115731 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075920427 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088188767 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068624555 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085127348 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077940036 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093062881 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07438225 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066291379 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091010896 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070102614 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088512269 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06981407 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068581363 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087574037 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073583869 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087497168 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06816998 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094553195 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072043054 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071045211 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087341908 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069719233 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086801319 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065525903 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071045772 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089610863 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074538897 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088590565 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07073676 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097304741 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068008188 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069324179 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089885213 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069934844 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092096063 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065590118 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070913054 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088242439 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070891773 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082021053 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068682891 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066564255 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090219577 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06940329 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082498229 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081466124 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096768654 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072883387 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068289406 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085198168 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065691224 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082417472 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068736545 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070506076 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088631051 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079622397 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086245317 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068795542 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081551177 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070625423 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072096693 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090439528 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066157288 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081410172 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06830766 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071985714 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091916413 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067951115 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086392343 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074479296 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072927229 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085725058 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073580635 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083262528 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072335606 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100947063 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069951706 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069128347 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092966588 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07693661 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087027689 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.0646998 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087067579 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073333683 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069045023 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088030596 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070307556 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10245132 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071849468 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086027255 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068330178 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071987781 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08600697 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078009127 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087971439 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069745775 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090689185 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071587224 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096267747 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072891813 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094660694 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073720906 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071716636 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085757184 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069277747 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084278169 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068055868 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070158396 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088114818 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07513343 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096163465 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069920686 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098487174 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078999728 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088590763 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065902851 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068965758 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086319277 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065499626 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070496687 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084547913 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067458793 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085622026 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069258895 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070621439 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09197417 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.07032806 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088999782 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070571295 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063325997 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089670545 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071407745 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088179313 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06552666 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069995431 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087399267 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074179386 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090976927 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067041981 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088253576 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072312768 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070826588 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082471004 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076698757 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085970587 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072343267 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068059918 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087234384 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070724274 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090478133 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076038862 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087886733 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072502314 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078879401 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089025873 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066065614 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084430046 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074425932 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066953651 seconds)
  done (took 47.505175319 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110785024 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085265242 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065699246 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081929447 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07831516 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084440634 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064753688 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065882725 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084356199 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067546166 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082036624 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065317833 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093392708 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089209399 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096248734 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087365221 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064011206 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06487721 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082281626 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066122493 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093189097 seconds)
  done (took 2.476279466 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088208217 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.103686667 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080985808 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101928375 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092609644 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080856883 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098034204 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081096666 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100755647 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093596278 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083720536 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098990581 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07762939 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094430425 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075312675 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097109183 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100620213 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074341932 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.097843669 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080439624 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096489689 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097132397 seconds)
  done (took 2.795051195 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070425354 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067958213 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08810557 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064792725 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067880814 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081045259 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072261651 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083882107 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071753514 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067144476 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.093899476 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06703765 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087778736 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066956722 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068134335 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084684892 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.136000487 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073256304 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086572219 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06978733 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063924857 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089379882 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064629616 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083031428 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067332841 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072368651 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087967696 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066337614 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085737797 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06788984 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067761298 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084117051 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069811688 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068180967 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085182401 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067287891 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08644039 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069177299 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064232694 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084598465 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069956431 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082599998 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069689095 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070370065 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08512814 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066569238 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087037963 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068983365 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063855995 seconds)
  done (took 4.529747499 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088740231 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.144767824 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090088207 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126147263 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085127998 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095422639 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073710619 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12612055 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085806672 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068663385 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10555686 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083404929 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08773584 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074924502 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094162992 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068918164 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089212847 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068225202 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092025699 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068802946 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.091702641 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076648419 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103498321 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100896407 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074119476 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067080462 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087451141 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073468379 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101584519 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090622494 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074928224 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093334294 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08486344 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092901276 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067966527 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090418623 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085821518 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087828334 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072121111 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084876977 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071375159 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091183734 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075246673 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106048926 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070519512 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092239468 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068834384 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084251977 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083469844 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090586749 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076198002 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10366496 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091387402 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068589756 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092651156 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.085244369 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086987523 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067990099 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08967162 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08267724 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.085097654 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072924558 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10070349 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070104842 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094662163 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.084922724 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092605356 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072249453 seconds)
  done (took 6.80959814 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078928833 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093247099 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082848433 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104082176 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093921477 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076418038 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093071028 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074427205 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092807689 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080529173 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093349143 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117518489 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071401424 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096581784 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077040235 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094233452 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074845358 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096574926 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09265392 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07661617 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093690421 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082308917 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094019402 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101681649 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106864664 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089721092 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07504399 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093854151 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103286799 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076492454 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106011511 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075048823 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09376185 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102875204 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087879342 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094047246 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067084733 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093442942 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075696002 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093553124 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070595274 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10345581 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093694147 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070375572 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094271375 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074556609 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103014738 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.105469914 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078772337 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098572827 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075510112 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10254897 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094323646 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075895286 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102836385 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129452296 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083643804 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101664997 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093169267 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08480392 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103831398 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110078273 seconds)
  done (took 6.43214134 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091309285 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096288382 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099410481 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065263506 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066964783 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091631461 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06789465 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085307098 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078426597 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096726734 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082001099 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09306294 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076192257 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0998476 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091812684 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077345028 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091194502 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074096983 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096017715 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072040868 seconds)
  done (took 2.506047768 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078102704 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106215605 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071052603 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094677994 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072256124 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074769521 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091609682 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072077 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087707083 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071632914 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099375116 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079131098 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088073515 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075809494 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099681073 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075653465 seconds)
  done (took 2.155178574 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080765601 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.098494051 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084529181 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08868254 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067958095 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085815204 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068978106 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064289353 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085501166 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08335374 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089584986 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072655362 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087944007 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067947267 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065643532 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090637786 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065027056 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085418585 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069161592 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103165134 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080158606 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08654666 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070942308 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090981955 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069326522 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093972119 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069601998 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066926943 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086090565 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069543357 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08972052 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077581516 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084977758 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06857951 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087292607 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066782626 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068102026 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088763934 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07118754 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087507275 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068182463 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.086992271 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069357952 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069377351 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083985488 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069108332 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.08412496 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075687893 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066758459 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089486544 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068841026 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089975722 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070614872 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098693608 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07229884 seconds)
  done (took 5.164053325 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083292447 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072238142 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084985073 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067920318 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091764611 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07083695 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072769275 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091110291 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071371862 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085319922 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071038656 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090363866 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071459309 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072788994 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089948941 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072656823 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083174093 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070888888 seconds)
  done (took 2.237023274 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075561504 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068590204 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095036139 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068593893 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088081489 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071554974 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065086999 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086835593 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0680813 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087439657 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069672167 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070322127 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087411192 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071754148 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089138739 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07003747 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071507115 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086252727 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068379324 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084064273 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071421576 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066759731 seconds)
  done (took 2.50469911 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075169923 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096434413 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.167848026 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109782538 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085149213 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.102114174 seconds)
  done (took 1.460617356 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093539954 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102326784 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070300217 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110631776 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079341598 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089662806 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071905153 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090280776 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081487656 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104693873 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071060388 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099302794 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098713203 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081595985 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097069985 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077660804 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090447385 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071669474 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08869155 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10998101 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071647047 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099663089 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071249814 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089726069 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071445123 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099200749 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10031344 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086936015 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0905053 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081942389 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095791114 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070616654 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099609077 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103818458 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073280935 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098833201 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070916938 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109814701 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0959811 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080432556 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090744835 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077834071 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099067731 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077372808 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099602329 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089746764 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075798659 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089542451 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071939075 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116475864 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095534475 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079361133 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095892835 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098903367 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080632593 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115860773 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104064523 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078923379 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096256298 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104523959 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080555266 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095361876 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09774842 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085504016 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09677342 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080089621 seconds)
  done (took 6.741409257 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084392006 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107934571 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071882298 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104824122 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099652499 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071940071 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090011932 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071825411 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089305019 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071185234 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132134806 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071444612 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09930295 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09842387 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071220874 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089975463 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070884193 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100527175 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070763177 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116983563 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089427978 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07850527 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098997568 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097434986 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085895768 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096730592 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071175041 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092060099 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089078188 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071601308 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094380854 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070550359 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099881916 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070823734 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098830378 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070542913 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090872696 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076158139 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090703215 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096639795 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081949959 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109485771 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07121008 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09016296 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103217787 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071614405 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089881682 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071714845 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091146336 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071383239 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103780165 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086592997 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10439262 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099856246 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071261133 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090007456 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07039517 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090167209 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071234922 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095989116 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097423855 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070874127 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116094229 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090077499 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072136149 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099142102 seconds)
  done (took 6.62839839 seconds)
done (took 130.463803733 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202150715 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185201241 seconds)
  done (took 1.212148393 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07063276 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.11853117 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082364152 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131373628 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089525342 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103101514 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120759948 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082191441 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069569174 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089385389 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068871092 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091170481 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135476161 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068618636 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09003556 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071149708 seconds)
  done (took 2.314314547 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105472577 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202375427 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112068811 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066930117 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102915183 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081509061 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089031674 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080728599 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094353413 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068652762 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101413401 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078222206 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067197554 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098563977 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094928937 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082204308 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06729924 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101856441 seconds)
  done (took 2.531991515 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109511442 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145997237 seconds)
  done (took 1.091317135 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.20482618 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.1253222 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.213725141 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.483554775 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.249464518 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.293257938 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175035978 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17587443 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15815577 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174155458 seconds)
  done (took 3.082848394 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102272448 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178586454 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.323374483 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.142933404 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.092314649 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119879306 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.143107829 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113575726 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084820415 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103547477 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104911817 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079793553 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.122282879 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077854435 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098211299 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080332196 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12511804 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075941667 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097404315 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078996347 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122005104 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068984205 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097547532 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075662701 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.101325866 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082624679 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08908059 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069493593 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097611118 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078345789 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.102105895 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117478127 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08343033 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.135744346 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105684296 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136280519 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100867274 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075518952 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078396034 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094932943 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080504458 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099899712 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107935242 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081148851 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069567398 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100849219 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06893478 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088354985 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08453015 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101664598 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083009641 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.101191672 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135537432 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100749249 seconds)
  done (took 6.396279006 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.767698648 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139373065 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074542319 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.830564188 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118666244 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087943398 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.76034013 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09684585 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.241133357 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.761951745 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115642861 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080191562 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211872357 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.221304835 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937162743 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.294914381 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.64830138 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108777389 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112278376 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136144315 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.167712633 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160270706 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.154969192 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437370307 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099796588 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073405155 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.143269264 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102044256 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144289286 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108023768 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077261804 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160769355 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.252722329 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.165479962 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098563905 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074436458 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072559798 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.176564283 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.231114652 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196685495 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162748674 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070309971 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093776497 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.147213392 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135739793 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070448414 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146219371 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177347987 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.155848821 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076861017 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100950876 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146575185 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144668012 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.148613457 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105280305 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.303916262 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.294373117 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073417335 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124746272 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.088103259 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244478059 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105933512 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.188584806 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14408069 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195759264 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072463946 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758887906 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.155345048 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093841134 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07921841 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124099959 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097340155 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146298537 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.153143904 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.372596491 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.150624198 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075640894 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093707107 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213239744 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.1085943 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072483642 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146358942 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099104271 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129137769 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.152235282 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.153221667 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.15345904 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.241026137 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.149893274 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.146826375 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098237456 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129909396 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.080315979 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.197794558 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200771324 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.148082599 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.191631333 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166562841 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.147642769 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.152208831 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080763758 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.176907427 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126152476 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085169347 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144564151 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201105799 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.129105765 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107068345 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077731988 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.145430104 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130268545 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110102355 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.144654704 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.156396264 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480949375 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.155188646 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070280348 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11161836 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146779463 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146954005 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099081602 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.221829993 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128153187 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.153337154 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128184465 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091370061 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126719956 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.146722538 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082240762 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128087629 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164800554 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079782665 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.219218743 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.198927928 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.083203903 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223862187 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166229982 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079781132 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155856639 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126177722 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151995313 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100804971 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144495175 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098129296 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.746942754 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.170349235 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127494055 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07709955 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177407496 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072794235 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105889023 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086442396 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090009223 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.73980921 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110640267 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10421174 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085849499 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099175752 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127145345 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143797029 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076668859 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166934564 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.189918316 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100779262 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125240353 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.086983119 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.143942557 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.099519795 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105679678 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087331195 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107754247 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129306757 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076495456 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106836865 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.153572659 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.148362576 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.203391518 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.549075971 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094319089 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086022189 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207150583 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093389351 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.254560615 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142305223 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.209091395 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146334838 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105070539 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.297217129 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.150825077 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178021051 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.090328396 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.155716028 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090881581 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.144083722 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.150819379 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093859933 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078562021 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.146485045 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.174439455 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149964973 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.94323138 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074930104 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208339333 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091131892 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.156955782 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07951338 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101590657 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.279456286 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073210679 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.153807493 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.14818104 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096538233 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107056598 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.713002078 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087801287 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.165306728 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078843277 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204019562 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.147762932 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.142789213 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164760121 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.082460875 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.144508713 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.19190279 seconds)
  done (took 41.809284858 seconds)
done (took 59.26655271 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284627866 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216917022 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.23590341 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149492524 seconds)
  done (took 1.81997376 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.150468484 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109477604 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121434557 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087914789 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.109187392 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088315799 seconds)
  done (took 1.523125757 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.431259132 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281618464 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243522339 seconds)
  done (took 1.817980701 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.306450442 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236787002 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.462172291 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.309605532 seconds)
  done (took 2.280988501 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198365583 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118217454 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.091028806 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087121936 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.188937977 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249856809 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130279369 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.194818559 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103544655 seconds)
  done (took 2.267701459 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.18438099 seconds)
done (took 10.750566918 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.203415162 seconds)
    (2/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.32453836 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.225766003 seconds)
    (4/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.134691897 seconds)
    (5/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.084687072 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.162918082 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.14889319 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086228894 seconds)
    (9/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.085946964 seconds)
    (10/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07502973 seconds)
    (11/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.102734791 seconds)
    (12/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.311957846 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099706998 seconds)
    (14/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.224800085 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.108838118 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067991599 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103561891 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.105998453 seconds)
    (19/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09812513 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076011851 seconds)
    (21/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.266921464 seconds)
    (22/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.190124482 seconds)
    (23/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.137196371 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.116836239 seconds)
    (25/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.201470955 seconds)
    (26/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099149283 seconds)
    (27/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.166816158 seconds)
    (28/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.165521321 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120833302 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.135020407 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100316852 seconds)
    (32/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.252320976 seconds)
    (33/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075099629 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.134013485 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.233764527 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.135001754 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.228664557 seconds)
    (38/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.252858375 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.153479021 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.14461238 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143653625 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.124577228 seconds)
    (43/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080431628 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.098043183 seconds)
    (45/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076084991 seconds)
    (46/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.085494016 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.177218242 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120915991 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06938479 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.121809041 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.19882109 seconds)
    (52/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071547886 seconds)
    (53/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.186550342 seconds)
    (54/309) benchmarking ("sort", Float32, false)...
    done (took 0.155715985 seconds)
    (55/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093282983 seconds)
    (56/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.099158404 seconds)
    (57/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07981073 seconds)
    (58/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.241591792 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074506816 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097237201 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076104411 seconds)
    (62/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.246523964 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.169967443 seconds)
    (64/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.253799765 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.267090385 seconds)
    (66/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.1006027 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070016509 seconds)
    (68/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063244829 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.074926159 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137637909 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.233832585 seconds)
    (72/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094539247 seconds)
    (73/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076346616 seconds)
    (74/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104250755 seconds)
    (75/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076024849 seconds)
    (76/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112883912 seconds)
    (77/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.100192787 seconds)
    (78/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07129033 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074687983 seconds)
    (80/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063131421 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198098834 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.0769235 seconds)
    (83/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068997886 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096762891 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.243904888 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078505199 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092612539 seconds)
    (88/309) benchmarking ("sort", Float64, false)...
    done (took 0.151746438 seconds)
    (89/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.24746999 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.068644357 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.213937752 seconds)
    (92/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07709252 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.109456203 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.147408241 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053283579 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.204709235 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097595907 seconds)
    (98/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065970534 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.117316835 seconds)
    (100/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.133800372 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095104375 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.117647921 seconds)
    (103/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069954868 seconds)
    (104/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.103728498 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094600226 seconds)
    (106/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.084900818 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.22120594 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.122651068 seconds)
    (109/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.136176939 seconds)
    (110/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079716591 seconds)
    (111/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076313791 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094940661 seconds)
    (113/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071359524 seconds)
    (114/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.246174195 seconds)
    (115/309) benchmarking ("sort", Int8, false)...
    done (took 0.170890409 seconds)
    (116/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.261369108 seconds)
    (117/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055286092 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.113117425 seconds)
    (119/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073050683 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070303917 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.148273962 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.247426927 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07674488 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.104284822 seconds)
    (125/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.115407628 seconds)
    (126/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.131210856 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.055028403 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072958735 seconds)
    (129/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.125194638 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068346684 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.171071409 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074418019 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089907911 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069809312 seconds)
    (135/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.290024508 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090591875 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.233529351 seconds)
    (138/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.077273455 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 0.162849931 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077703793 seconds)
    (141/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055207182 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.098790294 seconds)
    (143/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071555278 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.117548007 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.106973003 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.073056771 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.311448103 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053787025 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076248665 seconds)
    (150/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097004624 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088817173 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090491348 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.070391282 seconds)
    (154/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07589732 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096813825 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067992312 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.097841689 seconds)
    (158/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055216859 seconds)
    (159/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071289572 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093058827 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076450824 seconds)
    (162/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.126501674 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069217068 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092437281 seconds)
    (165/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.075158554 seconds)
    (166/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064784206 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097446772 seconds)
    (168/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082730718 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054354924 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100383421 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06868301 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.254199316 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064500267 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08942807 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069103654 seconds)
    (176/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070275024 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.100617263 seconds)
    (178/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054809536 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054387204 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.193351461 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078063085 seconds)
    (182/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.075818554 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053444442 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117376067 seconds)
    (185/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.103228872 seconds)
    (186/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054346198 seconds)
    (187/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095103522 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053793955 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074657822 seconds)
    (190/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094562811 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068761704 seconds)
    (192/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054641681 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.261805507 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098402574 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.15142552 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.166559292 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073781679 seconds)
    (198/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.102462736 seconds)
    (199/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068957217 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114783934 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.241703176 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075422566 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067631348 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075783387 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068669299 seconds)
    (206/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.274513982 seconds)
    (207/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117880946 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180311592 seconds)
    (209/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.078127041 seconds)
    (210/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054666606 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159650715 seconds)
    (212/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053490461 seconds)
    (213/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070878461 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.106695857 seconds)
    (215/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.254432599 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077251984 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077916582 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.12213278 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069550847 seconds)
    (220/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.124897374 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070147559 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.259378519 seconds)
    (223/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117123736 seconds)
    (224/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079533184 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076624497 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095412838 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068632122 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166779436 seconds)
    (229/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075319557 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.088716315 seconds)
    (231/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074828454 seconds)
    (232/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067693475 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.11618234 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068209735 seconds)
    (235/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093109652 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143903949 seconds)
    (237/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.101262166 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108054306 seconds)
    (239/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063690176 seconds)
    (240/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.1256166 seconds)
    (241/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05348664 seconds)
    (242/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.131122553 seconds)
    (243/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055759517 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.078468848 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06769876 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055242615 seconds)
    (247/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055081188 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091407138 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068169963 seconds)
    (250/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116324137 seconds)
    (251/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.054661908 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053794699 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.098253227 seconds)
    (254/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055006353 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074842975 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.170650925 seconds)
    (257/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064378476 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.077889955 seconds)
    (259/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054970252 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093616739 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075702348 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077527518 seconds)
    (263/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103825829 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.055146357 seconds)
    (265/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077282642 seconds)
    (266/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055691335 seconds)
    (267/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.076140008 seconds)
    (268/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067505185 seconds)
    (269/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.094745405 seconds)
    (270/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063721772 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083886025 seconds)
    (272/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.089965599 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053986213 seconds)
    (274/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071189332 seconds)
    (275/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.075353901 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053881465 seconds)
    (277/309) benchmarking ("sort", BigInt, false)...
    done (took 0.215562998 seconds)
    (278/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117006579 seconds)
    (279/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084706812 seconds)
    (280/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056170406 seconds)
    (281/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.088046142 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11337553 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.100640105 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072163375 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067627549 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078953297 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067323171 seconds)
    (288/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064744128 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098726568 seconds)
    (290/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070079774 seconds)
    (291/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113294097 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150284789 seconds)
    (293/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.093079994 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074060494 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098293379 seconds)
    (296/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.08705474 seconds)
    (297/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083597171 seconds)
    (298/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.077490065 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054893843 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069324462 seconds)
    (301/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098960235 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073715406 seconds)
    (303/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054780177 seconds)
    (304/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.261055861 seconds)
    (305/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19797361 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.141661716 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095505445 seconds)
    (308/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054833723 seconds)
    (309/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.077541277 seconds)
  done (took 35.915371813 seconds)
done (took 36.776343352 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085808588 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118364889 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077711131 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119341248 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085274065 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103884857 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075397524 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104658407 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084609334 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.108407678 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082804768 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05758044 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100609825 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078657753 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100454784 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096571142 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103934077 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076519346 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.099220988 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068753321 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076464645 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090252451 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069791325 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056867302 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102673249 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075697688 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098476264 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078075593 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069026466 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090111003 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071704724 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098329868 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068502443 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082753427 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096604761 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076387917 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10078811 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080190014 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070321162 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089867153 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076923225 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.090961643 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075408329 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076788518 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096806813 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075630523 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099102647 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084612073 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121032697 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070636653 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.102046083 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080654481 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080330797 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.099714996 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072097226 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099590534 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073597903 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119342197 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078820989 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071020019 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.099616601 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078005363 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.09640587 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077645375 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077175175 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102882823 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079132496 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095794721 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079138236 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074143061 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090816391 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077407295 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094394936 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068990433 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079904839 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101831043 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067524014 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.09635209 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076238221 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074428358 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.089988429 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071555496 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070980113 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096570022 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070519018 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.0574202 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094027902 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074378153 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.089606198 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07857658 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075418815 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.097126975 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070114506 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102310217 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068086591 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073736607 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.091666259 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068070742 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070432495 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095021413 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068651556 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092238532 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07852271 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071462519 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09661861 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084734546 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090439354 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076979799 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068082775 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.091238816 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085955357 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101528697 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068330645 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071465967 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091283712 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077192612 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06804219 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090336063 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068834996 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.091156887 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07432017 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068258684 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092298292 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076653114 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081829826 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.092875077 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072353803 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092457792 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068647314 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074213548 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091078877 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069215434 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071313778 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088729408 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071897358 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070009888 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09890135 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070450265 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099241099 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070513516 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077732415 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09574568 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074226477 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095851902 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067910461 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061091776 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093885562 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072089592 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.07049474 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090836955 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071160102 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068328713 seconds)
done (took 13.58829548 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068709546 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176017631 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131534374 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.10035396 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114522886 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069796698 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103326122 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.136319288 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071940188 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.133598201 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092612794 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.111564545 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.143426526 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068475168 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068762976 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095714906 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07004626 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.117887575 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107155111 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113604831 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147606601 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068094553 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127668192 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11777874 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093996189 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.130979197 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07077469 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094573989 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074015536 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.120526127 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09029458 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072183046 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.091299445 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.127829283 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098852219 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.112844363 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069865204 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111662179 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069375017 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.090537572 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.099419346 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125946373 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107510615 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087691116 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095200074 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07201492 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071302773 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.113580232 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.118631392 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085983542 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.116266574 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139220821 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072448464 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110318017 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067745342 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114855955 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086496755 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09435968 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069727366 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072100653 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.090788357 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073225685 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114680684 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.120543222 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073435143 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.109311628 seconds)
  done (took 7.487334554 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087042302 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119403876 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08837712 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110613265 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070205671 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070546237 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092262502 seconds)
  done (took 1.55764243 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07005693 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092446753 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11539357 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093997593 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.112509919 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091033971 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103201358 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070761476 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109802135 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070212537 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114339097 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110658365 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094950989 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077380551 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119257138 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069960627 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095219654 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092248365 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072238114 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118215163 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07437077 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.113526652 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071470694 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070571414 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107959488 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070769854 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14259878 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074741175 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094352496 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073120639 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067967126 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.143912089 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107881778 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081435175 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092567891 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086068976 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.108314148 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068301226 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086247291 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099340722 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084331165 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093669243 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072650909 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069182894 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.098229369 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082024208 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.09353861 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07060054 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072719821 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114940061 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070258225 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108275568 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070826726 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075039855 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094722042 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075752989 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102600386 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072090272 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091821086 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095301204 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088334294 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110575208 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084529813 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111075596 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072131035 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108057272 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08520252 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073760234 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094304384 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074926798 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110713845 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068095804 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072678944 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104216336 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071894766 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11821415 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094371014 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094071406 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082070694 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.092707772 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072042644 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070076675 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.116674551 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074423523 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092861154 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074523348 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074126481 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.091423268 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06962008 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074462057 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.09105946 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071990459 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095426734 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071916678 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073092684 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110073518 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071719115 seconds)
  done (took 9.569088891 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071138008 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072011565 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095240916 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070728939 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071244695 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093478375 seconds)
  done (took 1.412165435 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102761092 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096437396 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084958273 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.09883941 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.113036951 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108070417 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.0865178 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110014406 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088553906 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.107315189 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085934977 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110105167 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093662614 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100642054 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086248725 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098749136 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086535498 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103590721 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082710869 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100026076 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092104097 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099796288 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077340004 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110040343 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07379573 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099508714 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082458087 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105830208 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083450276 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111060432 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.078291203 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096724191 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075202078 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110322619 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087021436 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098333458 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076901981 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074966811 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104733869 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075205479 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110096233 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077354504 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.104649585 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075697808 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.109821616 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075819726 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098730684 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080990731 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109067353 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073763805 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.098205808 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076428091 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097185131 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075792977 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076272726 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110604858 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.098273709 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086743269 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.100176562 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077025222 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072930736 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.097840355 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085623872 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097599613 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085060109 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.098274419 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075315704 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099352052 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07677634 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099401918 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075008444 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096206713 seconds)
  done (took 7.56800765 seconds)
done (took 28.509109267 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.656062017 seconds)
  done (took 1.587537066 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.806499408 seconds)
  done (took 1.73875624 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.436151453 seconds)
  done (took 16.371137298 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.655573695 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.811103919 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.828318002 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160540136 seconds)
  done (took 3.384582744 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.880797303 seconds)
  done (took 1.834833628 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.248825777 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.256457571 seconds)
  done (took 1.44046316 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.728191945 seconds)
  done (took 1.668707644 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.304323224 seconds)
  done (took 2.239892438 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.342441968 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190330219 seconds)
  done (took 1.476993384 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.532837306 seconds)
  done (took 1.478638891 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.515742701 seconds)
  done (took 7.463451396 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237343706 seconds)
  done (took 1.195081352 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.277778034 seconds)
  done (took 1.228058999 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.241456707 seconds)
  done (took 4.189332998 seconds)
done (took 48.233943383 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081815557 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08444703 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107427514 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08105019 seconds)
  done (took 1.298045389 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081470543 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07605064 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104640627 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075954489 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10538712 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07565692 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101362549 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080328775 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098939102 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077337248 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076293695 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100073104 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079354848 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10154066 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073828867 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078654519 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102348926 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076837957 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.103696222 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076006392 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.096821305 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078666215 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102059369 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075782271 seconds)
  done (took 3.05584137 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080366008 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076325026 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10043943 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074937924 seconds)
  done (took 1.289183444 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080342474 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.120899491 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094443282 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10461886 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096198142 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115055125 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072438462 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072878731 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097267662 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080207008 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094892661 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103137385 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115050184 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080379823 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105554598 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068915201 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095648467 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092746215 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080678177 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.105104817 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07342042 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103550003 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071906525 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.117531767 seconds)
  done (took 3.20060791 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079943433 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129638115 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082180975 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116082419 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095274735 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069399943 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.10297644 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094815662 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.155868345 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.092201814 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074472863 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068442364 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099046642 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069488626 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080913097 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.138528514 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.14150767 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071685097 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125048266 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068998439 seconds)
  done (took 2.914600126 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078548697 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072294304 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092521618 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072122703 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079520084 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099321096 seconds)
  done (took 1.458736013 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070785284 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07028662 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092681238 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069226064 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073919147 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093273283 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070213698 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070008257 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093039652 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070181304 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092747618 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069349978 seconds)
  done (took 1.897973337 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.46054036 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072544147 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.09464519 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069644368 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073925277 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09294851 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084824408 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071390801 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.118798247 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069413993 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09444406 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071857713 seconds)
  done (took 2.339953589 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272751793 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08142859 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.340095747 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174389773 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143447952 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161439016 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134550207 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121292184 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206510594 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142941699 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238130724 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2330671 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115748201 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198004938 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093868131 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.137091265 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220244694 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205545332 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1343454 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233466658 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190828166 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161537171 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213946565 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132845187 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139750058 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151938727 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075751351 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108204534 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242254711 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168439433 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208801052 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143480165 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101238792 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24132392 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229871157 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203614679 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169307159 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088597474 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.163934271 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171171194 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267367584 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117185884 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22829569 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11476093 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10959871 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177377865 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15078011 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152756882 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.14086857 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118282633 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2058074 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225673032 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198455202 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091767092 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140662953 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14387329 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148956482 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131041241 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255319846 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226892319 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164836498 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073585898 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12648349 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219825812 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16430935 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147508366 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16061166 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122444388 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175524614 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22046717 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149200957 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18471545 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.189421325 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093262554 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151831052 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203074048 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162350776 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240692316 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160523997 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076214814 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158479918 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13297468 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110458298 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.150383029 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103475443 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245329419 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10618251 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.144825934 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143054215 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140038528 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142114881 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230140199 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187906514 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135125055 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069460189 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133599772 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154029935 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207149467 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092118786 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139955803 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153726763 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106427331 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173699134 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.103130083 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159123134 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082024238 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159208098 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193962294 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079650726 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158733603 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13397666 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132536328 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172248116 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229261158 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094503977 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111350566 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236461368 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162521714 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138036808 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184951315 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224740529 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.108434657 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133012983 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212521279 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25282877 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119130688 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207843413 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136948074 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113845442 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09319512 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159095848 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145369731 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154520423 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111067628 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160287678 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237458022 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077818358 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124773761 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173562228 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110653194 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109774085 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146329693 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107781443 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.125374784 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130740146 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13670618 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176878451 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161037702 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138314223 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15929868 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130591864 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230772938 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11913263 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.110777109 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135067365 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097968826 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.174752932 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226040411 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085036695 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234607795 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161976882 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134957466 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15465489 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087068878 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201923617 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082698019 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099518466 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1821486 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144419213 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141787076 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194684263 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136378788 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162734897 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1596411 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195452248 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167388752 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168338669 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137503163 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.117056191 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145590649 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161407189 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078089614 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.126601693 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.113422701 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109450727 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125137568 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113051224 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180584634 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162142141 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128072218 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145551838 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129369246 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190770845 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106121687 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165893831 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153495552 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12519072 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.195447618 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225513599 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173526464 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13167101 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21082256 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075982122 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077461977 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119944777 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162868743 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112514413 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087498842 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175880047 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188184199 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166238098 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199932274 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117210233 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158210063 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222592791 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07427168 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148213029 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212741129 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161837759 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.134950096 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11669408 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.129730596 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183489656 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137236416 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25972799 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148681531 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158346293 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218616196 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.140940788 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084645336 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134651902 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174633536 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136916968 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217632881 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131137119 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094789407 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142819224 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.111389802 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136347997 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162359717 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153762451 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173117414 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148942103 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194130145 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081957649 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150289554 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181112366 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155896759 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068832914 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153829411 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232449281 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126492101 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153324877 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196949726 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109695955 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155149269 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251579968 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185031157 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116332555 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142247143 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155547499 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167487429 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15285273 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177793478 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142179975 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170155108 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141824681 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.114893453 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118127506 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102876451 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138490243 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127151091 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147773784 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151256774 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.12501314 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167270323 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144445295 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143344462 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15247181 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.1279414 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097722163 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128267282 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246533561 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157196426 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247041873 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.106430067 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.217290082 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23685288 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079446734 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1092408 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08571409 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203650129 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090598944 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195437749 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.102006292 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135267637 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161850606 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181838119 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127567322 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097368422 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118176322 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197295123 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142797114 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105519542 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137808821 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234223117 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135146946 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084055153 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160425091 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134771854 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135054948 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246770669 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066133282 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128122886 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079767401 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110834686 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167499297 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224457796 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.088609846 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158702591 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153133215 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157650986 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166797983 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132117265 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127250271 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118873228 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212306549 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163849879 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.121807881 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146760683 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167315672 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226562365 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139228171 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.128196564 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214232198 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221656959 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.233899911 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.094491942 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149683291 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14776356 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144807741 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205916238 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089750535 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235117809 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11219289 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17453069 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134119844 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123992592 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163738617 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127868851 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118986084 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20762916 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153334397 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11290706 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083051299 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14760018 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157080064 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133982679 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104825176 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176100896 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102291326 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173307483 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23724982 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087041605 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139136949 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127282681 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086072512 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13988925 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135575012 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117215436 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123938639 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239508642 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.123426144 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217456783 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179848824 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149143313 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202462236 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132587533 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.671122154 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082986596 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223212992 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153915923 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252801808 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131618722 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154061817 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144475839 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159971089 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181377281 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138655895 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.210303342 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16782851 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157856744 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109040401 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136773569 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144580886 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095528869 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140809015 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147896437 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14957145 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133048237 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154053736 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189878 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087161291 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126900113 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201001112 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153823984 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206485621 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178895033 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116431322 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15408286 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17926458 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110852913 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158566755 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223031237 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142184569 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130599364 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086885858 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141008135 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243428802 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076696302 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231055537 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160219465 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142983136 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147890244 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.156304748 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194993727 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140411995 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1612736 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1287968 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14826654 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152043296 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090568575 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10732829 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138878845 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146391696 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.131401043 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111349234 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.148706864 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21595351 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075988897 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127052717 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108449032 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207826701 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250432729 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.095140481 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114183368 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151942029 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147747473 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150342526 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161560953 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.113294869 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089005651 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.113198648 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.117884693 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140201358 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148159847 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133541409 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144920455 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240701946 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088666669 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.258021421 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127672429 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142632456 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074397911 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109143196 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103603442 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128623704 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136868713 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129625264 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216042785 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128796567 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120692124 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124127553 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077769299 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088494108 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193305767 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145201621 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156625169 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128238243 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066382832 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141242006 seconds)
  done (took 74.374602903 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.135854617 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105764825 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.120690388 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.177573074 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150420727 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243060816 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184992343 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227287961 seconds)
  done (took 2.375606465 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071852479 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.120414748 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106112561 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.119355157 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092123857 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070999604 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.309729121 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112937654 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.09158642 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09584097 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.124109479 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094233813 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.48700513 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069101714 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096979231 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086894172 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071045701 seconds)
  done (took 3.243330239 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.449415525 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.635935091 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.452606414 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.102132783 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.897352472 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.110666888 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.319502116 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163501055 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094027051 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.425135715 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.728641062 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149462355 seconds)
  done (took 17.56174309 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077517482 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073654183 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113387753 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087607099 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101699271 seconds)
  done (took 1.486386464 seconds)
done (took 117.438625713 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083567593 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.380916985 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056559966 seconds)
  done (took 1.504282071 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087037529 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089691613 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114337435 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087988501 seconds)
  done (took 1.420067086 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078149734 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079391573 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115107287 seconds)
  done (took 1.31086101 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.298963517 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172397381 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093000839 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085332524 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080802641 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108273869 seconds)
  done (took 1.316172503 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076667573 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078825707 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102312731 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080567653 seconds)
  done (took 1.37390009 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07912165 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055850706 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057710155 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085000004 seconds)
  done (took 1.318573946 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093357402 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.110325632 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083863857 seconds)
  done (took 1.325430364 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.113162037 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116280323 seconds)
  done (took 1.270439379 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085654947 seconds)
  done (took 1.120938688 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097309601 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.146253012 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.168244325 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142742257 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.178974638 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143404807 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.117874629 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093962755 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107325185 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.120452159 seconds)
  done (took 2.357554741 seconds)
done (took 15.994210305 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082198512 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.391538909 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364703097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121320094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673267087 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385730926 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.982807849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122288896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112673586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097103167 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087354285 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679900818 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.009360999 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348044541 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.998051066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327455204 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677896645 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070804629 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096666609 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072001023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96679843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097023669 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07253971 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097825584 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653475225 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376187804 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097576327 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326855403 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09744761 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072840127 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358581633 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097729326 seconds)
  done (took 16.046925082 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073627988 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14836374 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078226876 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086806074 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099538495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07312316 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101579613 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072294223 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15356106 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071565632 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114934815 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070943051 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101884991 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072214406 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091803432 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09819045 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072348647 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097561739 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071774821 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071391295 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116348365 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070414828 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098570205 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072428831 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072549572 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.11018149 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072252819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097204704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072253041 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073655844 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101024982 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073025215 seconds)
  done (took 3.899495215 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119326543 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.157207696 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078769575 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132132055 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.144875637 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073839205 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.176775571 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096464392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155351304 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072876777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114461745 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071081253 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131578766 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072626325 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117674425 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071961829 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098515462 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071984963 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070985241 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097488918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090307711 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097011276 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072237485 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071927084 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097565735 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084942855 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0983843 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076057109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097364184 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073619936 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074783588 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09806821 seconds)
  done (took 4.207145187 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075623239 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077853216 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112648897 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086671501 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099389477 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075268002 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076020135 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100411557 seconds)
  done (took 1.749887935 seconds)
done (took 26.936831019 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081662124 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073399281 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102938175 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08434318 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102331048 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082815571 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071396627 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104172658 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078662689 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102038508 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079291865 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071586199 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.101327363 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070288781 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079266808 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097443066 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084781731 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101605255 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082572037 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109844646 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074233708 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078524691 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103237611 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082628871 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109368394 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082824169 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109009013 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07631503 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072806505 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099096974 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080030604 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115610885 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071859636 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.109675794 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071490602 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071881835 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097693222 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07158632 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083614869 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.105442769 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074504671 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104394547 seconds)
  done (took 4.746832848 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093809171 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096134707 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11613811 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065038635 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099164254 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064996957 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.121801 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063194628 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065694372 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.120335365 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059124296 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060750147 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.088908259 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057795416 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060944346 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060313631 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090280598 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058988336 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060937569 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087706653 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064057525 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056904874 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090269053 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062893466 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059457526 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065823524 seconds)
  done (took 3.04147065 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079523915 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085659833 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118027374 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133279509 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136772454 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079390167 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109138957 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090498337 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115168029 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069684276 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101908773 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100836224 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089860144 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105291091 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071345278 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.11482913 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085161692 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073280913 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106139956 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092934365 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115166105 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082039969 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119603242 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08300883 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071245727 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100220377 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07474898 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112688957 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076462579 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081097121 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.10130799 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075790396 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.100035452 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082440449 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101964209 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074061794 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091550917 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106986085 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079928466 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098767024 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075387835 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07263684 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118392403 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115923019 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097102652 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07713127 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105755629 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080366391 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070616585 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115916052 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081348888 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097804168 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075013398 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070296892 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098178249 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085523663 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099692917 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074625791 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081296699 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102140385 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083179652 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.10207134 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087284222 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071297748 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.106033343 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071051898 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09845924 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070530544 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09373629 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098960774 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112002018 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09969515 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071667634 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106840524 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078106463 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077902032 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098665207 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086934277 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107670007 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075284422 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079580138 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101079769 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073946334 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116046105 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07372056 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072121679 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.099611615 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077023104 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101731161 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072232067 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084264564 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.097953914 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073555679 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.114886788 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071149456 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072225612 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104484238 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076278723 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096586225 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084738399 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103064935 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072319133 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080667926 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098343066 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073598494 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081086253 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.101763896 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069246517 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103040073 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078073676 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071356323 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098389497 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074528613 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099414088 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081644421 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078074965 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103890497 seconds)
  done (took 11.654041371 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.203342105 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.192691122 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074219013 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.184292391 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083188291 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.111595625 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.18695401 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104399583 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098901702 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071831463 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099644788 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112080703 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.133531096 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.1446378 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083501504 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071117015 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.117005342 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140979609 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.19127699 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154100574 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.119159593 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080459071 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101630042 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071754973 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.100402457 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081408134 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.118960289 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.084108434 seconds)
  done (took 4.380021035 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085935932 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131205242 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076731806 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119833001 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.097188336 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098752757 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075786213 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072274235 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111174474 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084722312 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098490095 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078729322 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.106498909 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.080364447 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071586259 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108542092 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081181351 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.100862244 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074132278 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075313308 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105672179 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084572337 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103610994 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070146815 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07874566 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.098109973 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069360227 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116257237 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071259263 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.122142351 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069343755 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104907974 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081092895 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071942492 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09858711 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073907375 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100476236 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072902554 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073768841 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096506555 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070172312 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061794445 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.097829086 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084003354 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104594651 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062971537 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077829893 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103631217 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076470221 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.096573524 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073583945 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073450255 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102008096 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078837756 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07772678 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104147635 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074602217 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097902808 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079177127 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073653597 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.09501356 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070134287 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075761257 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.098323357 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078976928 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103410199 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07009427 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073328036 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.102617295 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076938845 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.100636472 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074864824 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069250331 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101153482 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076017699 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075412218 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.101588032 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06994771 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.09810093 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071657284 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059085983 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098605202 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058025437 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074031978 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09651994 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069655318 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072797711 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109020779 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.086339775 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.099827922 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076866439 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098491623 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071581158 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075320485 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.093175045 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074234573 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086913733 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.115892215 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097828596 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06899528 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085967546 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.103600954 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06961685 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059307486 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105952436 seconds)
  done (took 10.130308366 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095375878 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.123697676 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072910444 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084610163 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125704473 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095245574 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106050655 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076686815 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073053574 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116990992 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071908829 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107652613 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074848582 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08109707 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124297959 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079352276 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101839031 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080058891 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.107396818 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.109421854 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084597284 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112602304 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081880929 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.1007446 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076274667 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110532384 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.098491658 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081691689 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108040893 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085135636 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108788312 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099394477 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.1140725 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.074954787 seconds)
  done (took 4.318524823 seconds)
done (took 39.3139231 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.129007314 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.33351451 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.122885837 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.968632178 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.143119721 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.14705347 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.135239052 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.124521995 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.418812552 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.123273806 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.365064954 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.716293916 seconds)
done (took 58.798149005 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.188819032 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.261289331 seconds)
    (2/2) benchmarking "String"...
    done (took 1.397067055 seconds)
  done (took 3.726485145 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.498950795 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.077110044 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.407942032 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.123275821 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.125580313 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.583176633 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.664066379 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.944954501 seconds)
  done (took 26.994302763 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.126877918 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.471094094 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.368049196 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.367692114 seconds)
  done (took 17.403152404 seconds)
done (took 57.8812959 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.120613095 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.145495669 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.136545912 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.110266429 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.227580628 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.156580506 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.369146297 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.141196637 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.123614953 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.112818631 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.145547093 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.126473134 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.145685839 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.433701433 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.127063893 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.134313204 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.1669027 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.634457163 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.493108433 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.151417917 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.153004372 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.154820215 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.139709408 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.141900629 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.187926272 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.130967692 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.125386882 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.124261301 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.304905437 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.12981974 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.213972951 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.54486066 seconds)
  done (took 187.624366102 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.126420447 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.257143613 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.343562763 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.155790012 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.802507576 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.324974026 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.263174405 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.861073873 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.139178434 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.152174998 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.377822681 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.126040797 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.42897876 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.107143203 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.13970831 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.228925641 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.454045459 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.449389969 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.143884042 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.398172098 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.146311464 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.295845028 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.227636632 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.351612251 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.169173604 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.232951766 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.164036283 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.138011408 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.317618562 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.39931374 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.142089761 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.161502375 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.675723311 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.987532253 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.148009749 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.137155738 seconds)
  done (took 148.045837349 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.38361166 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.125994806 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.125323802 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.125511877 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.127293982 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.155522104 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.126859682 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.644251689 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.645092677 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.626316484 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.299288977 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.183779097 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.327905637 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.127449048 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217078478 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.140773462 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.127047343 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.140401342 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.151285977 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.128126564 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.126208802 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.642346073 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.139544408 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.172233798 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.132789694 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.125881559 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.154350697 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.517752408 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.126333769 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.155442188 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.435345823 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.166727868 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.125542439 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.411455024 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.95483132 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230649433 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.127396876 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.152704283 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.12437947 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.388513616 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.124051134 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.124710407 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.127574333 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.671619564 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.123246447 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.629956293 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.125401524 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.996476426 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.124859335 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.124255797 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.12418939 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.646663556 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.126264953 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.493764059 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.122675207 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.123047904 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.125942869 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.123863866 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.124420545 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.152756411 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.520378621 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.218902313 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.125153487 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.126679526 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.151548158 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.123351147 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.239463164 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.122968904 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.893402413 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.18114827 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.235474174 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.628821438 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.126002922 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.213762064 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24080141 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.124766596 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.12408496 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.123986292 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.125063447 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.227867848 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.124269235 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.500184391 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.131043423 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.125166317 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.182098843 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.21684803 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.123861525 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.385209375 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.124464036 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.124279506 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.778697984 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.124174912 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.214231357 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.124699953 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.124426167 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.124075152 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.503129274 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.627775373 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.275082892 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.126451213 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.550907152 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.124606045 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.506750632 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.60315573 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.658895942 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.123714457 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226727915 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.126809926 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.124134012 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.12252317 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.152420325 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.124155118 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.182698675 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.123541553 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.516574364 seconds)
  done (took 335.570907973 seconds)
done (took 673.694012398 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.79972811 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.758665989 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.881856394 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.772200774 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.753970624 seconds)
  done (took 10.033841592 seconds)
done (took 11.100701693 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.293542133 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.292245277 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.177595664 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.294529337 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.149837294 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.309106578 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.273578032 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.144171062 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.217974256 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.192204386 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.21721346 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.168720447 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.149239235 seconds)
  done (took 16.947579785 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.424762268 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.43280929 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.19044485 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.428209024 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.165909677 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.425648546 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.319163703 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.31981261 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.312750517 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.140689055 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.13890619 seconds)
  done (took 15.36796811 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.440126066 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.424018787 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.192425968 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.429103583 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.167947629 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.431662528 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.313893464 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.336071539 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.314386711 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.140323595 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.139171471 seconds)
  done (took 15.397194484 seconds)
done (took 48.780934386 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.134577745 seconds)
  done (took 2.20277287 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.1669677 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.327117807 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.149313805 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.141144844 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.136663034 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.137830594 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.141785872 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.137391197 seconds)
  done (took 10.408543889 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.134907367 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.134729325 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.131227501 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.135519548 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.132944134 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.134537969 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.131939201 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.134640601 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.135267476 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.13378434 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.134774528 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.132585004 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.132431951 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.131863405 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.132152031 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.131562177 seconds)
  done (took 19.204965808 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.134840799 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.131211845 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.131068766 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.132278575 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.131422641 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.132437741 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.132535816 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.132099112 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.131667546 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.132308199 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.132026887 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.130889479 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.132228582 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.130689679 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.132079117 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.131933292 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.131474911 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.13139832 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.13669243 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.13215614 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.132217943 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.132486209 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.131520685 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.132089995 seconds)
  done (took 28.243714245 seconds)
done (took 61.129246358 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.026331236 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.573959435 seconds)
  done (took 8.669198945 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.13490772 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.134119036 seconds)
  done (took 3.339504922 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.132988323 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.133448734 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.133938346 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.134337258 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.133664768 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.133649569 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.134010651 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.133765516 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.133308496 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.133058617 seconds)
  done (took 12.405798381 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.133224017 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.133326838 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.130653914 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.13301736 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.133019577 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.132336354 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.13392228 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.133482809 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.133250316 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.130617579 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.133324433 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.130913983 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.13310492 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.13051088 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.134350685 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.130399991 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.130753486 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.130714887 seconds)
  done (took 21.450191431 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.133716979 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.133624483 seconds)
  done (took 3.335747778 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.131221498 seconds)
    (2/7) benchmarking "second"...
    done (took 1.131208183 seconds)
    (3/7) benchmarking "month"...
    done (took 1.131175112 seconds)
    (4/7) benchmarking "year"...
    done (took 1.1311246 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.130321767 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.131141125 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.131371546 seconds)
  done (took 8.98593677 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.134309112 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.307040171 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.384791346 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.766548078 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.13544945 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.136629002 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.038214306 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.137777015 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.139885774 seconds)
  done (took 13.248488312 seconds)
done (took 72.504653099 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.095884639 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.124985205 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.942528323 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.130736693 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.141686438 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.468163689 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.166722643 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.241924346 seconds)
done (took 36.383807876 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.141554555 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.817804005 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.829406945 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.135949717 seconds)
  done (took 10.852539856 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.114931336 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.983665238 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.121386281 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.083363628 seconds)
  done (took 17.372988457 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.688282919 seconds)
    (2/2) benchmarking "read"...
    done (took 1.457399253 seconds)
  done (took 4.214925749 seconds)
done (took 39.652152954 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.13492358 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.134875015 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.1315642 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.13387549 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.130882412 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.131386332 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.134053883 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.133878114 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.135463052 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.134085025 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.134702084 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.132948776 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.131963603 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.134006443 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.131985454 seconds)
    (16/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.130737071 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.133603039 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.13217503 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.13258936 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.1349925 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.132784777 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.133138725 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.132053718 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.136639432 seconds)
  done (took 28.270857913 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.134756803 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.132859508 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.134223566 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.135277722 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.133239152 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.13673031 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.135202032 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.133620772 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.136491308 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.135035663 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.132537765 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.133067415 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.135603628 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.133578974 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.13586006 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.133563106 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.136278959 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.132795035 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.135662687 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.133160453 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.135852192 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.133331482 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.133249646 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.135713549 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.134302066 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.132879894 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.136709375 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.133944293 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.13668804 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.133488419 seconds)
  done (took 35.106872482 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.140921609 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.142767936 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.136650359 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.136645981 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.137400756 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.136705521 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.137264673 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.136506349 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.136811397 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.136868859 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.136893207 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.137027471 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.136427747 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.136716819 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.136395733 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.137162157 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.137439494 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.136837292 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.138371306 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.137740405 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.137482332 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.137504863 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.137073676 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.137899872 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.13728329 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.138782105 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.137549175 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.137813331 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.13803706 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.13790531 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.137620155 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.1383497 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.136767955 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.137523369 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.137971021 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.137846816 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.142864097 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.144900591 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.138374338 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.137986238 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.138286822 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.138105809 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.138556219 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.138373972 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.138713991 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.138368605 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.137735627 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.138404348 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.137967169 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.138330277 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.138321414 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.138818262 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.139231899 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.137933516 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.139360921 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.13881677 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.13895525 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.139399644 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.139956392 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.138686263 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.138884781 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.139519917 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.139839073 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.139880702 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.139238315 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.139960665 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.138815185 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.139246276 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.139435477 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.139867729 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.1395052 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.140242619 seconds)
  done (took 83.037415475 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.14140757 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.138233007 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.136782471 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.13674682 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.137214344 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.139618284 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.136552981 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.139783927 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.136627922 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.140329689 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.139787622 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.13836886 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.137788358 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.140513643 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.140469652 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.137112883 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.140241632 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.137360204 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.140196857 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.140646505 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.140041366 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.137695221 seconds)
  done (took 26.129586465 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.13978232 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.138800476 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.138442213 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.140521877 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.137417301 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.140262876 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.141037753 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.141101533 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141301375 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.138750619 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.13867919 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.141874186 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.13754852 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.139255776 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.138684693 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.138436677 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.140243188 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.138625486 seconds)
  done (took 21.586767667 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.139013555 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.138737802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.142138217 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.137848234 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.140279005 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.141930289 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.13934341 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.142366886 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.141132894 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.139058348 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.141041958 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141854132 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.141847178 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.138873168 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.142050771 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.139650656 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.141993121 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.139239627 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.142933335 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.140131854 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.139653819 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.142306161 seconds)
  done (took 26.170405399 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.142898608 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.142803922 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.139328338 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.140067314 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.140858831 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.143166059 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.142445865 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.138728123 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.14266557 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.143090855 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.140013781 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.144608966 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.140784216 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.13996937 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.140926085 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.140329659 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.143167643 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.142348517 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.143029462 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.140420389 seconds)
  done (took 23.909430036 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.145420712 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.144385591 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.14519941 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.145622328 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.145235143 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.145569185 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.144915711 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.144951226 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.145866876 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.145085612 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.145071614 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.144879496 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.145493811 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.145417903 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.144733548 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.146078386 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.145849205 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.144983239 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.144780373 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.145363273 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.145568373 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.145496557 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.146008312 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.145515534 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.145872568 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.146079175 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.146999464 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.145124218 seconds)
  done (took 33.150771614 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.144964537 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.144706546 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.142033923 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.14237325 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.14338814 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.1429525 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.142623939 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.142967793 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.144996183 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.141886739 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.144988106 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.14512368 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.144858439 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.145975117 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.145339789 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.145787641 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.14515023 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.141353799 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.145187279 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.142657358 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.145810562 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146212701 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.146386706 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.14282668 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.14298772 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.145640798 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.142895515 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.142843516 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.14627625 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.143965667 seconds)
  done (took 35.405997803 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.164305453 seconds)
    (2/2) benchmarking "in"...
    done (took 1.164260202 seconds)
  done (took 3.409917303 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.14354698 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.147019569 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.145951643 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.14371891 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.14399753 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.147325169 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.146699203 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.14406114 seconds)
  done (took 10.243835187 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.145275224 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.146760103 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.146588295 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.147572137 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.14802116 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.145202701 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.15230532 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.161996056 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.146877044 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.147898124 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.152374964 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.152750769 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.149937806 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.145797081 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.146583457 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.148973616 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.148791042 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.149028222 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.148958207 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.148994506 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.149047214 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.148932912 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.150084242 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.146309916 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.148969507 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.15692977 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.152550368 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.14924217 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.146941968 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.15201843 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.14738736 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.146435968 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.148882358 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.14934897 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.149158851 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.148563186 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.157219625 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.162892647 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.154316641 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.149862391 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.148844863 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.145398284 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.149006387 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.148999791 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.149771349 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.149220598 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.150307525 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.146011488 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.147651615 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.150387136 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.153778865 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.147695599 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.146650782 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.153041892 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.149562241 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.155968999 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.163582926 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.152708949 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.155559965 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.158724419 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.161732676 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.156703396 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.149780053 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.150046916 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.158489901 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.16986321 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.156650613 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.163295491 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.147887731 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.150795387 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.15645201 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.162183866 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.158130483 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.15048209 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.150759598 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.150685182 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.150210414 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.150275101 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.156666987 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.168084625 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.15141763 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.151671556 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.159156495 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.169643898 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.149423247 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.151706937 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.150730133 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.151767018 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.15208601 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.161759327 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.16643909 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.151461841 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.148782352 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.150654332 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.151903988 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.152752345 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.149704689 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.151479524 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.149078346 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.151841988 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.152145815 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.155982272 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.159953217 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.152036576 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.151951798 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.157437755 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.152677676 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.15097126 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.158454404 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.152527516 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.152482736 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.153695313 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.15698425 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.148908269 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.154449241 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.159977425 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.152874089 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.152563386 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.152351171 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.153586567 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.160035574 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.176767085 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.152139556 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.153672479 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.157606389 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.164196303 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.153254982 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.155167247 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.153469267 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.15109821 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.149924094 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.153007489 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.153046584 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.152513131 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.153607636 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.153886011 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.151293805 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.153933834 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.152079902 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.153052941 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.153900388 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.152671166 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.153323979 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.154174273 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.155268202 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.155622786 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.15978002 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.152142373 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.154689569 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.154677498 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.15133705 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.153377407 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.1533719 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.154206085 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.153683295 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.15473126 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.153331928 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.154564013 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.154569425 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.154224287 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.154075718 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.154024903 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.157636554 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.155258976 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.156987546 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.153567395 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.152214217 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.154200017 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.154267861 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.154483931 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.155867214 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.153799197 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.156021163 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.163746291 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.15547795 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.155937861 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.157411288 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.15566233 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.156771651 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.156057421 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.157663413 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.161513442 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.155769882 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.161775068 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.156546198 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.157314462 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.155229394 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.155510693 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.154714975 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.156173595 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.157714283 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.162559093 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.16841428 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.163046144 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.156246269 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.159361622 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.155627805 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.16040306 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.159484925 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.156295526 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.156267338 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.156397444 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.156378295 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.157176767 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.157757945 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.156957957 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.155462419 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.156655731 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.156748256 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.156641615 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.156433541 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.156152744 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.156752113 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.153883976 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.157723111 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.157290286 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.155588081 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.155218401 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.155339346 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.156162011 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.158148004 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.158115616 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.161642163 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.155970725 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.157754444 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.158102436 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.157065458 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.155610269 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.157976948 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.159066532 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.156703533 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.163656313 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.172463709 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.158352862 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.16392367 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.171327423 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.155809165 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.159982415 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.158856419 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.156155425 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.160612532 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.164650369 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.159114127 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.158817385 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.159849484 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.158273754 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.158778509 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.164601489 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.156632454 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.158412537 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.161208734 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.160229137 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.158265266 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.158930117 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.158591911 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.15899889 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.160790351 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159305353 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.159607603 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.16082763 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.16022409 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.16043352 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.160801882 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.161775379 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.166496049 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.163439034 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.159866394 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.160911902 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.160418224 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.164673777 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.15920623 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.16093669 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.158883822 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.171820579 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.168303549 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.166302443 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.161352868 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.160569221 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.165876042 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.160712517 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.163089166 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.160532808 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.160683556 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.159974885 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.159856236 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.15840308 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.160507908 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.161953905 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.161463959 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.161779676 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.165145158 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.161871753 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.159551277 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.160744827 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.161914563 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.163191369 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.159753941 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.162200425 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.162478592 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.163054639 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.16051969 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.160151833 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.168153463 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.175656837 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.161774389 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.160723824 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.160826356 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.160810535 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.161568145 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.16230223 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.163863416 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.16862104 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.164212082 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.168680911 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.162732603 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.170019539 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.162707756 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.164982001 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.169814649 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.159467662 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.160297877 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.161886554 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.163094506 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.168805296 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.177561734 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.162228326 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.166221166 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.162944408 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.163682914 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.161993862 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.162937816 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.163545672 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.162377634 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.17090067 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.177767107 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.165088403 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.163710422 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.16077221 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.162867185 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.163316756 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.161862015 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.16606251 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.163902936 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.163392437 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.162557159 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.162748739 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.164850128 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.164463689 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.163774095 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.161342925 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.164434789 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.169742582 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.179579766 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.167245431 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.165319295 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.171074773 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.164968164 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.170993389 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.179549955 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.163241107 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.165677404 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.165195793 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.165005232 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.162893381 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.16602025 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.16531656 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.166475579 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.16904561 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.164932092 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.16562838 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.162953689 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.164558445 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.163799431 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.174354914 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.187048049 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.16510553 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.16861875 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.161885869 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.164719833 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.169083694 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.165425274 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.164005133 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.165410052 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.174353338 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.173554632 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.164444133 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.165509975 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.164846931 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.165955858 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.164990877 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.165213139 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.16607935 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.16593185 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.164801973 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.165764854 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.167894384 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.164862165 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.165872787 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.165742836 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.166632335 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.175422139 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.165388108 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.166990447 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.166923584 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.165105931 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.166454725 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.165175682 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.167115671 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.166702763 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.167247732 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.166998025 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.172526408 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.171699134 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.167690339 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.166077556 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.166455287 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.166809736 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.166442304 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.16769654 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.167828484 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.167559818 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.167247249 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.167973586 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.167345263 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.165748153 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.167195436 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.166374935 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.166255197 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.169008006 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.171116034 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.167057097 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.165413268 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.168226027 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.168750567 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.165767541 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.166834902 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.173962525 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.170744903 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.17630997 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.174879211 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.172587334 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.16581536 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.170155514 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.174440292 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.165759037 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.167752342 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.168761682 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.169682668 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.167943352 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.17104076 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.16935914 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.174641629 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.168834668 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.168285149 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.176292837 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.182532491 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.169198765 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.169006921 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.171580767 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.168180303 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.166945141 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.168835283 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.168035454 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.175445837 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.184616782 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.168700241 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.170906987 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.166661292 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.171598454 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.173903812 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.169401909 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.168997653 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.166960003 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.168540201 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.170668446 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.170222334 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.166908251 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.168806052 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.169477096 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.171838735 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.174715631 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.167671702 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.170718699 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.169051462 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.169576291 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.16977637 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.171079907 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.168036271 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.166647483 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.168039754 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.169832028 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.169915708 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.173128858 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.169470632 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.171297452 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.171178754 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.172224185 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.172681132 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.179320296 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.178526793 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.168937487 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.168789469 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.169009889 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.173557104 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.171523987 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.172068832 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.170448494 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.171377639 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.170369926 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.172154585 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.171060207 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.172557779 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.185572831 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.185184452 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.170182724 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.171272484 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.173654698 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.171904602 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.17027634 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.172710426 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.173176186 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.174419542 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.17899541 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.173339445 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.179139778 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.184693003 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.172806395 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.176682289 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.172691836 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.177536036 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.174247889 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.172909602 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.173075894 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.177217244 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.186986194 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.17320597 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.181515264 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.198848318 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.186831028 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.173324433 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.173045245 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.173232061 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.173417716 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.174369441 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.173471988 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.1735891 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.174038051 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.172452365 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.173843618 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.17741559 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.173879026 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.173236203 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.173950704 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.170857034 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.173672243 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.170760978 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.173176712 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.174253263 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.174215551 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.173870621 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.173559857 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.173083997 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.184984933 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.182560805 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.174057544 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.174474193 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.171763698 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.176283031 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.176707396 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.183470907 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.181705032 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.174372999 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.174268148 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.174839303 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.174515074 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.172701653 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.174077375 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.173388545 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.173022571 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.171887508 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.186389295 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.182611283 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.177862746 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.174228585 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.175896215 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.173932525 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.174198163 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.174753622 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.175161602 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.175998325 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.174561792 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.178428358 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.176013137 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.174965474 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.177775399 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.182576723 seconds)
  done (took 694.262977961 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.172170627 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173845185 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.173432561 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.173540991 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173204832 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.172968263 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.174115127 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.172958797 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.172766562 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.173765249 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.172849659 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.174002466 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.172986672 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.175565805 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.172896565 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.173467078 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.174332545 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.173428024 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.174162372 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.173513229 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.173537534 seconds)
  done (took 25.753353781 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.176661314 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.173906874 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.175440101 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.177464644 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.174204399 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.176756465 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.174996153 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.176843719 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.176926986 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.174476277 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.177483999 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.176658835 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.175105677 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.174335102 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.174544292 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.177735428 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.17806889 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174941713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.177646744 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.174758016 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.177553603 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.175327651 seconds)
  done (took 26.983099814 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.17857628 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.177722868 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.176802747 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.174520047 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.177905828 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.175103354 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.177749466 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.178056733 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.177491357 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.177677965 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.175770447 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.179272612 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.184373626 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.182060564 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.179370319 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.178280685 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.322579513 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.177467522 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.178789904 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.178109053 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.176595337 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.183104656 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.177721695 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.176324848 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.176733397 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.179270309 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.18005145 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.179296287 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.179217581 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.178937429 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.182463212 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.179460072 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.178139594 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.180351882 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.177328854 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.179703609 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.182230901 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.179694236 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.17778245 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.17969314 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.187568975 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.19816813 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.179355223 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.184009537 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.180435008 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.179333355 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.182031415 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.186122448 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.177605566 seconds)
  done (took 59.060284097 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.180024558 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.180964971 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.17768665 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.180454997 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.179900146 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.179352456 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.180556249 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.180571126 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.17855832 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.177582659 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.180438513 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.17746375 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.176539433 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.17974387 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.17959891 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.177073262 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.179205891 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.178349317 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.178960778 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.177919398 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.178296809 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.18044103 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.180849747 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.177918974 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.179428701 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.17894825 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.17743594 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.180486148 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.178290236 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.178120857 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.180851418 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.18122558 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.182097286 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.177996305 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.178044247 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.180955622 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.181825143 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.178335744 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.179880648 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.17924898 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.18119319 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.181236592 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.181779888 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.182654156 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.179542331 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.179969427 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.179747916 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.178761714 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.17903446 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.181860774 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.182022347 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.179230039 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.181598187 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.180000353 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.181309414 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.181565845 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.179671024 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.179219551 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.182850484 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.179510544 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.180466713 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.182561825 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.180917444 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.181579134 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.182726167 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.1805704 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.180636443 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.18320678 seconds)
  done (took 81.352853963 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.181930605 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.182973876 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.182911897 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.182909253 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.183200961 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.182833432 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.181875898 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.183579829 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.181938988 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.183269378 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.183247957 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.183009938 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.18305903 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.183656595 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.183106916 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.183761932 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.183604712 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.184238526 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.184867698 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.18440492 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.183720302 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.183648839 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.185515151 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.184839821 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.184394781 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.18457545 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.184424819 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.184772498 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.184501843 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.184998516 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.18443028 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.183166089 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.185338877 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.185121561 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.185370927 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.184949873 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.184538552 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.185224882 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.184637036 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.185274653 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.184788931 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.184678507 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.185550662 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.184290528 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.185085874 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.185094995 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.185394552 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.186174254 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.185114713 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.184833566 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.185374627 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.185408994 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185608418 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.185514064 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.185849581 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.187039729 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.185387077 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.185110406 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.185441474 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.185816787 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.185880867 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.18616969 seconds)
  done (took 74.555889468 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.185104119 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.185943588 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.182681816 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.182872675 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.186097263 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.183599474 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.185098532 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.184442749 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.185737811 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.18595819 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.185386657 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.184558408 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.184218895 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.187124472 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.184129344 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.183750899 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.183801494 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.183421945 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.186619099 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.183479891 seconds)
  done (took 24.81393751 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.183722036 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.18738754 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.184205389 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.184447572 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.185990754 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.18376177 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.187451127 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187419006 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183740851 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.187205259 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.187343675 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.187212123 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185042409 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.185143185 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.187512569 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.18466625 seconds)
  done (took 20.092419943 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.184696271 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.187533964 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.18731023 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.188583382 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.185869583 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.18434046 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.187146897 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.184999686 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.184201801 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.188138758 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.188055845 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.186925182 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.188368237 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.187710955 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.184724706 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.18829984 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.184698828 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.185485519 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.188316056 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.188612898 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.186236989 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.185833999 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.189281618 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.188725288 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.186090047 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.187090011 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.186409623 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.187296906 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.185427247 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.189518635 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.186673196 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.186811883 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.18631845 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.185700372 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.190406272 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.185994818 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.190090298 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.189587135 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.189703892 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.189328324 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.189876356 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.186662691 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.188284372 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.189283215 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.186677064 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.189102115 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.186708708 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.188386202 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.188132556 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.187526831 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.189783951 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.190009866 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.190490628 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.19035749 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.190110791 seconds)
  done (took 66.440500792 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.190289102 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.190452338 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.187517584 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.18929958 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.190594063 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.188022328 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.190145404 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.187562647 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.187475966 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.189082333 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.188435328 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.190086817 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.187427261 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.190608734 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.188826735 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.190646583 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.186614056 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.188828853 seconds)
  done (took 22.52586019 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.188698638 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.18840158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.190759721 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.188174381 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.188824254 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.191418014 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.18798246 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.191866912 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.191813581 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.187992949 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189459235 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.19223281 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191655529 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.192454682 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.189506407 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188541367 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.191777879 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.192349577 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.189127046 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.189402695 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.193670995 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192814391 seconds)
  done (took 27.312853748 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.189991169 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.191676364 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.206172729 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.230151796 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.220488492 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.190321416 seconds)
  done (took 8.353930358 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191124217 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.191489678 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.190445485 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193694641 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193472468 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.189744089 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190195226 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.18939069 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192681793 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191052285 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190003312 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193356705 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193008982 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.189968884 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193152066 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193281383 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.189945471 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.189297478 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191425186 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193151664 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190669452 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193263638 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190931936 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190785093 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.190430326 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190368081 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19378347 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191597546 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.189800458 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193813772 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19408038 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191676653 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193362532 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191449272 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194397978 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192730867 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191099957 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194022527 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19395708 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191659015 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.193139326 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194327936 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194227495 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191701246 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194125029 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191923524 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191407681 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191410042 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191585736 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194911923 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194876943 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191820739 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.19480018 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194622316 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193914396 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195619991 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.192280397 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192020085 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194895376 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192830335 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193074552 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195376857 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191914172 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193797772 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195201795 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193444635 seconds)
  done (took 79.831253202 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193424434 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.192705289 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193714722 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193854744 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193633973 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193455997 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192562349 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193913373 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193347252 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193067832 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196523024 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19379911 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193756094 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193757701 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193568161 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193821252 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.192831333 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194076003 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193564981 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19575084 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193029727 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.192951653 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194215993 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194204312 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194592513 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19692908 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194090289 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195174428 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194534903 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194718738 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194643433 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193945217 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193712132 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.194288559 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195090418 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19485609 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193226477 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195113522 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194782766 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197857853 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19548105 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198373803 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196199999 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195022746 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196787511 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196109606 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195356302 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195356932 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194941426 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195513096 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195981142 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195361943 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195680049 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195508774 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195010634 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195519191 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195953888 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196108681 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195981678 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198807434 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195697253 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195827687 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199312626 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195617868 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195473599 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196813057 seconds)
  done (took 79.995920796 seconds)
done (took 1618.827316431 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.254211513 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.271656066 seconds)
  done (took 13.657207833 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.357235031 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.313378135 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.197081894 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.245033891 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.197732794 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.213640444 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.191352968 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.197456831 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.197333523 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.196513034 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.198211407 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.384736782 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.198789566 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.198074864 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.196617038 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.289643087 seconds)
  done (took 40.907649731 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.223447861 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.203959169 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.300781384 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.216947285 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.22300075 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.362507361 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.248803074 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.201347612 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.348580339 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.23817302 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.609730822 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.223476554 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.200698551 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.206281906 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.217091219 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.362399487 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.416682328 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.624120699 seconds)
  done (took 27.561764574 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.587443022 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.191745326 seconds)
  done (took 8.911270763 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.216885755 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.212675455 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.244320335 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.224620364 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.210611364 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.198942159 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.198979855 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.254049168 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.230286373 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.242944483 seconds)
  done (took 63.36880329 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.215421764 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.199643487 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.2005817 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.198375137 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.191397354 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.192405464 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.198169799 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.191339215 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.321143622 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.306843002 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.213019651 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.206436979 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.200680664 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.200469616 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.198292098 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.232274896 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.375509973 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.198310569 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.196990833 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.206007322 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.200939167 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.28078875 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.234662261 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.200572945 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.308103902 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.339871477 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.20525068 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.207961792 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.364377291 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.199585025 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.200145733 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.201693701 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.203419234 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.743776324 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.726181747 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.208158929 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.221804187 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.210262569 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.200245882 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.333089107 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.201491165 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.2088984 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.195915102 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.70926899 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.353814873 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.302312817 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.320381656 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.205087831 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.202480461 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.260124954 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.203528264 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.202311626 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.229740229 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.913314643 seconds)
  done (took 102.877642472 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.251880319 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.679409447 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.361464811 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.21148896 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.016306666 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.957039815 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.195472692 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.442309426 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.211404496 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.194335018 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.457671009 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.661751821 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.198519536 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.260243938 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.698395443 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.230398802 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.195815931 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.072810564 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.197206486 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.198776992 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.599984764 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.210664087 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.197016064 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.460839593 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.232115014 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.617982604 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.45031503 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.634049195 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.197934868 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.193775673 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.625994499 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.196605182 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.202917551 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.197900072 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.448613086 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.508183756 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.486096154 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.197125559 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.211242942 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.197416941 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.216250769 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.615274412 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.498786708 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.195630881 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.195611217 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.620767458 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.195970908 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.197147298 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.203823195 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.39860203 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.95022257 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.197377804 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.458055297 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.198223196 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.455388458 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.27923602 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.20185018 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.646411795 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.197003279 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.255965883 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.199364071 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.197954835 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.198322894 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.197562337 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.198640078 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.504335497 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.563033801 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.20206409 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.505368665 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.6174679 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.197185344 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.684023275 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.052531656 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.222194975 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.239098813 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.197468868 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.898059282 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.657809244 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.241109983 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.198249032 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.496111184 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.19780349 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.456422562 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.209750326 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.199136567 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611874977 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.215103271 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.235394151 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.203307234 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.207885755 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.966644286 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.198904691 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.446182706 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.236369319 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.198115538 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.199244831 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.205554525 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.199998159 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.211193073 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.203368407 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.684262225 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.207805324 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.303953749 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.213903352 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.200615188 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.201062275 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.201963605 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.197602292 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.418831961 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.788015098 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.206900187 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.198060083 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.198207592 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.207211582 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.414548844 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.201034056 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.472173389 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.200760011 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.199131337 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.204137827 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.001623574 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.232774493 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.198857822 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.207578591 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.01760292 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.404258803 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.2165285 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.200353331 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.200863015 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.213320076 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.412259276 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.201529441 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.253805261 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.203187211 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.864735758 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.20872902 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.226499324 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.618964441 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.200220177 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.02694493 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.221510991 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.201865639 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.492485718 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.454490083 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.499569155 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.20155142 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.202315651 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.872493103 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.206912636 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.339975833 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.215843352 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.203315005 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.396190629 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.454253452 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.201017173 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.757429044 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.204041335 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.414054755 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.20179304 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.509044268 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.652378891 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.20204918 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.205861682 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.871489315 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.840763325 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.992798607 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.204347971 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.458720823 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.196580973 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.657588301 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.202374359 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.202007226 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.774124071 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.20534666 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.201615543 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.201815455 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.202414638 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.265582028 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.374610813 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.060341911 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.204554518 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.624053893 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.221574521 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.203434258 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.207109032 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.20772012 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.554261361 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.254825478 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.204529997 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.223198381 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.204072951 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.211814307 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.633353236 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.076229091 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.205934386 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.354062782 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.792281708 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.205754759 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.205136993 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.975199021 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.449126557 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.715037994 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.251520032 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.473810755 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.209107487 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.241449097 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.95733076 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.204448688 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.678435919 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.205255708 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.204110499 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.779107749 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.203646039 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.371986226 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.205712859 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.204872075 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.698464208 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.204325003 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.206601403 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.401062019 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.204497309 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467718813 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.204574716 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.243637716 seconds)
  done (took 1080.160173596 seconds)
done (took 1338.576740329 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.20426052 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.205991787 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.195617189 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.206082751 seconds)
  done (took 25.957688102 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.21863398 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.212065868 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.213261855 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.21154407 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.216024245 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.213250112 seconds)
  done (took 8.430816027 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.257552883 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.207081785 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.207665436 seconds)
  done (took 18.818772307 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.403838131 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.352100775 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.533476759 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.159495251 seconds)
  done (took 9.595476393 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.214123906 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.213899593 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.214482385 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.216396452 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.218544316 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.21934962 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.217691838 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.216336341 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.219623687 seconds)
  done (took 12.095657171 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.746718603 seconds)
done (took 80.791164401 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.313754009 seconds)
    (2/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.315478863 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.050116951 seconds)
    (4/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.234024469 seconds)
    (5/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.209970154 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.233659147 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.930592274 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.887011016 seconds)
    (9/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.72363299 seconds)
    (10/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.290827081 seconds)
    (11/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.293726473 seconds)
    (12/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.191910767 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.263534589 seconds)
    (14/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.036546984 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.447504703 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.018006919 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.250413567 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.443046667 seconds)
    (19/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.235038233 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.23516653 seconds)
    (21/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.467074654 seconds)
    (22/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.411914843 seconds)
    (23/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.213815256 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.207910882 seconds)
    (25/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.032928527 seconds)
    (26/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.330362396 seconds)
    (27/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.207063176 seconds)
    (28/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.386407604 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.595996629 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.688732329 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.014878188 seconds)
    (32/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.205950432 seconds)
    (33/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.92304655 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.797109151 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.575062859 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.193226349 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.284565648 seconds)
    (38/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.373083787 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.283359829 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.193783543 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.313805631 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.207862219 seconds)
    (43/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.30034549 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.313766988 seconds)
    (45/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.235198269 seconds)
    (46/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.915621675 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.769270109 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.260417227 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.207669237 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.568795815 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.220440862 seconds)
    (52/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.335269133 seconds)
    (53/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.763821051 seconds)
    (54/309) benchmarking ("sort", Float32, false)...
    done (took 5.17898541 seconds)
    (55/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.219822427 seconds)
    (56/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.20972924 seconds)
    (57/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.298399929 seconds)
    (58/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.335382604 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.612939017 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.321965025 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.473537383 seconds)
    (62/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.424127155 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.334216085 seconds)
    (64/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.463884817 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.222278984 seconds)
    (66/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.299237735 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.267472171 seconds)
    (68/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.545158573 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.795272896 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.212223769 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.798159812 seconds)
    (72/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.307932436 seconds)
    (73/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.237452602 seconds)
    (74/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.223584846 seconds)
    (75/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.21335349 seconds)
    (76/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.404439828 seconds)
    (77/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.388585739 seconds)
    (78/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.651158565 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.982153066 seconds)
    (80/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.539084025 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.21129835 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.213511392 seconds)
    (83/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.665320512 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.237453779 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.480483708 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.315194557 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.562794783 seconds)
    (88/309) benchmarking ("sort", Float64, false)...
    done (took 5.467657698 seconds)
    (89/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.197404555 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.4173063 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.200248124 seconds)
    (92/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.519222769 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.21136228 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.228958387 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.980014864 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.212451545 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.322342721 seconds)
    (98/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.212892536 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.199706517 seconds)
    (100/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.577362536 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.194172331 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.362491457 seconds)
    (103/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.230756988 seconds)
    (104/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.321049859 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.472700151 seconds)
    (106/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.570789607 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.193327643 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.561452128 seconds)
    (109/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.377249847 seconds)
    (110/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.233480859 seconds)
    (111/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.243271981 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.223195268 seconds)
    (113/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.340985154 seconds)
    (114/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.718663391 seconds)
    (115/309) benchmarking ("sort", Int8, false)...
    done (took 4.222398176 seconds)
    (116/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.198112136 seconds)
    (117/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.761611526 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.542778491 seconds)
    (119/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.236400873 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.22394886 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.336473172 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.721490208 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.413749396 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.2178473 seconds)
    (125/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.908500928 seconds)
    (126/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.228012335 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.473029242 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.233570731 seconds)
    (129/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.553179234 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.613287815 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.224969835 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.40855326 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.46742459 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.216646804 seconds)
    (135/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.606085718 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.607617566 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.685061008 seconds)
    (138/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.668682172 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 1.722230863 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.236642348 seconds)
    (141/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.737775907 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.482663559 seconds)
    (143/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.299497629 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.035616791 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.28818776 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.746707721 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.899191298 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.355054346 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.473060478 seconds)
    (150/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.24071571 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.511993041 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.605118197 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.226638032 seconds)
    (154/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.468422455 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.240838221 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.759366034 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.318466295 seconds)
    (158/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.72761968 seconds)
    (159/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.223572996 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.913185471 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.241825232 seconds)
    (162/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.77858257 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.214355465 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.48981778 seconds)
    (165/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.555198813 seconds)
    (166/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.215085548 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.23919024 seconds)
    (168/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.339942819 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.997497017 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.216409439 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.07384338 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.807904767 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.406707741 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.078319732 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.718589561 seconds)
    (176/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.220887177 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.269631495 seconds)
    (178/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.529323627 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.213326869 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.215507937 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.311461064 seconds)
    (182/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.80446841 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.532409351 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.605317738 seconds)
    (185/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.977188267 seconds)
    (186/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.395871445 seconds)
    (187/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.281595141 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.458560252 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.244295154 seconds)
    (190/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.232836973 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.070620693 seconds)
    (192/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.727232446 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.015599131 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.258670798 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.21520031 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.376452599 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.244093256 seconds)
    (198/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.217296612 seconds)
    (199/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.216809047 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.460912793 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.392486923 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.982234807 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.276013534 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.436699359 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.55325524 seconds)
    (206/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.427270775 seconds)
    (207/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.230822712 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.220784674 seconds)
    (209/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.61581614 seconds)
    (210/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.542916515 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.229281998 seconds)
    (212/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.514554114 seconds)
    (213/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.30433759 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.908459151 seconds)
    (215/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.415216242 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.891423008 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.43407508 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.930088911 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.89694855 seconds)
    (220/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.766731216 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.230916528 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.20233271 seconds)
    (223/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.302530279 seconds)
    (224/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.22859064 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.22748815 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.240874321 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.759585589 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.21864692 seconds)
    (229/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.24601253 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.259027077 seconds)
    (231/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.339307974 seconds)
    (232/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.906283447 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.973414077 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.818814747 seconds)
    (235/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.381536756 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.225223538 seconds)
    (237/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.279008366 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.291920885 seconds)
    (239/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.893265779 seconds)
    (240/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.76407273 seconds)
    (241/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.544402719 seconds)
    (242/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.392634778 seconds)
    (243/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.214967132 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.230628631 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.014422108 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.205218649 seconds)
    (247/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.892918098 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.413050543 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.526906922 seconds)
    (250/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.247948736 seconds)
    (251/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.804160769 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.51505566 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.316267136 seconds)
    (254/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.725285123 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.247841281 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.241992697 seconds)
    (257/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.372253231 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.205178733 seconds)
    (259/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.562462021 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.0356289 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.461256256 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.607079709 seconds)
    (263/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.910555349 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.686613323 seconds)
    (265/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.248030273 seconds)
    (266/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.195040593 seconds)
    (267/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.388965898 seconds)
    (268/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.346242517 seconds)
    (269/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.284525169 seconds)
    (270/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.538429182 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.466343847 seconds)
    (272/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.328529695 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.731137141 seconds)
    (274/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.286174231 seconds)
    (275/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.668168099 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.918907908 seconds)
    (277/309) benchmarking ("sort", BigInt, false)...
    done (took 6.219400923 seconds)
    (278/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.242680183 seconds)
    (279/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.81862473 seconds)
    (280/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.206929869 seconds)
    (281/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.955685804 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.226811327 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.307474643 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.285574701 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.302739274 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.205620781 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.346726164 seconds)
    (288/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.423977858 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.973418764 seconds)
    (290/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.319253939 seconds)
    (291/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.237623847 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.220961021 seconds)
    (293/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.331287924 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.263474223 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.270242031 seconds)
    (296/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.385196696 seconds)
    (297/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.496287096 seconds)
    (298/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.208474188 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.242611105 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.223573226 seconds)
    (301/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.232525105 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.244972566 seconds)
    (303/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.966717537 seconds)
    (304/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.645485611 seconds)
    (305/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.238062109 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.237107316 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.387003579 seconds)
    (308/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.003813947 seconds)
    (309/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.510564157 seconds)
  done (took 872.47863653 seconds)
done (took 873.626814733 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.254366225 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.248306834 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.232994399 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.252962244 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.343629958 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.261590775 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.242146079 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.234630452 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.27980005 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.281773165 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.23222175 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.260257144 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.233672469 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.232490164 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.232323078 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.247118799 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.173015688 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.233521342 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.249544331 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.241813889 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.24942595 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.231573689 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.282802509 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.260843925 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.236893452 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.235002439 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.236111829 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.253255857 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.343579641 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.23674582 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.236318253 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.245631585 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.193530795 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.233267066 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.229656149 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.252475197 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.246276607 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.24259709 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.237197765 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.265066195 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.551182696 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.235265516 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.235162156 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.235593415 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.234739256 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.239607528 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.235094699 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.241859453 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.248259521 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.24787086 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.522926688 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.249417299 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.237732121 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.235657216 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.246441693 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.234573158 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.238563897 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.249995123 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.253882589 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.25110542 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.167278533 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.240676568 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.237842463 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.250687517 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.242357261 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.56431851 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.23119528 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.240842568 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.539293029 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.240204082 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.564611378 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.243190038 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.237399213 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.250134318 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.267301858 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.184551947 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.2307229 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.235400301 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.244219355 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.235129589 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.245943077 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.249210837 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.241702352 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.237265839 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.249423575 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.264684609 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.244945763 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.238112762 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.245951746 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.25601945 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.24437049 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.247586701 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.240787099 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.232021004 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.245994442 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.240800462 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.239373744 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.239803921 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.2421203 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.248517614 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.54174543 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.254307755 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.235391815 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.234872077 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.235564444 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.251263176 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.544134486 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.236498703 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.259897649 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.285862899 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.240130501 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.194051122 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.242763916 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.253861604 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.248259889 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.241513157 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.233636476 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.191687818 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.537657933 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.25289584 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.239965301 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.238059324 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.254459782 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.239974233 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.235020011 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.191968544 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.241391397 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.251734782 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.358957268 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.249293899 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.269587335 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.237493799 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.241816215 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.266766213 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.253598967 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.269542834 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.241575914 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.253252697 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.254821921 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.236696091 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.249708347 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.251254379 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.240746418 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.245150195 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.234578756 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.267389484 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.251922689 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.251724593 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.260213384 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.360302391 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.237029441 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.173917638 seconds)
done (took 208.818765365 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.299194237 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.228920058 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.322970473 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.235862891 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.335455046 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.33570549 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.234664654 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.234536756 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.23520155 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.61986489 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.234699818 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.236000748 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.235280737 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.23601239 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.320682949 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.237311211 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.233690191 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.580205474 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.237784459 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.30793125 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.233988408 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.236209217 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.236858507 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.620583638 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.22997865 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.23007111 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.309919942 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.238651158 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.58435438 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.235847819 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.232814434 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.583704949 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.327415423 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.253694046 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.247175754 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.246561293 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.337447434 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.253026514 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.320186113 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.321243502 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.326838577 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.275932291 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.237674775 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.231754433 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.239548389 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.239844632 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.237282711 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.266021793 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.240093704 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.236599027 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.581634537 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.247789604 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.246509344 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.236861975 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.237153321 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.25910834 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.237493542 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.240274546 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.329012873 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.239447046 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.302562166 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.621321568 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.622247447 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.241064143 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.233023916 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.238219203 seconds)
  done (took 142.037692365 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.306063135 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.312451758 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.34553557 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.239802225 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.289890752 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.350168808 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.241529469 seconds)
  done (took 10.257022947 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.246590111 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.24088978 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.290759301 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.28967703 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.24059344 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.38838434 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.241918347 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.252412726 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.238933604 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.294419454 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.243397631 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.242184599 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.248162808 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.238408491 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.289512964 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.252404595 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.354633265 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.241410699 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.242182259 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.393728669 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.239271978 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.249239551 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.293422099 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.252555824 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.2438268 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.246984331 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.805183356 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.241702765 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.239429487 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.241955896 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.239717161 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.278591581 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.242758652 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.235516044 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.240150351 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357366027 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.241505302 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.239657664 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.241726959 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.237670847 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.243091959 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.242318492 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.242464939 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.239897078 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.243528123 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.265033346 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.241232741 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.242919895 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.242644682 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.243147396 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.293671974 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.243085162 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.241003706 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.241725836 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.297550256 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.250062347 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.244484307 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.2410138 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.24365981 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.240570567 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.395431145 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.29146304 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.244670863 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.290920145 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.244071917 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.245347396 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.243462818 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.242957213 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.298287409 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.243489455 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.291560296 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.242007606 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.398039664 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.265674609 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.245702952 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.246159732 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.246776538 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.244660587 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.245375171 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.248918028 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.242401115 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.244064216 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.251019861 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.241795695 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.24179079 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.346411542 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.352345441 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.24268695 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.256253546 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.251725794 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.242442904 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.297355165 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.244100668 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.243158185 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.297914874 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.359298785 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.298149012 seconds)
  done (took 144.305356974 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.248669639 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.252636265 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.246204974 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.261577167 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.244926403 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.24395345 seconds)
  done (took 8.674667661 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.2461805 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.245770736 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.246193326 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.245174708 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.246091581 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.246675094 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.246274468 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.245454996 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.248768253 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.244902735 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.247169984 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.248833195 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.247391801 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.247413509 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.24711203 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.245962094 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.24645116 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.245608622 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.246168553 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.246661201 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.349740493 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.245777085 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.246523928 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.247378592 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.250686362 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.246834477 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.25298669 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.246681603 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.245459423 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.252965812 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.24907979 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.251152818 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.24703713 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.251460358 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.25095659 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.248516247 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.250860021 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.251112101 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.246225294 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.249983735 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.251927966 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.247707212 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.248212302 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.249457273 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.248522004 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.25168283 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.254173456 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.254459872 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.247368026 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.250615113 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.251683729 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.248885817 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.249802295 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.251876594 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.250144716 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.250818681 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.253081132 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.247470643 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.249056934 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.248755739 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.249793576 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.249323799 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.248814076 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.252440269 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.246424516 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.251573666 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.249433144 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.251460249 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.250114032 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.248641775 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.252077258 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.246108637 seconds)
  done (took 92.192527403 seconds)
done (took 398.635639522 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.493743119 seconds)
  done (took 7.674682069 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.44877512 seconds)
  done (took 7.631539438 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.198071032 seconds)
  done (took 20.388099309 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.262827724 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.314751147 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.255735466 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.239799688 seconds)
  done (took 26.253285988 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.43127504 seconds)
  done (took 7.611680638 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.243131293 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.242413105 seconds)
  done (took 13.667485614 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.547776836 seconds)
  done (took 7.728922448 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.762320401 seconds)
  done (took 7.948827248 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.268939943 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.265055089 seconds)
  done (took 13.965271068 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.237939328 seconds)
  done (took 7.418036746 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.865822233 seconds)
  done (took 8.047448029 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.253225965 seconds)
  done (took 7.436102711 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.272722157 seconds)
  done (took 7.453998903 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.715200717 seconds)
  done (took 8.89669287 seconds)
done (took 153.302937568 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.241101764 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.244581482 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.245033851 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.244368815 seconds)
  done (took 26.156893883 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.282534881 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.28349752 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.286181544 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.293830396 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.287104134 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.28389316 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.275665748 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.276876652 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.295196631 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.286739064 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.28635017 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.286701651 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.284336059 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.27765579 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.286094105 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.286065947 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.29497795 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.285581618 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.277513119 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.28761893 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.252284859 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.296074556 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.286775972 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.251633944 seconds)
  done (took 31.974499928 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.446004145 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.320644752 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.403912 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.301393007 seconds)
  done (took 6.653438913 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.30378797 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.304210091 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.316396416 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.362754726 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.381662622 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.313627671 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.278375946 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.273647331 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.260197939 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.304818341 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.380445258 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.319969443 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.397928307 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.251745974 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.438146316 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.251073871 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.252340332 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.304740572 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.355775619 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.380993395 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.252850479 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.303753032 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.307822485 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.321877742 seconds)
  done (took 32.802230751 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.250762487 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.259322217 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.25745745 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.251940003 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.252673237 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.253805861 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.256764786 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.253582001 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.273280894 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.2544608 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.252398272 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.251515207 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.251644926 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.25288129 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.252435399 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.264413745 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.266195384 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.252671814 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.255642051 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.258395115 seconds)
  done (took 26.306985647 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.244433205 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.098498218 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.596655085 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.499673348 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.24635575 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.247566717 seconds)
  done (took 27.11796245 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.313559303 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.438744815 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.252217064 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.574960191 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.652963641 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.255635051 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.252712393 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.47281463 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.747128868 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.743605451 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.303987697 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.31194654 seconds)
  done (took 18.505709054 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.249494496 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.247877039 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.252658066 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.264232111 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.3009233 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.257078232 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.259497675 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.245956022 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.303047595 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.306360674 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.258131765 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.303113724 seconds)
  done (took 36.435914709 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352178618 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294555131 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.200181044 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.97359374 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394226974 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.459820118 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.006438442 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.65784567 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.253846282 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523180429 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.01800225 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367121917 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.504949385 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2582153 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.251065901 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.135734107 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476520028 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713426485 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.251094331 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.944115784 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27605558 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.256600423 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.110738773 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.27763073 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.461766539 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.22666356 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.510087524 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.028302645 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512026092 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.264236152 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.260393333 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.248734333 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523786136 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883315982 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348188897 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.260211672 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.938128231 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.796099453 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.244587066 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.028826406 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.790054768 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.254655293 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262003465 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.250967475 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.1847414 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.250248676 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67551628 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.257701686 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.962868816 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.250342847 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.262158548 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347311708 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.255121541 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.822253628 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237752704 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.257116129 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.25010357 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.258210968 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819879161 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.425096334 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.255206018 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.199318239 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.625285611 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.951954737 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825593626 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.356123073 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.256201876 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.255331769 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186130436 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.011067528 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.271202542 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399266693 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.277003716 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.900957544 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911248868 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.989576838 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.195707058 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.778930917 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264611448 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.188829467 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.480151216 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.029246186 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.188563274 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.198931648 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.187235596 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913861419 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261464701 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.597780709 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.260024042 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.659353378 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.265497848 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270196552 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275130782 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.476837724 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.137265774 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.254585847 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.760781713 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393620055 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274495128 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.673615261 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.189411148 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.258630117 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508357813 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.464405259 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.255598524 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.135613934 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.438824829 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264717145 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.271056319 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.262260381 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.265972482 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.78214815 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.26855103 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.43691557 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27267368 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.029908849 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957242801 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.254539115 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.358170536 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.022411513 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498693972 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.994899007 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164163775 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.324232104 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.259806123 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.254818885 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.061872306 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.105790332 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.151646035 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.257513024 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.256007663 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.267989141 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.256400213 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199663432 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.258006454 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.048407715 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.033383399 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.479494003 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.256056327 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547967606 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.19051951 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403171717 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.265680698 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.478573549 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.369862822 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.254564005 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514613361 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264087085 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268266227 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.268786084 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275703291 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353611318 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27705708 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.268406041 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.514028701 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.260826768 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.261044725 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.05807232 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.039401623 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263874391 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.2628672 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.072790233 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792011902 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237464379 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.260969508 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252028709 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.271293383 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.324662077 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.262732601 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.26789577 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.932005945 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.069703528 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.261839369 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.255705145 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.482108958 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.26708671 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.056314145 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339909478 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.437205348 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.794721961 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.273404546 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.192177496 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.968562682 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.951322273 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258088302 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.446624986 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.258850308 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269353584 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269395507 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.756824744 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.795341981 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260611332 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.972510297 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.266777429 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270482963 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.263709131 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259765632 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.908218149 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.455768438 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.266751557 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.271558336 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403882729 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.271751578 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.194277282 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.776898068 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.264622377 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.257293689 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.035494135 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294603652 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.998828103 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.719685023 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519000015 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.93155642 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270621261 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.05874088 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.2905978 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.258321454 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.804164613 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282024994 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.276370719 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269241215 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.271405107 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.988199983 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.699072798 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826356305 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931612517 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747478433 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100065603 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.265677264 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.167824139 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.673830067 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196350282 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916931146 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.43373669 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.675879741 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206491476 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441707472 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.383633078 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.970939911 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.273489521 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488180262 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10221578 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.825412129 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.286716075 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.471787179 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29575182 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.264189009 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.191861526 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.550399369 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473442577 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.831863891 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342622392 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671821998 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.820368112 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.052336178 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.260065638 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.586830147 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420539697 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.891994853 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.649386664 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.265569787 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.060551763 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730516582 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.267627944 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.786487645 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845228071 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.265461323 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.445513842 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199706535 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.272879946 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.273139806 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.262372328 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.418068268 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.271652543 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.51715257 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.273463194 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197198369 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.275192397 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752349736 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.12277813 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.268505865 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261783109 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966577769 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264934084 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52732838 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.269890629 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.898982708 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268698089 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.198186722 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197983544 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.956161705 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.272101608 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241261518 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736311562 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.61086709 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.235679729 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295073908 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10888455 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.518895107 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.278525649 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.803355817 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492151505 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.044889112 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286339661 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.365066569 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.863001825 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.262410649 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.165001032 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.500140078 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.082471467 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.487852546 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.222282926 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.169318743 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.2623328 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.477305032 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.164874208 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.084525222 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515021265 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.976202556 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.284209465 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928962977 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29229356 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.106185554 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.28954795 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.638562198 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.27151172 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336384899 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.276587796 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.275641206 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.276027831 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423268287 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.081548927 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279374905 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.280267645 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358948676 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.491821682 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.9099023 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.041011585 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810985627 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958630938 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.809798142 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.280676551 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.266064864 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267286084 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200100086 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414199163 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.79359713 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540614486 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397489241 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.700572384 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289579644 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.871809002 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290009434 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.479459113 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541731218 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.13857282 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27021503 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.928192162 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.165811572 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.277733786 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.477916426 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738877857 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797993962 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387001248 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278091813 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.690433717 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543325518 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.359272785 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.267128766 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.85842057 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.275579395 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.605392493 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.27396919 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.129965111 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416410884 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.277130331 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911518949 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.278116884 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.427789131 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.041432077 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.102051549 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.524279859 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.697387039 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.279825968 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813162618 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.921033728 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.533809893 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339150819 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.279018699 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.373052318 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415897152 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.265908582 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.167342446 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268576634 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112430844 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.979069827 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.279518912 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815399596 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.533361271 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.266139769 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.271170297 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293452391 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.278758716 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.492436579 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944657988 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.493155389 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279791417 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.278133475 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.26096566 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.814625985 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284517057 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204255281 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.273999441 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497230699 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.506552189 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295571594 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.723684535 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.981955596 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803493567 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.24174516 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292591793 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269295215 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.95597531 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815959803 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.916737733 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744929144 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.929060336 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27063025 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547263273 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.276561698 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.28415449 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546930024 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.274978389 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.270146035 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284098136 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.814699469 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988280913 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.288754003 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.028778973 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.20837167 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.496969258 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895531932 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210017247 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271259183 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.44069736 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.271947542 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402920091 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284028684 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.274063742 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283808328 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.005858466 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553065861 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.278860968 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.259739015 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.918220061 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.282760265 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278198919 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.486206901 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278891366 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.946393003 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.621044031 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.528317701 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.284922794 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.257305708 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.276620837 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270651897 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.989837211 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.243565524 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.78790716 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804136275 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.282048461 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.283719883 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.277077393 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.487704053 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.483365478 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.137556921 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298241911 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275039918 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287922685 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.177940764 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.040937187 seconds)
  done (took 1536.104436 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.303453633 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.28233663 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.288771072 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.346443106 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.329533262 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.301336318 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.367678336 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.332853063 seconds)
  done (took 51.762854518 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.282106557 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.427340241 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.301350645 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.275813015 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.284041924 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.277630304 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.702824213 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.272826229 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.281676793 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.284729268 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.276434744 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.276950063 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.899593667 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.282188637 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.273373978 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.260545736 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.281140075 seconds)
  done (took 64.156671759 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.284998496 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.503996141 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.350729276 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.273869299 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.96481031 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.281362243 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.574228378 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.332169568 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.279027185 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.618339808 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.923852523 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.290528691 seconds)
  done (took 82.88943427 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.283506241 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.282700869 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.282527376 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.283028784 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.28197335 seconds)
  done (took 7.625340157 seconds)
done (took 1949.674419345 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.518877988 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.90500289 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.876663334 seconds)
  done (took 4.992995383 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.418961229 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.470311527 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.590325012 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.56667198 seconds)
  done (took 7.257511641 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.564608347 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.645364867 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.472495851 seconds)
  done (took 5.892752284 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.575029863 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.284986666 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.393397653 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.277003464 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.27382681 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.273579536 seconds)
  done (took 20.03695207 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.278801542 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.282485549 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.279529405 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.281921329 seconds)
  done (took 6.334225394 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.259759441 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.975696891 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.259452855 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.27622742 seconds)
  done (took 17.98310675 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.026725581 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.040223877 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.023315275 seconds)
  done (took 7.303022826 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.283449383 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.11862442 seconds)
  done (took 9.61338053 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.577103139 seconds)
  done (took 2.789556498 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.410966884 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.604497044 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.27449688 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.215703199 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.275910453 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.803107178 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.778417789 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.391023163 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.196933569 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.262723609 seconds)
  done (took 26.427196653 seconds)
done (took 121.616784727 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.834844285 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.524346477 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.480725541 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.80707358 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.51257273 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.480381449 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.486035913 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.770595984 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.314762682 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.306987515 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.810288168 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.512870605 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.646905288 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.525146987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.645526607 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.275691294 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.508256555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.876174111 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.488219313 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.725693997 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.486855631 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.445598303 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.639782289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.463848675 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.509446753 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.431505084 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.0390338 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.276661571 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.662361883 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.059518146 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.431893939 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.901706963 seconds)
  done (took 186.09562232 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.286624426 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.275893992 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.276092356 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.29228181 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.289363691 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.280785572 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.275356232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.283885281 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.285336608 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.276792962 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.277181905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.275205345 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.279123327 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.276778104 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.278207414 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.276108696 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.286212841 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.284243081 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.276418325 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.29003398 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.300392891 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.276021998 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.276571191 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.284318476 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.282348339 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.27709986 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.277243712 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.276464405 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.279722721 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.276813173 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.277729055 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.277488301 seconds)
  done (took 202.199206506 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.277403815 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.290155404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.277415765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.27704722 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.285379195 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.279573434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.280096748 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.27739686 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.288352081 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.277991471 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.278224835 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.277253816 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.278297032 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.277925751 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.289164973 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.278596671 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.289822121 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.279491516 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.278682884 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.278909676 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.280851073 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.277957627 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.277588809 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.283266163 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.280688699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.281078432 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.289432463 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.280590197 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.278870215 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.278861617 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.278738117 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.279424768 seconds)
  done (took 202.201549699 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.48232055 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.287349174 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.289050786 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.240897753 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.288523532 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.288095386 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.282588793 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.477437564 seconds)
  done (took 13.853757268 seconds)
done (took 605.563775541 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.51189145 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.234313068 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.479060105 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.309656682 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.010311246 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.308963256 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.307933952 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.465960102 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.170870042 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.465276771 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.490783899 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.307007545 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.626383468 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.306785128 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.542312115 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.401297822 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.124828015 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.237891664 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.607329423 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.95882441 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.555559766 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.689796343 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.464458082 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.186568963 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.650773371 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.699910135 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.935956269 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.126126558 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.308974098 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.608308325 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.885601213 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.19792811 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.360521358 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.342062294 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.396398921 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.379076506 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.178810333 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.339977702 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.484818747 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.459206547 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.793083494 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.00020675 seconds)
  done (took 88.131111395 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.276963023 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.276884219 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.276372913 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.278989363 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.278365592 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.277086837 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.277120701 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.276714488 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.278885166 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.276881958 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.277452677 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.277764135 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.2772316 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.278876347 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.27790581 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.27773113 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.278015223 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.280263879 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.276810936 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.278181108 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.277680707 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.277847191 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.277021156 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.278075186 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.277164839 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.278725682 seconds)
  done (took 34.441472176 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.291700345 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.527761847 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.687233829 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.297206975 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.291430534 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.295342751 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.362179376 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.292980492 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.294298237 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.295660566 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.438226354 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.295332866 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.326081372 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.711229301 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.294636538 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.293190007 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.292381045 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.292133608 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.537240978 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.301494039 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.381414456 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.294720456 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.362673406 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.302576779 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.313204011 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.293407134 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.297479762 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.806758465 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.294791006 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.439428989 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.004195638 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.360466733 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.762682036 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.699050708 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.00301719 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.295260063 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.294759306 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.441801964 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.294604314 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.293581384 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.362258876 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.294149035 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.699826904 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.90064762 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.309083416 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.294941209 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.823026939 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.441321672 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.515582584 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.302487206 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.720897746 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.298350002 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.296946588 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.295097137 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.516400232 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.301818875 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.294329407 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.813172256 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.3145277 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.362738635 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.295342952 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.295894367 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.544779596 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.296052045 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.534103903 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.295938281 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.303222394 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.296466238 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.701647862 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.299326668 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.922725862 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.309025507 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.295494376 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.438299753 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.538703046 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.852504152 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.298922415 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.549770013 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.771956165 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.363351782 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.300500567 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.794537537 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.367380351 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.299614485 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.299257501 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.29872858 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.296334608 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.342085303 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.363716605 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.849456317 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.912337784 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.823944195 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.380023367 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.307874934 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.297034618 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.811689097 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.312524838 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.296744258 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.696195466 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.919301568 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.31038446 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.305026306 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.907501511 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.312596197 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.367104767 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.303076749 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.706438266 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.299059206 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.344887194 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.297532665 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.304120713 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.299700673 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.368317675 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.301249403 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.299398242 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.894035546 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.461386127 seconds)
  done (took 170.292230385 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.288796916 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.291286305 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.29123603 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.290693985 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.289797934 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.296609888 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.290362655 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.289776484 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.297052321 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.291540149 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.292456425 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.293577956 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.292187629 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.291731034 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.30137541 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.298757492 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.90289525 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.292423399 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.293203506 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.308040795 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.07079998 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.292278165 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.291986062 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.303789429 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.291118893 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.292127264 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.298522179 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.295118227 seconds)
  done (took 150.84860702 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.301090443 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.823326975 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.302291969 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.419299609 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.318981573 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.297852907 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.41625694 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.351874733 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.300419467 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.298637087 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.299110451 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.575156487 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.302039959 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.770683507 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.471702957 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.417305894 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.765518575 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.301036267 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.298877573 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.298876252 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.418857792 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.304148674 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.58059263 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.826852078 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.302750134 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.82636598 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.290607568 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.301619993 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.298623368 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.827496704 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.300926359 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.583273925 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.370286873 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.353354312 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.830041604 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.771284306 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.770248828 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.430942758 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.299782216 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.300918955 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.298925293 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.288865885 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.818791072 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.30325988 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.300812221 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.812168753 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.315510214 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.301916012 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.312793627 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.299257121 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.353506221 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.355239756 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.57927463 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.821785705 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.3709012 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.32233335 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.418704571 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.669313162 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.304535192 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.76945723 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.289429047 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.821948452 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.305137965 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.2907808 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.301353828 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.306728099 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.436575258 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.420064307 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.776352273 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.304393753 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.778979332 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.43904407 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.300468653 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.300830164 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.303439411 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.819774994 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.772416823 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.438798764 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.424102997 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.478425526 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.29092148 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.301592228 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.291531782 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.371076655 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.301026165 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.821597036 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.779404518 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.30646569 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.304621342 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.304701451 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.304626396 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.460307927 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.823486752 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.371830178 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.772544284 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.596120321 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.580245931 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.30529339 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.356259349 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.304896846 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.582841203 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.304157495 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.355162632 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.731861905 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.583957437 seconds)
  done (took 154.385312515 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.537942814 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.432476645 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.385985772 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.407358193 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.85968672 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.862758976 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.5005637 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.418100116 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.404684333 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.532118403 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.38891095 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.395228551 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.457275152 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.369973081 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.985264535 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.365831987 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.391421155 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.421846701 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.391587535 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.289736443 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.901132524 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.573242087 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.459246248 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.18769011 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.391297507 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.052166107 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.835666093 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.849411775 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.471410098 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.524951339 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.827018538 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.371530274 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.211809821 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.917328324 seconds)
  done (took 62.6074592 seconds)
done (took 661.924123569 seconds)
SAVING RESULT...
DONE!
