cset: moving following pidspec: 2495
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.012308313 seconds)
loading group "string"... done (took 0.62265585 seconds)
loading group "linalg"... done (took 9.774553517 seconds)
loading group "parallel"... done (took 0.185233904 seconds)
loading group "find"... done (took 1.5570114 seconds)
loading group "tuple"... done (took 2.216276366 seconds)
loading group "dates"... done (took 1.542617845 seconds)
loading group "micro"... done (took 0.241441172 seconds)
loading group "io"... done (took 0.589118899 seconds)
loading group "scalar"... done (took 47.232143742 seconds)
loading group "sparse"... done (took 14.366265357 seconds)
loading group "broadcast"... done (took 1.26787241 seconds)
loading group "union"... done (took 13.091622641 seconds)
loading group "simd"... done (took 2.728396224 seconds)
loading group "random"... done (took 11.090461748 seconds)
loading group "problem"... done (took 1833.503634354 seconds)
loading group "array"... done (took 27.850278032 seconds)
loading group "misc"... done (took 1.215521117 seconds)
loading group "sort"... done (took 4.017903925 seconds)
loading group "collection"... done (took 20.330703425 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.76391475 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143479337 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.220033026 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.379582236 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.247229945 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165104117 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.173700114 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.586340903 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.009418198 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.295448187 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156805691 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.606777209 seconds)
done (took 6.467656773 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.323775967 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.394067475 seconds)
    (2/2) benchmarking "String"...
    done (took 0.182449495 seconds)
  done (took 1.236331067 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076031727 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.189422188 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.117965574 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.115292696 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.10156675 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.116594107 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.116775364 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.117492521 seconds)
  done (took 1.538725766 seconds)
done (took 3.845733299 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.566973416 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.886015821 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.569603019 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.172968232 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.206135275 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.181516909 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.322813707 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.161701769 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.109191105 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.109409588 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.230989436 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.361194599 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.50512473 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.035656744 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091865102 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.134662171 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.10016146 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690854129 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079899801 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.14372678 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.621910884 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.120213585 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116736465 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.126798289 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.217808235 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135187154 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.171467368 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.093764928 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.69709904 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100690785 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.235345586 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.084475478 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.182385754 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.260792608 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.083110469 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.11285904 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680633378 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.182134342 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.117893958 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10386992 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686491176 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080181947 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.249013095 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109834359 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.115504446 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.198797575 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103684763 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.108645341 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.104603595 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08927992 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.180423826 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.463264062 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106338214 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.174034308 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108659465 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.712830005 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095866966 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156784029 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.138068856 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.110416277 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.08261341 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.110619808 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.166640924 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.117175982 seconds)
  done (took 20.443281157 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.161155424 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.170475648 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095741827 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144890273 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.146156574 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099292259 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101167677 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07910938 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.13223837 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.242983887 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.143142879 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.18745664 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075888374 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.103759259 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146910775 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25665668 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107208159 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125431232 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102865278 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092126963 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14781435 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111776436 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110336012 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.098579284 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.189097099 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.2047651 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107600621 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122249861 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099729048 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.12173105 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143656625 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150901572 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092500905 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083010369 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.20772469 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105927767 seconds)
  done (took 5.493768286 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.23072882 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118240515 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.241969596 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.181074753 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1503035 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184525054 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.145426449 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.305772315 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.239637244 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.188242472 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128648732 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112461047 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078682386 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099771309 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096079614 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.745050763 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.186059069 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.157359042 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.155712153 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108450043 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100973725 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.386658091 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087173691 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.101005934 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08699998 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.097841954 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.219064391 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.215414866 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110585192 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.392248402 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120347007 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.111872409 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133955426 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.203179297 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136718135 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.146119952 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088928527 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.102630752 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.229314808 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11495029 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096889552 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116211058 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137351841 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135643218 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.103473423 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.116053872 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.255088907 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082157964 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125401034 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.176587523 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.217101749 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.135854384 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082835924 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.381062968 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120682686 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109681101 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08240228 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.102378416 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.346549202 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138506055 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082284686 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097906357 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087486055 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097492585 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.452823483 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095004141 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.913796659 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.097502623 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.171160312 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104901609 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109424693 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105435447 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087026638 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.121397219 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099931528 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079833334 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099240274 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078710928 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105585462 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.121794967 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08498631 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102627316 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097180063 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150196908 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.120189084 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119689604 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127423167 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087719211 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099875663 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13088203 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082091666 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.103296504 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.180059468 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108652235 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106019335 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106147161 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144979245 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099484725 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.242674641 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097244795 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126399111 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10327635 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115747097 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.126363212 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099644843 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102981283 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079548454 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09940038 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148013724 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095388121 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080388978 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104374827 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100981526 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096382734 seconds)
  done (took 25.004872013 seconds)
done (took 51.605599269 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.529504478 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.123107973 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.124092256 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.12670441 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.124354005 seconds)
  done (took 1.77296952 seconds)
done (took 2.490291305 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.391047118 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190813182 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.123820338 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189954757 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108261741 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.218809857 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184265557 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.122829105 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214341543 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.104714051 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.190138606 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101658122 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.109012755 seconds)
  done (took 2.997003099 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100100309 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.128732626 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086919477 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118472711 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079119894 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118061869 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114824074 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.13178344 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114022572 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109789715 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082652838 seconds)
  done (took 1.896942749 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096522469 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121818319 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085911687 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115588587 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079889195 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115644607 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112500284 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109058388 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114294371 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092586151 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.099393994 seconds)
  done (took 1.859440172 seconds)
done (took 7.461203673 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.255882787 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.893020712 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.155476929 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.208229989 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.40906014 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.257414222 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.655621542 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.169734249 seconds)
  done (took 13.933544919 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.12161947 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.144229805 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087057652 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.105068033 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086570594 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10433031 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088477944 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.103357674 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102587363 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087753767 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.102912843 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088213362 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.1030769 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088205713 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104254747 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103424411 seconds)
  done (took 2.425482721 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142874987 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.14152277 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094645398 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.114991392 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.107059132 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090382014 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109005303 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107902838 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090729589 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.107004784 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115749452 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099164651 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.113406049 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.106576511 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.095205691 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116759752 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.107418435 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.096155379 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.112678813 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111082871 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101077635 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.109741248 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113975333 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098539163 seconds)
  done (took 3.415646387 seconds)
done (took 20.491106025 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.182808531 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100697457 seconds)
  done (took 1.005165205 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.15270939 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.155423112 seconds)
  done (took 1.034823686 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11427558 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099146898 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.144848872 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.121046379 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.099150663 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083927435 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.139896065 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100844835 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083710872 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.101189184 seconds)
  done (took 1.817376845 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088399271 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10349213 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.112650172 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.150644616 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.100234563 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.106587888 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.106228633 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090879964 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109364129 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.102680985 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.097015308 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127627643 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.111829652 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.250575502 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.089394197 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.110615938 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114662623 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.108819277 seconds)
  done (took 2.812864522 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083658515 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100460988 seconds)
  done (took 0.912434851 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089612563 seconds)
    (2/7) benchmarking "second"...
    done (took 0.102234267 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091242325 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109444114 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.102411067 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087166603 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103141382 seconds)
  done (took 1.413204677 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.554622418 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.277936597 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.388406465 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.12309445 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146313554 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.403520324 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.148768208 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.117902497 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.118438713 seconds)
  done (took 3.051025832 seconds)
done (took 12.776438037 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090320001 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.238066778 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.605817542 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.124634616 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084879344 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162739986 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.33018915 seconds)
done (took 2.371264346 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.363234384 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.157408797 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.092341553 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098127003 seconds)
  done (took 1.445317498 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079066359 seconds)
    (2/2) benchmarking "read"...
    done (took 0.107830167 seconds)
  done (took 0.925153521 seconds)
done (took 3.117576029 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081367485 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096609932 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.082025983 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098265183 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.081987754 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099543507 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.136194542 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082938004 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099728374 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083558844 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.099489877 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.084060478 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099492869 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08360749 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099779582 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083270144 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099012839 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.082433241 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.099936659 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082355529 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100780339 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099040642 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.083321472 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.098811244 seconds)
  done (took 3.01943665 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109147058 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.102759768 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106239785 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090217596 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.108815393 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106701346 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091256445 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.104158876 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.107839396 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.086673678 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10859029 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108716933 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08566157 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.111439224 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101692466 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.090715602 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.105748219 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103122761 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087010925 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.108265882 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105952806 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085930515 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105994969 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10447701 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.090732088 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10811811 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084481705 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101648799 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104044123 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091215589 seconds)
  done (took 3.749928409 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08989537 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094163554 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084308692 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.108079669 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078896354 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098700514 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078263564 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095929714 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.099007008 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08262892 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.10121789 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081972869 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.095792992 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083651454 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.100210408 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.088275245 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116979554 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095134619 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079226075 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.100535631 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086589389 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096953497 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08379684 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.101154628 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.083086295 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.096172558 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083901682 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.099301709 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.084094034 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.098205244 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099924338 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086926624 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098714745 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.095925564 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103779772 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.082852991 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10479914 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094829709 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.084205701 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095955863 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078898339 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098157992 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07947955 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107779022 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081937223 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099827964 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078584369 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100938795 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.098984259 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.087733308 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094444554 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079400647 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.103246165 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.085662978 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101238001 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07824361 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.100443351 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079668277 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.101685817 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.098477834 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080864257 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.096874813 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.089414011 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.103469962 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.108959467 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.111217366 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097371119 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.088033953 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.103286114 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.091200654 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.103423002 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.118520185 seconds)
  done (took 7.490129511 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098108701 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112314624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084196242 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.1017886 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098886696 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08521915 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110310423 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084583591 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104128905 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111240748 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084692003 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103402698 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089041925 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10415994 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086437029 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10394907 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110994009 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085641221 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.101195774 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084655398 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101082477 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109401889 seconds)
  done (took 2.903375245 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.267211677 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090714076 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.152722008 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118233057 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.123894819 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118838635 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088062651 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107815181 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10563934 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09417998 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111902279 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104371456 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123725757 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094706868 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113144948 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113988326 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08781782 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113600757 seconds)
  done (took 2.880178222 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10095671 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103001987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125042371 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.086757639 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.104814931 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085841648 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111072371 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.121214262 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.101030025 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.087225543 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.113908363 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101868802 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086148738 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103460415 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087946311 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105838846 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104352739 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088649948 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117695481 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113184829 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09784813 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114519433 seconds)
  done (took 3.015654215 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102366562 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104837981 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.142032149 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090292374 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101793556 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101730896 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093971713 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.106769173 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096987569 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103645109 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106026117 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086402712 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.11603503 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104758195 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096899085 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106028145 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088573062 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106004118 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10309213 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088136845 seconds)
  done (took 2.799341709 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.181513076 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100213516 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11885434 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133050533 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115893018 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103554034 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131116069 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119016376 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101417107 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136435626 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.117999542 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117588295 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133564767 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111388585 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118796702 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132389308 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133806895 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131244481 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101941114 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118019644 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13644615 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100727571 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131970863 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117813373 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117721238 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101199194 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117184738 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12849585 seconds)
  done (took 4.165162616 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083410334 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097897713 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082554392 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099157119 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082770297 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.101078686 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083189238 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.101181753 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085556514 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10081264 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084417082 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100258649 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083946783 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100833205 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085289544 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101927895 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085935605 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.100222459 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099783971 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08297559 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.100381256 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085591872 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099821239 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082771952 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099497016 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084023347 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099456071 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082364712 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099319127 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08228361 seconds)
  done (took 3.51352126 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096764142 seconds)
    (2/2) benchmarking "in"...
    done (took 0.127733317 seconds)
  done (took 0.982927634 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.091747769 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120988918 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083614529 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100272106 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113474454 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084691093 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114161098 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112404706 seconds)
  done (took 1.5798486 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.152510641 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.152830385 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09132627 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115073201 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.153913173 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.145764768 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171370022 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.107366327 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088516086 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097960934 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.148558558 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079476234 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108274081 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102865184 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090338454 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113825961 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101514922 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.094361017 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.110625316 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.087271546 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105816442 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116113624 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092291979 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.11324165 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100656845 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093589252 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113408466 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.11436587 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085547622 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110462562 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088335241 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.102404472 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.106275289 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09091318 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.10193481 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.152095661 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116259614 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087262342 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10838498 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090496553 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112773319 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.102866632 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09308017 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104671983 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11152955 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.090106309 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.109122257 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.084813333 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099128767 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084552241 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.103152243 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101292712 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.084393661 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107519228 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089421344 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119202842 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103789652 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084892265 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102692415 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.100242585 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088620898 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103519757 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092795429 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.113459801 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108886827 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089736567 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106864743 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.102200147 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.086230928 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.102934411 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090826174 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125014778 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112606184 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.090039197 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108521436 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102574493 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086021789 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109190056 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088625959 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110655547 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.107478266 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092974187 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10988339 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102599764 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084572846 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.11010424 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086016265 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105272808 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080506156 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121562148 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.104897802 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.086601237 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.100097781 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109369688 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085125556 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.106937631 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080676812 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109272371 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.100507887 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.090149021 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108715988 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089196159 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113919198 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108341822 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090671457 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109367152 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.148064089 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104793618 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085614071 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.105607556 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091715705 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103629924 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094444623 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.104301737 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104499034 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085566347 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.112398107 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111811002 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087718593 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.108214527 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092334583 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111892188 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10442227 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083383449 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103367513 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089889184 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115590412 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111901126 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.087050167 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.104196992 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08637087 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.109246322 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.107195709 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088296145 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109019981 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086730848 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.103505051 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102546967 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089831414 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112255412 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083519775 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.1068728 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110124605 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.088519782 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.106699596 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110065588 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.083953175 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099818692 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091583955 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104780953 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.103303279 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095434433 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104353006 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086850561 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104634892 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113422506 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085717654 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108854459 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087909668 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108156924 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10865963 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082170006 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105690825 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087418263 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113265341 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104611542 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08529953 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.103118365 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090716118 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099993756 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106913694 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081054895 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104265202 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090753046 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.105640799 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.088207118 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103141866 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120389091 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098768305 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109987536 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108570964 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092708121 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.108368229 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089102993 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.107202926 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109719411 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091200592 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110555183 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106409967 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090922192 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103558928 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.089917402 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105680255 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109417837 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081691147 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.104792308 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081931289 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.110090854 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094444696 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.108771712 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110011101 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086655021 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107920329 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114013524 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086135716 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.110449575 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085058717 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.114337159 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099350967 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.114467507 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112397343 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095805604 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106461549 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.085942155 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114213829 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105766082 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090723932 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.104873854 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082210197 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100979515 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.109770032 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.088188611 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10322851 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.084250856 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111082701 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111141987 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08636587 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100136339 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.090556905 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115011015 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102858054 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089963316 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104897011 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107774855 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101830592 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100237122 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086559918 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114522934 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.109120292 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.084317841 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109320083 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.087578555 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.110183709 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.106223814 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086412952 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106478489 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092423238 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106332099 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.101721305 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086164892 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.106309652 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082162815 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.105314928 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092863062 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105868586 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104299769 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096017611 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109875397 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.110662299 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089193065 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.108566111 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.092104659 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.110277698 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106231035 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.09174639 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10343471 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082123617 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105513319 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100349947 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.086037968 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103215566 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.09088226 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.106461591 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10675241 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08834338 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111806045 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08682073 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.111826882 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.127629128 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101944078 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082259382 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107755957 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089783687 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104283804 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104715849 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08635871 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112243968 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.089236754 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112667781 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103502726 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084460837 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.111631042 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086625915 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.112899929 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.111178511 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.094089902 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105442461 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.089048143 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106615949 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116904071 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082543994 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113668857 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107106959 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090158167 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105773718 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087271755 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104303359 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100860771 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087034002 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.111730635 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087770281 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.108072518 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108292334 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087100483 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104707086 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084768034 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.112171675 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105853643 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.093558856 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.105134877 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081258241 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101812225 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.09151896 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11053619 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.110185575 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085247316 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.108056295 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092709766 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.108220933 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.103430225 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095049722 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113458672 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.093170772 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115443678 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101323753 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087168062 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118110986 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.103155155 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.087905538 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.105443818 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082955385 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11195468 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091678112 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112165728 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10644258 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083013281 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.104525635 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091838673 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10694415 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.106273445 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086756251 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11001664 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084588924 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107836921 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.092233041 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10917755 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110761856 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091831894 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.108862126 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08607693 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.109811611 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103500992 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083185805 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101318813 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087166403 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.111312472 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102101448 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09145116 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.110871877 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086717181 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106748896 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.09018577 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103644784 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111537632 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089322667 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106713622 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115462205 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.086533354 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10761878 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090600835 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.109142712 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082714452 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107422537 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107049856 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09376074 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112052457 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.091630271 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10858712 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110447709 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08708583 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10977453 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.092132049 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.112384358 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101514846 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.092876631 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113316738 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086454376 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106911294 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106572298 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085046127 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108750306 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.092581557 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.10796183 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115204073 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.092035128 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.108533129 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111367527 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092492793 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108863268 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095258336 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106299767 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113841675 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083452056 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11577743 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088324443 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.111680381 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10522894 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082734164 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109843255 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090894087 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110132975 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113794301 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.092681784 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101486354 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08295103 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.107057458 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088387342 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115859023 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114363721 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087677551 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108044038 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.106865053 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.086147593 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112207872 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084844003 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106131335 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108843042 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094316798 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10845359 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084273898 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.109400785 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113221503 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092821205 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110105842 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083783856 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110032127 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.11266513 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087374106 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104967545 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105035107 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093864129 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109353563 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086001029 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102129805 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116704773 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093371619 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112472376 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08666669 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.109466389 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105526868 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08862439 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.112790387 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086484658 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110263617 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106743689 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091433904 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11829678 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101586699 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086144002 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119739587 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09024943 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11439918 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.107152216 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088294114 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112272391 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112202018 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.088388101 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103774142 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083643873 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107685503 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082828321 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.106954265 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119082258 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09365362 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107304612 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089124396 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110915882 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.107271731 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.089220425 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102291081 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0948509 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105556601 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116573201 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083666773 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103165771 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.088407577 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111456409 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08837989 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110682216 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.106070497 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.088106115 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103211922 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088961682 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115167885 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107483157 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091975605 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109513645 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.0884068 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.107405893 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11763941 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086133771 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109203573 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119792766 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.093577912 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109890343 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092315109 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114485163 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.112756565 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.087619349 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.112305389 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09006743 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108538406 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.11338331 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.094327472 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125080663 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10902013 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084127359 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.110538904 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088109137 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104372279 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115803848 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094327461 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.112748769 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110304681 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085724585 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114215263 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096503758 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110634938 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108960325 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089978741 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.109768851 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087074209 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.110109018 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.106560805 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.095400368 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.113267231 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090802274 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114339378 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103504492 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100373364 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115966054 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.114264642 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086486111 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101711238 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084344423 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.10784313 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.093856792 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.112173438 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.089408445 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.109481247 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.109757808 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.090392206 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11087237 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089504116 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.113608194 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.110809763 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.087287764 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111216988 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089977037 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111086954 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.105397924 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.092639754 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.113920851 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093736262 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118733495 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.111814475 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089126122 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106996982 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092369465 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.108775187 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.11055126 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089953419 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106745402 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08362148 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112255903 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.112909853 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09196537 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113664296 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097478129 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108800452 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.112884727 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096583184 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.111596291 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086340572 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111734249 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.107746178 seconds)
  done (took 61.310578814 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.167028567 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096642824 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109096092 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088062049 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137199223 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109772359 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108215071 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090207422 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109867892 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102814471 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107285137 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107969814 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.132950012 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140773492 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138146647 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.1042121 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108641523 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109034225 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08839484 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109949936 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131440695 seconds)
  done (took 3.202747764 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11424359 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.129487789 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127291979 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.131334732 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119542385 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.104481854 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.126651152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12590149 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.129340625 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122061589 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131101741 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125341097 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.101960203 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.1214959 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123082946 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121683466 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109792438 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.120405958 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128009406 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.127276136 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121521623 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106693913 seconds)
  done (took 3.472906194 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09658947 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.110895307 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094818211 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.108063701 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.091208045 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.107389681 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11816804 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.087608083 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.117789347 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.088777577 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105719627 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087652267 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.113107471 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.107357197 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.08519601 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.107277009 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.098767908 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.110272656 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.092188796 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.107664451 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.133285465 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.106836311 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.089361529 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.104740155 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.101616812 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.112901021 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.092431348 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.110577719 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.105312828 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.092678198 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.10692092 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090106354 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11269749 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.0855138 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.106070949 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.111959467 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.09176627 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.107461263 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.088317513 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.11201742 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.08967322 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.114141903 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.118339552 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.088387942 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.107550899 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090723905 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.112523577 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.107348591 seconds)
  done (took 5.739063522 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.153273851 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.174769283 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.118586243 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.158930953 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137177928 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106018284 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.115048399 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.161748674 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.118008583 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.096372761 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.13715481 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.136613855 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12281167 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.124561488 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.098468473 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.11708393 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.119618758 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09777149 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126322282 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.116364778 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.124852192 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.104231436 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.134551099 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132997737 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119011848 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096122959 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122328591 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.125481502 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.133934364 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.105121649 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.122807954 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125419771 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133748902 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.11760706 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.098316504 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124552342 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.139756426 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.09848379 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.117815391 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.114290294 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.10221948 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126139887 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.120534056 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138038868 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.097402556 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.125866784 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118888036 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.093489893 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.136329315 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123036424 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130829426 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.136528883 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.119243133 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.098347286 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125664687 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.137970224 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.116738919 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.095024258 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.119313723 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.135845211 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095819944 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120227235 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.137260134 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122392295 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107359169 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.136070373 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.12058943 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120056967 seconds)
  done (took 9.22878744 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127389488 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.121273058 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134971798 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136496968 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11997322 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.100641805 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121182468 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.120875134 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100275198 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130117475 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120874413 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.209853093 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.116653541 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128793724 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099867786 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121795961 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120647812 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120314122 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101079383 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120326792 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.120080093 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134930519 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099914222 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133808948 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136756401 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11606468 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100595581 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121512577 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135481493 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119956026 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138341242 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.099198213 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120564981 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135630087 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137016648 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.119836005 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091843271 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12181348 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.121374387 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099799314 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.116365108 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134643744 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121561101 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.097139825 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120382523 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12165614 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136263039 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138146407 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108066489 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129556965 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.12074686 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136675889 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121377997 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101205703 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.135412368 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14629359 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135996415 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135060593 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119635195 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.135690414 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136137314 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.147058097 seconds)
  done (took 8.492996407 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088641114 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108697385 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089273278 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.109734599 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089734414 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110931155 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089772859 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.109960838 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08873381 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.109647661 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08933857 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110569747 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08970143 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110408832 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087915635 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10949155 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089348869 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109844619 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10840376 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088995274 seconds)
  done (took 2.809824518 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.100926144 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.13520837 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.115424491 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104009546 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113543136 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123535126 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09217415 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113835901 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114829041 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094777574 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12772459 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12707985 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093539385 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.123330548 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.126318074 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.123082579 seconds)
  done (took 2.65556197 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.11755433 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.136250708 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.171015948 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.117832638 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.115513964 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.101838155 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.113845748 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.094720209 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.112420779 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120326374 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.098078163 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.118974046 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.093045914 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.115018527 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.114421389 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.098643232 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.112356747 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.097894154 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.113573026 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.172198582 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.121319112 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.096557137 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.116790692 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.118095951 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.096954225 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.120993969 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.123681284 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.093818992 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.11634393 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.11430082 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.097134474 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.124718278 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.112538346 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.099322075 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.11364014 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.096053977 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.114018095 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.115055642 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.098302657 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.114240535 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.095071439 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.11728447 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.114623662 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.097433685 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.112494563 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.09433916 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.112416272 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.120922965 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.096988113 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.117986546 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.092527121 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.121959304 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.119018215 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.105070525 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.12514694 seconds)
  done (took 7.006968171 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107246562 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115697363 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.129832681 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089990665 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115544931 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.095971689 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.116534144 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116993576 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096881478 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.111275163 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096884924 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115910755 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117256083 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096554661 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118200199 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095087657 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.112482941 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116622304 seconds)
  done (took 2.795182315 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10063975 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115423095 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098972566 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.114027103 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.093262772 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114886027 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111637942 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.091476152 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113283834 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093938339 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113848451 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.093185186 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112724415 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.113879396 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093778501 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113288418 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.092191195 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111802329 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.114203759 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091900436 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112536444 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092480007 seconds)
  done (took 3.131837432 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.105932969 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.172029264 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.125547297 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.182900921 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.114872766 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.111822026 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.103338133 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.114057833 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.131556049 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.090106544 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.112112566 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.090355162 seconds)
  done (took 2.288176808 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122830215 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158036783 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11582753 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0933989 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130113722 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121904273 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121026889 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101124612 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133489937 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139115417 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120595857 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134001554 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112037005 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135177575 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12838691 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128035822 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122973485 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100015664 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115714255 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147103463 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120243319 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133959799 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100932552 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120818869 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122082796 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135590035 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112712791 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1396438 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122374407 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133232996 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128874542 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099854282 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135847281 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137563819 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115529446 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134604693 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100548698 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166182961 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108022601 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137067681 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114435284 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128906731 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112877889 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13063439 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134193756 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120794697 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131337264 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101211267 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121836598 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156624762 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128910905 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136616622 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128259809 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135540862 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133972166 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156175009 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141688125 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136216564 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107988972 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139369555 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135774163 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128931752 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137649675 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139739765 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129560005 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139831498 seconds)
  done (took 9.235488668 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163076538 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096879583 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122512592 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141152515 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136820268 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100762081 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12330234 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12154768 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100692801 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118207227 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17581268 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122860834 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137074935 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137970704 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122748338 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101576426 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121970638 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136070717 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096004303 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17602618 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10193459 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136222811 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136783125 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136063927 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138997298 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128399252 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100732176 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12328626 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12085354 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121472827 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110223391 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121869639 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136682697 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.117290408 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137061355 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10106133 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121623171 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130442642 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100750765 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129403558 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136125964 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146522587 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122849313 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122548825 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139965865 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102326564 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122331391 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1171149 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102240319 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117524649 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140543433 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13980336 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140304856 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136559324 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102997063 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123068566 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121290085 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100772668 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122480862 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128406623 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1363813 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101937323 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176483817 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101940001 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12333076 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136691704 seconds)
  done (took 9.106939982 seconds)
done (took 167.318180027 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.156138785 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.17842351 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.155036995 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151776934 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.109986377 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122589343 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.143467542 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.154597903 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10800674 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087368849 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108348167 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09223888 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.175824517 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.087991381 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107995652 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11239463 seconds)
  done (took 2.889121177 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.21045283 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305386401 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.131059238 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113658023 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096244027 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111260993 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.093099776 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.115307962 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109932103 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.102321589 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111707912 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090028634 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125721898 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.11337182 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.090155229 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.111375351 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123905769 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090768731 seconds)
  done (took 3.087257794 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116062164 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.166122418 seconds)
  done (took 1.130728036 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128501281 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.218582859 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297470441 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172151812 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.140781302 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137297186 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.173517778 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130233393 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205505643 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135968719 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.135469884 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095859442 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143948941 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.123054279 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.106567436 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118373613 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145502431 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.105136102 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.36616662 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.118204839 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140352931 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.096931999 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.123174919 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.126084148 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.194014054 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135708885 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.095768451 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.118305159 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118004801 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.10412112 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.12392446 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135735022 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.134981636 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.185958711 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124260955 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.200856478 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103770688 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114670107 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.12449814 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095682245 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121422166 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121299994 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112313777 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.116756233 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115934563 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104719176 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.117896723 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.116595078 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104005188 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.1272676 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.126230947 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123435937 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.180330833 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127609534 seconds)
  done (took 8.355373091 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.908969585 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.158694037 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093447278 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.038761124 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14797582 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131536362 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.91474873 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117665979 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.28342436 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.906025233 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132698696 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107561391 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.289914837 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.275479784 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.190618623 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.398029715 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.752723937 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130292509 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144884398 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.16920122 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124315865 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146176034 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116637549 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.478616563 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095097692 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115229991 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121266986 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106433982 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.203599956 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092011092 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119889677 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.226390107 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.28789529 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233404492 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117063265 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091283646 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114162774 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189737285 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.302770164 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.27203474 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.188451611 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088030051 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113537866 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12821085 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116051226 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112000248 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.205962849 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.198988872 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.21752463 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097712544 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129796679 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125173756 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128468499 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.184500998 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.110795238 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.373799042 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.379994667 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113204781 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102779822 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135326593 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.298523044 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114920009 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261375412 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146706853 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.246628891 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112749707 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819689237 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188720463 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11340267 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103707709 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124265997 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121270243 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128451191 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.184547115 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.396635844 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131679971 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097916385 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114367291 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.278753283 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092316136 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114626065 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186481459 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117153275 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123253069 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110368648 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131745394 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.213334725 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.27149014 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131475932 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125480456 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09792692 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129782036 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.121812051 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231959898 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.275739221 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.182082259 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.256113662 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109142906 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.208334074 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187457214 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129786977 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.215070967 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101138033 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134693562 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129704106 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.252091742 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156774771 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.115474623 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098914386 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125982261 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159893329 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.118071298 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123704975 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190321128 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.517211669 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.189339719 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.113926777 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095925897 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126456005 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204226743 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100704254 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.29318139 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127454907 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.210913379 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103265996 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111022266 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102789119 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.211680622 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131871182 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125314075 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10844806 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124559222 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.295215349 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.255313341 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110357289 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270237113 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.220033806 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104392762 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.216706296 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124303479 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191047296 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127458211 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106285655 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120008526 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812785119 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130636874 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123472223 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09901556 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.234267465 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094350992 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114842828 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09374878 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111605857 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.847285665 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095641166 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112694699 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.09330962 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125869464 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124990765 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122918607 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.100428079 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.206500653 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.272728415 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130668811 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101687748 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.115924191 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181134362 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.120809183 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114007907 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093106041 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.11443855 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103109364 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120597492 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116780461 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197485972 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.20386471 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.257295729 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57999355 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092204091 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.115846388 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268589023 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11500258 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.346226907 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125956425 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.263417595 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189202509 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.112017387 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.375320883 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.213630429 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.215429089 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095693067 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.217846065 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089482367 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123530845 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.204562236 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092238266 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123146469 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17853162 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134870691 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13216376 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.19892589 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114811954 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251319804 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112087152 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191968543 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12015329 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129137009 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347063272 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091586566 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137987785 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.205811984 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096953935 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116420426 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.752090636 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.092981297 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127727723 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126571595 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.260452722 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.21021328 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102051863 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126003408 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130862785 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185452075 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.254791282 seconds)
  done (took 48.333508533 seconds)
done (took 64.637392511 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.334897974 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.28972874 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.343160514 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237050278 seconds)
  done (took 2.156686146 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.241161445 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165795983 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.219361195 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.091193305 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.229033165 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090787705 seconds)
  done (took 1.908452564 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.549555889 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.449987457 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.38231495 seconds)
  done (took 2.258220106 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271203267 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.27662997 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.371891546 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.501093614 seconds)
  done (took 2.427071894 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.287670383 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11616085 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.133541746 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.186293078 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.259162261 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.285418676 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.161740403 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.208985664 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.119146797 seconds)
  done (took 2.682039473 seconds)
done (took 12.306841863 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.262925407 seconds)
    (2/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.310074949 seconds)
    (3/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.315786839 seconds)
    (4/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.285286472 seconds)
    (5/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.230492546 seconds)
    (6/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.174327741 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.16762004 seconds)
    (8/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.232912195 seconds)
    (9/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.161376717 seconds)
    (10/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.132317844 seconds)
    (11/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.109308082 seconds)
    (12/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.124965889 seconds)
    (13/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.165431632 seconds)
    (14/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.28297172 seconds)
    (15/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.12357403 seconds)
    (16/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.276992065 seconds)
    (17/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.276871302 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.155152326 seconds)
    (19/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.209288982 seconds)
    (20/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.306537903 seconds)
    (21/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098087104 seconds)
    (22/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.133342089 seconds)
    (23/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.217401477 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.153059737 seconds)
    (25/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.153550668 seconds)
    (26/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082999035 seconds)
    (27/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.214689903 seconds)
    (28/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.121228069 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11264381 seconds)
    (30/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.291196517 seconds)
    (31/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.274220237 seconds)
    (32/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.214486885 seconds)
    (33/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.102046203 seconds)
    (34/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.152466606 seconds)
    (35/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.261059318 seconds)
    (36/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.230099755 seconds)
    (37/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.127196257 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.153591111 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.113272331 seconds)
    (40/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.106461351 seconds)
    (41/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.212039263 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.098761716 seconds)
    (43/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.12312725 seconds)
    (44/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.212634184 seconds)
    (45/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.124057469 seconds)
    (46/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.100716362 seconds)
    (47/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.169992652 seconds)
    (48/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.169471938 seconds)
    (49/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.138677944 seconds)
    (50/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.189283799 seconds)
    (51/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.106641708 seconds)
    (52/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133782069 seconds)
    (53/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.175261298 seconds)
    (54/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.104959009 seconds)
    (55/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090875763 seconds)
    (56/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.123038669 seconds)
    (57/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.157371529 seconds)
    (58/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082221355 seconds)
    (59/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.12752013 seconds)
    (60/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.100701143 seconds)
    (61/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.146813718 seconds)
    (62/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.095970609 seconds)
    (63/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.144443268 seconds)
    (64/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.248252017 seconds)
    (65/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.203701966 seconds)
    (66/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115023403 seconds)
    (67/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.098779535 seconds)
    (68/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.157488567 seconds)
    (69/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122532478 seconds)
    (70/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.100686395 seconds)
    (71/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.11056431 seconds)
    (72/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.128913461 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.097664843 seconds)
    (74/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.121880428 seconds)
    (75/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.134809892 seconds)
    (76/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.083057879 seconds)
    (77/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.101660146 seconds)
    (78/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.12101314 seconds)
    (79/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11920836 seconds)
    (80/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.238390104 seconds)
    (81/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.209331024 seconds)
    (82/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.119488289 seconds)
    (83/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.114182171 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.136180662 seconds)
    (85/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.273947362 seconds)
    (86/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.184176545 seconds)
    (87/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.162801363 seconds)
    (88/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.222544664 seconds)
    (89/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092003612 seconds)
    (90/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.105360526 seconds)
    (91/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.204829287 seconds)
    (92/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.119719102 seconds)
    (93/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.168852418 seconds)
    (94/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083587583 seconds)
    (95/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.136380229 seconds)
    (96/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.1464379 seconds)
    (97/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084621691 seconds)
    (98/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.120998123 seconds)
    (99/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.136055296 seconds)
    (100/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099685481 seconds)
    (101/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.141251455 seconds)
    (102/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.083224957 seconds)
    (103/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114050354 seconds)
    (104/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.122258661 seconds)
    (105/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110342089 seconds)
    (106/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.122105182 seconds)
    (107/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.109270957 seconds)
    (108/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.132810218 seconds)
    (109/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.125530755 seconds)
    (110/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.217152249 seconds)
    (111/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.099893641 seconds)
    (112/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.12257511 seconds)
    (113/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.100266471 seconds)
    (114/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.106451043 seconds)
    (115/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.234107855 seconds)
    (116/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.204734268 seconds)
    (117/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.110567467 seconds)
    (118/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.137858307 seconds)
    (119/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.083641194 seconds)
    (120/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.179282046 seconds)
    (121/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127934024 seconds)
    (122/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106230513 seconds)
    (123/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.197769596 seconds)
    (124/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.125455224 seconds)
    (125/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.087824784 seconds)
    (126/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.121600843 seconds)
    (127/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.084044922 seconds)
    (128/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.108782278 seconds)
    (129/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.098286304 seconds)
    (130/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.119587304 seconds)
    (131/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082831681 seconds)
    (132/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.105799039 seconds)
    (133/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.087061463 seconds)
    (134/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.106505552 seconds)
    (135/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082540685 seconds)
    (136/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.167101836 seconds)
    (137/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.083959385 seconds)
    (138/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113603452 seconds)
    (139/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.100313916 seconds)
    (140/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.106537166 seconds)
    (141/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083761128 seconds)
    (142/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.149221302 seconds)
    (143/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.167792494 seconds)
    (144/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.100783668 seconds)
    (145/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.107175786 seconds)
    (146/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.154244264 seconds)
    (147/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.107416229 seconds)
    (148/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111143329 seconds)
    (149/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.132255106 seconds)
    (150/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.124114735 seconds)
    (151/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.21630992 seconds)
    (152/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.082971761 seconds)
    (153/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.204568194 seconds)
    (154/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.123329179 seconds)
    (155/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104696979 seconds)
    (156/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105917152 seconds)
    (157/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.100601135 seconds)
    (158/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.131011856 seconds)
    (159/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.123500771 seconds)
    (160/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.13757644 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.137042485 seconds)
    (162/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.084087053 seconds)
    (163/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134490305 seconds)
    (164/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.169043838 seconds)
    (165/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.140102913 seconds)
    (166/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.106488939 seconds)
    (167/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.084284325 seconds)
    (168/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.121933807 seconds)
    (169/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.217167335 seconds)
    (170/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.102193863 seconds)
    (171/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.107730882 seconds)
    (172/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.198242113 seconds)
    (173/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084251034 seconds)
    (174/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083435915 seconds)
    (175/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.106997395 seconds)
    (176/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.210981613 seconds)
    (177/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084716474 seconds)
    (178/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.108954503 seconds)
    (179/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084636981 seconds)
    (180/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.146250312 seconds)
    (181/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.100795847 seconds)
    (182/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.108022932 seconds)
    (183/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.124973276 seconds)
    (184/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.144306432 seconds)
    (185/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.106951218 seconds)
    (186/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.085207765 seconds)
    (187/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.106633285 seconds)
    (188/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.090143658 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.114807939 seconds)
    (190/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.132103131 seconds)
    (191/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.137428485 seconds)
    (192/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.176799882 seconds)
    (193/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084277774 seconds)
    (194/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.124032185 seconds)
    (195/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.089533365 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.125723251 seconds)
    (197/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104662875 seconds)
    (198/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.207735149 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.139408047 seconds)
    (200/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.118521126 seconds)
    (201/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.108566766 seconds)
    (202/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.107499704 seconds)
    (203/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.100555446 seconds)
    (204/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.107054874 seconds)
    (205/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.145845109 seconds)
    (206/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.198909027 seconds)
    (207/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.107595917 seconds)
    (208/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.102256643 seconds)
    (209/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.106746592 seconds)
    (210/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.136868287 seconds)
    (211/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.109191721 seconds)
    (212/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.133428936 seconds)
    (213/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.126444999 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123707379 seconds)
    (215/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.084299121 seconds)
    (216/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123886536 seconds)
    (217/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.113657372 seconds)
    (218/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.12755547 seconds)
    (219/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.090851599 seconds)
    (220/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.106510945 seconds)
    (221/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08496367 seconds)
    (222/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.106209851 seconds)
    (223/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.083511087 seconds)
    (224/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.106156761 seconds)
  done (took 32.331680002 seconds)
done (took 33.217351532 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.51123356 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134285208 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102824544 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.128668335 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.185963364 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.131089944 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112536524 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.13207717 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.132165787 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.100802188 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117211363 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.108139348 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.127204928 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.184790844 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.131577943 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.097257914 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121157894 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.133676539 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111650372 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.136790069 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1844148 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121501647 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109151022 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122168797 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.185720973 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121761896 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.104167613 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.128765978 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.133462085 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.102045184 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.128425523 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.0953253 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.136951426 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.136114012 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093873219 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.124805734 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093259416 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.114811133 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.124412138 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.102508133 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.134114813 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.10222199 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.129976511 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120935283 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.102433798 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.124705854 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093570403 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.132736842 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.116906363 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103104534 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119618551 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.1370811 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.101282436 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117843052 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093128513 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.120881428 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.133693349 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093438715 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.133961575 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093303525 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120393578 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117609502 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.104144693 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117005747 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.100860941 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120495734 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.124861861 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.10502062 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.124744336 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096507929 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118175974 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.099852126 seconds)
done (took 9.980129714 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.09970847 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18112906 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.185974188 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.192367297 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.153962439 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.139481088 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.140979524 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151308504 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113157102 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144755199 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.158185041 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.149105366 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.195168214 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.134176979 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113044376 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.128242475 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.133302426 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108736999 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.221559163 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.120891478 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.157569781 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.1344142 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159455481 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144293882 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.101665555 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.149830606 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.128797798 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.10383276 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.126394196 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.142925322 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.12215208 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.126782843 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127353185 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122408208 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.13718475 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.133230061 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112577879 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.128877054 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.123935678 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.101485009 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140919201 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.14375461 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099806398 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.13831892 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.127400221 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.106607397 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.135404388 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.13534872 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104038753 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.128709862 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127882194 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156993729 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.109539472 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.135006255 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.132181899 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.108094178 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.132949022 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.131646587 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.104934239 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.131676164 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.124872664 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.102647641 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128595979 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155137568 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.103236551 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.135284821 seconds)
  done (took 9.751960622 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.121415313 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.161354613 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.136037307 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.135603491 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.10819063 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.11571959 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091382939 seconds)
  done (took 1.802750621 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09375837 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189207876 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.186187112 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.187117372 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.208648379 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196445805 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140909215 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093674058 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.157305509 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129453471 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.18887514 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.219582167 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.12712359 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.11098908 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.214884783 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092968282 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.190640526 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.11847509 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.132882565 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.189658682 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110520137 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.151186594 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.135036819 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093562916 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.205794103 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.095110288 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.268821541 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111337862 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124645944 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.104791164 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.131651559 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204974104 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182669956 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.136613467 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123668227 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.184499235 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.183063668 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132050524 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.19956972 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099161673 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.181708251 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.132423993 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.131541468 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.106633451 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.130715807 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168129036 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.13692262 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.106978595 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.129806865 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.188673072 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.132758343 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.185049089 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.101597914 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.132763137 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.131390336 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109164044 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13940801 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.131616099 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.190415387 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.135541402 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183302094 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.184050873 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.184013542 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.184431031 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142485647 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.186035099 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.181844191 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.103761892 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127416049 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.133373018 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185495265 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.105936124 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.133926112 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.171071603 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135604691 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.184579614 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185462726 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128363423 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.108763211 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.123363374 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.103248644 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.118705055 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.172744392 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.134425477 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.10217796 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140241982 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13349894 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107873565 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.123619951 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.145930692 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.10556139 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.133111359 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.13728501 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.105579386 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13754254 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.187119371 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.132732169 seconds)
  done (took 15.186800467 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096500288 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.120470861 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.101599627 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121576281 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095305016 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.122056226 seconds)
  done (took 1.608080498 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.1306936 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.135188033 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.144035018 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.109496168 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.191352764 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.218676417 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.195255717 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132391893 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.12587491 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.14380877 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.190563662 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.197052771 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.216802924 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.111918596 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.194390078 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.137011403 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.193594592 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.133519228 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.14406525 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104229162 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.141950944 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.136673444 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104915048 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.183084706 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.137781671 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.134973047 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.134549785 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.117189478 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.141072906 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.132806348 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.112189188 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.137234604 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.128415827 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.132046992 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.197461854 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.103902426 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129816905 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.14092329 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11217456 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.137483959 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.196329015 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130506199 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.142698659 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.139394408 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106820077 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.130067716 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.141269466 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10755631 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.221405483 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.115192668 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.141258044 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.133996036 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.111376825 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.141469185 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.128740276 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.133402129 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.115110912 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.220809161 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.110775438 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.129258452 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.136501966 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.11267793 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132319965 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.139458999 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.139309064 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.113512724 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.130690335 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135947605 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104448531 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.135556434 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.139732247 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.109102159 seconds)
  done (took 11.129534494 seconds)
done (took 40.410473146 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.154095125 seconds)
  done (took 2.103617121 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.979697121 seconds)
  done (took 1.93002317 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.606708674 seconds)
  done (took 18.593127421 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.578091357 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.654073854 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.003417542 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.14978315 seconds)
  done (took 3.337912596 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.003743456 seconds)
  done (took 1.978628638 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.332216013 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.288008338 seconds)
  done (took 1.577426096 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.872319061 seconds)
  done (took 1.838076211 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.484498368 seconds)
  done (took 3.448552177 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.386824131 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.201305234 seconds)
  done (took 1.562369401 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.674646029 seconds)
  done (took 1.643826735 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.015607743 seconds)
  done (took 37.98631208 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249816181 seconds)
  done (took 1.231616796 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.31785882 seconds)
  done (took 1.28837836 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.660910297 seconds)
  done (took 4.632776334 seconds)
done (took 84.115479397 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.107059656 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134619398 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108945542 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131648708 seconds)
  done (took 1.448055729 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.116165774 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.133585664 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.136289992 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.106818901 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.142290725 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.106440447 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.1330297 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.139870049 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.10680223 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.134312415 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.132613895 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.107810322 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.135510867 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.130515592 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.104724518 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.136001213 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.111312189 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.134926162 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.133053191 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.108021842 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.132326362 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.132728501 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.110336143 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.133554598 seconds)
  done (took 3.973097532 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10638108 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.124518151 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101862872 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.123873557 seconds)
  done (took 1.431865194 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.114727356 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.149011204 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.147591804 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.114707235 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.149330124 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.147152649 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102412002 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.128004906 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.104224073 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.141913557 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130050012 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.153677177 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.121965901 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.13515681 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.142219598 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.10074959 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.134009015 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.123541082 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.141191195 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.141583015 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.102284737 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.140399843 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.129489852 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.120245744 seconds)
  done (took 4.092015866 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.218343035 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12041355 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.15748826 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.184966707 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.160241519 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.103407079 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.159613686 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.136907042 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.139125423 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.109028043 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.136378778 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.193963548 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.135057189 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.111264954 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.135267955 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.139402049 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.110527085 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135367118 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.137758262 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.119467246 seconds)
  done (took 3.82528646 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107870938 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124237497 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093677297 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123969536 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.131224069 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101409875 seconds)
  done (took 1.666596203 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094850836 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117530092 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094318437 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.117806775 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098113005 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.117812118 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091773346 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118290201 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093996071 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.119008844 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09271946 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117416103 seconds)
  done (took 2.256902206 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.309747548 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096872596 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127436632 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.123400379 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.103018504 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.124715284 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.139230876 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.097304447 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.26129121 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.123877076 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114590272 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.2010868 seconds)
  done (took 2.803260213 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23303951 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107072192 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294644079 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398992694 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174536539 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183819837 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.295513561 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182784704 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.234701786 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127331482 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243513055 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170611926 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143823982 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223831094 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127137321 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.204856728 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218568495 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222825281 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163912544 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228091394 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182663385 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184096722 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201100923 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165464642 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152241011 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176212135 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.132858859 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114709706 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219403118 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188580289 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19597555 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163833667 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155143824 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224059582 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271391055 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199558652 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.334404981 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147093599 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.209747368 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201413538 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283607668 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155276786 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217414747 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170367152 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144917181 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198756594 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17392436 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.229511142 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.121792196 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154443582 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206399023 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22116733 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.206963303 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153708448 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319704602 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162236832 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164028584 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194514372 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210792648 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23864371 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184883935 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.108086192 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228458089 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203413539 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200754641 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.163195197 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.190457587 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139919679 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197771947 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216671658 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203559286 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211660091 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.205916285 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148422686 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182350526 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187874842 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169931207 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197468557 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178293484 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.130979826 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138765046 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151598879 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138658724 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.201578767 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106318302 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253855797 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121393698 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.233691829 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225263365 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175239217 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177907885 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182069424 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184363158 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160714194 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.131596305 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134390339 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.178672595 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173603366 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144849092 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172724173 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159959959 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.142071515 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168564622 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.107498364 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175548169 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.149619963 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183652837 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181029481 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.14445935 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182711337 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16504915 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.175648954 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190542666 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204954173 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144052939 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118282895 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240170444 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173788628 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.125636983 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220840819 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210534062 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.183295627 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151538443 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191358118 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217284311 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158862555 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210592329 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156770285 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145762355 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170071041 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176062895 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173649923 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.145421803 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141689429 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.171735823 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213383333 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.14125732 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148936782 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194760609 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142078569 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113113898 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158552456 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151486975 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.155801823 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.16820076 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.129742691 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171046377 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177632471 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169825606 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175348516 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15929831 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246038779 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117663493 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.177476653 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16295932 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.131809268 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204879313 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20460814 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143996759 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207097872 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190426919 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240425081 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18058893 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14053959 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199863593 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114254277 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.133177527 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18476207 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18083405 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180442967 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.205527021 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236027853 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189421671 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.171128182 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163534237 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186543579 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.194732818 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175808184 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.160025472 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180551159 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186676148 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.132845835 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.111048895 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.142541619 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154582714 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142932926 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117705594 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230162363 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182061338 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203695454 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179701572 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153601778 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202110124 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.141115609 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185022412 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.193823891 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152949099 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.209173622 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201794126 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184743663 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157265782 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190752818 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.133680363 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13607502 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.123822348 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185234488 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145826111 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146399079 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158482421 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203346947 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194331496 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164134474 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246108534 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189462117 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2147446 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.135268836 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.151862544 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189034332 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174544364 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.203074076 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146091116 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.17924862 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198829378 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160928775 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216064716 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182488781 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1858453 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251311638 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.173335082 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143108355 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13777954 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213621341 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128716604 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182120159 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160949847 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149269933 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169925344 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.152131461 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113234375 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230187821 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157489894 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204128658 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.172791938 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194039968 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138366277 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159163579 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176538631 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158148692 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103183475 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188976148 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239058811 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160709208 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173671133 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194698697 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114963709 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.329169821 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23786511 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20450118 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152166513 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158560003 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178221457 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176368044 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184149171 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203209619 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158342217 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202208671 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175535397 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.155590518 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121338129 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162302096 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166893643 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.171333649 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151774091 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174160884 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.155725751 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208457091 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159607727 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175960772 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180963279 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.133219179 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.171717343 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155537457 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222399113 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174718158 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224088668 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.14358094 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.216605112 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208601206 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10893247 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140791197 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.141867601 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203513204 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117410373 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177138816 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.224868112 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214512264 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17551422 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186191297 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152280953 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.139365708 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178707694 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16450119 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215946658 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157156382 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.154567367 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213663669 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.16741856 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14267141 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182588101 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297639518 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158809701 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193534717 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104238212 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.314137699 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11264758 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144060081 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175993837 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189852348 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.164420484 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.172164406 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209404639 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132171861 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178659359 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152077473 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.232808921 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227579762 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19167063 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194597786 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.159738914 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177128581 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181107995 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19585812 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15749017 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.162382738 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178254688 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203673153 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.20954008 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14966524 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181819318 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180174588 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176795436 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19492076 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149041266 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205477309 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144111344 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186744133 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154866902 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138196491 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174318155 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196736417 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146818034 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197020379 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17493951 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142757445 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114518849 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169020727 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175346424 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16001337 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.141490215 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200709809 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.110909102 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179711058 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199927547 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144825004 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172914554 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160798324 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147231098 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130217157 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159817088 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149157366 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.183642516 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205613292 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.146512172 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196762935 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19412558 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183398196 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175535793 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159332944 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.680254255 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.114370143 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229567571 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135182089 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240980994 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162544432 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186305053 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177594241 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136425753 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215822991 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138304672 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23982388 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21234246 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179183555 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116678927 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159406539 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164158976 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146750009 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168568999 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178310964 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126012596 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153516735 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177243475 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161461071 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.160065472 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123030251 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231194114 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13583155 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234760783 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203953942 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152800944 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183857616 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197919315 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142395835 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182362075 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192069998 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156856338 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168895826 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.118902054 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.150735627 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198443354 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.135735802 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178061517 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177847118 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179051344 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179139784 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.124302042 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176810768 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157257351 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178799128 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141970436 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.174706179 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173832395 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145975605 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.114660069 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172963614 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176671773 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.1743838 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141088287 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.159576582 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226389467 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.108170294 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147996613 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299282755 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176878812 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21332247 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.170306684 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149272442 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157978631 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172649539 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173381201 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176766171 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115439825 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145576007 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.147256154 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.197013395 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.173670308 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145906845 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224568932 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17824595 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209263944 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.159594605 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255974928 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153814196 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171621091 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.145239164 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.117242879 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156451647 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148887679 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160971595 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20799848 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197291819 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.16774629 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.161558911 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143345047 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.108152985 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146427265 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180203392 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172196818 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175620959 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161387585 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102660611 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159820162 seconds)
  done (took 86.041222394 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169162027 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152332369 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.156422596 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.208618799 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178600725 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268998201 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.216613131 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238778402 seconds)
  done (took 2.655554749 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.133600864 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.119743164 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152296147 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.133512764 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.133622732 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.447149743 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144761777 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.106048484 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.195488534 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.171623159 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.104594115 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.678827215 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.131325035 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.131785565 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12374333 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.131516588 seconds)
  done (took 4.098941891 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.461029024 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.553355669 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.947951655 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.263439174 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.244871735 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.191506785 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.756969399 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.204400562 seconds)
  done (took 12.683159254 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.137240248 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.1526282 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.352319675 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.220923774 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.170383646 seconds)
  done (took 2.104253045 seconds)
done (took 130.046303771 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.110290153 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.153966663 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109378409 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154020618 seconds)
  done (took 1.584055009 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.156769424 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.122309347 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095560906 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120079189 seconds)
  done (took 1.564756515 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.538088526 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090654327 seconds)
  done (took 1.727324907 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.133824839 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.157645949 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.154795042 seconds)
  done (took 1.526546601 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.117428881 seconds)
  done (took 1.186634396 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.109136638 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.139892814 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.192062051 seconds)
  done (took 1.514962264 seconds)
done (took 10.174755868 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131677689 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436304047 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.422336314 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115951199 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.731332448 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.413187719 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.054041218 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164466119 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148431183 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125484579 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145938944 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676819541 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.041447467 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.375304825 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.99640181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370434994 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681981507 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128580064 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132560726 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101509011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.029550351 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097100249 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127783887 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126514818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677823809 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.432367979 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097367073 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.386588699 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125085395 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104494611 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.416967063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09754937 seconds)
  done (took 17.176760605 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144880323 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.19357235 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135743928 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099487117 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131943058 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126830901 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.109613938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141583534 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193652805 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125992334 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120482223 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12737683 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103241192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127709832 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149178528 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097268197 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130198222 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.1009881 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134836839 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127641302 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120245336 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125976928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099253702 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129306239 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12490696 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113064078 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127101907 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138880818 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099150677 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131782144 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104636188 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127909238 seconds)
  done (took 5.143816918 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149478219 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201896917 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137765404 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.161907212 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182876214 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100383205 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.219568443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169310933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194577783 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127806269 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14830991 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098621123 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.167804622 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098522728 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149610166 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126058997 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102784628 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129227621 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133272896 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101397 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148245335 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096762342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129578843 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128555092 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099075256 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141900245 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098797954 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142328056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126982251 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103919746 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.133283059 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098574791 seconds)
  done (took 5.427374807 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.111903378 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.141185039 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121150921 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.149704516 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.135360509 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.111285016 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.140047439 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.106078987 seconds)
  done (took 2.100629138 seconds)
done (took 30.922410525 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124446499 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.146156272 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.118318208 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.141276874 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.202236694 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.1011418 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.145715294 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.129018431 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.112715136 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.148172381 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.097785532 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.132868519 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.117532024 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.136851807 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.185807319 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.139519407 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.190950966 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.185488004 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.10409803 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.141390104 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.104335983 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.191711257 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.141474221 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.103315704 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.1953765 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.132749552 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.182884266 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.136721397 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.108315745 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.129042378 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.184976122 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.110115267 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.133551719 seconds)
  done (took 5.726766131 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.203578054 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.212864238 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.103291743 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.133856281 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.212692349 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.104110147 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.231197898 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.104740703 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.132345484 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.104765063 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.131833712 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.203746511 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.210226498 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.224369108 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.24256219 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.212048631 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.20091 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.210302239 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.196251108 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.214826219 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.201823113 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.132151093 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.214177253 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.215466127 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.101927091 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.132408026 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.237782019 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.209577674 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.23715976 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.199226509 seconds)
  done (took 6.558026213 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.1140505 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145314523 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124764776 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201176546 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.171784195 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.142582045 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.111340553 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.154007573 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.153902603 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.099127302 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.138363039 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.138223993 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145659214 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.138925834 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104151724 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.149152515 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.152197655 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.10277972 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.135941298 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119313144 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.149138915 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.147195024 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115128064 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.138213867 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099044798 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139793346 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.133313086 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113094506 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136654128 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.107907137 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.134472051 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.132623785 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.103534992 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.138152426 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.10461253 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.142734093 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.156824855 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108360501 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.142624514 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.165025618 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.109371345 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.134760337 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.150113051 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.146469143 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.131269184 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.139051628 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113111905 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.138828228 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097629193 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149660304 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.14236241 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.101208812 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.152569484 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099024017 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.1288349 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135231388 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.101829154 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.131678321 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.108142203 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.133480412 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.155274527 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.109244544 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135458206 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.102892343 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134295716 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098622435 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.13037792 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.136539915 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.124295434 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134757039 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160979507 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101544989 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.139698677 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107968551 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135108867 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136746408 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100468042 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135188454 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108957332 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.135622161 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.108099945 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.133039461 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132733709 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120170637 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.151228401 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.142506334 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.109850889 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.140616452 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.10421509 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.13166357 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142447284 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101676807 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.133768281 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109943782 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.130971743 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.131847394 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.112358369 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.139449625 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098720364 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.147949721 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.134457469 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.101056272 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.146020722 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.101346443 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.134842033 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.111509194 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.143643485 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.129533902 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.110222166 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.141615347 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099351235 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.136188796 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.133250856 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101228975 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.146816053 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.111166817 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.135358711 seconds)
  done (took 16.164647213 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.304196551 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.314095691 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210394051 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.404511661 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124552593 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.23003894 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.279238587 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.229774374 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.131068153 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.173908656 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.190768323 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.269015274 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.100563367 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.163680215 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.309878609 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.377503547 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.163738308 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.176967851 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.174700383 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125690153 seconds)
  done (took 5.55966517 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.126072755 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.174088293 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163117782 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.164730334 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.106907455 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.146213382 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.127895282 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.128286455 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.138803499 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.137313767 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.100389938 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.145311599 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.10810876 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.139403118 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.149292133 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148844664 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135227284 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.136227346 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.123410694 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.137020757 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.140658889 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.160405386 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.112261059 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.159675984 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.145624675 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.115694865 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.129689736 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.136931396 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.104463263 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.135495125 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107270488 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.151376785 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.137259682 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106950268 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.140422036 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.112607143 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.132369864 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.13088406 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.10307046 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.133173365 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.117999712 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.139553259 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104036749 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.126338612 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.114580521 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.133873066 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.142287096 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.113006409 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.142705958 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.11710388 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.142704348 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.142708417 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.108219018 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.149290255 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.102589656 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.14693322 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.144601294 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.141017257 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.109390799 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.129126023 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099296405 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.134817651 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.105290043 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.143976724 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.140714126 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.125399067 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.147446586 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.132474238 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.107178929 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.134468246 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103731684 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.150029123 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.159717428 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.136190834 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.105480328 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.152570395 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.104439531 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.12288186 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.112396227 seconds)
  done (took 11.440517192 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132851288 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.136297037 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122388844 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.168459909 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.15204061 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.107119551 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.135782196 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.120930617 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.144772968 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.145088476 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.114266243 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.144479859 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155783154 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.113707477 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.135585101 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.144539799 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.111961876 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.175712791 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.15040309 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.135938408 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.148288717 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.135873806 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.115719806 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.143936688 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.166621197 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.11402861 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166219787 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.140720758 seconds)
  done (took 5.003909276 seconds)
done (took 51.536972765 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.207218054 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.407177023 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.184904064 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.184186724 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.187404766 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.228445212 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.186802868 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.377634063 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.883919798 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.185941801 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.184808569 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.182091361 seconds)
done (took 27.510347817 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.285576381 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.773677692 seconds)
    (2/2) benchmarking "String"...
    done (took 1.508618306 seconds)
  done (took 4.388881049 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.178579547 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.179882328 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.422446862 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.179584331 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.195819523 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.195831926 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.187597445 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.193336127 seconds)
  done (took 15.659258299 seconds)
done (took 25.618818993 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.222554606 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.380775885 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.444546141 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.200949935 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.180739657 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.180010494 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.174010517 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.209681753 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.185233314 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.175505289 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.19755488 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.458165366 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.179274748 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.570140705 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.174413654 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.184665001 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.197319774 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.406728438 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.186557681 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.229570109 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.18116038 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.174874642 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.196468048 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.22116861 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.188117654 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.194760366 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.179114235 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.17388766 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.38830005 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.187180625 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.230347768 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.188931192 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.195241577 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.183653598 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.290508974 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.207360826 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.357800461 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.180011134 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.178591443 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.1947973 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.370225052 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.57805069 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.195414781 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.183512572 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.18532066 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.231397888 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.184180381 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.905536408 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.187948555 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.174922622 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.186849609 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.558147342 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.187140194 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.188386977 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.191783776 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.407438401 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.183015618 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.226069417 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.208431549 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.185471314 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.18271029 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.204633989 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.186077715 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.186497595 seconds)
  done (took 142.018772785 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.183647433 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.188946905 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.187073875 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.211952081 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.182033 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.186402092 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.182227662 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.183226491 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.187440744 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.188320253 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.183539913 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.18898137 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.186308259 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.149992521 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.187545639 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.197611016 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.185299036 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.185100076 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.191953921 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.184066106 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.203783168 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.184818319 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.20436931 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.188458533 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.22213351 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.270807189 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.221279188 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.202653261 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.189463829 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.184506689 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.226349071 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.20625926 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.788724281 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.045776514 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.198917222 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.194054408 seconds)
  done (took 79.562942522 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.18516911 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.185010084 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.184064748 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.216958049 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.184767619 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.749914782 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.754818678 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.925912876 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.512588829 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.483408952 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.436000302 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.186855626 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.278521677 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.200796497 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.187400387 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.201955178 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.232003496 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.186427346 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186080945 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.750223475 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.201694481 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.403618824 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.360001285 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.201216636 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217080334 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.594632342 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.185297974 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.184581308 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217386838 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.515562379 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.235306036 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.185654905 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.533980949 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.967019623 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298515885 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.187095858 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217259187 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.185074063 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.466035044 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186315824 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.186903152 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.188820903 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.832884583 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.186940767 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.742351965 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188571619 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.118789323 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.187075511 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.185877408 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.483175338 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.806610653 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.202515311 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.187830274 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.189534113 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.187529061 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.186458149 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.187716172 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.218302717 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.515198891 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.302709256 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.20319202 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.190494085 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217993955 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.185562409 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.299017983 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206148448 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.973951299 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.246865061 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.294136605 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.736028518 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187103745 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282796572 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305562236 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.187140098 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.186843827 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.187978011 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.188125339 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.297414828 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.188025796 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.59952471 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.188654865 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.359661182 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.205561008 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.470168772 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.284815563 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.187615729 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561309147 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.188260667 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.18754021 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.915774608 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28379843 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.188390007 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.188568058 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.188878876 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.598145907 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.747002492 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.422626839 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.188231759 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.624838352 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.194584964 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.603435505 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.726637497 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.842254548 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.190831324 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302667325 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.361995444 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.205796068 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.188305531 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.471874134 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.189559985 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.251694316 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.189611674 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.189519157 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.587987127 seconds)
  done (took 364.814210673 seconds)
done (took 587.502464647 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.933329099 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.884591492 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.017730032 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.909683393 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.887140169 seconds)
  done (took 10.746520638 seconds)
done (took 11.860422618 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.377089835 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.377154324 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.249235232 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.376638747 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.220977321 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.39725774 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.359567983 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.209514076 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.295806702 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.270412374 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.29335174 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243724559 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224363506 seconds)
  done (took 18.009620768 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.473753025 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.19686095 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27654348 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.445315985 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233940336 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.468681016 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.488584668 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.196643061 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.338965684 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.20821654 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2075662 seconds)
  done (took 17.650081963 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.468183462 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.196763056 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262503478 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.452766127 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236746935 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.478975415 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.532780894 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.197914904 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.338575993 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.208547667 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.207333412 seconds)
  done (took 17.695444213 seconds)
done (took 54.468780735 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.23416074 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.361985498 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.220751075 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.211566924 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.204647501 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.205658003 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.212225806 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.205376313 seconds)
  done (took 10.973553253 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.203805661 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.202215538 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.202932981 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.202702249 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.203424735 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.203010664 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.20333839 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204686983 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.203756836 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.203041802 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.204721386 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.203192978 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.204322942 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.204304183 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.20406676 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.204417116 seconds)
  done (took 20.374984354 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.207988006 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.203105934 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.203730628 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.204203374 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.202970713 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.204883868 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.20546996 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.203883692 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.204027062 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.203739504 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.20432221 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.203200791 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.204115162 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.203658615 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.204687454 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.204312448 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.20317122 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.204526255 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.208822535 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.204583114 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.204615531 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.204705866 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.204440067 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.20402442 seconds)
  done (took 30.027447971 seconds)
done (took 62.490846777 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.193546653 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.202956291 seconds)
  done (took 5.514204982 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.265228314 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.262920877 seconds)
  done (took 3.64697186 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.204326739 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.205710008 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.205912513 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.204168105 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.205551306 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.206014118 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.205704452 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.205440231 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.204653992 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.206037404 seconds)
  done (took 13.172400998 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.206222195 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.206143355 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.205104252 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.205930833 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.205673378 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.206674452 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.205276366 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.206737234 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206719683 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.205719197 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.206201037 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.206181981 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.205774748 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.206838297 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.206274127 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.20636868 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.206128567 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.206763729 seconds)
  done (took 22.830948248 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.219506894 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.2285305 seconds)
  done (took 3.567705428 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.348092402 seconds)
    (2/7) benchmarking "second"...
    done (took 1.248430654 seconds)
    (3/7) benchmarking "month"...
    done (took 1.323028208 seconds)
    (4/7) benchmarking "year"...
    done (took 1.313183802 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.248612356 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.228086309 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.250019347 seconds)
  done (took 10.079982186 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.20982245 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.404824282 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.507629148 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.774134021 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.208271366 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.254855851 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.038462494 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.253756381 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.242058664 seconds)
  done (took 14.015320167 seconds)
done (took 73.944493987 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.196439227 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.247149549 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.224996151 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.217645686 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.546324685 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.203258282 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.197354902 seconds)
done (took 15.954679691 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.191206148 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.200845014 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.196843748 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.207179312 seconds)
  done (took 9.918234277 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.199255927 seconds)
    (2/2) benchmarking "read"...
    done (took 1.574248429 seconds)
  done (took 4.894489412 seconds)
done (took 15.934082484 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207944418 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.207830546 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.20933907 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.209507293 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.20887961 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.208822449 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.209538955 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.209351188 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.209116371 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.20900007 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.209244665 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.208858006 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208764465 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.208893028 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209935774 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208461167 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21021065 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.209600461 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.208366648 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208367527 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209860664 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209569842 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.209484626 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.210197356 seconds)
  done (took 30.14228799 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.211917701 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.210036477 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.211055816 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.20937305 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.209686617 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.211827056 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.210578214 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.211440276 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.211334287 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.209929223 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210675461 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.210948317 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.210842472 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.211084762 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210466521 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.212032264 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.210742041 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210294431 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212415459 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.212510229 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.212589055 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211596654 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.210942712 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211221113 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.211551478 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211060417 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.212005514 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.212628878 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212469781 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.212383803 seconds)
  done (took 37.461823073 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.21577917 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.21854664 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.212607488 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.213348654 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.210924065 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.21292696 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.212902144 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.213234213 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.211691592 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.21288283 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.213278679 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.211268637 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.212196369 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.212067909 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.211491193 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.213306396 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.212781339 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.21227304 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.212939371 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.212589078 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.213161009 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.212632221 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.212837084 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.212559768 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.212985158 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.21265855 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.21309564 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.214089805 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.213703753 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.212861777 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.212973942 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.211938025 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.212809099 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.214132086 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.214661844 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214760798 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.217536813 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.220180747 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.214810564 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.215057658 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.213440899 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.214835174 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.213473238 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.214498261 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.214814198 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.215403192 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.214644962 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.215210586 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.215000925 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.21457699 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.215065087 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.21414222 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.215022099 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215238364 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.215315963 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.215850848 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.214100978 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.214936023 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.215662675 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.214983262 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.215359844 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.21610978 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.216355657 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.216737153 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.216510274 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.215129986 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.215791521 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.216552586 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.216382754 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.216169739 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.21554138 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.215535621 seconds)
  done (took 88.555923947 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.216316183 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215957307 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.21665012 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216021816 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216493233 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217316574 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.216867342 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218096219 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217732894 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216298044 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218005884 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21761788 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216957655 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.217351622 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217305425 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216913354 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.217301102 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218099455 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.218470579 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.218831578 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217026396 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.219017575 seconds)
  done (took 27.910231897 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218304776 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.219816202 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.216878815 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218779403 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220320699 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218953488 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.217814709 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218635311 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217572306 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217126733 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217058198 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216926964 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219243705 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217732793 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218313208 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220417856 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218409404 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219364532 seconds)
  done (took 23.061653105 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.218381688 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.217899218 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.218371315 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.218015677 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.218149328 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.218323113 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218874871 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219523175 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.219357692 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.219233003 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.217920986 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219217663 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.218933574 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21834436 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219977774 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.219844232 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.219767655 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218353622 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219571964 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220397744 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.218952117 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219948872 seconds)
  done (took 27.948766818 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219961413 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219733252 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218878749 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218855599 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219601293 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.219944324 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.220298229 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.21886976 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.221054841 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.219961283 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219960673 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.221220618 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.222668568 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.220625129 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.222295339 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220707727 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220878844 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221818864 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219608807 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.220338524 seconds)
  done (took 25.539338153 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221700313 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222070185 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222935505 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222227252 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222374749 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222025761 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223288433 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.223809474 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22295115 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224089574 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223287646 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.223979232 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222712177 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22551743 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223036372 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222773644 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223085265 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223094691 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.223826351 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223021963 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222469876 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222974575 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223497185 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223192361 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.223986734 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222829067 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223885285 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223199255 seconds)
  done (took 35.382554752 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22350257 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222661066 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.222573201 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.223804101 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.222451715 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.222488075 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.22363269 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.223588945 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222921388 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.223693053 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.224444353 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224015865 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223717046 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.223646526 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.223739227 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.222654414 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223578345 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.22450818 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223995776 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22333875 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.224075028 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224773798 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.223916437 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224693163 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224601577 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.225605937 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22363525 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225010804 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224775869 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224907542 seconds)
  done (took 37.85123096 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.273324719 seconds)
    (2/2) benchmarking "in"...
    done (took 1.266166579 seconds)
  done (took 3.67421597 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.224580898 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224844213 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.22545725 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225212363 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.226203337 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.226092507 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226291559 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22457447 seconds)
  done (took 10.939366724 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.223177805 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.226654104 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.225218369 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.225842609 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.22562958 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.222564856 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229513348 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.244959097 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.222798565 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.223427085 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.229644928 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.229656736 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.224228518 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.222859422 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.223815895 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.22433255 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.2280772 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.226240135 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.227682249 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.22765469 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227587467 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.225844465 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225954273 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.228083021 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.225197424 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.233672308 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.246053128 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.228735266 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.223369943 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.228347451 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.224231136 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.228150241 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.227796471 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.227704782 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.228987682 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.22759744 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233475181 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243965695 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.230376612 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247389267 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229450496 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.22799524 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.22479761 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.227364953 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227159199 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.228895133 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.229608713 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.227704986 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.224664389 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.228522267 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.236378186 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.223996366 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.229072288 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227404395 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.225422837 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231128746 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.248331212 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.22857512 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.234049911 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.235323086 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.255812589 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.250153956 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.227182713 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.229182902 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234798298 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.248478564 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232134674 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.249504319 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.230705022 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.229787861 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.232647617 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256672737 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.251396871 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.229942338 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231276286 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.230632798 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226504895 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231427071 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23429291 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.249015011 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.230761123 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231024417 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.237359543 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248899036 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.227031208 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.231594082 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.230673366 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.230806563 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.229065982 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239211952 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.250834617 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.232333282 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.227697725 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.228024865 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.228641214 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.231616948 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.227425887 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228066904 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.231860275 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.231942353 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232026868 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231303032 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.238738525 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232735751 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.23223606 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.234660655 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.251826377 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.22894353 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.234271406 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.233100447 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233163554 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.229817948 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.234357229 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.233146964 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.230550774 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.236781609 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.231905356 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.2301689 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.232229831 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.235474324 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238815636 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.253508111 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.234540632 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.234566197 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.233178939 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.243834227 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233935529 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.233152962 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.234576043 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.234181325 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.234294496 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.2308703 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.23506584 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.23053798 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234481142 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231587123 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.235416894 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.23420728 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.234191835 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.232696756 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.231911829 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.230902029 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.2321428 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.232084426 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.234107381 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.232442521 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.237799651 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.250389236 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.232010314 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.23215791 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.234757907 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235181243 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.23108562 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.236399795 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.231626548 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234424179 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.231994428 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.235355929 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236107003 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.234739047 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235168859 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.233548158 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235446909 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.236138234 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.235577499 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.23247601 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.235596716 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.236379213 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236844652 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.232691466 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.236682196 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.231934039 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.234673397 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.243660642 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.237898161 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.236796663 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.235714969 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236506034 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237924681 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237546394 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.235600766 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.24157926 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.237187435 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.239940793 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.256324443 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240293629 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.237800273 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.233340135 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.233072514 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237160353 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.235810511 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.246887988 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245410886 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258700555 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.235186478 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.241793294 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.2349258 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.24253568 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.237348052 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.237693061 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.238287649 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237629512 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234250754 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238750344 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.234458451 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.238438697 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.233916606 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.239256101 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.239067431 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.237616572 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240195446 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.235648833 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23534778 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.239151691 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238925698 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239581363 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.235055724 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.239402826 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.23495408 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.235124992 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.239956765 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239637957 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.241589531 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.239851205 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236862981 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236247757 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.235870974 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.235958369 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.239412572 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23726993 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.235979569 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243460291 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.257834797 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.23809844 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242991197 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.256491018 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.236260238 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.23953667 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.240839328 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.240380156 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.239206689 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.248170867 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.243333156 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.241046376 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.241768112 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239130783 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240853281 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.243463988 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.260684921 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.237545724 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.242938623 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.238845407 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242828256 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.23854515 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.238465488 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.237479978 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239785186 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24282457 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.241585125 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239095556 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.24147052 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.242423314 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.24171053 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240270107 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.248889766 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.244404937 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.2382845 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.241815852 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.239005718 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.247340112 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.239819133 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.243334228 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.238527193 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251531364 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.266740229 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245760348 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.259812327 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.244418239 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245002235 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.259210575 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.242652637 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240327392 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240702753 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.243438766 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.239371127 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.243568741 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240509803 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.243196458 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242021288 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.242638929 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.248150501 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.244247085 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.239690725 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.243947644 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.244365596 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.244623757 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.240539119 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.245433664 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.242414103 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242608716 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.240256274 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.239910879 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.74029311 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261424415 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.240831564 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.241523617 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.240780412 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.240996441 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.241842703 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.245554951 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.244355754 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.25239767 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.244050444 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.250040971 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.243029134 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249558546 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.245022975 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.244294445 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.251938261 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.246541448 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.241191688 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.241181498 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.24597348 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249104443 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.266519111 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.242892564 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.250759141 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246223363 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.245561764 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.247018032 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.247595122 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247375428 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.24747881 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250671632 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.26370561 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.245720029 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244260041 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.247792248 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.245714733 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.246493521 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.243164677 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245652909 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247134905 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.244027271 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.24252959 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.243905714 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.247201163 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.247680579 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.246747439 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.248411947 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.245900161 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249846597 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.264930484 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250829948 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.247270958 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.250094815 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266780174 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250182948 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.268413948 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.243530126 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.247268809 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.248873921 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.245551296 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.243586896 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.245161625 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.248277979 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.246456479 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.254046065 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.247696356 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.246607467 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.244825946 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.248464366 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.2443515 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253922252 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270659784 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.245350829 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253302042 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.249755844 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.246236963 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.25378059 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.248430919 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.244330735 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.247683473 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255693844 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256563691 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.245075375 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.249002062 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246072479 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24973034 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.249794086 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.250128309 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.249824699 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.249245918 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.246624604 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.24905522 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248943355 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.250961148 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.247593918 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246800763 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.247754225 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.256038479 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.272651794 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.251305397 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250738398 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.251992468 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.248732262 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.248825051 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.252112327 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247944722 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251810569 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.24944753 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253719894 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.253671786 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.249976701 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.247984146 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.251502979 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.248045758 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.248687399 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25142315 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.251574561 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250973268 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.249046743 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.25171918 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.248878275 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.248513044 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.254351588 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.249392178 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252558651 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25043028 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.255039849 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247412973 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.252817915 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.252218523 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252961757 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.247746647 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.248805651 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.255734512 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271391823 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.258428986 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.256248862 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.255870931 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.249199268 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252193525 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.256905127 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.248142994 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.250175066 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.253567064 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.250292299 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.25040648 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.251332744 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254845101 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.255627075 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.269013247 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.249976489 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258560908 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.270135927 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254495459 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.250953309 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.254860455 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.250013477 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.254391885 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.253689841 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.249547008 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257032995 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.27162367 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254771271 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252015305 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.250874434 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.25323527 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257538359 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254599401 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.251627853 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.254628607 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.25213419 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255407318 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256418591 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.256040084 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.250545133 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.251838507 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.254466949 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.257797163 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.255993545 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253403791 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.251786629 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.252922422 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25542584 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256156104 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.25619941 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.256509205 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.253828395 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25761069 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.251471904 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.255316217 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.251576861 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.254277288 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.260201219 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257227719 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255522134 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.262737721 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.263753718 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.257450761 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.252554397 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.253631404 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.257105872 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257527799 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.257703472 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254243586 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.253912461 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.258318963 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257057594 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.256323291 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.25557249 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268687128 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.276582014 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254148814 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.25298065 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255805368 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.257941902 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.257226675 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.258277855 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.255393085 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.256197986 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.264651073 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.258329223 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260534514 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274704495 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.255010306 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.262585873 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.257367151 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.262502713 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.257794622 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259857779 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.257738277 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.259382007 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.270740749 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259508919 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263773638 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281768261 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.276455391 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.256141837 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.25939697 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254214855 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.25939354 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.257262854 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.260470429 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.259884603 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261457158 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.259195938 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.256879516 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260543207 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.257323027 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.261862797 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.260705711 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.255831823 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.25777021 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.260860919 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.259610877 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.262072943 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.25923642 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.260386321 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.260017189 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.256733523 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269420442 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.284112204 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.261216877 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.261414093 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.260434006 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.260611873 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.259048508 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266245345 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.268712029 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.262005538 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.261048838 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.25957694 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261638092 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.263732351 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.258314963 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.258389611 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25867239 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.261907797 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.270917511 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287296423 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.263450112 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.25791241 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.262448994 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.263257673 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25913452 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263617056 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262222846 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.25914339 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.260168658 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266174481 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.264330622 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.262931574 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.26058667 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.269527383 seconds)
  done (took 743.890413248 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262570481 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263008198 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263423365 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262892527 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26241691 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264038553 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263621957 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.264205524 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.263805514 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263990413 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.262971918 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264069579 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2637693 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264462483 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26470077 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263931954 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264742073 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26481005 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262999875 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264968956 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264305716 seconds)
  done (took 27.710863235 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.263643282 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.264674597 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265085347 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264650688 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265384833 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.264854138 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.264042503 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263586141 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.264021693 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264486421 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.264345753 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264825947 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.265467447 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.265300164 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265175331 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265186973 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.265688369 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265911657 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.265547725 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266442232 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265185301 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.265897686 seconds)
  done (took 29.00159025 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.264552841 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.265128629 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.262092214 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.265776093 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.267224812 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.266364212 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.26702474 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.265604351 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.267048214 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.263234039 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.260703839 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.263832737 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.269340054 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.273475211 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.263916155 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.267582343 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.267208541 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.267111302 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.266751575 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.267443845 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.267885061 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.28867426 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.269201415 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.263245855 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.267148322 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.267007686 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.267921338 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.268306155 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.264260538 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.271584315 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.266776526 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.263730662 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.264847898 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.263186452 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.265773907 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.27199168 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.267915879 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.268011933 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.267571836 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.273478518 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.288991744 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.267835887 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.270849157 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.289686006 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.269236073 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.268262819 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.275787111 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.268483314 seconds)
  done (took 62.063268243 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.858887604 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.874577544 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.87481318 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.875495755 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.872671241 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.875746659 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.878945739 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.890583037 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.889016521 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.87874322 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.88246831 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.884314865 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.880184055 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.879898466 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.881142641 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.881658394 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.883220247 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.877723774 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.879603848 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.88242277 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.882635584 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.876584951 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.875741574 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.878034917 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.882059063 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.88077586 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.877845031 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.874581415 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.88416542 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.881840023 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.879986582 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.880239861 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.88767492 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.87992379 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.881580729 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.885740033 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.888783606 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.879566926 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.878917414 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.881581939 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.880898922 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.880118751 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.882660218 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.890993467 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.895856697 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.898686688 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.885154249 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.88140686 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.912802287 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.899207405 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.89212794 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.907031083 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.88589451 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.89204463 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.888497908 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.89124103 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.896021605 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.897818195 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.889190142 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.88862957 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.883389423 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.89243157 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.886200393 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.889499925 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.883045786 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.886819899 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.887735607 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.884250472 seconds)
  done (took 129.308770122 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27372194 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.273739337 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272629859 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27370928 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273810354 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.273803453 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274198271 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.274354878 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275024437 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274199808 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275037583 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274401673 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.275437725 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.274560929 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27483891 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274427811 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.273052851 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274420106 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273424193 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274924551 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.274008105 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275757345 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.275898401 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.274632297 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275359721 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.275195046 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274811705 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.273909222 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274343824 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276139743 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275727776 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.275348337 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275841626 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.274777953 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.275308227 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.275503551 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27560924 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276118372 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.275423258 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.275930526 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275975261 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274579386 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276502755 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.27624981 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.275639267 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276597433 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276367565 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.275947347 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277127252 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27591184 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.276369388 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276060792 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276063095 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276755518 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276877227 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.277049997 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277106384 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.277556123 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276712324 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278154088 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277687707 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.27735991 seconds)
  done (took 80.258230795 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276657649 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.27780641 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.277731198 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.277812484 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.277815943 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276228434 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.277043641 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.277668181 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278031317 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.27827521 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278913498 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277530609 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279012961 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278796421 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2792661 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279988915 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278101347 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.279539627 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278538293 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.278694803 seconds)
  done (took 26.746558707 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.276945283 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.278830498 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.280494075 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.279371494 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.280448007 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279057689 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.278591689 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279425743 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278798054 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279300076 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27908753 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.279347242 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279413342 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280297431 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.279055593 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28014527 seconds)
  done (took 21.652349992 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.27923274 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.280236119 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.279494595 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.280340677 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.280808765 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.280217545 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.279682587 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.27951187 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.279739392 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.280157064 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.280167574 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.27998024 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.280373756 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.279334571 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.280092884 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.280307213 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.279231153 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.280479084 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.280283556 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.279767966 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.280179786 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.280159805 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.280327307 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.280494304 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.281554841 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.281457739 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.280923103 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.282114668 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.279991976 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.281233348 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.280496215 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.281542193 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.281379935 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.281480432 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.281041642 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.281611139 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.281911827 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.280938083 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.282295452 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.282249575 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.281613629 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.282484867 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.282385699 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.282171918 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.281368386 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.281647949 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.282709526 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.282402981 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.283182251 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.283632154 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.282121447 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.282872425 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.282603236 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.283434918 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.283376992 seconds)
  done (took 71.647543761 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28238501 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282476216 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.2825436 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283109858 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282541892 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.28256465 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.282669192 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284448129 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284119338 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285394118 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.283352492 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285680264 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284582853 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284756811 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284394144 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285554353 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.283860784 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28489014 seconds)
  done (took 24.296231216 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.283608076 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284224563 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.284380235 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284705198 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.285623011 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285258331 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284775582 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.284529841 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28537768 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.286271535 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285420866 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.286239209 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285295587 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.284974584 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286100206 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284395353 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.285470184 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285637875 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.28545067 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284565045 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284342624 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285504414 seconds)
  done (took 29.461972575 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.280151142 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.280627983 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.280798871 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.295644233 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.30180457 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.280191316 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.280497699 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.281309001 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.302154488 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.349297174 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.34360536 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.301026126 seconds)
  done (took 16.766998588 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285470647 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28456517 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286424872 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286710086 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28710977 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287254695 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286959547 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286598606 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285412961 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286690823 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285442638 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286886241 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286667657 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287365749 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287189929 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286939466 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286555944 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287384611 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287708239 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287735951 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287070843 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287935088 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287578164 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287767178 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287138774 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287782649 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286899428 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287320959 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28720303 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286932654 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287272465 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287294374 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28768105 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287745137 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288961306 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287153502 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288794285 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289381545 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288622384 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289073389 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288724896 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288207367 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288053272 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288479163 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289066915 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288628898 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288641457 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289194306 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289199097 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28929139 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289936472 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289246262 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289451594 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289080876 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289381029 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290144526 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290457135 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289943765 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291033184 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289812828 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289653017 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289133654 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290383677 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290323055 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290258234 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289861615 seconds)
  done (took 86.209029815 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290782013 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289650716 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290261325 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290710072 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290594579 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290191568 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291585276 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290033805 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290613562 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290807837 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290632038 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291219661 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290903924 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290660182 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291687081 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291114666 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291020753 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291248218 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29121148 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29174498 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291171691 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292530009 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292037564 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291388922 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293464631 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29147647 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292548901 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29196031 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290589118 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292713721 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292172815 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291490388 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2925733 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292976068 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292427865 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292265295 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292408603 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291899525 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293650371 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293280596 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2938838 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29313402 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293168446 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29213055 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293847665 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293576755 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293188428 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294191726 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292843148 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29327925 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293945253 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294607666 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293537977 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29353421 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294421246 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29297922 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294735692 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292918665 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294430331 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294570077 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293793126 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297311202 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294629836 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29415214 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293810466 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295466138 seconds)
  done (took 86.502003985 seconds)
done (took 1785.104905035 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.455444599 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.411213044 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.289637454 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.3004417 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.288942949 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.312249321 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.300353336 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.288410358 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.289331776 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.289186005 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.289595377 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.478234418 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.284603409 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.289130792 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.289656216 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.385577065 seconds)
  done (took 26.441401177 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.319596803 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.298434432 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.412173326 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.312205108 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.32001654 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.489868711 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.352130801 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.294832449 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.471462605 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.314724499 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.297954361 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.31764454 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.29517999 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.294236857 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.312050892 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.492369772 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.55195145 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.299555373 seconds)
  done (took 28.645822797 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.765983519 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.304208835 seconds)
  done (took 5.269502859 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.313636463 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.294124817 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.295762949 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.293274867 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.290470975 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.289561027 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.293563984 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.296020794 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.29955815 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.428329787 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.297000189 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.308262153 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.313053925 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.296982187 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.29896545 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.339971957 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.444691539 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.299619059 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.297504828 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.300144274 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.295273415 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.397650189 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.339328433 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.300819104 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.425181124 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.298967509 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.300402815 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.303707367 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.419955531 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.299364721 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.294234866 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.294728614 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.297285331 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.304635076 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.787911503 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.306221667 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.303836542 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.322690489 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.299655955 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.458633935 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.29725362 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.302864123 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.290652465 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.798610424 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.430955373 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.419283935 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.306169756 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.313742781 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.299441433 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.363905709 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.297537642 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.298006321 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.357239241 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.122141111 seconds)
  done (took 83.449647215 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.2944017 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.291440889 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471197705 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.319744468 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290709043 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290476565 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.290298917 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.587628303 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.31469849 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.290892489 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.582422757 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.879617617 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.318534349 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.34892484 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.160574043 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.36799089 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.295073123 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.307392244 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.293313411 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.298147737 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849067496 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302762945 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.293038613 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.465625026 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.330350275 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.818349301 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.291733109 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.291930991 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.313693033 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.291930051 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.829535747 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.312526374 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.362355114 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.294430766 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.566937561 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.678335155 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.640882176 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.295556687 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.315798467 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.29533585 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.311442321 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.801038321 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.661029102 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.292285171 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.292678028 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810109329 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.293239627 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.292282633 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.302967153 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541573079 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.292483296 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.294546193 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.312123557 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.291855581 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.292203038 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.386741416 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.383949743 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.819054068 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293144088 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.29399261 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.312981303 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.296230979 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.300620281 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.295605286 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.314987989 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.664508595 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.442586863 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.30224249 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.665719104 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.824477337 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.311211422 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.906618356 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.310864428 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.307803302 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.507592839 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.293436249 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.297336778 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.82862955 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.314044339 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.294557531 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.643416404 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.297142062 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.589347947 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.312054477 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295779763 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868843379 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.300483876 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.311539496 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.295954348 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.297457547 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.314127582 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.327209258 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.580557044 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.341002591 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.295923201 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.295996978 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.339727443 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.301268294 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.295530627 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.302389372 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.886518211 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.314863399 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.296355624 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.300035154 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294959372 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.297417192 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.296985308 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.299473433 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.564203019 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.306129279 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.297719062 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.299580586 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.297289948 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.305156239 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.481573519 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.303771401 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.613850005 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.299437218 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.303904109 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.296017122 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.29668099 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.298136946 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.29742861 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.305259509 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.213821158 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.559972967 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.316102745 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.31411048 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.298163865 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.325625959 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297470505 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.297516157 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.360039394 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.300862191 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10271616 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.328808267 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.336764399 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.297773423 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.300928804 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.298580983 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.300788808 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.300196549 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.592213035 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.578643752 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.44578743 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.304518092 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.298463223 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.087424427 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.370662252 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479643767 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.31853077 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.299670709 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.547546338 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.531060527 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.30114368 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.299930588 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.299432671 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.558020694 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.300331307 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625161808 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.86119426 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.317329339 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.307313976 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.107470188 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.002698734 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.300420588 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.299613972 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.587554779 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.316056637 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.299992413 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.299406812 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.301215681 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.316530143 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.317566897 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.304370505 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.299769199 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.300573463 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.34609399 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490236289 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.319631659 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.299736024 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.819398493 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.325122055 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30071706 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.304875778 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.302366695 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.300306462 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.375547575 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.300714544 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.312765822 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.30298794 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.302275817 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.835510328 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.301649292 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.302347301 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.492809267 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.012604567 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.319760475 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.302284106 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.317796668 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.218281145 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.845099699 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.343763722 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.621636241 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.311905484 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.343777941 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301926267 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.412205483 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.846322713 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.307683028 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.322197265 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.975355308 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.320239772 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.807262407 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.302991845 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.304455145 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.924514281 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.320947526 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.305642243 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.30288243 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.307884865 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.606299225 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.303777374 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.3458757 seconds)
  done (took 491.18254378 seconds)
done (took 636.185426196 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.302078896 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.307600905 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.299602913 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.307069431 seconds)
  done (took 10.431846296 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.317287053 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.309632409 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.314437412 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.308515927 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.31648869 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.309694855 seconds)
  done (took 9.091219971 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.303797113 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.307826426 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.308841173 seconds)
  done (took 8.137011417 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.518038136 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.333327358 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.647291494 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.325071543 seconds)
  done (took 9.040016127 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.315059759 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.314205201 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.313729 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.31574759 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.31973571 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.319829014 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.317941983 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.318095648 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.319113322 seconds)
  done (took 13.066264261 seconds)
done (took 50.981069164 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.45114173 seconds)
    (2/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.32376288 seconds)
    (3/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.440242507 seconds)
    (4/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.094566524 seconds)
    (5/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.393824378 seconds)
    (6/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.324125348 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.364860582 seconds)
    (8/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.453030463 seconds)
    (9/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.509410811 seconds)
    (10/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.493989812 seconds)
    (11/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.343822709 seconds)
    (12/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.337437595 seconds)
    (13/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.353054895 seconds)
    (14/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.581280072 seconds)
    (15/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.355267709 seconds)
    (16/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.368925059 seconds)
    (17/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.469576319 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.435974708 seconds)
    (19/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.402168403 seconds)
    (20/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.467592656 seconds)
    (21/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.378120012 seconds)
    (22/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.315229414 seconds)
    (23/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.298646064 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.444122983 seconds)
    (25/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.442082418 seconds)
    (26/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.07990526 seconds)
    (27/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.984782603 seconds)
    (28/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.412960824 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.343610619 seconds)
    (30/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.34390036 seconds)
    (31/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.469322086 seconds)
    (32/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.067273745 seconds)
    (33/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.360823406 seconds)
    (34/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.401570106 seconds)
    (35/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.386449525 seconds)
    (36/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.057114752 seconds)
    (37/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.484122521 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.401485684 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.386088405 seconds)
    (40/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.063001206 seconds)
    (41/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.519154618 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.408330902 seconds)
    (43/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.315963672 seconds)
    (44/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.442240694 seconds)
    (45/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.341871965 seconds)
    (46/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.335428199 seconds)
    (47/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.369633189 seconds)
    (48/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.409646212 seconds)
    (49/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.344915911 seconds)
    (50/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.470843026 seconds)
    (51/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.493753533 seconds)
    (52/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.405698657 seconds)
    (53/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.408258022 seconds)
    (54/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.344588682 seconds)
    (55/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.386435496 seconds)
    (56/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.309988031 seconds)
    (57/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.530499064 seconds)
    (58/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.076813223 seconds)
    (59/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.386838107 seconds)
    (60/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.34704781 seconds)
    (61/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.423889183 seconds)
    (62/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.438273955 seconds)
    (63/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.542136391 seconds)
    (64/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.301991487 seconds)
    (65/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.340763346 seconds)
    (66/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.404924637 seconds)
    (67/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.42677788 seconds)
    (68/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.327925822 seconds)
    (69/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.44451074 seconds)
    (70/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.354463026 seconds)
    (71/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.312180316 seconds)
    (72/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.353767297 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.411405602 seconds)
    (74/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.480589271 seconds)
    (75/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.390289413 seconds)
    (76/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.40035481 seconds)
    (77/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.304660226 seconds)
    (78/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.318103302 seconds)
    (79/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.336304919 seconds)
    (80/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.000947315 seconds)
    (81/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.518034067 seconds)
    (82/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.33218678 seconds)
    (83/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.479649943 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.386294794 seconds)
    (85/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.551628664 seconds)
    (86/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.348184466 seconds)
    (87/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.396064684 seconds)
    (88/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.319239269 seconds)
    (89/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.43174808 seconds)
    (90/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.134229434 seconds)
    (91/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.331898116 seconds)
    (92/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.328962373 seconds)
    (93/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.496333389 seconds)
    (94/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.520070472 seconds)
    (95/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.401937244 seconds)
    (96/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.329678156 seconds)
    (97/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.303388335 seconds)
    (98/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.419788179 seconds)
    (99/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.389912484 seconds)
    (100/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.529085086 seconds)
    (101/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.527493327 seconds)
    (102/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.025750261 seconds)
    (103/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.392005098 seconds)
    (104/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.404638935 seconds)
    (105/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.329511011 seconds)
    (106/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.455834031 seconds)
    (107/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.327725988 seconds)
    (108/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.423635662 seconds)
    (109/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.343161195 seconds)
    (110/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.495831884 seconds)
    (111/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.701985159 seconds)
    (112/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.358035084 seconds)
    (113/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.350844371 seconds)
    (114/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.518706783 seconds)
    (115/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.572637131 seconds)
    (116/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.30675448 seconds)
    (117/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.352404187 seconds)
    (118/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.357095372 seconds)
    (119/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.473395249 seconds)
    (120/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.521553837 seconds)
    (121/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.449497821 seconds)
    (122/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.642394496 seconds)
    (123/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.462352617 seconds)
    (124/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.362369042 seconds)
    (125/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.253387853 seconds)
    (126/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.47796359 seconds)
    (127/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.107985257 seconds)
    (128/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.012512944 seconds)
    (129/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.457288659 seconds)
    (130/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.425449126 seconds)
    (131/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.306284698 seconds)
    (132/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.403131873 seconds)
    (133/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.077198296 seconds)
    (134/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.127753716 seconds)
    (135/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.482192919 seconds)
    (136/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.359799211 seconds)
    (137/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.440444478 seconds)
    (138/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.425055809 seconds)
    (139/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.365494076 seconds)
    (140/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.457873243 seconds)
    (141/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.323141861 seconds)
    (142/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.660108554 seconds)
    (143/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.371620362 seconds)
    (144/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.358685256 seconds)
    (145/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.970269418 seconds)
    (146/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.309167706 seconds)
    (147/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.327205123 seconds)
    (148/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.353341769 seconds)
    (149/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.528112678 seconds)
    (150/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.347644991 seconds)
    (151/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.447630506 seconds)
    (152/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.322242883 seconds)
    (153/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.208545469 seconds)
    (154/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.439942344 seconds)
    (155/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.517831049 seconds)
    (156/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.34785053 seconds)
    (157/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.360263516 seconds)
    (158/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.458516846 seconds)
    (159/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.445239659 seconds)
    (160/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.443096249 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.390656842 seconds)
    (162/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.306478063 seconds)
    (163/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.336266366 seconds)
    (164/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.474732761 seconds)
    (165/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.371217933 seconds)
    (166/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.436818829 seconds)
    (167/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.977531076 seconds)
    (168/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.403116876 seconds)
    (169/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.971605456 seconds)
    (170/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.348699338 seconds)
    (171/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.329883036 seconds)
    (172/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.486447732 seconds)
    (173/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.682902476 seconds)
    (174/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.433511924 seconds)
    (175/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.426520945 seconds)
    (176/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.428790467 seconds)
    (177/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.006550692 seconds)
    (178/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.486924726 seconds)
    (179/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.105604099 seconds)
    (180/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.38523542 seconds)
    (181/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.346949974 seconds)
    (182/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.242577201 seconds)
    (183/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.365667872 seconds)
    (184/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.362411737 seconds)
    (185/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.456722955 seconds)
    (186/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.452458012 seconds)
    (187/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.530862504 seconds)
    (188/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.432153966 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.370352862 seconds)
    (190/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.362962427 seconds)
    (191/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.344490757 seconds)
    (192/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.533973356 seconds)
    (193/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.336847287 seconds)
    (194/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.532126448 seconds)
    (195/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.431097428 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.352482966 seconds)
    (197/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.52164927 seconds)
    (198/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.323379115 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.427125493 seconds)
    (200/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.225840988 seconds)
    (201/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.546862688 seconds)
    (202/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.143667326 seconds)
    (203/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.318294164 seconds)
    (204/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.434060588 seconds)
    (205/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.381032251 seconds)
    (206/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.039782158 seconds)
    (207/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.356206512 seconds)
    (208/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.376340278 seconds)
    (209/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.416366785 seconds)
    (210/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.390446542 seconds)
    (211/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.487416973 seconds)
    (212/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.369059536 seconds)
    (213/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.355667773 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.464179445 seconds)
    (215/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.397710864 seconds)
    (216/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.33896619 seconds)
    (217/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.549553464 seconds)
    (218/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.366952665 seconds)
    (219/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.480998724 seconds)
    (220/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.312533864 seconds)
    (221/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.016504459 seconds)
    (222/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.409149781 seconds)
    (223/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.408104159 seconds)
    (224/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.45736204 seconds)
  done (took 368.6723582 seconds)
done (took 369.888941945 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37413069 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.508629694 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.327275896 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.326519453 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3719275 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.319504232 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.390870222 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.336018241 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.33715901 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.337818008 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.332631336 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.342619292 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.342144931 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.366128034 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.442631454 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.337349314 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.329198859 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.333410978 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.37645546 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.395546455 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372334316 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373302402 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.347957445 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.329116141 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375676939 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377098639 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.335845697 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.321947237 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.357237417 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.377649251 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.334366248 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.338748241 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.386720118 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.385658638 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372682946 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.335964745 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373728132 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.511981011 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.372554465 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.368414038 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.341169398 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.387345266 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.341128323 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.343514412 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.385443893 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.350202005 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37772116 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.453329551 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.324201006 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.322128671 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401165969 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.397271126 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.342065883 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.327773978 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.339163579 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.45324598 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.337034502 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379926657 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.338056213 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374549668 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.44484976 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37894666 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.395817309 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378718957 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.337607482 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.344769413 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.337536817 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.397954186 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.337626518 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375064259 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375477268 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.342475759 seconds)
done (took 107.574382903 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.456535159 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.33322087 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.471974198 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.336896333 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.495629964 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.477614574 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.335233366 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.337554287 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.336771168 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.127645815 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.33726332 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.336706303 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.333172942 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.336383941 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.459945063 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.337174643 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.33616793 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.027553014 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.33750739 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.472918145 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.331427307 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.337886744 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.336916064 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.129102357 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.334039914 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.328005877 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.473868727 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.370614767 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.025570468 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.328775124 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.33091323 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.026588324 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.474885203 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.35748652 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.346483727 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.346021295 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.49716986 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.356369951 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.456147224 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.455429064 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.473605608 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.376503721 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.328537529 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.334440926 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.339477608 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.338775908 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.337779788 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.367590956 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.334447972 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.338869542 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.029092979 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.348631732 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.348748125 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.339352399 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.338532988 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.358082743 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.339791402 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.339331415 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.477680392 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.33970282 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.46055083 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.130680704 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.131695865 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.339865097 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.334106241 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.340801173 seconds)
  done (took 108.471903095 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.403007274 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.411854544 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.450133385 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.353785162 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.386927305 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.453407759 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.353153209 seconds)
  done (took 11.050064491 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.341982554 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.339621136 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.385122751 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.386386573 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.340169339 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.492623626 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.341465884 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.348098432 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.341230055 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.390083718 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.341803563 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.340744906 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.349953361 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.33652887 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.385234629 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.348929168 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.452285413 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.338152551 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.341199477 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.488611734 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.342885769 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.350676782 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.389040351 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.349385617 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.342827883 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.343878136 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.109134771 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341397379 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.341035311 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.341527288 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.341786063 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.392113475 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.342325799 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.338888638 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343033225 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.455452548 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.342369735 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343138291 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.343318612 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.339885384 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.342108464 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.342870882 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.343432342 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.343695798 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.343517167 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.36398681 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.343818269 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.343486752 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.345417519 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.343652515 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.390266291 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.342128894 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.342655291 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.345063475 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.395398706 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354147278 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.344426233 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.343107698 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.345897701 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34552527 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.491926654 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.388494607 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.346367513 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.388846512 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345598729 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.345871385 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.346932308 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.345274635 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.431935952 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.345200031 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.388435595 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.345884539 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.523695526 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.365630421 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.347107955 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.344436607 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.34402885 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.346945339 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.339361088 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.349443388 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.345915045 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.343815358 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.349151968 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347786022 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.346076528 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.500656266 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.452654009 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.346899746 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.355885623 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.349355752 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.348480314 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.397326078 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.346521126 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.346238851 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395224719 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.458598649 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.395535534 seconds)
  done (took 138.40909926 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.355581445 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.354911763 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.347085676 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.371838226 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.344640581 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.343182568 seconds)
  done (took 9.361760961 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.345022101 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.350967352 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.347680624 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.34634303 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.347940025 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.349181736 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.348718866 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.345136522 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.351307934 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.34799988 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.348749144 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.349903816 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.34931383 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.348203769 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.349096648 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.348367022 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.348397202 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.348943312 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.349127307 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347597077 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.346892456 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.350336984 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34959409 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.346352195 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.354592345 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.348219942 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.366642658 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.349011257 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.350663275 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.353125902 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.370325947 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.350039541 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.347015829 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.352215839 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.354008035 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.347888982 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355096084 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.350307025 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.349185134 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.351951184 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.351301937 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351691009 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.35140767 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.351923489 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.348464261 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.353300954 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.357051546 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368870208 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.352282251 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.351641168 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.352632757 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.351926748 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.352655741 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.353901313 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.351037668 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370624621 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.357869157 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.353345745 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.351509427 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.349875737 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.357452088 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.352294885 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.350130902 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.355644202 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.351380609 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.354021036 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.350334362 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356205003 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352278221 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.352389137 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.353718265 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.352361576 seconds)
  done (took 99.582592292 seconds)
done (took 368.108661501 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.178986633 seconds)
  done (took 4.428872097 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.510664161 seconds)
  done (took 3.762792416 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.436710649 seconds)
  done (took 23.694786893 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.376634989 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.424052351 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.381549049 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.349679439 seconds)
  done (took 10.782117905 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.650522285 seconds)
  done (took 3.900637347 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.346588236 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.347329634 seconds)
  done (took 5.946389756 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.623035814 seconds)
  done (took 3.874056949 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.899424137 seconds)
  done (took 4.157503207 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.363854633 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.361964602 seconds)
  done (took 5.984239207 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.337127844 seconds)
  done (took 3.586910948 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.918855543 seconds)
  done (took 39.170982014 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.358988381 seconds)
  done (took 3.613259558 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.388500606 seconds)
  done (took 3.639235559 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.123517338 seconds)
  done (took 6.375515564 seconds)
done (took 124.167583202 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.343504847 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.349026873 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.347439308 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.347988792 seconds)
  done (took 10.638612399 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.407516463 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.405658754 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.407215799 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.406522986 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.406514745 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.407094374 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.380355297 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.380167644 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.406891826 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.406013148 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.406530775 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.406040201 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.407599838 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.380731153 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.406402146 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.408266006 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.408259298 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.408884375 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.381125478 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.407554446 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.356278364 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.409368249 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.408982391 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.35746953 seconds)
  done (took 34.821153808 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.850238646 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.423717316 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.511835058 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.407331427 seconds)
  done (took 7.446710554 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.431836339 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.433175804 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.44775994 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.484662611 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.498586654 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.446429544 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.382440483 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.377108592 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.363814994 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.434206822 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.484722699 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.42498436 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.512451912 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.356704954 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.563188592 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.357212882 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.356689136 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.436295652 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.487194499 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.499511797 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.358208026 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.43481621 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.436212156 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.426397228 seconds)
  done (took 35.689104049 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.365935513 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.373116101 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.358913968 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.373173256 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.359158258 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.359412692 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.360689836 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.36604054 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.358702484 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.358680452 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.358544574 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.371787404 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.362488904 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.360559057 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.367073484 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.361955799 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.367416902 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.363452504 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.360235724 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.366870236 seconds)
  done (took 28.529071165 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.349374383 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.347798867 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.698706845 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.605207141 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.349691948 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.349792292 seconds)
  done (took 13.956772511 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.43048328 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.590530741 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.35529709 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.730317967 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.811628037 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.356173262 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.35493341 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.615415681 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.949800109 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.937065562 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.416194931 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.429227714 seconds)
  done (took 20.232918646 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.360141903 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.350217432 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.354266193 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.367289709 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.412616923 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.376560999 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.362532478 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.351561954 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.412554335 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.433852976 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.377082531 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.413944964 seconds)
  done (took 21.831766268 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449187579 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35475111 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.354726742 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407599638 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353491957 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.200405851 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.412855473 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.112431549 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.384453498 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631492385 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367767799 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456105064 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.610417182 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367746544 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35754765 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.342618211 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588507003 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85583732 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358351948 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358276723 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412451305 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366771147 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371581906 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583766649 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380745273 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356520892 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.621533574 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356742385 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651446281 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369841631 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366464773 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357014216 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63402305 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044241973 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478447699 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580135812 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387023458 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360116001 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.369941581 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.382276643 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383955806 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364967983 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367041053 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358619735 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358614812 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363672222 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125569361 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.387445893 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.356369766 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357864536 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628905414 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455364582 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.363850081 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359176504 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385259598 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357157526 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.363127281 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491741108 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960349146 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358660461 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372221667 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.361570976 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3731652 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360023773 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009889651 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.384149165 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.364898716 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364636366 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359341344 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359291029 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401831541 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361022647 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.384905173 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359788841 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128022441 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39798112 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366983897 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920336413 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377537431 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.364471537 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591455567 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360698061 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36080696 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.360352721 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36008961 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096401981 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373901924 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.348307891 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428505319 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139488967 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608530526 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403948366 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391662794 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583021126 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.348920802 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360950889 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.368275345 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368061032 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383001378 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.128815205 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383642341 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.367288185 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619948682 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.572511612 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373665471 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.35727547 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874986984 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398550377 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.382499302 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374879439 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591519037 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.993496073 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398337465 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362195869 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382035469 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363283089 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140364456 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381958244 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.468243714 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380718711 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643911545 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.188344871 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368570332 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431008185 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367437927 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363466733 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362688908 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370986773 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36332191 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.583518256 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396772824 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.375689527 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.364582111 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363506611 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.365324768 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363847112 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.371103066 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.586063965 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380661018 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644813475 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364473267 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364359261 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366066246 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.587052534 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.371980542 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.70128857 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624896417 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375136709 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374198695 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379518322 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383613796 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466747439 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387248625 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.373742089 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624058103 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.37083782 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.370676751 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366017951 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371601177 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370111114 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.373469079 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370136107 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995606558 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362983509 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373732278 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253268393 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.381498058 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432811069 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374791861 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59313769 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.39538824 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370375003 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.374321471 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.365831276 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589544354 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376311988 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.368504007 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450210723 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.874146053 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994435353 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403321962 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.367644877 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.366788451 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.366081244 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368174096 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367714519 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367927469 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592128966 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403473546 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376169877 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.983555308 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390685501 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368470933 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.382005053 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378851213 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.374785774 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369245109 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.376038256 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368449608 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383195918 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.382261459 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511092132 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.384255986 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368470392 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.886490671 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375870172 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369230622 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368274274 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402834496 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36897619 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274779528 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652140058 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366593871 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642022508 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372619336 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.408528268 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.370729476 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384056835 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383046529 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.39256238 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377659101 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.379944498 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37086349 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376798676 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942287505 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136446983 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932458966 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390963502 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.38338394 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375049977 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139166507 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39448432 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370604771 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620218822 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.158455422 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395298253 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891007044 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.408335501 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184917026 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65027229 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602855877 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372681505 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.411880175 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653028013 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583085933 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404683037 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379198756 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375329234 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.359289112 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971941591 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406380154 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458454087 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141083403 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4118445 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377600539 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.407072184 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.381825643 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807275212 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396137395 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372345082 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382412647 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375910859 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278368084 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402335602 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373596534 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005329814 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39216022 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.887739845 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398099604 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600189192 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.40708604 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.377577308 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.373519558 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.402849599 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.630836367 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648880077 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376227902 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373421372 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936744373 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.263686361 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.381226229 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375092834 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133812425 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390928569 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679621468 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.3809967 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.380408997 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398686452 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374912833 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374908194 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.373986435 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384643248 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34928436 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880408359 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.381117035 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378387241 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381021794 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379939241 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.629420759 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.390745386 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.988903685 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62103346 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371807005 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397696912 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.380849606 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377420042 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.368926033 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376149822 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375917074 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440349531 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.597495109 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376389732 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.362321151 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.440570369 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585386929 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377489462 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374811635 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635662237 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.400087778 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.377571312 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126644931 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426688479 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376006547 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382330983 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382997776 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418342531 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464930186 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603150814 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.409492555 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.386982627 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809383956 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400574314 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382195005 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.391672456 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472630357 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378762451 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.393448564 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.15090965 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991964841 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150247229 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.992517853 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673502929 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379000183 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386758688 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377362794 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539643126 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377116956 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652844702 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377355256 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.407441917 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417426882 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378839015 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388272111 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591909097 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655045641 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377404546 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391765174 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381393722 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.379159773 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388756177 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.587787682 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886638586 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948096093 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380385762 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381185145 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150875897 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678627806 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378639335 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379873922 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379240453 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.381576009 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.386245667 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.386981503 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386240334 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528820945 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653985337 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076846078 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.412815163 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.411026258 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.899889706 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38058576 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637724934 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397631826 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609530223 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019804905 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.131861534 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646492128 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44985972 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608390958 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.403490563 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542768483 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.383222922 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390584169 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380813456 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380867076 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.380265258 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.389664908 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000327443 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662951797 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.386836978 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.382099389 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41048133 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.390500469 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603657025 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134463683 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60854055 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390346618 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38618448 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381766184 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998635424 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677985316 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384156352 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.387394164 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637472888 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406110712 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407245826 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.901353934 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.38299918 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949480036 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.352577709 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403307451 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389762438 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.122853352 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999864963 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.401650061 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895053557 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385497493 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383850076 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689274526 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.390022952 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390059339 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66472849 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.387980679 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392211201 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615470661 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.018241352 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211653045 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.407523358 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384820108 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.389677585 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383397113 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472105868 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382798054 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39393864 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.828254154 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407805218 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383404762 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396852611 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.384151668 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386293286 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.386856384 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384981131 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.391293307 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.378942126 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.375690608 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420826806 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521002652 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990093832 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408022972 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.06352497 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.710535366 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.639116594 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384851307 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.394171538 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.390302912 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384660497 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383955354 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384593732 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39723185 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952523047 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.391809694 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.399639938 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391603335 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.386031114 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595408086 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385732734 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621634826 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413403504 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40588152 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.373149782 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386219372 seconds)
  done (took 978.818840334 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.426186878 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.430751081 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.429307557 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.436398781 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.437407636 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.407821836 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.477393036 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.412270057 seconds)
  done (took 20.742952154 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.383838211 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.39124074 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.396515455 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.390981913 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.383752405 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.878004448 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.413594548 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.391634471 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.40808136 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.384120871 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.385054381 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.374721097 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.395096793 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.389689132 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.376644843 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.395803481 seconds)
  done (took 33.033278441 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.479315086 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.588416665 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.533978185 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.397186602 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.431533878 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.397955269 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.683947956 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.400762866 seconds)
  done (took 27.200250044 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.393846328 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.394922461 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.394689051 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.394521377 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.394693446 seconds)
  done (took 8.259975406 seconds)
done (took 1242.452741338 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.393030051 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.392149732 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.393857147 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.39418204 seconds)
  done (took 6.860847342 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.376574405 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.380106029 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.380751667 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.391673645 seconds)
  done (took 9.816551136 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.136475303 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.039917993 seconds)
  done (took 5.464615995 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.876619293 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.889962807 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.878960017 seconds)
  done (took 6.933963937 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.675390749 seconds)
  done (took 2.96352692 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.284489648 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.388598686 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.062299004 seconds)
  done (took 8.023110007 seconds)
done (took 41.349164281 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.385030931 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.63941731 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.542556521 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.3853523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.547504968 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.54208169 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.158394087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.385435529 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.397632504 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.392452532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.387186308 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.548645246 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.144291445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.641284686 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.144505985 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.63544464 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.549644147 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.396176825 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.399050348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.395103986 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.160489076 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.394112363 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.390055244 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.395305373 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.549561185 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.532847114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.387806857 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.637824484 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.387418193 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.393558902 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.535007372 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.401258828 seconds)
  done (took 83.071651921 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.386707177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.386840205 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.405314557 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.407278803 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.387668396 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.388024055 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.409724806 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.38793708 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.412333834 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.387452987 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.389291753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.387384443 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.392574704 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.387864227 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.394779263 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.38804241 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.388267458 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.389273 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.388349829 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.389164306 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.411016229 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.389243606 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.409523592 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.404886623 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.405324502 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.407342398 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.405875259 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.388163166 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.419495218 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.389389994 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.3911029 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.407231513 seconds)
  done (took 77.976316281 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.397062933 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.399704485 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.39284375 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.389519763 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.41792231 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.390547194 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.391648834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.39337789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.393882818 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.390317274 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.390583782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.414170486 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.392411283 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.390352075 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.411312517 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.392591112 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.400406594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.403384265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.390909996 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.396028131 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.392930383 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.39167339 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.39329796 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.392923367 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.400564353 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.392056657 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.392904869 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.392232294 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.391935728 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.395467248 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.391277182 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.391973461 seconds)
  done (took 77.952086923 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.67676091 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.40129179 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.404978046 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.397493258 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.404273088 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.401221938 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.397999287 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.681019772 seconds)
  done (took 15.058927551 seconds)
done (took 255.347202668 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.395926994 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.934804177 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.441046887 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.396141195 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.419740388 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.424795818 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.626428436 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.440664562 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.629623495 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.428770333 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.417466736 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.39767108 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.245788381 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.54902691 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.265610141 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.375560407 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.329950862 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.393293927 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.989921259 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.686114678 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.422605949 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.394241233 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.259882089 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.357806489 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.385277529 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.482362228 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.502933531 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.627952011 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.560666795 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.482077062 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.944567045 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.403043688 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.412595273 seconds)
  done (took 65.320132111 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.400096237 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.526741519 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.40346735 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.403643401 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.527608166 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.426109781 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.400673205 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.404350276 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.404931025 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.405005133 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.405216312 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.40619162 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.407438228 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.454909557 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.529925769 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.421749694 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.40075554 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.52202695 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.399859616 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.398811835 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.454427952 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.406974533 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.407958742 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.463209315 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.405119885 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.405820197 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.523681022 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.428229606 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.408776836 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.526231768 seconds)
  done (took 44.376934949 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.40756879 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.00993844 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.181650464 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.411581449 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.403765281 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.408565275 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.708554908 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.40770944 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.407803525 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.406992205 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.923217902 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.427377526 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.441132215 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.219237113 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.410075399 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.40795439 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.408195099 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.403571934 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.019473581 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.414035167 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.731049227 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.408248566 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.710508921 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.415372952 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.429027226 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.405945214 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.409673801 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.258576692 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.427795718 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.923669015 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.262238559 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.709834128 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.197618241 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.219542996 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.243705407 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.413769845 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.409503308 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.936813707 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.429843829 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.406839886 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.710561801 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.407270916 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.203500058 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.114332496 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.425563319 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.409592344 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.29316162 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.959541976 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.687112873 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.41386403 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.228000583 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.414437455 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.412286717 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.409546519 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.664454081 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.409982938 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.406911306 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.291982401 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.433703844 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.711716229 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.411788561 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.408014795 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.02770504 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.41234949 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.021462797 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.412579953 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.415881595 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.429258839 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.202542449 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.412279575 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.126622804 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.427150528 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.411971912 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.936497368 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.045196755 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.344544632 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.410152582 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.033272966 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.237758558 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.736846191 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.416461326 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.252597977 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.746976456 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.416214856 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.413796777 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.414898182 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.412722388 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.493425651 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.716088874 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.063198229 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.119605312 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.309389314 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.743027197 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.421110288 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.410572568 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.29197149 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.435556443 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.412774918 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.201976009 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.127533295 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.429453717 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.418080924 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.136704448 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.429903775 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.72124451 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.418517362 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.215223638 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.415061926 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.494826891 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.414296284 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.418251076 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.435959792 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.722434471 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.418921914 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.414751601 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.11202012 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.969890625 seconds)
  done (took 198.759662124 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.406924973 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.406300202 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.406193789 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.406414382 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.405612139 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.412650647 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.404386954 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.407395207 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.411192343 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.406098642 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.40626982 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.413217816 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.412703932 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.405883342 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.406240459 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.407508663 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.411111154 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.409802135 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.406711961 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.40790427 seconds)
  done (took 45.468198319 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.416792642 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.006438509 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.997766839 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.416519476 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.416588905 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.413229013 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.472599546 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.434924003 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.417145085 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.730732571 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.598139315 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.435762445 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.417169605 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.415814981 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.982039784 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.408082694 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.729482693 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.007099552 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.418490624 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.00786899 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.407255225 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.417392061 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.412331521 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.008709043 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.756064505 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.719146195 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.475701106 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.028712171 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.43636747 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.418446376 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.009804321 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.419093302 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.415596047 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.011252206 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.43599943 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.430616907 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.418522661 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.475672737 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.494174014 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.751688215 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.095066726 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.744203426 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.429583844 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.605213789 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.421286196 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.409074148 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.017986453 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.437662088 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.408944722 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.420855441 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.424728997 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.993020187 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.434605284 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.994108036 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.437943503 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.419898776 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.013835653 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.994975057 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.006526584 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.598666547 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.434165301 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.722438247 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.42016533 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.02025278 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.437425179 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.420306768 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.42047804 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.602903122 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.032380581 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.723236045 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.735969219 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.737343054 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.421513222 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.481565829 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.440190339 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.809878052 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.481466562 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.847707177 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.738660061 seconds)
  done (took 129.630978124 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.700416731 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.532705893 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.842439786 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.050656244 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.419620946 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.558133998 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.533968028 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.684730995 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.420158614 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.492828719 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.093975781 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.539820159 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.222483402 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.510051689 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.541431471 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.567719728 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.846423282 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.412244213 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.181936489 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.079268102 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.418999903 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.549028904 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.997697164 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.633345753 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.41957978 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.016159579 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.415551616 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.112388407 seconds)
  done (took 55.10555968 seconds)
done (took 539.955388302 seconds)
SAVING RESULT...
DONE!
